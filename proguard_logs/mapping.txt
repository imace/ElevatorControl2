android.support.v4.accessibilityservice.AccessibilityServiceInfoCompat -> android.support.v4.accessibilityservice.AccessibilityServiceInfoCompat:
    android.support.v4.accessibilityservice.AccessibilityServiceInfoCompat$AccessibilityServiceInfoVersionImpl IMPL -> IMPL
    int CAPABILITY_CAN_RETRIEVE_WINDOW_CONTENT -> CAPABILITY_CAN_RETRIEVE_WINDOW_CONTENT
    int CAPABILITY_CAN_REQUEST_TOUCH_EXPLORATION -> CAPABILITY_CAN_REQUEST_TOUCH_EXPLORATION
    int CAPABILITY_CAN_REQUEST_ENHANCED_WEB_ACCESSIBILITY -> CAPABILITY_CAN_REQUEST_ENHANCED_WEB_ACCESSIBILITY
    int CAPABILITY_CAN_FILTER_KEY_EVENTS -> CAPABILITY_CAN_FILTER_KEY_EVENTS
    int FEEDBACK_BRAILLE -> FEEDBACK_BRAILLE
    int FEEDBACK_ALL_MASK -> FEEDBACK_ALL_MASK
    int DEFAULT -> DEFAULT
    int FLAG_INCLUDE_NOT_IMPORTANT_VIEWS -> FLAG_INCLUDE_NOT_IMPORTANT_VIEWS
    int FLAG_REQUEST_TOUCH_EXPLORATION_MODE -> FLAG_REQUEST_TOUCH_EXPLORATION_MODE
    int FLAG_REQUEST_ENHANCED_WEB_ACCESSIBILITY -> FLAG_REQUEST_ENHANCED_WEB_ACCESSIBILITY
    int FLAG_REPORT_VIEW_IDS -> FLAG_REPORT_VIEW_IDS
    int FLAG_REQUEST_FILTER_KEY_EVENTS -> FLAG_REQUEST_FILTER_KEY_EVENTS
    java.lang.String getId(android.accessibilityservice.AccessibilityServiceInfo) -> getId
    android.content.pm.ResolveInfo getResolveInfo(android.accessibilityservice.AccessibilityServiceInfo) -> getResolveInfo
    java.lang.String getSettingsActivityName(android.accessibilityservice.AccessibilityServiceInfo) -> getSettingsActivityName
    boolean getCanRetrieveWindowContent(android.accessibilityservice.AccessibilityServiceInfo) -> getCanRetrieveWindowContent
    java.lang.String getDescription(android.accessibilityservice.AccessibilityServiceInfo) -> getDescription
    java.lang.String feedbackTypeToString(int) -> feedbackTypeToString
    java.lang.String flagToString(int) -> flagToString
    int getCapabilities(android.accessibilityservice.AccessibilityServiceInfo) -> getCapabilities
    java.lang.String capabilityToString(int) -> capabilityToString
android.support.v4.accessibilityservice.AccessibilityServiceInfoCompat$AccessibilityServiceInfoIcsImpl -> android.support.v4.accessibilityservice.AccessibilityServiceInfoCompat$AccessibilityServiceInfoIcsImpl:
    boolean getCanRetrieveWindowContent(android.accessibilityservice.AccessibilityServiceInfo) -> getCanRetrieveWindowContent
    java.lang.String getDescription(android.accessibilityservice.AccessibilityServiceInfo) -> getDescription
    java.lang.String getId(android.accessibilityservice.AccessibilityServiceInfo) -> getId
    android.content.pm.ResolveInfo getResolveInfo(android.accessibilityservice.AccessibilityServiceInfo) -> getResolveInfo
    java.lang.String getSettingsActivityName(android.accessibilityservice.AccessibilityServiceInfo) -> getSettingsActivityName
    int getCapabilities(android.accessibilityservice.AccessibilityServiceInfo) -> getCapabilities
android.support.v4.accessibilityservice.AccessibilityServiceInfoCompat$AccessibilityServiceInfoJellyBeanMr2 -> android.support.v4.accessibilityservice.AccessibilityServiceInfoCompat$AccessibilityServiceInfoJellyBeanMr2:
    int getCapabilities(android.accessibilityservice.AccessibilityServiceInfo) -> getCapabilities
android.support.v4.accessibilityservice.AccessibilityServiceInfoCompat$AccessibilityServiceInfoStubImpl -> android.support.v4.accessibilityservice.AccessibilityServiceInfoCompat$AccessibilityServiceInfoStubImpl:
    boolean getCanRetrieveWindowContent(android.accessibilityservice.AccessibilityServiceInfo) -> getCanRetrieveWindowContent
    java.lang.String getDescription(android.accessibilityservice.AccessibilityServiceInfo) -> getDescription
    java.lang.String getId(android.accessibilityservice.AccessibilityServiceInfo) -> getId
    android.content.pm.ResolveInfo getResolveInfo(android.accessibilityservice.AccessibilityServiceInfo) -> getResolveInfo
    java.lang.String getSettingsActivityName(android.accessibilityservice.AccessibilityServiceInfo) -> getSettingsActivityName
    int getCapabilities(android.accessibilityservice.AccessibilityServiceInfo) -> getCapabilities
android.support.v4.accessibilityservice.AccessibilityServiceInfoCompat$AccessibilityServiceInfoVersionImpl -> android.support.v4.accessibilityservice.AccessibilityServiceInfoCompat$AccessibilityServiceInfoVersionImpl:
    java.lang.String getId(android.accessibilityservice.AccessibilityServiceInfo) -> getId
    android.content.pm.ResolveInfo getResolveInfo(android.accessibilityservice.AccessibilityServiceInfo) -> getResolveInfo
    boolean getCanRetrieveWindowContent(android.accessibilityservice.AccessibilityServiceInfo) -> getCanRetrieveWindowContent
    java.lang.String getDescription(android.accessibilityservice.AccessibilityServiceInfo) -> getDescription
    java.lang.String getSettingsActivityName(android.accessibilityservice.AccessibilityServiceInfo) -> getSettingsActivityName
    int getCapabilities(android.accessibilityservice.AccessibilityServiceInfo) -> getCapabilities
android.support.v4.accessibilityservice.AccessibilityServiceInfoCompatIcs -> android.support.v4.accessibilityservice.AccessibilityServiceInfoCompatIcs:
    boolean getCanRetrieveWindowContent(android.accessibilityservice.AccessibilityServiceInfo) -> getCanRetrieveWindowContent
    java.lang.String getDescription(android.accessibilityservice.AccessibilityServiceInfo) -> getDescription
    java.lang.String getId(android.accessibilityservice.AccessibilityServiceInfo) -> getId
    android.content.pm.ResolveInfo getResolveInfo(android.accessibilityservice.AccessibilityServiceInfo) -> getResolveInfo
    java.lang.String getSettingsActivityName(android.accessibilityservice.AccessibilityServiceInfo) -> getSettingsActivityName
android.support.v4.accessibilityservice.AccessibilityServiceInfoCompatJellyBeanMr2 -> android.support.v4.accessibilityservice.AccessibilityServiceInfoCompatJellyBeanMr2:
    int getCapabilities(android.accessibilityservice.AccessibilityServiceInfo) -> getCapabilities
android.support.v4.app.ActionBarDrawerToggle -> android.support.v4.app.ActionBarDrawerToggle:
    android.support.v4.app.ActionBarDrawerToggle$ActionBarDrawerToggleImpl IMPL -> IMPL
    float TOGGLE_DRAWABLE_OFFSET -> TOGGLE_DRAWABLE_OFFSET
    int ID_HOME -> ID_HOME
    android.app.Activity mActivity -> mActivity
    android.support.v4.app.ActionBarDrawerToggle$Delegate mActivityImpl -> mActivityImpl
    android.support.v4.widget.DrawerLayout mDrawerLayout -> mDrawerLayout
    boolean mDrawerIndicatorEnabled -> mDrawerIndicatorEnabled
    android.graphics.drawable.Drawable mThemeImage -> mThemeImage
    android.graphics.drawable.Drawable mDrawerImage -> mDrawerImage
    android.support.v4.app.ActionBarDrawerToggle$SlideDrawable mSlider -> mSlider
    int mDrawerImageResource -> mDrawerImageResource
    int mOpenDrawerContentDescRes -> mOpenDrawerContentDescRes
    int mCloseDrawerContentDescRes -> mCloseDrawerContentDescRes
    java.lang.Object mSetIndicatorInfo -> mSetIndicatorInfo
    void syncState() -> syncState
    void setDrawerIndicatorEnabled(boolean) -> setDrawerIndicatorEnabled
    boolean isDrawerIndicatorEnabled() -> isDrawerIndicatorEnabled
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    boolean onOptionsItemSelected(android.view.MenuItem) -> onOptionsItemSelected
    void onDrawerSlide(android.view.View,float) -> onDrawerSlide
    void onDrawerOpened(android.view.View) -> onDrawerOpened
    void onDrawerClosed(android.view.View) -> onDrawerClosed
    void onDrawerStateChanged(int) -> onDrawerStateChanged
    android.graphics.drawable.Drawable getThemeUpIndicator() -> getThemeUpIndicator
    void setActionBarUpIndicator(android.graphics.drawable.Drawable,int) -> setActionBarUpIndicator
    void setActionBarDescription(int) -> setActionBarDescription
    android.app.Activity access$300(android.support.v4.app.ActionBarDrawerToggle) -> access$300
android.support.v4.app.ActionBarDrawerToggle$1 -> android.support.v4.app.ActionBarDrawerToggle$1:
android.support.v4.app.ActionBarDrawerToggle$ActionBarDrawerToggleImpl -> android.support.v4.app.ActionBarDrawerToggle$ActionBarDrawerToggleImpl:
    android.graphics.drawable.Drawable getThemeUpIndicator(android.app.Activity) -> getThemeUpIndicator
    java.lang.Object setActionBarUpIndicator(java.lang.Object,android.app.Activity,android.graphics.drawable.Drawable,int) -> setActionBarUpIndicator
    java.lang.Object setActionBarDescription(java.lang.Object,android.app.Activity,int) -> setActionBarDescription
android.support.v4.app.ActionBarDrawerToggle$ActionBarDrawerToggleImplBase -> android.support.v4.app.ActionBarDrawerToggle$ActionBarDrawerToggleImplBase:
    android.graphics.drawable.Drawable getThemeUpIndicator(android.app.Activity) -> getThemeUpIndicator
    java.lang.Object setActionBarUpIndicator(java.lang.Object,android.app.Activity,android.graphics.drawable.Drawable,int) -> setActionBarUpIndicator
    java.lang.Object setActionBarDescription(java.lang.Object,android.app.Activity,int) -> setActionBarDescription
android.support.v4.app.ActionBarDrawerToggle$ActionBarDrawerToggleImplHC -> android.support.v4.app.ActionBarDrawerToggle$ActionBarDrawerToggleImplHC:
    android.graphics.drawable.Drawable getThemeUpIndicator(android.app.Activity) -> getThemeUpIndicator
    java.lang.Object setActionBarUpIndicator(java.lang.Object,android.app.Activity,android.graphics.drawable.Drawable,int) -> setActionBarUpIndicator
    java.lang.Object setActionBarDescription(java.lang.Object,android.app.Activity,int) -> setActionBarDescription
android.support.v4.app.ActionBarDrawerToggle$Delegate -> android.support.v4.app.ActionBarDrawerToggle$Delegate:
    android.graphics.drawable.Drawable getThemeUpIndicator() -> getThemeUpIndicator
    void setActionBarUpIndicator(android.graphics.drawable.Drawable,int) -> setActionBarUpIndicator
    void setActionBarDescription(int) -> setActionBarDescription
android.support.v4.app.ActionBarDrawerToggle$DelegateProvider -> android.support.v4.app.ActionBarDrawerToggle$DelegateProvider:
    android.support.v4.app.ActionBarDrawerToggle$Delegate getDrawerToggleDelegate() -> getDrawerToggleDelegate
android.support.v4.app.ActionBarDrawerToggle$SlideDrawable -> android.support.v4.app.ActionBarDrawerToggle$SlideDrawable:
    boolean mHasMirroring -> mHasMirroring
    android.graphics.Rect mTmpRect -> mTmpRect
    float mPosition -> mPosition
    float mOffset -> mOffset
    android.support.v4.app.ActionBarDrawerToggle this$0 -> this$0
    void setPosition(float) -> setPosition
    float getPosition() -> getPosition
    void setOffset(float) -> setOffset
    void draw(android.graphics.Canvas) -> draw
android.support.v4.app.ActionBarDrawerToggleHoneycomb -> android.support.v4.app.ActionBarDrawerToggleHoneycomb:
    java.lang.String TAG -> TAG
    int[] THEME_ATTRS -> THEME_ATTRS
    java.lang.Object setActionBarUpIndicator(java.lang.Object,android.app.Activity,android.graphics.drawable.Drawable,int) -> setActionBarUpIndicator
    java.lang.Object setActionBarDescription(java.lang.Object,android.app.Activity,int) -> setActionBarDescription
    android.graphics.drawable.Drawable getThemeUpIndicator(android.app.Activity) -> getThemeUpIndicator
android.support.v4.app.ActionBarDrawerToggleHoneycomb$SetIndicatorInfo -> android.support.v4.app.ActionBarDrawerToggleHoneycomb$SetIndicatorInfo:
    java.lang.reflect.Method setHomeAsUpIndicator -> setHomeAsUpIndicator
    java.lang.reflect.Method setHomeActionContentDescription -> setHomeActionContentDescription
    android.widget.ImageView upIndicatorView -> upIndicatorView
android.support.v4.app.ActivityCompat -> android.support.v4.app.ActivityCompat:
    boolean invalidateOptionsMenu(android.app.Activity) -> invalidateOptionsMenu
    void startActivity(android.app.Activity,android.content.Intent,android.os.Bundle) -> startActivity
    void startActivityForResult(android.app.Activity,android.content.Intent,int,android.os.Bundle) -> startActivityForResult
    void finishAffinity(android.app.Activity) -> finishAffinity
android.support.v4.app.ActivityCompatHoneycomb -> android.support.v4.app.ActivityCompatHoneycomb:
    void invalidateOptionsMenu(android.app.Activity) -> invalidateOptionsMenu
    void dump(android.app.Activity,java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
android.support.v4.app.ActivityCompatJB -> android.support.v4.app.ActivityCompatJB:
    void startActivity(android.content.Context,android.content.Intent,android.os.Bundle) -> startActivity
    void startActivityForResult(android.app.Activity,android.content.Intent,int,android.os.Bundle) -> startActivityForResult
    void finishAffinity(android.app.Activity) -> finishAffinity
android.support.v4.app.ActivityOptionsCompat -> android.support.v4.app.ActivityOptionsCompat:
    android.support.v4.app.ActivityOptionsCompat makeCustomAnimation(android.content.Context,int,int) -> makeCustomAnimation
    android.support.v4.app.ActivityOptionsCompat makeScaleUpAnimation(android.view.View,int,int,int,int) -> makeScaleUpAnimation
    android.support.v4.app.ActivityOptionsCompat makeThumbnailScaleUpAnimation(android.view.View,android.graphics.Bitmap,int,int) -> makeThumbnailScaleUpAnimation
    android.os.Bundle toBundle() -> toBundle
    void update(android.support.v4.app.ActivityOptionsCompat) -> update
android.support.v4.app.ActivityOptionsCompat$ActivityOptionsImplJB -> android.support.v4.app.ActivityOptionsCompat$ActivityOptionsImplJB:
    android.support.v4.app.ActivityOptionsCompatJB mImpl -> mImpl
    android.os.Bundle toBundle() -> toBundle
    void update(android.support.v4.app.ActivityOptionsCompat) -> update
android.support.v4.app.ActivityOptionsCompatJB -> android.support.v4.app.ActivityOptionsCompatJB:
    android.app.ActivityOptions mActivityOptions -> mActivityOptions
    android.support.v4.app.ActivityOptionsCompatJB makeCustomAnimation(android.content.Context,int,int) -> makeCustomAnimation
    android.support.v4.app.ActivityOptionsCompatJB makeScaleUpAnimation(android.view.View,int,int,int,int) -> makeScaleUpAnimation
    android.support.v4.app.ActivityOptionsCompatJB makeThumbnailScaleUpAnimation(android.view.View,android.graphics.Bitmap,int,int) -> makeThumbnailScaleUpAnimation
    android.os.Bundle toBundle() -> toBundle
    void update(android.support.v4.app.ActivityOptionsCompatJB) -> update
android.support.v4.app.BackStackRecord -> android.support.v4.app.BackStackRecord:
    java.lang.String TAG -> TAG
    android.support.v4.app.FragmentManagerImpl mManager -> mManager
    int OP_NULL -> OP_NULL
    int OP_ADD -> OP_ADD
    int OP_REPLACE -> OP_REPLACE
    int OP_REMOVE -> OP_REMOVE
    int OP_HIDE -> OP_HIDE
    int OP_SHOW -> OP_SHOW
    int OP_DETACH -> OP_DETACH
    int OP_ATTACH -> OP_ATTACH
    android.support.v4.app.BackStackRecord$Op mHead -> mHead
    android.support.v4.app.BackStackRecord$Op mTail -> mTail
    int mNumOp -> mNumOp
    int mEnterAnim -> mEnterAnim
    int mExitAnim -> mExitAnim
    int mPopEnterAnim -> mPopEnterAnim
    int mPopExitAnim -> mPopExitAnim
    int mTransition -> mTransition
    int mTransitionStyle -> mTransitionStyle
    boolean mAddToBackStack -> mAddToBackStack
    boolean mAllowAddToBackStack -> mAllowAddToBackStack
    java.lang.String mName -> mName
    boolean mCommitted -> mCommitted
    int mIndex -> mIndex
    int mBreadCrumbTitleRes -> mBreadCrumbTitleRes
    java.lang.CharSequence mBreadCrumbTitleText -> mBreadCrumbTitleText
    int mBreadCrumbShortTitleRes -> mBreadCrumbShortTitleRes
    java.lang.CharSequence mBreadCrumbShortTitleText -> mBreadCrumbShortTitleText
    java.lang.String toString() -> toString
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
    void dump(java.lang.String,java.io.PrintWriter,boolean) -> dump
    int getId() -> getId
    int getBreadCrumbTitleRes() -> getBreadCrumbTitleRes
    int getBreadCrumbShortTitleRes() -> getBreadCrumbShortTitleRes
    java.lang.CharSequence getBreadCrumbTitle() -> getBreadCrumbTitle
    java.lang.CharSequence getBreadCrumbShortTitle() -> getBreadCrumbShortTitle
    void addOp(android.support.v4.app.BackStackRecord$Op) -> addOp
    android.support.v4.app.FragmentTransaction add(android.support.v4.app.Fragment,java.lang.String) -> add
    android.support.v4.app.FragmentTransaction add(int,android.support.v4.app.Fragment) -> add
    android.support.v4.app.FragmentTransaction add(int,android.support.v4.app.Fragment,java.lang.String) -> add
    void doAddOp(int,android.support.v4.app.Fragment,java.lang.String,int) -> doAddOp
    android.support.v4.app.FragmentTransaction replace(int,android.support.v4.app.Fragment) -> replace
    android.support.v4.app.FragmentTransaction replace(int,android.support.v4.app.Fragment,java.lang.String) -> replace
    android.support.v4.app.FragmentTransaction remove(android.support.v4.app.Fragment) -> remove
    android.support.v4.app.FragmentTransaction hide(android.support.v4.app.Fragment) -> hide
    android.support.v4.app.FragmentTransaction show(android.support.v4.app.Fragment) -> show
    android.support.v4.app.FragmentTransaction detach(android.support.v4.app.Fragment) -> detach
    android.support.v4.app.FragmentTransaction attach(android.support.v4.app.Fragment) -> attach
    android.support.v4.app.FragmentTransaction setCustomAnimations(int,int) -> setCustomAnimations
    android.support.v4.app.FragmentTransaction setCustomAnimations(int,int,int,int) -> setCustomAnimations
    android.support.v4.app.FragmentTransaction setTransition(int) -> setTransition
    android.support.v4.app.FragmentTransaction setTransitionStyle(int) -> setTransitionStyle
    android.support.v4.app.FragmentTransaction addToBackStack(java.lang.String) -> addToBackStack
    boolean isAddToBackStackAllowed() -> isAddToBackStackAllowed
    android.support.v4.app.FragmentTransaction disallowAddToBackStack() -> disallowAddToBackStack
    android.support.v4.app.FragmentTransaction setBreadCrumbTitle(int) -> setBreadCrumbTitle
    android.support.v4.app.FragmentTransaction setBreadCrumbTitle(java.lang.CharSequence) -> setBreadCrumbTitle
    android.support.v4.app.FragmentTransaction setBreadCrumbShortTitle(int) -> setBreadCrumbShortTitle
    android.support.v4.app.FragmentTransaction setBreadCrumbShortTitle(java.lang.CharSequence) -> setBreadCrumbShortTitle
    void bumpBackStackNesting(int) -> bumpBackStackNesting
    int commit() -> commit
    int commitAllowingStateLoss() -> commitAllowingStateLoss
    int commitInternal(boolean) -> commitInternal
    void run() -> run
    void popFromBackStack(boolean) -> popFromBackStack
    java.lang.String getName() -> getName
    int getTransition() -> getTransition
    int getTransitionStyle() -> getTransitionStyle
    boolean isEmpty() -> isEmpty
android.support.v4.app.BackStackRecord$Op -> android.support.v4.app.BackStackRecord$Op:
    android.support.v4.app.BackStackRecord$Op next -> next
    android.support.v4.app.BackStackRecord$Op prev -> prev
    int cmd -> cmd
    android.support.v4.app.Fragment fragment -> fragment
    int enterAnim -> enterAnim
    int exitAnim -> exitAnim
    int popEnterAnim -> popEnterAnim
    int popExitAnim -> popExitAnim
    java.util.ArrayList removed -> removed
android.support.v4.app.BackStackState -> android.support.v4.app.BackStackState:
    int[] mOps -> mOps
    int mTransition -> mTransition
    int mTransitionStyle -> mTransitionStyle
    java.lang.String mName -> mName
    int mIndex -> mIndex
    int mBreadCrumbTitleRes -> mBreadCrumbTitleRes
    java.lang.CharSequence mBreadCrumbTitleText -> mBreadCrumbTitleText
    int mBreadCrumbShortTitleRes -> mBreadCrumbShortTitleRes
    java.lang.CharSequence mBreadCrumbShortTitleText -> mBreadCrumbShortTitleText
    android.os.Parcelable$Creator CREATOR -> CREATOR
    android.support.v4.app.BackStackRecord instantiate(android.support.v4.app.FragmentManagerImpl) -> instantiate
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.app.BackStackState$1 -> android.support.v4.app.BackStackState$1:
    android.support.v4.app.BackStackState createFromParcel(android.os.Parcel) -> createFromParcel
    android.support.v4.app.BackStackState[] newArray(int) -> newArray
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.app.DialogFragment -> android.support.v4.app.DialogFragment:
    int STYLE_NORMAL -> STYLE_NORMAL
    int STYLE_NO_TITLE -> STYLE_NO_TITLE
    int STYLE_NO_FRAME -> STYLE_NO_FRAME
    int STYLE_NO_INPUT -> STYLE_NO_INPUT
    java.lang.String SAVED_DIALOG_STATE_TAG -> SAVED_DIALOG_STATE_TAG
    java.lang.String SAVED_STYLE -> SAVED_STYLE
    java.lang.String SAVED_THEME -> SAVED_THEME
    java.lang.String SAVED_CANCELABLE -> SAVED_CANCELABLE
    java.lang.String SAVED_SHOWS_DIALOG -> SAVED_SHOWS_DIALOG
    java.lang.String SAVED_BACK_STACK_ID -> SAVED_BACK_STACK_ID
    int mStyle -> mStyle
    int mTheme -> mTheme
    boolean mCancelable -> mCancelable
    boolean mShowsDialog -> mShowsDialog
    int mBackStackId -> mBackStackId
    android.app.Dialog mDialog -> mDialog
    boolean mViewDestroyed -> mViewDestroyed
    boolean mDismissed -> mDismissed
    boolean mShownByMe -> mShownByMe
    void setStyle(int,int) -> setStyle
    void show(android.support.v4.app.FragmentManager,java.lang.String) -> show
    int show(android.support.v4.app.FragmentTransaction,java.lang.String) -> show
    void dismiss() -> dismiss
    void dismissAllowingStateLoss() -> dismissAllowingStateLoss
    void dismissInternal(boolean) -> dismissInternal
    android.app.Dialog getDialog() -> getDialog
    int getTheme() -> getTheme
    void setCancelable(boolean) -> setCancelable
    boolean isCancelable() -> isCancelable
    void setShowsDialog(boolean) -> setShowsDialog
    boolean getShowsDialog() -> getShowsDialog
    void onAttach(android.app.Activity) -> onAttach
    void onDetach() -> onDetach
    void onCreate(android.os.Bundle) -> onCreate
    android.view.LayoutInflater getLayoutInflater(android.os.Bundle) -> getLayoutInflater
    android.app.Dialog onCreateDialog(android.os.Bundle) -> onCreateDialog
    void onCancel(android.content.DialogInterface) -> onCancel
    void onDismiss(android.content.DialogInterface) -> onDismiss
    void onActivityCreated(android.os.Bundle) -> onActivityCreated
    void onStart() -> onStart
    void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    void onStop() -> onStop
    void onDestroyView() -> onDestroyView
android.support.v4.app.Fragment -> android.support.v4.app.Fragment:
    android.support.v4.util.SimpleArrayMap sClassMap -> sClassMap
    int INITIALIZING -> INITIALIZING
    int CREATED -> CREATED
    int ACTIVITY_CREATED -> ACTIVITY_CREATED
    int STOPPED -> STOPPED
    int STARTED -> STARTED
    int RESUMED -> RESUMED
    int mState -> mState
    android.view.View mAnimatingAway -> mAnimatingAway
    int mStateAfterAnimating -> mStateAfterAnimating
    android.os.Bundle mSavedFragmentState -> mSavedFragmentState
    android.util.SparseArray mSavedViewState -> mSavedViewState
    int mIndex -> mIndex
    java.lang.String mWho -> mWho
    android.os.Bundle mArguments -> mArguments
    android.support.v4.app.Fragment mTarget -> mTarget
    int mTargetIndex -> mTargetIndex
    int mTargetRequestCode -> mTargetRequestCode
    boolean mAdded -> mAdded
    boolean mRemoving -> mRemoving
    boolean mResumed -> mResumed
    boolean mFromLayout -> mFromLayout
    boolean mInLayout -> mInLayout
    boolean mRestored -> mRestored
    int mBackStackNesting -> mBackStackNesting
    android.support.v4.app.FragmentManagerImpl mFragmentManager -> mFragmentManager
    android.support.v4.app.FragmentActivity mActivity -> mActivity
    android.support.v4.app.FragmentManagerImpl mChildFragmentManager -> mChildFragmentManager
    android.support.v4.app.Fragment mParentFragment -> mParentFragment
    int mFragmentId -> mFragmentId
    int mContainerId -> mContainerId
    java.lang.String mTag -> mTag
    boolean mHidden -> mHidden
    boolean mDetached -> mDetached
    boolean mRetainInstance -> mRetainInstance
    boolean mRetaining -> mRetaining
    boolean mHasMenu -> mHasMenu
    boolean mMenuVisible -> mMenuVisible
    boolean mCalled -> mCalled
    int mNextAnim -> mNextAnim
    android.view.ViewGroup mContainer -> mContainer
    android.view.View mView -> mView
    android.view.View mInnerView -> mInnerView
    boolean mDeferStart -> mDeferStart
    boolean mUserVisibleHint -> mUserVisibleHint
    android.support.v4.app.LoaderManagerImpl mLoaderManager -> mLoaderManager
    boolean mLoadersStarted -> mLoadersStarted
    boolean mCheckedForLoaderManager -> mCheckedForLoaderManager
    android.support.v4.app.Fragment instantiate(android.content.Context,java.lang.String) -> instantiate
    android.support.v4.app.Fragment instantiate(android.content.Context,java.lang.String,android.os.Bundle) -> instantiate
    boolean isSupportFragmentClass(android.content.Context,java.lang.String) -> isSupportFragmentClass
    void restoreViewState(android.os.Bundle) -> restoreViewState
    void setIndex(int,android.support.v4.app.Fragment) -> setIndex
    boolean isInBackStack() -> isInBackStack
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
    int getId() -> getId
    java.lang.String getTag() -> getTag
    void setArguments(android.os.Bundle) -> setArguments
    android.os.Bundle getArguments() -> getArguments
    void setInitialSavedState(android.support.v4.app.Fragment$SavedState) -> setInitialSavedState
    void setTargetFragment(android.support.v4.app.Fragment,int) -> setTargetFragment
    android.support.v4.app.Fragment getTargetFragment() -> getTargetFragment
    int getTargetRequestCode() -> getTargetRequestCode
    android.support.v4.app.FragmentActivity getActivity() -> getActivity
    android.content.res.Resources getResources() -> getResources
    java.lang.CharSequence getText(int) -> getText
    java.lang.String getString(int) -> getString
    java.lang.String getString(int,java.lang.Object[]) -> getString
    android.support.v4.app.FragmentManager getFragmentManager() -> getFragmentManager
    android.support.v4.app.FragmentManager getChildFragmentManager() -> getChildFragmentManager
    android.support.v4.app.Fragment getParentFragment() -> getParentFragment
    boolean isAdded() -> isAdded
    boolean isDetached() -> isDetached
    boolean isRemoving() -> isRemoving
    boolean isInLayout() -> isInLayout
    boolean isResumed() -> isResumed
    boolean isVisible() -> isVisible
    boolean isHidden() -> isHidden
    boolean hasOptionsMenu() -> hasOptionsMenu
    boolean isMenuVisible() -> isMenuVisible
    void onHiddenChanged(boolean) -> onHiddenChanged
    void setRetainInstance(boolean) -> setRetainInstance
    boolean getRetainInstance() -> getRetainInstance
    void setHasOptionsMenu(boolean) -> setHasOptionsMenu
    void setMenuVisibility(boolean) -> setMenuVisibility
    void setUserVisibleHint(boolean) -> setUserVisibleHint
    boolean getUserVisibleHint() -> getUserVisibleHint
    android.support.v4.app.LoaderManager getLoaderManager() -> getLoaderManager
    void startActivity(android.content.Intent) -> startActivity
    void startActivityForResult(android.content.Intent,int) -> startActivityForResult
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    android.view.LayoutInflater getLayoutInflater(android.os.Bundle) -> getLayoutInflater
    void onInflate(android.app.Activity,android.util.AttributeSet,android.os.Bundle) -> onInflate
    void onAttach(android.app.Activity) -> onAttach
    android.view.animation.Animation onCreateAnimation(int,boolean,int) -> onCreateAnimation
    void onCreate(android.os.Bundle) -> onCreate
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    void onViewCreated(android.view.View,android.os.Bundle) -> onViewCreated
    android.view.View getView() -> getView
    void onActivityCreated(android.os.Bundle) -> onActivityCreated
    void onViewStateRestored(android.os.Bundle) -> onViewStateRestored
    void onStart() -> onStart
    void onResume() -> onResume
    void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    void onPause() -> onPause
    void onStop() -> onStop
    void onLowMemory() -> onLowMemory
    void onDestroyView() -> onDestroyView
    void onDestroy() -> onDestroy
    void initState() -> initState
    void onDetach() -> onDetach
    void onCreateOptionsMenu(android.view.Menu,android.view.MenuInflater) -> onCreateOptionsMenu
    void onPrepareOptionsMenu(android.view.Menu) -> onPrepareOptionsMenu
    void onDestroyOptionsMenu() -> onDestroyOptionsMenu
    boolean onOptionsItemSelected(android.view.MenuItem) -> onOptionsItemSelected
    void onOptionsMenuClosed(android.view.Menu) -> onOptionsMenuClosed
    void onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu$ContextMenuInfo) -> onCreateContextMenu
    void registerForContextMenu(android.view.View) -> registerForContextMenu
    void unregisterForContextMenu(android.view.View) -> unregisterForContextMenu
    boolean onContextItemSelected(android.view.MenuItem) -> onContextItemSelected
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
    android.support.v4.app.Fragment findFragmentByWho(java.lang.String) -> findFragmentByWho
    void instantiateChildFragmentManager() -> instantiateChildFragmentManager
    void performCreate(android.os.Bundle) -> performCreate
    android.view.View performCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> performCreateView
    void performActivityCreated(android.os.Bundle) -> performActivityCreated
    void performStart() -> performStart
    void performResume() -> performResume
    void performConfigurationChanged(android.content.res.Configuration) -> performConfigurationChanged
    void performLowMemory() -> performLowMemory
    boolean performCreateOptionsMenu(android.view.Menu,android.view.MenuInflater) -> performCreateOptionsMenu
    boolean performPrepareOptionsMenu(android.view.Menu) -> performPrepareOptionsMenu
    boolean performOptionsItemSelected(android.view.MenuItem) -> performOptionsItemSelected
    boolean performContextItemSelected(android.view.MenuItem) -> performContextItemSelected
    void performOptionsMenuClosed(android.view.Menu) -> performOptionsMenuClosed
    void performSaveInstanceState(android.os.Bundle) -> performSaveInstanceState
    void performPause() -> performPause
    void performStop() -> performStop
    void performReallyStop() -> performReallyStop
    void performDestroyView() -> performDestroyView
    void performDestroy() -> performDestroy
android.support.v4.app.Fragment$1 -> android.support.v4.app.Fragment$1:
    android.support.v4.app.Fragment this$0 -> this$0
    android.view.View findViewById(int) -> findViewById
android.support.v4.app.Fragment$InstantiationException -> android.support.v4.app.Fragment$InstantiationException:
android.support.v4.app.Fragment$SavedState -> android.support.v4.app.Fragment$SavedState:
    android.os.Bundle mState -> mState
    android.os.Parcelable$Creator CREATOR -> CREATOR
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.app.Fragment$SavedState$1 -> android.support.v4.app.Fragment$SavedState$1:
    android.support.v4.app.Fragment$SavedState createFromParcel(android.os.Parcel) -> createFromParcel
    android.support.v4.app.Fragment$SavedState[] newArray(int) -> newArray
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.app.FragmentActivity -> android.support.v4.app.FragmentActivity:
    java.lang.String TAG -> TAG
    java.lang.String FRAGMENTS_TAG -> FRAGMENTS_TAG
    int HONEYCOMB -> HONEYCOMB
    int MSG_REALLY_STOPPED -> MSG_REALLY_STOPPED
    int MSG_RESUME_PENDING -> MSG_RESUME_PENDING
    android.os.Handler mHandler -> mHandler
    android.support.v4.app.FragmentManagerImpl mFragments -> mFragments
    android.support.v4.app.FragmentContainer mContainer -> mContainer
    boolean mCreated -> mCreated
    boolean mResumed -> mResumed
    boolean mStopped -> mStopped
    boolean mReallyStopped -> mReallyStopped
    boolean mRetaining -> mRetaining
    boolean mOptionsMenuInvalidated -> mOptionsMenuInvalidated
    boolean mCheckedForLoaderManager -> mCheckedForLoaderManager
    boolean mLoadersStarted -> mLoadersStarted
    android.support.v4.util.SimpleArrayMap mAllLoaderManagers -> mAllLoaderManagers
    android.support.v4.app.LoaderManagerImpl mLoaderManager -> mLoaderManager
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    void rOnActivityResult(android.support.v4.app.Fragment,int,int,android.content.Intent) -> rOnActivityResult
    void onBackPressed() -> onBackPressed
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    void onCreate(android.os.Bundle) -> onCreate
    boolean onCreatePanelMenu(int,android.view.Menu) -> onCreatePanelMenu
    android.view.View onCreateView(java.lang.String,android.content.Context,android.util.AttributeSet) -> onCreateView
    void onDestroy() -> onDestroy
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    void onLowMemory() -> onLowMemory
    boolean onMenuItemSelected(int,android.view.MenuItem) -> onMenuItemSelected
    void onPanelClosed(int,android.view.Menu) -> onPanelClosed
    void onPause() -> onPause
    void onNewIntent(android.content.Intent) -> onNewIntent
    void onResume() -> onResume
    void onPostResume() -> onPostResume
    void onResumeFragments() -> onResumeFragments
    boolean onPreparePanel(int,android.view.View,android.view.Menu) -> onPreparePanel
    boolean onPrepareOptionsPanel(android.view.View,android.view.Menu) -> onPrepareOptionsPanel
    java.lang.Object onRetainNonConfigurationInstance() -> onRetainNonConfigurationInstance
    void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    void onStart() -> onStart
    void onStop() -> onStop
    java.lang.Object onRetainCustomNonConfigurationInstance() -> onRetainCustomNonConfigurationInstance
    java.lang.Object getLastCustomNonConfigurationInstance() -> getLastCustomNonConfigurationInstance
    void supportInvalidateOptionsMenu() -> supportInvalidateOptionsMenu
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
    java.lang.String viewToString(android.view.View) -> viewToString
    void dumpViewHierarchy(java.lang.String,java.io.PrintWriter,android.view.View) -> dumpViewHierarchy
    void doReallyStop(boolean) -> doReallyStop
    void onReallyStop() -> onReallyStop
    void onAttachFragment(android.support.v4.app.Fragment) -> onAttachFragment
    android.support.v4.app.FragmentManager getSupportFragmentManager() -> getSupportFragmentManager
    void startActivityForResult(android.content.Intent,int) -> startActivityForResult
    void startActivityFromFragment(android.support.v4.app.Fragment,android.content.Intent,int) -> startActivityFromFragment
    void invalidateSupportFragment(java.lang.String) -> invalidateSupportFragment
    android.support.v4.app.LoaderManager getSupportLoaderManager() -> getSupportLoaderManager
    android.support.v4.app.LoaderManagerImpl getLoaderManager(java.lang.String,boolean,boolean) -> getLoaderManager
android.support.v4.app.FragmentActivity$1 -> android.support.v4.app.FragmentActivity$1:
    android.support.v4.app.FragmentActivity this$0 -> this$0
    void handleMessage(android.os.Message) -> handleMessage
android.support.v4.app.FragmentActivity$2 -> android.support.v4.app.FragmentActivity$2:
    android.support.v4.app.FragmentActivity this$0 -> this$0
    android.view.View findViewById(int) -> findViewById
android.support.v4.app.FragmentActivity$FragmentTag -> android.support.v4.app.FragmentActivity$FragmentTag:
    int[] Fragment -> Fragment
    int Fragment_id -> Fragment_id
    int Fragment_name -> Fragment_name
    int Fragment_tag -> Fragment_tag
android.support.v4.app.FragmentActivity$NonConfigurationInstances -> android.support.v4.app.FragmentActivity$NonConfigurationInstances:
    java.lang.Object activity -> activity
    java.lang.Object custom -> custom
    android.support.v4.util.SimpleArrayMap children -> children
    java.util.ArrayList fragments -> fragments
    android.support.v4.util.SimpleArrayMap loaders -> loaders
android.support.v4.app.FragmentContainer -> android.support.v4.app.FragmentContainer:
    android.view.View findViewById(int) -> findViewById
android.support.v4.app.FragmentManager -> android.support.v4.app.FragmentManager:
    int POP_BACK_STACK_INCLUSIVE -> POP_BACK_STACK_INCLUSIVE
    android.support.v4.app.FragmentTransaction beginTransaction() -> beginTransaction
    android.support.v4.app.FragmentTransaction openTransaction() -> openTransaction
    boolean executePendingTransactions() -> executePendingTransactions
    android.support.v4.app.Fragment findFragmentById(int) -> findFragmentById
    android.support.v4.app.Fragment findFragmentByTag(java.lang.String) -> findFragmentByTag
    void popBackStack() -> popBackStack
    boolean popBackStackImmediate() -> popBackStackImmediate
    void popBackStack(java.lang.String,int) -> popBackStack
    boolean popBackStackImmediate(java.lang.String,int) -> popBackStackImmediate
    void popBackStack(int,int) -> popBackStack
    boolean popBackStackImmediate(int,int) -> popBackStackImmediate
    int getBackStackEntryCount() -> getBackStackEntryCount
    android.support.v4.app.FragmentManager$BackStackEntry getBackStackEntryAt(int) -> getBackStackEntryAt
    void addOnBackStackChangedListener(android.support.v4.app.FragmentManager$OnBackStackChangedListener) -> addOnBackStackChangedListener
    void removeOnBackStackChangedListener(android.support.v4.app.FragmentManager$OnBackStackChangedListener) -> removeOnBackStackChangedListener
    void putFragment(android.os.Bundle,java.lang.String,android.support.v4.app.Fragment) -> putFragment
    android.support.v4.app.Fragment getFragment(android.os.Bundle,java.lang.String) -> getFragment
    java.util.List getFragments() -> getFragments
    android.support.v4.app.Fragment$SavedState saveFragmentInstanceState(android.support.v4.app.Fragment) -> saveFragmentInstanceState
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
    void enableDebugLogging(boolean) -> enableDebugLogging
android.support.v4.app.FragmentManager$BackStackEntry -> android.support.v4.app.FragmentManager$BackStackEntry:
    int getId() -> getId
    java.lang.String getName() -> getName
    int getBreadCrumbTitleRes() -> getBreadCrumbTitleRes
    int getBreadCrumbShortTitleRes() -> getBreadCrumbShortTitleRes
    java.lang.CharSequence getBreadCrumbTitle() -> getBreadCrumbTitle
    java.lang.CharSequence getBreadCrumbShortTitle() -> getBreadCrumbShortTitle
android.support.v4.app.FragmentManager$OnBackStackChangedListener -> android.support.v4.app.FragmentManager$OnBackStackChangedListener:
    void onBackStackChanged() -> onBackStackChanged
android.support.v4.app.FragmentManagerImpl -> android.support.v4.app.FragmentManagerImpl:
    boolean DEBUG -> DEBUG
    java.lang.String TAG -> TAG
    boolean HONEYCOMB -> HONEYCOMB
    java.lang.String TARGET_REQUEST_CODE_STATE_TAG -> TARGET_REQUEST_CODE_STATE_TAG
    java.lang.String TARGET_STATE_TAG -> TARGET_STATE_TAG
    java.lang.String VIEW_STATE_TAG -> VIEW_STATE_TAG
    java.lang.String USER_VISIBLE_HINT_TAG -> USER_VISIBLE_HINT_TAG
    java.util.ArrayList mPendingActions -> mPendingActions
    java.lang.Runnable[] mTmpActions -> mTmpActions
    boolean mExecutingActions -> mExecutingActions
    java.util.ArrayList mActive -> mActive
    java.util.ArrayList mAdded -> mAdded
    java.util.ArrayList mAvailIndices -> mAvailIndices
    java.util.ArrayList mBackStack -> mBackStack
    java.util.ArrayList mCreatedMenus -> mCreatedMenus
    java.util.ArrayList mBackStackIndices -> mBackStackIndices
    java.util.ArrayList mAvailBackStackIndices -> mAvailBackStackIndices
    java.util.ArrayList mBackStackChangeListeners -> mBackStackChangeListeners
    int mCurState -> mCurState
    android.support.v4.app.FragmentActivity mActivity -> mActivity
    android.support.v4.app.FragmentContainer mContainer -> mContainer
    android.support.v4.app.Fragment mParent -> mParent
    boolean mNeedMenuInvalidate -> mNeedMenuInvalidate
    boolean mStateSaved -> mStateSaved
    boolean mDestroyed -> mDestroyed
    java.lang.String mNoTransactionsBecause -> mNoTransactionsBecause
    boolean mHavePendingDeferredStart -> mHavePendingDeferredStart
    android.os.Bundle mStateBundle -> mStateBundle
    android.util.SparseArray mStateArray -> mStateArray
    java.lang.Runnable mExecCommit -> mExecCommit
    android.view.animation.Interpolator DECELERATE_QUINT -> DECELERATE_QUINT
    android.view.animation.Interpolator DECELERATE_CUBIC -> DECELERATE_CUBIC
    android.view.animation.Interpolator ACCELERATE_QUINT -> ACCELERATE_QUINT
    android.view.animation.Interpolator ACCELERATE_CUBIC -> ACCELERATE_CUBIC
    int ANIM_DUR -> ANIM_DUR
    int ANIM_STYLE_OPEN_ENTER -> ANIM_STYLE_OPEN_ENTER
    int ANIM_STYLE_OPEN_EXIT -> ANIM_STYLE_OPEN_EXIT
    int ANIM_STYLE_CLOSE_ENTER -> ANIM_STYLE_CLOSE_ENTER
    int ANIM_STYLE_CLOSE_EXIT -> ANIM_STYLE_CLOSE_EXIT
    int ANIM_STYLE_FADE_ENTER -> ANIM_STYLE_FADE_ENTER
    int ANIM_STYLE_FADE_EXIT -> ANIM_STYLE_FADE_EXIT
    void throwException(java.lang.RuntimeException) -> throwException
    android.support.v4.app.FragmentTransaction beginTransaction() -> beginTransaction
    boolean executePendingTransactions() -> executePendingTransactions
    void popBackStack() -> popBackStack
    boolean popBackStackImmediate() -> popBackStackImmediate
    void popBackStack(java.lang.String,int) -> popBackStack
    boolean popBackStackImmediate(java.lang.String,int) -> popBackStackImmediate
    void popBackStack(int,int) -> popBackStack
    boolean popBackStackImmediate(int,int) -> popBackStackImmediate
    int getBackStackEntryCount() -> getBackStackEntryCount
    android.support.v4.app.FragmentManager$BackStackEntry getBackStackEntryAt(int) -> getBackStackEntryAt
    void addOnBackStackChangedListener(android.support.v4.app.FragmentManager$OnBackStackChangedListener) -> addOnBackStackChangedListener
    void removeOnBackStackChangedListener(android.support.v4.app.FragmentManager$OnBackStackChangedListener) -> removeOnBackStackChangedListener
    void putFragment(android.os.Bundle,java.lang.String,android.support.v4.app.Fragment) -> putFragment
    android.support.v4.app.Fragment getFragment(android.os.Bundle,java.lang.String) -> getFragment
    java.util.List getFragments() -> getFragments
    android.support.v4.app.Fragment$SavedState saveFragmentInstanceState(android.support.v4.app.Fragment) -> saveFragmentInstanceState
    java.lang.String toString() -> toString
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
    android.view.animation.Animation makeOpenCloseAnimation(android.content.Context,float,float,float,float) -> makeOpenCloseAnimation
    android.view.animation.Animation makeFadeAnimation(android.content.Context,float,float) -> makeFadeAnimation
    android.view.animation.Animation loadAnimation(android.support.v4.app.Fragment,int,boolean,int) -> loadAnimation
    void performPendingDeferredStart(android.support.v4.app.Fragment) -> performPendingDeferredStart
    void moveToState(android.support.v4.app.Fragment,int,int,int,boolean) -> moveToState
    void moveToState(android.support.v4.app.Fragment) -> moveToState
    void moveToState(int,boolean) -> moveToState
    void moveToState(int,int,int,boolean) -> moveToState
    void startPendingDeferredFragments() -> startPendingDeferredFragments
    void makeActive(android.support.v4.app.Fragment) -> makeActive
    void makeInactive(android.support.v4.app.Fragment) -> makeInactive
    void addFragment(android.support.v4.app.Fragment,boolean) -> addFragment
    void removeFragment(android.support.v4.app.Fragment,int,int) -> removeFragment
    void hideFragment(android.support.v4.app.Fragment,int,int) -> hideFragment
    void showFragment(android.support.v4.app.Fragment,int,int) -> showFragment
    void detachFragment(android.support.v4.app.Fragment,int,int) -> detachFragment
    void attachFragment(android.support.v4.app.Fragment,int,int) -> attachFragment
    android.support.v4.app.Fragment findFragmentById(int) -> findFragmentById
    android.support.v4.app.Fragment findFragmentByTag(java.lang.String) -> findFragmentByTag
    android.support.v4.app.Fragment findFragmentByWho(java.lang.String) -> findFragmentByWho
    void checkStateLoss() -> checkStateLoss
    void enqueueAction(java.lang.Runnable,boolean) -> enqueueAction
    int allocBackStackIndex(android.support.v4.app.BackStackRecord) -> allocBackStackIndex
    void setBackStackIndex(int,android.support.v4.app.BackStackRecord) -> setBackStackIndex
    void freeBackStackIndex(int) -> freeBackStackIndex
    boolean execPendingActions() -> execPendingActions
    void reportBackStackChanged() -> reportBackStackChanged
    void addBackStackState(android.support.v4.app.BackStackRecord) -> addBackStackState
    boolean popBackStackState(android.os.Handler,java.lang.String,int,int) -> popBackStackState
    java.util.ArrayList retainNonConfig() -> retainNonConfig
    void saveFragmentViewState(android.support.v4.app.Fragment) -> saveFragmentViewState
    android.os.Bundle saveFragmentBasicState(android.support.v4.app.Fragment) -> saveFragmentBasicState
    android.os.Parcelable saveAllState() -> saveAllState
    void restoreAllState(android.os.Parcelable,java.util.ArrayList) -> restoreAllState
    void attachActivity(android.support.v4.app.FragmentActivity,android.support.v4.app.FragmentContainer,android.support.v4.app.Fragment) -> attachActivity
    void noteStateNotSaved() -> noteStateNotSaved
    void dispatchCreate() -> dispatchCreate
    void dispatchActivityCreated() -> dispatchActivityCreated
    void dispatchStart() -> dispatchStart
    void dispatchResume() -> dispatchResume
    void dispatchPause() -> dispatchPause
    void dispatchStop() -> dispatchStop
    void dispatchReallyStop() -> dispatchReallyStop
    void dispatchDestroyView() -> dispatchDestroyView
    void dispatchDestroy() -> dispatchDestroy
    void dispatchConfigurationChanged(android.content.res.Configuration) -> dispatchConfigurationChanged
    void dispatchLowMemory() -> dispatchLowMemory
    boolean dispatchCreateOptionsMenu(android.view.Menu,android.view.MenuInflater) -> dispatchCreateOptionsMenu
    boolean dispatchPrepareOptionsMenu(android.view.Menu) -> dispatchPrepareOptionsMenu
    boolean dispatchOptionsItemSelected(android.view.MenuItem) -> dispatchOptionsItemSelected
    boolean dispatchContextItemSelected(android.view.MenuItem) -> dispatchContextItemSelected
    void dispatchOptionsMenuClosed(android.view.Menu) -> dispatchOptionsMenuClosed
    int reverseTransit(int) -> reverseTransit
    int transitToStyleIndex(int,boolean) -> transitToStyleIndex
android.support.v4.app.FragmentManagerImpl$1 -> android.support.v4.app.FragmentManagerImpl$1:
    android.support.v4.app.FragmentManagerImpl this$0 -> this$0
    void run() -> run
android.support.v4.app.FragmentManagerImpl$2 -> android.support.v4.app.FragmentManagerImpl$2:
    android.support.v4.app.FragmentManagerImpl this$0 -> this$0
    void run() -> run
android.support.v4.app.FragmentManagerImpl$3 -> android.support.v4.app.FragmentManagerImpl$3:
    java.lang.String val$name -> val$name
    int val$flags -> val$flags
    android.support.v4.app.FragmentManagerImpl this$0 -> this$0
    void run() -> run
android.support.v4.app.FragmentManagerImpl$4 -> android.support.v4.app.FragmentManagerImpl$4:
    int val$id -> val$id
    int val$flags -> val$flags
    android.support.v4.app.FragmentManagerImpl this$0 -> this$0
    void run() -> run
android.support.v4.app.FragmentManagerImpl$5 -> android.support.v4.app.FragmentManagerImpl$5:
    android.support.v4.app.Fragment val$fragment -> val$fragment
    android.support.v4.app.FragmentManagerImpl this$0 -> this$0
    void onAnimationEnd(android.view.animation.Animation) -> onAnimationEnd
    void onAnimationRepeat(android.view.animation.Animation) -> onAnimationRepeat
    void onAnimationStart(android.view.animation.Animation) -> onAnimationStart
android.support.v4.app.FragmentManagerState -> android.support.v4.app.FragmentManagerState:
    android.support.v4.app.FragmentState[] mActive -> mActive
    int[] mAdded -> mAdded
    android.support.v4.app.BackStackState[] mBackStack -> mBackStack
    android.os.Parcelable$Creator CREATOR -> CREATOR
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.app.FragmentManagerState$1 -> android.support.v4.app.FragmentManagerState$1:
    android.support.v4.app.FragmentManagerState createFromParcel(android.os.Parcel) -> createFromParcel
    android.support.v4.app.FragmentManagerState[] newArray(int) -> newArray
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.app.FragmentPagerAdapter -> android.support.v4.app.FragmentPagerAdapter:
    java.lang.String TAG -> TAG
    boolean DEBUG -> DEBUG
    android.support.v4.app.FragmentManager mFragmentManager -> mFragmentManager
    android.support.v4.app.FragmentTransaction mCurTransaction -> mCurTransaction
    android.support.v4.app.Fragment mCurrentPrimaryItem -> mCurrentPrimaryItem
    android.support.v4.app.Fragment getItem(int) -> getItem
    void startUpdate(android.view.ViewGroup) -> startUpdate
    java.lang.Object instantiateItem(android.view.ViewGroup,int) -> instantiateItem
    void destroyItem(android.view.ViewGroup,int,java.lang.Object) -> destroyItem
    void setPrimaryItem(android.view.ViewGroup,int,java.lang.Object) -> setPrimaryItem
    void finishUpdate(android.view.ViewGroup) -> finishUpdate
    boolean isViewFromObject(android.view.View,java.lang.Object) -> isViewFromObject
    android.os.Parcelable saveState() -> saveState
    void restoreState(android.os.Parcelable,java.lang.ClassLoader) -> restoreState
    long getItemId(int) -> getItemId
    java.lang.String makeFragmentName(int,long) -> makeFragmentName
android.support.v4.app.FragmentState -> android.support.v4.app.FragmentState:
    java.lang.String mClassName -> mClassName
    int mIndex -> mIndex
    boolean mFromLayout -> mFromLayout
    int mFragmentId -> mFragmentId
    int mContainerId -> mContainerId
    java.lang.String mTag -> mTag
    boolean mRetainInstance -> mRetainInstance
    boolean mDetached -> mDetached
    android.os.Bundle mArguments -> mArguments
    android.os.Bundle mSavedFragmentState -> mSavedFragmentState
    android.support.v4.app.Fragment mInstance -> mInstance
    android.os.Parcelable$Creator CREATOR -> CREATOR
    android.support.v4.app.Fragment instantiate(android.support.v4.app.FragmentActivity,android.support.v4.app.Fragment) -> instantiate
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.app.FragmentState$1 -> android.support.v4.app.FragmentState$1:
    android.support.v4.app.FragmentState createFromParcel(android.os.Parcel) -> createFromParcel
    android.support.v4.app.FragmentState[] newArray(int) -> newArray
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.app.FragmentStatePagerAdapter -> android.support.v4.app.FragmentStatePagerAdapter:
    java.lang.String TAG -> TAG
    boolean DEBUG -> DEBUG
    android.support.v4.app.FragmentManager mFragmentManager -> mFragmentManager
    android.support.v4.app.FragmentTransaction mCurTransaction -> mCurTransaction
    java.util.ArrayList mSavedState -> mSavedState
    java.util.ArrayList mFragments -> mFragments
    android.support.v4.app.Fragment mCurrentPrimaryItem -> mCurrentPrimaryItem
    android.support.v4.app.Fragment getItem(int) -> getItem
    void startUpdate(android.view.ViewGroup) -> startUpdate
    java.lang.Object instantiateItem(android.view.ViewGroup,int) -> instantiateItem
    void destroyItem(android.view.ViewGroup,int,java.lang.Object) -> destroyItem
    void setPrimaryItem(android.view.ViewGroup,int,java.lang.Object) -> setPrimaryItem
    void finishUpdate(android.view.ViewGroup) -> finishUpdate
    boolean isViewFromObject(android.view.View,java.lang.Object) -> isViewFromObject
    android.os.Parcelable saveState() -> saveState
    void restoreState(android.os.Parcelable,java.lang.ClassLoader) -> restoreState
android.support.v4.app.FragmentTabHost -> android.support.v4.app.FragmentTabHost:
    java.util.ArrayList mTabs -> mTabs
    android.widget.FrameLayout mRealTabContent -> mRealTabContent
    android.content.Context mContext -> mContext
    android.support.v4.app.FragmentManager mFragmentManager -> mFragmentManager
    int mContainerId -> mContainerId
    android.widget.TabHost$OnTabChangeListener mOnTabChangeListener -> mOnTabChangeListener
    android.support.v4.app.FragmentTabHost$TabInfo mLastTab -> mLastTab
    boolean mAttached -> mAttached
    void initFragmentTabHost(android.content.Context,android.util.AttributeSet) -> initFragmentTabHost
    void ensureHierarchy(android.content.Context) -> ensureHierarchy
    void setup() -> setup
    void setup(android.content.Context,android.support.v4.app.FragmentManager) -> setup
    void setup(android.content.Context,android.support.v4.app.FragmentManager,int) -> setup
    void ensureContent() -> ensureContent
    void setOnTabChangedListener(android.widget.TabHost$OnTabChangeListener) -> setOnTabChangedListener
    void addTab(android.widget.TabHost$TabSpec,java.lang.Class,android.os.Bundle) -> addTab
    void onAttachedToWindow() -> onAttachedToWindow
    void onDetachedFromWindow() -> onDetachedFromWindow
    android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    void onTabChanged(java.lang.String) -> onTabChanged
    android.support.v4.app.FragmentTransaction doTabChanged(java.lang.String,android.support.v4.app.FragmentTransaction) -> doTabChanged
android.support.v4.app.FragmentTabHost$1 -> android.support.v4.app.FragmentTabHost$1:
android.support.v4.app.FragmentTabHost$DummyTabFactory -> android.support.v4.app.FragmentTabHost$DummyTabFactory:
    android.content.Context mContext -> mContext
    android.view.View createTabContent(java.lang.String) -> createTabContent
android.support.v4.app.FragmentTabHost$SavedState -> android.support.v4.app.FragmentTabHost$SavedState:
    java.lang.String curTab -> curTab
    android.os.Parcelable$Creator CREATOR -> CREATOR
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    java.lang.String toString() -> toString
android.support.v4.app.FragmentTabHost$SavedState$1 -> android.support.v4.app.FragmentTabHost$SavedState$1:
    android.support.v4.app.FragmentTabHost$SavedState createFromParcel(android.os.Parcel) -> createFromParcel
    android.support.v4.app.FragmentTabHost$SavedState[] newArray(int) -> newArray
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.app.FragmentTabHost$TabInfo -> android.support.v4.app.FragmentTabHost$TabInfo:
    java.lang.String tag -> tag
    java.lang.Class clss -> clss
    android.os.Bundle args -> args
    android.support.v4.app.Fragment fragment -> fragment
    android.support.v4.app.Fragment access$102(android.support.v4.app.FragmentTabHost$TabInfo,android.support.v4.app.Fragment) -> access$102
    android.support.v4.app.Fragment access$100(android.support.v4.app.FragmentTabHost$TabInfo) -> access$100
    java.lang.String access$200(android.support.v4.app.FragmentTabHost$TabInfo) -> access$200
    java.lang.Class access$300(android.support.v4.app.FragmentTabHost$TabInfo) -> access$300
    android.os.Bundle access$400(android.support.v4.app.FragmentTabHost$TabInfo) -> access$400
android.support.v4.app.FragmentTransaction -> android.support.v4.app.FragmentTransaction:
    int TRANSIT_ENTER_MASK -> TRANSIT_ENTER_MASK
    int TRANSIT_EXIT_MASK -> TRANSIT_EXIT_MASK
    int TRANSIT_UNSET -> TRANSIT_UNSET
    int TRANSIT_NONE -> TRANSIT_NONE
    int TRANSIT_FRAGMENT_OPEN -> TRANSIT_FRAGMENT_OPEN
    int TRANSIT_FRAGMENT_CLOSE -> TRANSIT_FRAGMENT_CLOSE
    int TRANSIT_FRAGMENT_FADE -> TRANSIT_FRAGMENT_FADE
    android.support.v4.app.FragmentTransaction add(android.support.v4.app.Fragment,java.lang.String) -> add
    android.support.v4.app.FragmentTransaction add(int,android.support.v4.app.Fragment) -> add
    android.support.v4.app.FragmentTransaction add(int,android.support.v4.app.Fragment,java.lang.String) -> add
    android.support.v4.app.FragmentTransaction replace(int,android.support.v4.app.Fragment) -> replace
    android.support.v4.app.FragmentTransaction replace(int,android.support.v4.app.Fragment,java.lang.String) -> replace
    android.support.v4.app.FragmentTransaction remove(android.support.v4.app.Fragment) -> remove
    android.support.v4.app.FragmentTransaction hide(android.support.v4.app.Fragment) -> hide
    android.support.v4.app.FragmentTransaction show(android.support.v4.app.Fragment) -> show
    android.support.v4.app.FragmentTransaction detach(android.support.v4.app.Fragment) -> detach
    android.support.v4.app.FragmentTransaction attach(android.support.v4.app.Fragment) -> attach
    boolean isEmpty() -> isEmpty
    android.support.v4.app.FragmentTransaction setCustomAnimations(int,int) -> setCustomAnimations
    android.support.v4.app.FragmentTransaction setCustomAnimations(int,int,int,int) -> setCustomAnimations
    android.support.v4.app.FragmentTransaction setTransition(int) -> setTransition
    android.support.v4.app.FragmentTransaction setTransitionStyle(int) -> setTransitionStyle
    android.support.v4.app.FragmentTransaction addToBackStack(java.lang.String) -> addToBackStack
    boolean isAddToBackStackAllowed() -> isAddToBackStackAllowed
    android.support.v4.app.FragmentTransaction disallowAddToBackStack() -> disallowAddToBackStack
    android.support.v4.app.FragmentTransaction setBreadCrumbTitle(int) -> setBreadCrumbTitle
    android.support.v4.app.FragmentTransaction setBreadCrumbTitle(java.lang.CharSequence) -> setBreadCrumbTitle
    android.support.v4.app.FragmentTransaction setBreadCrumbShortTitle(int) -> setBreadCrumbShortTitle
    android.support.v4.app.FragmentTransaction setBreadCrumbShortTitle(java.lang.CharSequence) -> setBreadCrumbShortTitle
    int commit() -> commit
    int commitAllowingStateLoss() -> commitAllowingStateLoss
android.support.v4.app.ListFragment -> android.support.v4.app.ListFragment:
    int INTERNAL_EMPTY_ID -> INTERNAL_EMPTY_ID
    int INTERNAL_PROGRESS_CONTAINER_ID -> INTERNAL_PROGRESS_CONTAINER_ID
    int INTERNAL_LIST_CONTAINER_ID -> INTERNAL_LIST_CONTAINER_ID
    android.os.Handler mHandler -> mHandler
    java.lang.Runnable mRequestFocus -> mRequestFocus
    android.widget.AdapterView$OnItemClickListener mOnClickListener -> mOnClickListener
    android.widget.ListAdapter mAdapter -> mAdapter
    android.widget.ListView mList -> mList
    android.view.View mEmptyView -> mEmptyView
    android.widget.TextView mStandardEmptyView -> mStandardEmptyView
    android.view.View mProgressContainer -> mProgressContainer
    android.view.View mListContainer -> mListContainer
    java.lang.CharSequence mEmptyText -> mEmptyText
    boolean mListShown -> mListShown
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    void onViewCreated(android.view.View,android.os.Bundle) -> onViewCreated
    void onDestroyView() -> onDestroyView
    void onListItemClick(android.widget.ListView,android.view.View,int,long) -> onListItemClick
    void setListAdapter(android.widget.ListAdapter) -> setListAdapter
    void setSelection(int) -> setSelection
    int getSelectedItemPosition() -> getSelectedItemPosition
    long getSelectedItemId() -> getSelectedItemId
    android.widget.ListView getListView() -> getListView
    void setEmptyText(java.lang.CharSequence) -> setEmptyText
    void setListShown(boolean) -> setListShown
    void setListShownNoAnimation(boolean) -> setListShownNoAnimation
    void setListShown(boolean,boolean) -> setListShown
    android.widget.ListAdapter getListAdapter() -> getListAdapter
    void ensureList() -> ensureList
android.support.v4.app.ListFragment$1 -> android.support.v4.app.ListFragment$1:
    android.support.v4.app.ListFragment this$0 -> this$0
    void run() -> run
android.support.v4.app.ListFragment$2 -> android.support.v4.app.ListFragment$2:
    android.support.v4.app.ListFragment this$0 -> this$0
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
android.support.v4.app.LoaderManager -> android.support.v4.app.LoaderManager:
    android.support.v4.content.Loader initLoader(int,android.os.Bundle,android.support.v4.app.LoaderManager$LoaderCallbacks) -> initLoader
    android.support.v4.content.Loader restartLoader(int,android.os.Bundle,android.support.v4.app.LoaderManager$LoaderCallbacks) -> restartLoader
    void destroyLoader(int) -> destroyLoader
    android.support.v4.content.Loader getLoader(int) -> getLoader
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
    void enableDebugLogging(boolean) -> enableDebugLogging
    boolean hasRunningLoaders() -> hasRunningLoaders
android.support.v4.app.LoaderManager$LoaderCallbacks -> android.support.v4.app.LoaderManager$LoaderCallbacks:
    android.support.v4.content.Loader onCreateLoader(int,android.os.Bundle) -> onCreateLoader
    void onLoadFinished(android.support.v4.content.Loader,java.lang.Object) -> onLoadFinished
    void onLoaderReset(android.support.v4.content.Loader) -> onLoaderReset
android.support.v4.app.LoaderManagerImpl -> android.support.v4.app.LoaderManagerImpl:
    java.lang.String TAG -> TAG
    boolean DEBUG -> DEBUG
    android.support.v4.util.SparseArrayCompat mLoaders -> mLoaders
    android.support.v4.util.SparseArrayCompat mInactiveLoaders -> mInactiveLoaders
    java.lang.String mWho -> mWho
    android.support.v4.app.FragmentActivity mActivity -> mActivity
    boolean mStarted -> mStarted
    boolean mRetaining -> mRetaining
    boolean mRetainingStarted -> mRetainingStarted
    boolean mCreatingLoader -> mCreatingLoader
    void updateActivity(android.support.v4.app.FragmentActivity) -> updateActivity
    android.support.v4.app.LoaderManagerImpl$LoaderInfo createLoader(int,android.os.Bundle,android.support.v4.app.LoaderManager$LoaderCallbacks) -> createLoader
    android.support.v4.app.LoaderManagerImpl$LoaderInfo createAndInstallLoader(int,android.os.Bundle,android.support.v4.app.LoaderManager$LoaderCallbacks) -> createAndInstallLoader
    void installLoader(android.support.v4.app.LoaderManagerImpl$LoaderInfo) -> installLoader
    android.support.v4.content.Loader initLoader(int,android.os.Bundle,android.support.v4.app.LoaderManager$LoaderCallbacks) -> initLoader
    android.support.v4.content.Loader restartLoader(int,android.os.Bundle,android.support.v4.app.LoaderManager$LoaderCallbacks) -> restartLoader
    void destroyLoader(int) -> destroyLoader
    android.support.v4.content.Loader getLoader(int) -> getLoader
    void doStart() -> doStart
    void doStop() -> doStop
    void doRetain() -> doRetain
    void finishRetain() -> finishRetain
    void doReportNextStart() -> doReportNextStart
    void doReportStart() -> doReportStart
    void doDestroy() -> doDestroy
    java.lang.String toString() -> toString
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
    boolean hasRunningLoaders() -> hasRunningLoaders
android.support.v4.app.LoaderManagerImpl$LoaderInfo -> android.support.v4.app.LoaderManagerImpl$LoaderInfo:
    int mId -> mId
    android.os.Bundle mArgs -> mArgs
    android.support.v4.app.LoaderManager$LoaderCallbacks mCallbacks -> mCallbacks
    android.support.v4.content.Loader mLoader -> mLoader
    boolean mHaveData -> mHaveData
    boolean mDeliveredData -> mDeliveredData
    java.lang.Object mData -> mData
    boolean mStarted -> mStarted
    boolean mRetaining -> mRetaining
    boolean mRetainingStarted -> mRetainingStarted
    boolean mReportNextStart -> mReportNextStart
    boolean mDestroyed -> mDestroyed
    boolean mListenerRegistered -> mListenerRegistered
    android.support.v4.app.LoaderManagerImpl$LoaderInfo mPendingLoader -> mPendingLoader
    android.support.v4.app.LoaderManagerImpl this$0 -> this$0
    void start() -> start
    void retain() -> retain
    void finishRetain() -> finishRetain
    void reportStart() -> reportStart
    void stop() -> stop
    void destroy() -> destroy
    void onLoadComplete(android.support.v4.content.Loader,java.lang.Object) -> onLoadComplete
    void callOnLoadFinished(android.support.v4.content.Loader,java.lang.Object) -> callOnLoadFinished
    java.lang.String toString() -> toString
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
android.support.v4.app.NavUtils -> android.support.v4.app.NavUtils:
    java.lang.String TAG -> TAG
    java.lang.String PARENT_ACTIVITY -> PARENT_ACTIVITY
    android.support.v4.app.NavUtils$NavUtilsImpl IMPL -> IMPL
    boolean shouldUpRecreateTask(android.app.Activity,android.content.Intent) -> shouldUpRecreateTask
    void navigateUpFromSameTask(android.app.Activity) -> navigateUpFromSameTask
    void navigateUpTo(android.app.Activity,android.content.Intent) -> navigateUpTo
    android.content.Intent getParentActivityIntent(android.app.Activity) -> getParentActivityIntent
    android.content.Intent getParentActivityIntent(android.content.Context,java.lang.Class) -> getParentActivityIntent
    android.content.Intent getParentActivityIntent(android.content.Context,android.content.ComponentName) -> getParentActivityIntent
    java.lang.String getParentActivityName(android.app.Activity) -> getParentActivityName
    java.lang.String getParentActivityName(android.content.Context,android.content.ComponentName) -> getParentActivityName
android.support.v4.app.NavUtils$NavUtilsImpl -> android.support.v4.app.NavUtils$NavUtilsImpl:
    android.content.Intent getParentActivityIntent(android.app.Activity) -> getParentActivityIntent
    boolean shouldUpRecreateTask(android.app.Activity,android.content.Intent) -> shouldUpRecreateTask
    void navigateUpTo(android.app.Activity,android.content.Intent) -> navigateUpTo
    java.lang.String getParentActivityName(android.content.Context,android.content.pm.ActivityInfo) -> getParentActivityName
android.support.v4.app.NavUtils$NavUtilsImplBase -> android.support.v4.app.NavUtils$NavUtilsImplBase:
    android.content.Intent getParentActivityIntent(android.app.Activity) -> getParentActivityIntent
    boolean shouldUpRecreateTask(android.app.Activity,android.content.Intent) -> shouldUpRecreateTask
    void navigateUpTo(android.app.Activity,android.content.Intent) -> navigateUpTo
    java.lang.String getParentActivityName(android.content.Context,android.content.pm.ActivityInfo) -> getParentActivityName
android.support.v4.app.NavUtils$NavUtilsImplJB -> android.support.v4.app.NavUtils$NavUtilsImplJB:
    android.content.Intent getParentActivityIntent(android.app.Activity) -> getParentActivityIntent
    android.content.Intent superGetParentActivityIntent(android.app.Activity) -> superGetParentActivityIntent
    boolean shouldUpRecreateTask(android.app.Activity,android.content.Intent) -> shouldUpRecreateTask
    void navigateUpTo(android.app.Activity,android.content.Intent) -> navigateUpTo
    java.lang.String getParentActivityName(android.content.Context,android.content.pm.ActivityInfo) -> getParentActivityName
android.support.v4.app.NavUtilsJB -> android.support.v4.app.NavUtilsJB:
    android.content.Intent getParentActivityIntent(android.app.Activity) -> getParentActivityIntent
    boolean shouldUpRecreateTask(android.app.Activity,android.content.Intent) -> shouldUpRecreateTask
    void navigateUpTo(android.app.Activity,android.content.Intent) -> navigateUpTo
    java.lang.String getParentActivityName(android.content.pm.ActivityInfo) -> getParentActivityName
android.support.v4.app.NoSaveStateFrameLayout -> android.support.v4.app.NoSaveStateFrameLayout:
    android.support.v4.app.NoSaveStateFrameLayout$NoSaveStateFrameLayoutCreator sNoSaveStateFrameLayoutCreator -> sNoSaveStateFrameLayoutCreator
    android.view.ViewGroup wrap(android.view.View) -> wrap
    android.view.ViewGroup wrap(android.support.v4.app.Fragment,android.view.View) -> wrap
    void dispatchSaveInstanceState(android.util.SparseArray) -> dispatchSaveInstanceState
    void dispatchRestoreInstanceState(android.util.SparseArray) -> dispatchRestoreInstanceState
android.support.v4.app.NoSaveStateFrameLayout$NoSaveStateFrameLayoutCreator -> android.support.v4.app.NoSaveStateFrameLayout$NoSaveStateFrameLayoutCreator:
    android.view.ViewGroup create(android.support.v4.app.Fragment,android.view.View) -> create
android.support.v4.app.NotificationCompat -> android.support.v4.app.NotificationCompat:
    int FLAG_HIGH_PRIORITY -> FLAG_HIGH_PRIORITY
    int PRIORITY_DEFAULT -> PRIORITY_DEFAULT
    int PRIORITY_LOW -> PRIORITY_LOW
    int PRIORITY_MIN -> PRIORITY_MIN
    int PRIORITY_HIGH -> PRIORITY_HIGH
    int PRIORITY_MAX -> PRIORITY_MAX
    android.support.v4.app.NotificationCompat$NotificationCompatImpl IMPL -> IMPL
    android.support.v4.app.NotificationCompat$NotificationCompatImpl access$000() -> access$000
android.support.v4.app.NotificationCompat$Action -> android.support.v4.app.NotificationCompat$Action:
    int icon -> icon
    java.lang.CharSequence title -> title
    android.app.PendingIntent actionIntent -> actionIntent
android.support.v4.app.NotificationCompat$BigPictureStyle -> android.support.v4.app.NotificationCompat$BigPictureStyle:
    android.graphics.Bitmap mPicture -> mPicture
    android.graphics.Bitmap mBigLargeIcon -> mBigLargeIcon
    boolean mBigLargeIconSet -> mBigLargeIconSet
    android.support.v4.app.NotificationCompat$BigPictureStyle setBigContentTitle(java.lang.CharSequence) -> setBigContentTitle
    android.support.v4.app.NotificationCompat$BigPictureStyle setSummaryText(java.lang.CharSequence) -> setSummaryText
    android.support.v4.app.NotificationCompat$BigPictureStyle bigPicture(android.graphics.Bitmap) -> bigPicture
    android.support.v4.app.NotificationCompat$BigPictureStyle bigLargeIcon(android.graphics.Bitmap) -> bigLargeIcon
android.support.v4.app.NotificationCompat$BigTextStyle -> android.support.v4.app.NotificationCompat$BigTextStyle:
    java.lang.CharSequence mBigText -> mBigText
    android.support.v4.app.NotificationCompat$BigTextStyle setBigContentTitle(java.lang.CharSequence) -> setBigContentTitle
    android.support.v4.app.NotificationCompat$BigTextStyle setSummaryText(java.lang.CharSequence) -> setSummaryText
    android.support.v4.app.NotificationCompat$BigTextStyle bigText(java.lang.CharSequence) -> bigText
android.support.v4.app.NotificationCompat$Builder -> android.support.v4.app.NotificationCompat$Builder:
    android.content.Context mContext -> mContext
    java.lang.CharSequence mContentTitle -> mContentTitle
    java.lang.CharSequence mContentText -> mContentText
    android.app.PendingIntent mContentIntent -> mContentIntent
    android.app.PendingIntent mFullScreenIntent -> mFullScreenIntent
    android.widget.RemoteViews mTickerView -> mTickerView
    android.graphics.Bitmap mLargeIcon -> mLargeIcon
    java.lang.CharSequence mContentInfo -> mContentInfo
    int mNumber -> mNumber
    int mPriority -> mPriority
    boolean mUseChronometer -> mUseChronometer
    android.support.v4.app.NotificationCompat$Style mStyle -> mStyle
    java.lang.CharSequence mSubText -> mSubText
    int mProgressMax -> mProgressMax
    int mProgress -> mProgress
    boolean mProgressIndeterminate -> mProgressIndeterminate
    java.util.ArrayList mActions -> mActions
    android.app.Notification mNotification -> mNotification
    android.support.v4.app.NotificationCompat$Builder setWhen(long) -> setWhen
    android.support.v4.app.NotificationCompat$Builder setUsesChronometer(boolean) -> setUsesChronometer
    android.support.v4.app.NotificationCompat$Builder setSmallIcon(int) -> setSmallIcon
    android.support.v4.app.NotificationCompat$Builder setSmallIcon(int,int) -> setSmallIcon
    android.support.v4.app.NotificationCompat$Builder setContentTitle(java.lang.CharSequence) -> setContentTitle
    android.support.v4.app.NotificationCompat$Builder setContentText(java.lang.CharSequence) -> setContentText
    android.support.v4.app.NotificationCompat$Builder setSubText(java.lang.CharSequence) -> setSubText
    android.support.v4.app.NotificationCompat$Builder setNumber(int) -> setNumber
    android.support.v4.app.NotificationCompat$Builder setContentInfo(java.lang.CharSequence) -> setContentInfo
    android.support.v4.app.NotificationCompat$Builder setProgress(int,int,boolean) -> setProgress
    android.support.v4.app.NotificationCompat$Builder setContent(android.widget.RemoteViews) -> setContent
    android.support.v4.app.NotificationCompat$Builder setContentIntent(android.app.PendingIntent) -> setContentIntent
    android.support.v4.app.NotificationCompat$Builder setDeleteIntent(android.app.PendingIntent) -> setDeleteIntent
    android.support.v4.app.NotificationCompat$Builder setFullScreenIntent(android.app.PendingIntent,boolean) -> setFullScreenIntent
    android.support.v4.app.NotificationCompat$Builder setTicker(java.lang.CharSequence) -> setTicker
    android.support.v4.app.NotificationCompat$Builder setTicker(java.lang.CharSequence,android.widget.RemoteViews) -> setTicker
    android.support.v4.app.NotificationCompat$Builder setLargeIcon(android.graphics.Bitmap) -> setLargeIcon
    android.support.v4.app.NotificationCompat$Builder setSound(android.net.Uri) -> setSound
    android.support.v4.app.NotificationCompat$Builder setSound(android.net.Uri,int) -> setSound
    android.support.v4.app.NotificationCompat$Builder setVibrate(long[]) -> setVibrate
    android.support.v4.app.NotificationCompat$Builder setLights(int,int,int) -> setLights
    android.support.v4.app.NotificationCompat$Builder setOngoing(boolean) -> setOngoing
    android.support.v4.app.NotificationCompat$Builder setOnlyAlertOnce(boolean) -> setOnlyAlertOnce
    android.support.v4.app.NotificationCompat$Builder setAutoCancel(boolean) -> setAutoCancel
    android.support.v4.app.NotificationCompat$Builder setDefaults(int) -> setDefaults
    void setFlag(int,boolean) -> setFlag
    android.support.v4.app.NotificationCompat$Builder setPriority(int) -> setPriority
    android.support.v4.app.NotificationCompat$Builder addAction(int,java.lang.CharSequence,android.app.PendingIntent) -> addAction
    android.support.v4.app.NotificationCompat$Builder setStyle(android.support.v4.app.NotificationCompat$Style) -> setStyle
    android.app.Notification getNotification() -> getNotification
    android.app.Notification build() -> build
android.support.v4.app.NotificationCompat$InboxStyle -> android.support.v4.app.NotificationCompat$InboxStyle:
    java.util.ArrayList mTexts -> mTexts
    android.support.v4.app.NotificationCompat$InboxStyle setBigContentTitle(java.lang.CharSequence) -> setBigContentTitle
    android.support.v4.app.NotificationCompat$InboxStyle setSummaryText(java.lang.CharSequence) -> setSummaryText
    android.support.v4.app.NotificationCompat$InboxStyle addLine(java.lang.CharSequence) -> addLine
android.support.v4.app.NotificationCompat$NotificationCompatImpl -> android.support.v4.app.NotificationCompat$NotificationCompatImpl:
    android.app.Notification build(android.support.v4.app.NotificationCompat$Builder) -> build
android.support.v4.app.NotificationCompat$NotificationCompatImplBase -> android.support.v4.app.NotificationCompat$NotificationCompatImplBase:
    android.app.Notification build(android.support.v4.app.NotificationCompat$Builder) -> build
android.support.v4.app.NotificationCompat$NotificationCompatImplHoneycomb -> android.support.v4.app.NotificationCompat$NotificationCompatImplHoneycomb:
    android.app.Notification build(android.support.v4.app.NotificationCompat$Builder) -> build
android.support.v4.app.NotificationCompat$NotificationCompatImplIceCreamSandwich -> android.support.v4.app.NotificationCompat$NotificationCompatImplIceCreamSandwich:
    android.app.Notification build(android.support.v4.app.NotificationCompat$Builder) -> build
android.support.v4.app.NotificationCompat$NotificationCompatImplJellybean -> android.support.v4.app.NotificationCompat$NotificationCompatImplJellybean:
    android.app.Notification build(android.support.v4.app.NotificationCompat$Builder) -> build
android.support.v4.app.NotificationCompat$Style -> android.support.v4.app.NotificationCompat$Style:
    android.support.v4.app.NotificationCompat$Builder mBuilder -> mBuilder
    java.lang.CharSequence mBigContentTitle -> mBigContentTitle
    java.lang.CharSequence mSummaryText -> mSummaryText
    boolean mSummaryTextSet -> mSummaryTextSet
    void setBuilder(android.support.v4.app.NotificationCompat$Builder) -> setBuilder
    android.app.Notification build() -> build
android.support.v4.app.NotificationCompatHoneycomb -> android.support.v4.app.NotificationCompatHoneycomb:
    android.app.Notification add(android.content.Context,android.app.Notification,java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,android.widget.RemoteViews,int,android.app.PendingIntent,android.app.PendingIntent,android.graphics.Bitmap) -> add
android.support.v4.app.NotificationCompatIceCreamSandwich -> android.support.v4.app.NotificationCompatIceCreamSandwich:
    android.app.Notification add(android.content.Context,android.app.Notification,java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,android.widget.RemoteViews,int,android.app.PendingIntent,android.app.PendingIntent,android.graphics.Bitmap,int,int,boolean) -> add
android.support.v4.app.NotificationCompatJellybean -> android.support.v4.app.NotificationCompatJellybean:
    android.app.Notification$Builder b -> b
    void addAction(int,java.lang.CharSequence,android.app.PendingIntent) -> addAction
    void addBigTextStyle(java.lang.CharSequence,boolean,java.lang.CharSequence,java.lang.CharSequence) -> addBigTextStyle
    void addBigPictureStyle(java.lang.CharSequence,boolean,java.lang.CharSequence,android.graphics.Bitmap,android.graphics.Bitmap,boolean) -> addBigPictureStyle
    void addInboxStyle(java.lang.CharSequence,boolean,java.lang.CharSequence,java.util.ArrayList) -> addInboxStyle
    android.app.Notification build() -> build
android.support.v4.app.ServiceCompat -> android.support.v4.app.ServiceCompat:
    int START_STICKY -> START_STICKY
android.support.v4.app.ShareCompat -> android.support.v4.app.ShareCompat:
    java.lang.String EXTRA_CALLING_PACKAGE -> EXTRA_CALLING_PACKAGE
    java.lang.String EXTRA_CALLING_ACTIVITY -> EXTRA_CALLING_ACTIVITY
    android.support.v4.app.ShareCompat$ShareCompatImpl IMPL -> IMPL
    java.lang.String getCallingPackage(android.app.Activity) -> getCallingPackage
    android.content.ComponentName getCallingActivity(android.app.Activity) -> getCallingActivity
    void configureMenuItem(android.view.MenuItem,android.support.v4.app.ShareCompat$IntentBuilder) -> configureMenuItem
    void configureMenuItem(android.view.Menu,int,android.support.v4.app.ShareCompat$IntentBuilder) -> configureMenuItem
    android.support.v4.app.ShareCompat$ShareCompatImpl access$000() -> access$000
android.support.v4.app.ShareCompat$IntentBuilder -> android.support.v4.app.ShareCompat$IntentBuilder:
    android.app.Activity mActivity -> mActivity
    android.content.Intent mIntent -> mIntent
    java.lang.CharSequence mChooserTitle -> mChooserTitle
    java.util.ArrayList mToAddresses -> mToAddresses
    java.util.ArrayList mCcAddresses -> mCcAddresses
    java.util.ArrayList mBccAddresses -> mBccAddresses
    java.util.ArrayList mStreams -> mStreams
    android.support.v4.app.ShareCompat$IntentBuilder from(android.app.Activity) -> from
    android.content.Intent getIntent() -> getIntent
    android.app.Activity getActivity() -> getActivity
    void combineArrayExtra(java.lang.String,java.util.ArrayList) -> combineArrayExtra
    void combineArrayExtra(java.lang.String,java.lang.String[]) -> combineArrayExtra
    android.content.Intent createChooserIntent() -> createChooserIntent
    void startChooser() -> startChooser
    android.support.v4.app.ShareCompat$IntentBuilder setChooserTitle(java.lang.CharSequence) -> setChooserTitle
    android.support.v4.app.ShareCompat$IntentBuilder setChooserTitle(int) -> setChooserTitle
    android.support.v4.app.ShareCompat$IntentBuilder setType(java.lang.String) -> setType
    android.support.v4.app.ShareCompat$IntentBuilder setText(java.lang.CharSequence) -> setText
    android.support.v4.app.ShareCompat$IntentBuilder setHtmlText(java.lang.String) -> setHtmlText
    android.support.v4.app.ShareCompat$IntentBuilder setStream(android.net.Uri) -> setStream
    android.support.v4.app.ShareCompat$IntentBuilder addStream(android.net.Uri) -> addStream
    android.support.v4.app.ShareCompat$IntentBuilder setEmailTo(java.lang.String[]) -> setEmailTo
    android.support.v4.app.ShareCompat$IntentBuilder addEmailTo(java.lang.String) -> addEmailTo
    android.support.v4.app.ShareCompat$IntentBuilder addEmailTo(java.lang.String[]) -> addEmailTo
    android.support.v4.app.ShareCompat$IntentBuilder setEmailCc(java.lang.String[]) -> setEmailCc
    android.support.v4.app.ShareCompat$IntentBuilder addEmailCc(java.lang.String) -> addEmailCc
    android.support.v4.app.ShareCompat$IntentBuilder addEmailCc(java.lang.String[]) -> addEmailCc
    android.support.v4.app.ShareCompat$IntentBuilder setEmailBcc(java.lang.String[]) -> setEmailBcc
    android.support.v4.app.ShareCompat$IntentBuilder addEmailBcc(java.lang.String) -> addEmailBcc
    android.support.v4.app.ShareCompat$IntentBuilder addEmailBcc(java.lang.String[]) -> addEmailBcc
    android.support.v4.app.ShareCompat$IntentBuilder setSubject(java.lang.String) -> setSubject
android.support.v4.app.ShareCompat$IntentReader -> android.support.v4.app.ShareCompat$IntentReader:
    java.lang.String TAG -> TAG
    android.app.Activity mActivity -> mActivity
    android.content.Intent mIntent -> mIntent
    java.lang.String mCallingPackage -> mCallingPackage
    android.content.ComponentName mCallingActivity -> mCallingActivity
    java.util.ArrayList mStreams -> mStreams
    android.support.v4.app.ShareCompat$IntentReader from(android.app.Activity) -> from
    boolean isShareIntent() -> isShareIntent
    boolean isSingleShare() -> isSingleShare
    boolean isMultipleShare() -> isMultipleShare
    java.lang.String getType() -> getType
    java.lang.CharSequence getText() -> getText
    java.lang.String getHtmlText() -> getHtmlText
    android.net.Uri getStream() -> getStream
    android.net.Uri getStream(int) -> getStream
    int getStreamCount() -> getStreamCount
    java.lang.String[] getEmailTo() -> getEmailTo
    java.lang.String[] getEmailCc() -> getEmailCc
    java.lang.String[] getEmailBcc() -> getEmailBcc
    java.lang.String getSubject() -> getSubject
    java.lang.String getCallingPackage() -> getCallingPackage
    android.content.ComponentName getCallingActivity() -> getCallingActivity
    android.graphics.drawable.Drawable getCallingActivityIcon() -> getCallingActivityIcon
    android.graphics.drawable.Drawable getCallingApplicationIcon() -> getCallingApplicationIcon
    java.lang.CharSequence getCallingApplicationLabel() -> getCallingApplicationLabel
android.support.v4.app.ShareCompat$ShareCompatImpl -> android.support.v4.app.ShareCompat$ShareCompatImpl:
    void configureMenuItem(android.view.MenuItem,android.support.v4.app.ShareCompat$IntentBuilder) -> configureMenuItem
    java.lang.String escapeHtml(java.lang.CharSequence) -> escapeHtml
android.support.v4.app.ShareCompat$ShareCompatImplBase -> android.support.v4.app.ShareCompat$ShareCompatImplBase:
    void configureMenuItem(android.view.MenuItem,android.support.v4.app.ShareCompat$IntentBuilder) -> configureMenuItem
    java.lang.String escapeHtml(java.lang.CharSequence) -> escapeHtml
    void withinStyle(java.lang.StringBuilder,java.lang.CharSequence,int,int) -> withinStyle
android.support.v4.app.ShareCompat$ShareCompatImplICS -> android.support.v4.app.ShareCompat$ShareCompatImplICS:
    void configureMenuItem(android.view.MenuItem,android.support.v4.app.ShareCompat$IntentBuilder) -> configureMenuItem
    boolean shouldAddChooserIntent(android.view.MenuItem) -> shouldAddChooserIntent
android.support.v4.app.ShareCompat$ShareCompatImplJB -> android.support.v4.app.ShareCompat$ShareCompatImplJB:
    java.lang.String escapeHtml(java.lang.CharSequence) -> escapeHtml
    boolean shouldAddChooserIntent(android.view.MenuItem) -> shouldAddChooserIntent
android.support.v4.app.ShareCompatICS -> android.support.v4.app.ShareCompatICS:
    java.lang.String HISTORY_FILENAME_PREFIX -> HISTORY_FILENAME_PREFIX
    void configureMenuItem(android.view.MenuItem,android.app.Activity,android.content.Intent) -> configureMenuItem
android.support.v4.app.ShareCompatJB -> android.support.v4.app.ShareCompatJB:
    java.lang.String escapeHtml(java.lang.CharSequence) -> escapeHtml
android.support.v4.app.SuperNotCalledException -> android.support.v4.app.SuperNotCalledException:
android.support.v4.app.TaskStackBuilder -> android.support.v4.app.TaskStackBuilder:
    java.lang.String TAG -> TAG
    android.support.v4.app.TaskStackBuilder$TaskStackBuilderImpl IMPL -> IMPL
    java.util.ArrayList mIntents -> mIntents
    android.content.Context mSourceContext -> mSourceContext
    android.support.v4.app.TaskStackBuilder create(android.content.Context) -> create
    android.support.v4.app.TaskStackBuilder from(android.content.Context) -> from
    android.support.v4.app.TaskStackBuilder addNextIntent(android.content.Intent) -> addNextIntent
    android.support.v4.app.TaskStackBuilder addNextIntentWithParentStack(android.content.Intent) -> addNextIntentWithParentStack
    android.support.v4.app.TaskStackBuilder addParentStack(android.app.Activity) -> addParentStack
    android.support.v4.app.TaskStackBuilder addParentStack(java.lang.Class) -> addParentStack
    android.support.v4.app.TaskStackBuilder addParentStack(android.content.ComponentName) -> addParentStack
    int getIntentCount() -> getIntentCount
    android.content.Intent getIntent(int) -> getIntent
    android.content.Intent editIntentAt(int) -> editIntentAt
    java.util.Iterator iterator() -> iterator
    void startActivities() -> startActivities
    void startActivities(android.os.Bundle) -> startActivities
    android.app.PendingIntent getPendingIntent(int,int) -> getPendingIntent
    android.app.PendingIntent getPendingIntent(int,int,android.os.Bundle) -> getPendingIntent
    android.content.Intent[] getIntents() -> getIntents
android.support.v4.app.TaskStackBuilder$SupportParentable -> android.support.v4.app.TaskStackBuilder$SupportParentable:
    android.content.Intent getSupportParentActivityIntent() -> getSupportParentActivityIntent
android.support.v4.app.TaskStackBuilder$TaskStackBuilderImpl -> android.support.v4.app.TaskStackBuilder$TaskStackBuilderImpl:
    android.app.PendingIntent getPendingIntent(android.content.Context,android.content.Intent[],int,int,android.os.Bundle) -> getPendingIntent
android.support.v4.app.TaskStackBuilder$TaskStackBuilderImplBase -> android.support.v4.app.TaskStackBuilder$TaskStackBuilderImplBase:
    android.app.PendingIntent getPendingIntent(android.content.Context,android.content.Intent[],int,int,android.os.Bundle) -> getPendingIntent
android.support.v4.app.TaskStackBuilder$TaskStackBuilderImplHoneycomb -> android.support.v4.app.TaskStackBuilder$TaskStackBuilderImplHoneycomb:
    android.app.PendingIntent getPendingIntent(android.content.Context,android.content.Intent[],int,int,android.os.Bundle) -> getPendingIntent
android.support.v4.app.TaskStackBuilder$TaskStackBuilderImplJellybean -> android.support.v4.app.TaskStackBuilder$TaskStackBuilderImplJellybean:
    android.app.PendingIntent getPendingIntent(android.content.Context,android.content.Intent[],int,int,android.os.Bundle) -> getPendingIntent
android.support.v4.app.TaskStackBuilderHoneycomb -> android.support.v4.app.TaskStackBuilderHoneycomb:
    android.app.PendingIntent getActivitiesPendingIntent(android.content.Context,int,android.content.Intent[],int) -> getActivitiesPendingIntent
android.support.v4.app.TaskStackBuilderJellybean -> android.support.v4.app.TaskStackBuilderJellybean:
    android.app.PendingIntent getActivitiesPendingIntent(android.content.Context,int,android.content.Intent[],int,android.os.Bundle) -> getActivitiesPendingIntent
android.support.v4.app._HoloActivity -> android.support.v4.app._HoloActivity:
    java.lang.String CONFIG_KEY -> CONFIG_KEY
    android.content.Context mActionBarContext -> mActionBarContext
    android.support.v4.app._HoloActivity$Holo mConfig -> mConfig
    java.util.Map mContextMenuListeners -> mContextMenuListeners
    org.holoeverywhere.widget.WindowDecorView mDecorView -> mDecorView
    boolean mInited -> mInited
    int mLastThemeResourceId -> mLastThemeResourceId
    android.os.Handler mUserHandler -> mUserHandler
    android.support.v4.app.FragmentActivity extract(android.content.Context,boolean) -> extract
    void addContentView(android.view.View,android.view.ViewGroup$LayoutParams) -> addContentView
    android.support.v4.app._HoloActivity$Holo createConfig(android.os.Bundle) -> createConfig
    void forceInit(android.os.Bundle) -> forceInit
    android.support.v4.app._HoloActivity$Holo getConfig() -> getConfig
    android.support.v7.internal.view.menu.ContextMenuListener getContextMenuListener(android.view.View) -> getContextMenuListener
    org.holoeverywhere.preference.SharedPreferences getDefaultSharedPreferences() -> getDefaultSharedPreferences
    org.holoeverywhere.preference.SharedPreferences getDefaultSharedPreferences(org.holoeverywhere.HoloEverywhere$PreferenceImpl) -> getDefaultSharedPreferences
    int getLastThemeResourceId() -> getLastThemeResourceId
    org.holoeverywhere.LayoutInflater getLayoutInflater() -> getLayoutInflater
    org.holoeverywhere.preference.SharedPreferences getSharedPreferences(org.holoeverywhere.HoloEverywhere$PreferenceImpl,java.lang.String,int) -> getSharedPreferences
    org.holoeverywhere.preference.SharedPreferences getSharedPreferences(java.lang.String,int) -> getSharedPreferences
    android.content.Context getSupportActionBarContext() -> getSupportActionBarContext
    org.holoeverywhere.app.Application getSupportApplication() -> getSupportApplication
    java.lang.Object getSystemService(java.lang.String) -> getSystemService
    android.content.res.Resources$Theme getTheme() -> getTheme
    void setTheme(int) -> setTheme
    org.holoeverywhere.LayoutInflater getThemedLayoutInflater() -> getThemedLayoutInflater
    android.os.Handler getUserHandler() -> getUserHandler
    org.holoeverywhere.widget.WindowDecorView getWindowDecorView() -> getWindowDecorView
    boolean isDecorViewInited() -> isDecorViewInited
    boolean isInited() -> isInited
    void onCreate(android.os.Bundle) -> onCreate
    android.support.v4.app._HoloActivity$Holo onCreateConfig(android.os.Bundle) -> onCreateConfig
    void onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu$ContextMenuInfo) -> onCreateContextMenu
    void onDestroy() -> onDestroy
    void onInit(android.support.v4.app._HoloActivity$Holo,android.os.Bundle) -> onInit
    void onPostCreate(android.os.Bundle) -> onPostCreate
    void onPostInit(android.support.v4.app._HoloActivity$Holo,android.os.Bundle) -> onPostInit
    void onPreInit(android.support.v4.app._HoloActivity$Holo,android.os.Bundle) -> onPreInit
    void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    void onWindowFocusChanged(boolean) -> onWindowFocusChanged
    void rOnWindowFocusChanged(android.view.View,boolean) -> rOnWindowFocusChanged
    void registerForContextMenu(android.view.View) -> registerForContextMenu
    void registerForContextMenu(android.view.View,android.support.v7.internal.view.menu.ContextMenuListener) -> registerForContextMenu
    void requestDecorView() -> requestDecorView
    boolean requestDecorView(android.view.View,android.view.ViewGroup$LayoutParams,int) -> requestDecorView
    void requestWindowFeature(long) -> requestWindowFeature
    boolean supportRequestWindowFeature(int) -> supportRequestWindowFeature
    void setContentView(int) -> setContentView
    void onSupportContentChanged() -> onSupportContentChanged
    void setContentView(android.view.View) -> setContentView
    void setContentView(android.view.View,android.view.ViewGroup$LayoutParams) -> setContentView
    void setTheme(int,boolean) -> setTheme
    void startActivities(android.content.Intent[]) -> startActivities
    void startActivities(android.content.Intent[],android.os.Bundle) -> startActivities
    void startActivity(android.content.Intent) -> startActivity
    void startActivity(android.content.Intent,android.os.Bundle) -> startActivity
    void startActivityForResult(android.content.Intent,int) -> startActivityForResult
    void startActivityForResult(android.content.Intent,int,android.os.Bundle) -> startActivityForResult
    android.content.SharedPreferences superGetSharedPreferences(java.lang.String,int) -> superGetSharedPreferences
    java.lang.Object superGetSystemService(java.lang.String) -> superGetSystemService
    void superStartActivity(android.content.Intent,int,android.os.Bundle) -> superStartActivity
    void onContextMenuClosed(android.view.ContextMenu) -> onContextMenuClosed
    void unregisterForContextMenu(android.view.View) -> unregisterForContextMenu
    android.view.LayoutInflater getLayoutInflater() -> getLayoutInflater
    android.content.SharedPreferences getSharedPreferences(java.lang.String,int) -> getSharedPreferences
    org.holoeverywhere.widget.WindowDecorView access$100(android.support.v4.app._HoloActivity) -> access$100
    void access$201(android.support.v4.app._HoloActivity,android.view.View,android.view.ViewGroup$LayoutParams) -> access$201
android.support.v4.app._HoloActivity$1 -> android.support.v4.app._HoloActivity$1:
    android.view.ViewGroup$LayoutParams val$p -> val$p
    android.support.v4.app._HoloActivity this$0 -> this$0
    boolean action(org.holoeverywhere.addon.IAddonActivity) -> action
    void justPost() -> justPost
    boolean action(java.lang.Object) -> action
android.support.v4.app._HoloActivity$ActivityDecorView -> android.support.v4.app._HoloActivity$ActivityDecorView:
    android.support.v4.app._HoloActivity this$0 -> this$0
    boolean fitSystemWindows(android.graphics.Rect) -> fitSystemWindows
android.support.v4.app._HoloActivity$Holo -> android.support.v4.app._HoloActivity$Holo:
    android.os.Parcelable$Creator CREATOR -> CREATOR
    boolean ignoreApplicationInstanceCheck -> ignoreApplicationInstanceCheck
    boolean ignoreThemeCheck -> ignoreThemeCheck
    boolean allowMockApplicationInstance -> allowMockApplicationInstance
    org.holoeverywhere.util.SparseIntArray windowFeatures -> windowFeatures
    boolean mForbidRequestWindowFeature -> mForbidRequestWindowFeature
    android.support.v4.app._HoloActivity$Holo defaultConfig() -> defaultConfig
    int describeContents() -> describeContents
    void requestWindowFeature(int) -> requestWindowFeature
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    void requestWindowFeature(org.holoeverywhere.app.Activity) -> requestWindowFeature
    void access$000(android.support.v4.app._HoloActivity$Holo,org.holoeverywhere.app.Activity) -> access$000
    org.holoeverywhere.util.SparseIntArray access$400(android.support.v4.app._HoloActivity$Holo) -> access$400
android.support.v4.app._HoloActivity$Holo$1 -> android.support.v4.app._HoloActivity$Holo$1:
    android.support.v4.app._HoloActivity$Holo createFromParcel(android.os.Parcel) -> createFromParcel
    android.support.v4.app._HoloActivity$Holo[] newArray(int) -> newArray
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.app._HoloActivity$HoloThemeException -> android.support.v4.app._HoloActivity$HoloThemeException:
    long serialVersionUID -> serialVersionUID
android.support.v4.app._HoloActivity$OnWindowFocusChangeListener -> android.support.v4.app._HoloActivity$OnWindowFocusChangeListener:
    void onWindowFocusChanged(boolean) -> onWindowFocusChanged
android.support.v4.app._HoloFragment -> android.support.v4.app._HoloFragment:
    boolean mDetachChildFragments -> mDetachChildFragments
    org.holoeverywhere.app.Activity mActivity -> mActivity
    int getContainerId() -> getContainerId
    android.support.v7.internal.view.menu.ContextMenuListener getContextMenuListener(android.view.View) -> getContextMenuListener
    org.holoeverywhere.preference.SharedPreferences getDefaultSharedPreferences() -> getDefaultSharedPreferences
    org.holoeverywhere.preference.SharedPreferences getDefaultSharedPreferences(org.holoeverywhere.HoloEverywhere$PreferenceImpl) -> getDefaultSharedPreferences
    org.holoeverywhere.LayoutInflater getLayoutInflater() -> getLayoutInflater
    org.holoeverywhere.LayoutInflater getLayoutInflater(android.os.Bundle) -> getLayoutInflater
    android.view.MenuInflater getMenuInflater() -> getMenuInflater
    void onContextMenuClosed(android.view.ContextMenu) -> onContextMenuClosed
    org.holoeverywhere.preference.SharedPreferences getSharedPreferences(org.holoeverywhere.HoloEverywhere$PreferenceImpl,java.lang.String,int) -> getSharedPreferences
    org.holoeverywhere.preference.SharedPreferences getSharedPreferences(java.lang.String,int) -> getSharedPreferences
    android.support.v7.app.ActionBar getSupportActionBar() -> getSupportActionBar
    android.content.Context getSupportActionBarContext() -> getSupportActionBarContext
    org.holoeverywhere.app.Activity getSupportActivity() -> getSupportActivity
    org.holoeverywhere.app.Application getSupportApplication() -> getSupportApplication
    java.lang.Object getSystemService(java.lang.String) -> getSystemService
    boolean isDetachChildFragments() -> isDetachChildFragments
    void setDetachChildFragments(boolean) -> setDetachChildFragments
    void onAttach(org.holoeverywhere.app.Activity) -> onAttach
    void onAttach(android.app.Activity) -> onAttach
    void onDetach() -> onDetach
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    android.view.View onCreateView(org.holoeverywhere.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    void onDestroyView() -> onDestroyView
    void onInflate(org.holoeverywhere.app.Activity,android.util.AttributeSet,android.os.Bundle) -> onInflate
    void onInflate(android.app.Activity,android.util.AttributeSet,android.os.Bundle) -> onInflate
    void onViewCreated(android.view.View,android.os.Bundle) -> onViewCreated
    boolean openContextMenu(android.view.View) -> openContextMenu
    void registerForContextMenu(android.view.View) -> registerForContextMenu
    android.support.v7.view.ActionMode startSupportActionMode(android.support.v7.view.ActionMode$Callback) -> startSupportActionMode
    void unregisterForContextMenu(android.view.View) -> unregisterForContextMenu
    android.view.LayoutInflater getLayoutInflater(android.os.Bundle) -> getLayoutInflater
android.support.v4.app._HoloFragmentInflater -> android.support.v4.app._HoloFragmentInflater:
    void init() -> init
    android.view.View inflate(android.util.AttributeSet,android.view.View,android.support.v4.app.FragmentActivity,android.support.v4.app.Fragment) -> inflate
    android.view.View inflate(org.holoeverywhere.LayoutInflater,android.util.AttributeSet,android.view.View,android.support.v4.app.Fragment) -> inflate
    android.support.v4.app.FragmentManagerImpl obtainFragmentManager(android.support.v4.app.FragmentActivity,android.support.v4.app.Fragment) -> obtainFragmentManager
android.support.v4.app._HoloFragmentInflater$1 -> android.support.v4.app._HoloFragmentInflater$1:
    android.view.ViewGroup create(android.support.v4.app.Fragment,android.view.View) -> create
android.support.v4.content.AsyncTaskLoader -> android.support.v4.content.AsyncTaskLoader:
    java.lang.String TAG -> TAG
    boolean DEBUG -> DEBUG
    android.support.v4.content.AsyncTaskLoader$LoadTask mTask -> mTask
    android.support.v4.content.AsyncTaskLoader$LoadTask mCancellingTask -> mCancellingTask
    long mUpdateThrottle -> mUpdateThrottle
    long mLastLoadCompleteTime -> mLastLoadCompleteTime
    android.os.Handler mHandler -> mHandler
    void setUpdateThrottle(long) -> setUpdateThrottle
    void onForceLoad() -> onForceLoad
    boolean cancelLoad() -> cancelLoad
    void onCanceled(java.lang.Object) -> onCanceled
    void executePendingTask() -> executePendingTask
    void dispatchOnCancelled(android.support.v4.content.AsyncTaskLoader$LoadTask,java.lang.Object) -> dispatchOnCancelled
    void dispatchOnLoadComplete(android.support.v4.content.AsyncTaskLoader$LoadTask,java.lang.Object) -> dispatchOnLoadComplete
    java.lang.Object loadInBackground() -> loadInBackground
    java.lang.Object onLoadInBackground() -> onLoadInBackground
    void waitForLoader() -> waitForLoader
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
android.support.v4.content.AsyncTaskLoader$LoadTask -> android.support.v4.content.AsyncTaskLoader$LoadTask:
    java.lang.Object result -> result
    boolean waiting -> waiting
    java.util.concurrent.CountDownLatch done -> done
    android.support.v4.content.AsyncTaskLoader this$0 -> this$0
    java.lang.Object doInBackground(java.lang.Void[]) -> doInBackground
    void onPostExecute(java.lang.Object) -> onPostExecute
    void onCancelled() -> onCancelled
    void run() -> run
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
    java.util.concurrent.CountDownLatch access$000(android.support.v4.content.AsyncTaskLoader$LoadTask) -> access$000
android.support.v4.content.ContextCompat -> android.support.v4.content.ContextCompat:
    java.lang.String DIR_ANDROID -> DIR_ANDROID
    java.lang.String DIR_DATA -> DIR_DATA
    java.lang.String DIR_OBB -> DIR_OBB
    java.lang.String DIR_FILES -> DIR_FILES
    java.lang.String DIR_CACHE -> DIR_CACHE
    boolean startActivities(android.content.Context,android.content.Intent[]) -> startActivities
    boolean startActivities(android.content.Context,android.content.Intent[],android.os.Bundle) -> startActivities
    java.io.File[] getObbDirs(android.content.Context) -> getObbDirs
    java.io.File[] getExternalFilesDirs(android.content.Context,java.lang.String) -> getExternalFilesDirs
    java.io.File[] getExternalCacheDirs(android.content.Context) -> getExternalCacheDirs
    java.io.File buildPath(java.io.File,java.lang.String[]) -> buildPath
android.support.v4.content.ContextCompatFroyo -> android.support.v4.content.ContextCompatFroyo:
    java.io.File getExternalCacheDir(android.content.Context) -> getExternalCacheDir
    java.io.File getExternalFilesDir(android.content.Context,java.lang.String) -> getExternalFilesDir
android.support.v4.content.ContextCompatHoneycomb -> android.support.v4.content.ContextCompatHoneycomb:
    void startActivities(android.content.Context,android.content.Intent[]) -> startActivities
    java.io.File getObbDir(android.content.Context) -> getObbDir
android.support.v4.content.ContextCompatJellybean -> android.support.v4.content.ContextCompatJellybean:
    void startActivities(android.content.Context,android.content.Intent[],android.os.Bundle) -> startActivities
android.support.v4.content.ContextCompatKitKat -> android.support.v4.content.ContextCompatKitKat:
    java.io.File[] getExternalCacheDirs(android.content.Context) -> getExternalCacheDirs
    java.io.File[] getExternalFilesDirs(android.content.Context,java.lang.String) -> getExternalFilesDirs
    java.io.File[] getObbDirs(android.content.Context) -> getObbDirs
android.support.v4.content.CursorLoader -> android.support.v4.content.CursorLoader:
    android.support.v4.content.Loader$ForceLoadContentObserver mObserver -> mObserver
    android.net.Uri mUri -> mUri
    java.lang.String[] mProjection -> mProjection
    java.lang.String mSelection -> mSelection
    java.lang.String[] mSelectionArgs -> mSelectionArgs
    java.lang.String mSortOrder -> mSortOrder
    android.database.Cursor mCursor -> mCursor
    android.database.Cursor loadInBackground() -> loadInBackground
    void deliverResult(android.database.Cursor) -> deliverResult
    void onStartLoading() -> onStartLoading
    void onStopLoading() -> onStopLoading
    void onCanceled(android.database.Cursor) -> onCanceled
    void onReset() -> onReset
    android.net.Uri getUri() -> getUri
    void setUri(android.net.Uri) -> setUri
    java.lang.String[] getProjection() -> getProjection
    void setProjection(java.lang.String[]) -> setProjection
    java.lang.String getSelection() -> getSelection
    void setSelection(java.lang.String) -> setSelection
    java.lang.String[] getSelectionArgs() -> getSelectionArgs
    void setSelectionArgs(java.lang.String[]) -> setSelectionArgs
    java.lang.String getSortOrder() -> getSortOrder
    void setSortOrder(java.lang.String) -> setSortOrder
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
    java.lang.Object loadInBackground() -> loadInBackground
    void onCanceled(java.lang.Object) -> onCanceled
    void deliverResult(java.lang.Object) -> deliverResult
android.support.v4.content.FileProvider -> android.support.v4.content.FileProvider:
    java.lang.String[] COLUMNS -> COLUMNS
    java.lang.String META_DATA_FILE_PROVIDER_PATHS -> META_DATA_FILE_PROVIDER_PATHS
    java.lang.String TAG_ROOT_PATH -> TAG_ROOT_PATH
    java.lang.String TAG_FILES_PATH -> TAG_FILES_PATH
    java.lang.String TAG_CACHE_PATH -> TAG_CACHE_PATH
    java.lang.String TAG_EXTERNAL -> TAG_EXTERNAL
    java.lang.String ATTR_NAME -> ATTR_NAME
    java.lang.String ATTR_PATH -> ATTR_PATH
    java.io.File DEVICE_ROOT -> DEVICE_ROOT
    java.util.HashMap sCache -> sCache
    android.support.v4.content.FileProvider$PathStrategy mStrategy -> mStrategy
    boolean onCreate() -> onCreate
    void attachInfo(android.content.Context,android.content.pm.ProviderInfo) -> attachInfo
    android.net.Uri getUriForFile(android.content.Context,java.lang.String,java.io.File) -> getUriForFile
    android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String) -> query
    java.lang.String getType(android.net.Uri) -> getType
    android.net.Uri insert(android.net.Uri,android.content.ContentValues) -> insert
    int update(android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[]) -> update
    int delete(android.net.Uri,java.lang.String,java.lang.String[]) -> delete
    android.os.ParcelFileDescriptor openFile(android.net.Uri,java.lang.String) -> openFile
    android.support.v4.content.FileProvider$PathStrategy getPathStrategy(android.content.Context,java.lang.String) -> getPathStrategy
    android.support.v4.content.FileProvider$PathStrategy parsePathStrategy(android.content.Context,java.lang.String) -> parsePathStrategy
    int modeToMode(java.lang.String) -> modeToMode
    java.io.File buildPath(java.io.File,java.lang.String[]) -> buildPath
    java.lang.String[] copyOf(java.lang.String[],int) -> copyOf
    java.lang.Object[] copyOf(java.lang.Object[],int) -> copyOf
android.support.v4.content.FileProvider$PathStrategy -> android.support.v4.content.FileProvider$PathStrategy:
    android.net.Uri getUriForFile(java.io.File) -> getUriForFile
    java.io.File getFileForUri(android.net.Uri) -> getFileForUri
android.support.v4.content.FileProvider$SimplePathStrategy -> android.support.v4.content.FileProvider$SimplePathStrategy:
    java.lang.String mAuthority -> mAuthority
    java.util.HashMap mRoots -> mRoots
    void addRoot(java.lang.String,java.io.File) -> addRoot
    android.net.Uri getUriForFile(java.io.File) -> getUriForFile
    java.io.File getFileForUri(android.net.Uri) -> getFileForUri
android.support.v4.content.IntentCompat -> android.support.v4.content.IntentCompat:
    android.support.v4.content.IntentCompat$IntentCompatImpl IMPL -> IMPL
    java.lang.String ACTION_EXTERNAL_APPLICATIONS_AVAILABLE -> ACTION_EXTERNAL_APPLICATIONS_AVAILABLE
    java.lang.String ACTION_EXTERNAL_APPLICATIONS_UNAVAILABLE -> ACTION_EXTERNAL_APPLICATIONS_UNAVAILABLE
    java.lang.String EXTRA_CHANGED_PACKAGE_LIST -> EXTRA_CHANGED_PACKAGE_LIST
    java.lang.String EXTRA_CHANGED_UID_LIST -> EXTRA_CHANGED_UID_LIST
    java.lang.String EXTRA_HTML_TEXT -> EXTRA_HTML_TEXT
    int FLAG_ACTIVITY_TASK_ON_HOME -> FLAG_ACTIVITY_TASK_ON_HOME
    int FLAG_ACTIVITY_CLEAR_TASK -> FLAG_ACTIVITY_CLEAR_TASK
    android.content.Intent makeMainActivity(android.content.ComponentName) -> makeMainActivity
    android.content.Intent makeMainSelectorActivity(java.lang.String,java.lang.String) -> makeMainSelectorActivity
    android.content.Intent makeRestartActivityTask(android.content.ComponentName) -> makeRestartActivityTask
android.support.v4.content.IntentCompat$IntentCompatImpl -> android.support.v4.content.IntentCompat$IntentCompatImpl:
    android.content.Intent makeMainActivity(android.content.ComponentName) -> makeMainActivity
    android.content.Intent makeMainSelectorActivity(java.lang.String,java.lang.String) -> makeMainSelectorActivity
    android.content.Intent makeRestartActivityTask(android.content.ComponentName) -> makeRestartActivityTask
android.support.v4.content.IntentCompat$IntentCompatImplBase -> android.support.v4.content.IntentCompat$IntentCompatImplBase:
    android.content.Intent makeMainActivity(android.content.ComponentName) -> makeMainActivity
    android.content.Intent makeMainSelectorActivity(java.lang.String,java.lang.String) -> makeMainSelectorActivity
    android.content.Intent makeRestartActivityTask(android.content.ComponentName) -> makeRestartActivityTask
android.support.v4.content.IntentCompat$IntentCompatImplHC -> android.support.v4.content.IntentCompat$IntentCompatImplHC:
    android.content.Intent makeMainActivity(android.content.ComponentName) -> makeMainActivity
    android.content.Intent makeRestartActivityTask(android.content.ComponentName) -> makeRestartActivityTask
android.support.v4.content.IntentCompat$IntentCompatImplIcsMr1 -> android.support.v4.content.IntentCompat$IntentCompatImplIcsMr1:
    android.content.Intent makeMainSelectorActivity(java.lang.String,java.lang.String) -> makeMainSelectorActivity
android.support.v4.content.IntentCompatHoneycomb -> android.support.v4.content.IntentCompatHoneycomb:
    android.content.Intent makeMainActivity(android.content.ComponentName) -> makeMainActivity
    android.content.Intent makeRestartActivityTask(android.content.ComponentName) -> makeRestartActivityTask
android.support.v4.content.IntentCompatIcsMr1 -> android.support.v4.content.IntentCompatIcsMr1:
    android.content.Intent makeMainSelectorActivity(java.lang.String,java.lang.String) -> makeMainSelectorActivity
android.support.v4.content.Loader -> android.support.v4.content.Loader:
    int mId -> mId
    android.support.v4.content.Loader$OnLoadCompleteListener mListener -> mListener
    android.content.Context mContext -> mContext
    boolean mStarted -> mStarted
    boolean mAbandoned -> mAbandoned
    boolean mReset -> mReset
    boolean mContentChanged -> mContentChanged
    boolean mProcessingChange -> mProcessingChange
    void deliverResult(java.lang.Object) -> deliverResult
    android.content.Context getContext() -> getContext
    int getId() -> getId
    void registerListener(int,android.support.v4.content.Loader$OnLoadCompleteListener) -> registerListener
    void unregisterListener(android.support.v4.content.Loader$OnLoadCompleteListener) -> unregisterListener
    boolean isStarted() -> isStarted
    boolean isAbandoned() -> isAbandoned
    boolean isReset() -> isReset
    void startLoading() -> startLoading
    void onStartLoading() -> onStartLoading
    void forceLoad() -> forceLoad
    void onForceLoad() -> onForceLoad
    void stopLoading() -> stopLoading
    void onStopLoading() -> onStopLoading
    void abandon() -> abandon
    void onAbandon() -> onAbandon
    void reset() -> reset
    void onReset() -> onReset
    boolean takeContentChanged() -> takeContentChanged
    void commitContentChanged() -> commitContentChanged
    void rollbackContentChanged() -> rollbackContentChanged
    void onContentChanged() -> onContentChanged
    java.lang.String dataToString(java.lang.Object) -> dataToString
    java.lang.String toString() -> toString
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
android.support.v4.content.Loader$ForceLoadContentObserver -> android.support.v4.content.Loader$ForceLoadContentObserver:
    android.support.v4.content.Loader this$0 -> this$0
    boolean deliverSelfNotifications() -> deliverSelfNotifications
    void onChange(boolean) -> onChange
android.support.v4.content.Loader$OnLoadCompleteListener -> android.support.v4.content.Loader$OnLoadCompleteListener:
    void onLoadComplete(android.support.v4.content.Loader,java.lang.Object) -> onLoadComplete
android.support.v4.content.LocalBroadcastManager -> android.support.v4.content.LocalBroadcastManager:
    java.lang.String TAG -> TAG
    boolean DEBUG -> DEBUG
    android.content.Context mAppContext -> mAppContext
    java.util.HashMap mReceivers -> mReceivers
    java.util.HashMap mActions -> mActions
    java.util.ArrayList mPendingBroadcasts -> mPendingBroadcasts
    int MSG_EXEC_PENDING_BROADCASTS -> MSG_EXEC_PENDING_BROADCASTS
    android.os.Handler mHandler -> mHandler
    java.lang.Object mLock -> mLock
    android.support.v4.content.LocalBroadcastManager mInstance -> mInstance
    android.support.v4.content.LocalBroadcastManager getInstance(android.content.Context) -> getInstance
    void registerReceiver(android.content.BroadcastReceiver,android.content.IntentFilter) -> registerReceiver
    void unregisterReceiver(android.content.BroadcastReceiver) -> unregisterReceiver
    boolean sendBroadcast(android.content.Intent) -> sendBroadcast
    void sendBroadcastSync(android.content.Intent) -> sendBroadcastSync
    void executePendingBroadcasts() -> executePendingBroadcasts
    void access$000(android.support.v4.content.LocalBroadcastManager) -> access$000
android.support.v4.content.LocalBroadcastManager$1 -> android.support.v4.content.LocalBroadcastManager$1:
    android.support.v4.content.LocalBroadcastManager this$0 -> this$0
    void handleMessage(android.os.Message) -> handleMessage
android.support.v4.content.LocalBroadcastManager$BroadcastRecord -> android.support.v4.content.LocalBroadcastManager$BroadcastRecord:
    android.content.Intent intent -> intent
    java.util.ArrayList receivers -> receivers
android.support.v4.content.LocalBroadcastManager$ReceiverRecord -> android.support.v4.content.LocalBroadcastManager$ReceiverRecord:
    android.content.IntentFilter filter -> filter
    android.content.BroadcastReceiver receiver -> receiver
    boolean broadcasting -> broadcasting
    java.lang.String toString() -> toString
android.support.v4.content.ModernAsyncTask -> android.support.v4.content.ModernAsyncTask:
    java.lang.String LOG_TAG -> LOG_TAG
    int CORE_POOL_SIZE -> CORE_POOL_SIZE
    int MAXIMUM_POOL_SIZE -> MAXIMUM_POOL_SIZE
    int KEEP_ALIVE -> KEEP_ALIVE
    java.util.concurrent.ThreadFactory sThreadFactory -> sThreadFactory
    java.util.concurrent.BlockingQueue sPoolWorkQueue -> sPoolWorkQueue
    java.util.concurrent.Executor THREAD_POOL_EXECUTOR -> THREAD_POOL_EXECUTOR
    int MESSAGE_POST_RESULT -> MESSAGE_POST_RESULT
    int MESSAGE_POST_PROGRESS -> MESSAGE_POST_PROGRESS
    android.support.v4.content.ModernAsyncTask$InternalHandler sHandler -> sHandler
    java.util.concurrent.Executor sDefaultExecutor -> sDefaultExecutor
    android.support.v4.content.ModernAsyncTask$WorkerRunnable mWorker -> mWorker
    java.util.concurrent.FutureTask mFuture -> mFuture
    android.support.v4.content.ModernAsyncTask$Status mStatus -> mStatus
    java.util.concurrent.atomic.AtomicBoolean mTaskInvoked -> mTaskInvoked
    void init() -> init
    void setDefaultExecutor(java.util.concurrent.Executor) -> setDefaultExecutor
    void postResultIfNotInvoked(java.lang.Object) -> postResultIfNotInvoked
    java.lang.Object postResult(java.lang.Object) -> postResult
    android.support.v4.content.ModernAsyncTask$Status getStatus() -> getStatus
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
    void onPreExecute() -> onPreExecute
    void onPostExecute(java.lang.Object) -> onPostExecute
    void onProgressUpdate(java.lang.Object[]) -> onProgressUpdate
    void onCancelled(java.lang.Object) -> onCancelled
    void onCancelled() -> onCancelled
    boolean isCancelled() -> isCancelled
    boolean cancel(boolean) -> cancel
    java.lang.Object get() -> get
    java.lang.Object get(long,java.util.concurrent.TimeUnit) -> get
    android.support.v4.content.ModernAsyncTask execute(java.lang.Object[]) -> execute
    android.support.v4.content.ModernAsyncTask executeOnExecutor(java.util.concurrent.Executor,java.lang.Object[]) -> executeOnExecutor
    void execute(java.lang.Runnable) -> execute
    void publishProgress(java.lang.Object[]) -> publishProgress
    void finish(java.lang.Object) -> finish
    java.util.concurrent.atomic.AtomicBoolean access$200(android.support.v4.content.ModernAsyncTask) -> access$200
    java.lang.Object access$300(android.support.v4.content.ModernAsyncTask,java.lang.Object) -> access$300
    void access$400(android.support.v4.content.ModernAsyncTask,java.lang.Object) -> access$400
    void access$500(android.support.v4.content.ModernAsyncTask,java.lang.Object) -> access$500
android.support.v4.content.ModernAsyncTask$1 -> android.support.v4.content.ModernAsyncTask$1:
    java.util.concurrent.atomic.AtomicInteger mCount -> mCount
    java.lang.Thread newThread(java.lang.Runnable) -> newThread
android.support.v4.content.ModernAsyncTask$2 -> android.support.v4.content.ModernAsyncTask$2:
    android.support.v4.content.ModernAsyncTask this$0 -> this$0
    java.lang.Object call() -> call
android.support.v4.content.ModernAsyncTask$3 -> android.support.v4.content.ModernAsyncTask$3:
    android.support.v4.content.ModernAsyncTask this$0 -> this$0
    void done() -> done
android.support.v4.content.ModernAsyncTask$4 -> android.support.v4.content.ModernAsyncTask$4:
    int[] $SwitchMap$android$support$v4$content$ModernAsyncTask$Status -> $SwitchMap$android$support$v4$content$ModernAsyncTask$Status
android.support.v4.content.ModernAsyncTask$AsyncTaskResult -> android.support.v4.content.ModernAsyncTask$AsyncTaskResult:
    android.support.v4.content.ModernAsyncTask mTask -> mTask
    java.lang.Object[] mData -> mData
android.support.v4.content.ModernAsyncTask$InternalHandler -> android.support.v4.content.ModernAsyncTask$InternalHandler:
    void handleMessage(android.os.Message) -> handleMessage
android.support.v4.content.ModernAsyncTask$Status -> android.support.v4.content.ModernAsyncTask$Status:
    android.support.v4.content.ModernAsyncTask$Status PENDING -> PENDING
    android.support.v4.content.ModernAsyncTask$Status RUNNING -> RUNNING
    android.support.v4.content.ModernAsyncTask$Status FINISHED -> FINISHED
    android.support.v4.content.ModernAsyncTask$Status[] $VALUES -> $VALUES
    android.support.v4.content.ModernAsyncTask$Status[] values() -> values
    android.support.v4.content.ModernAsyncTask$Status valueOf(java.lang.String) -> valueOf
android.support.v4.content.ModernAsyncTask$WorkerRunnable -> android.support.v4.content.ModernAsyncTask$WorkerRunnable:
    java.lang.Object[] mParams -> mParams
android.support.v4.content.WakefulBroadcastReceiver -> android.support.v4.content.WakefulBroadcastReceiver:
    java.lang.String EXTRA_WAKE_LOCK_ID -> EXTRA_WAKE_LOCK_ID
    android.util.SparseArray mActiveWakeLocks -> mActiveWakeLocks
    int mNextId -> mNextId
    android.content.ComponentName startWakefulService(android.content.Context,android.content.Intent) -> startWakefulService
    boolean completeWakefulIntent(android.content.Intent) -> completeWakefulIntent
android.support.v4.content.pm.ActivityInfoCompat -> android.support.v4.content.pm.ActivityInfoCompat:
    int CONFIG_UI_MODE -> CONFIG_UI_MODE
android.support.v4.database.DatabaseUtilsCompat -> android.support.v4.database.DatabaseUtilsCompat:
    java.lang.String concatenateWhere(java.lang.String,java.lang.String) -> concatenateWhere
    java.lang.String[] appendSelectionArgs(java.lang.String[],java.lang.String[]) -> appendSelectionArgs
android.support.v4.graphics.drawable.DrawableCompat -> android.support.v4.graphics.drawable.DrawableCompat:
    android.support.v4.graphics.drawable.DrawableCompat$DrawableImpl IMPL -> IMPL
    void jumpToCurrentState(android.graphics.drawable.Drawable) -> jumpToCurrentState
    void setAutoMirrored(android.graphics.drawable.Drawable,boolean) -> setAutoMirrored
    boolean isAutoMirrored(android.graphics.drawable.Drawable) -> isAutoMirrored
android.support.v4.graphics.drawable.DrawableCompat$BaseDrawableImpl -> android.support.v4.graphics.drawable.DrawableCompat$BaseDrawableImpl:
    void jumpToCurrentState(android.graphics.drawable.Drawable) -> jumpToCurrentState
    void setAutoMirrored(android.graphics.drawable.Drawable,boolean) -> setAutoMirrored
    boolean isAutoMirrored(android.graphics.drawable.Drawable) -> isAutoMirrored
android.support.v4.graphics.drawable.DrawableCompat$DrawableImpl -> android.support.v4.graphics.drawable.DrawableCompat$DrawableImpl:
    void jumpToCurrentState(android.graphics.drawable.Drawable) -> jumpToCurrentState
    void setAutoMirrored(android.graphics.drawable.Drawable,boolean) -> setAutoMirrored
    boolean isAutoMirrored(android.graphics.drawable.Drawable) -> isAutoMirrored
android.support.v4.graphics.drawable.DrawableCompat$HoneycombDrawableImpl -> android.support.v4.graphics.drawable.DrawableCompat$HoneycombDrawableImpl:
    void jumpToCurrentState(android.graphics.drawable.Drawable) -> jumpToCurrentState
android.support.v4.graphics.drawable.DrawableCompat$KitKatDrawableImpl -> android.support.v4.graphics.drawable.DrawableCompat$KitKatDrawableImpl:
    void setAutoMirrored(android.graphics.drawable.Drawable,boolean) -> setAutoMirrored
    boolean isAutoMirrored(android.graphics.drawable.Drawable) -> isAutoMirrored
android.support.v4.graphics.drawable.DrawableCompatHoneycomb -> android.support.v4.graphics.drawable.DrawableCompatHoneycomb:
    void jumpToCurrentState(android.graphics.drawable.Drawable) -> jumpToCurrentState
android.support.v4.graphics.drawable.DrawableCompatKitKat -> android.support.v4.graphics.drawable.DrawableCompatKitKat:
    void setAutoMirrored(android.graphics.drawable.Drawable,boolean) -> setAutoMirrored
    boolean isAutoMirrored(android.graphics.drawable.Drawable) -> isAutoMirrored
android.support.v4.hardware.display.DisplayManagerCompat -> android.support.v4.hardware.display.DisplayManagerCompat:
    java.util.WeakHashMap sInstances -> sInstances
    java.lang.String DISPLAY_CATEGORY_PRESENTATION -> DISPLAY_CATEGORY_PRESENTATION
    android.support.v4.hardware.display.DisplayManagerCompat getInstance(android.content.Context) -> getInstance
    android.view.Display getDisplay(int) -> getDisplay
    android.view.Display[] getDisplays() -> getDisplays
    android.view.Display[] getDisplays(java.lang.String) -> getDisplays
android.support.v4.hardware.display.DisplayManagerCompat$JellybeanMr1Impl -> android.support.v4.hardware.display.DisplayManagerCompat$JellybeanMr1Impl:
    java.lang.Object mDisplayManagerObj -> mDisplayManagerObj
    android.view.Display getDisplay(int) -> getDisplay
    android.view.Display[] getDisplays() -> getDisplays
    android.view.Display[] getDisplays(java.lang.String) -> getDisplays
android.support.v4.hardware.display.DisplayManagerCompat$LegacyImpl -> android.support.v4.hardware.display.DisplayManagerCompat$LegacyImpl:
    android.view.WindowManager mWindowManager -> mWindowManager
    android.view.Display getDisplay(int) -> getDisplay
    android.view.Display[] getDisplays() -> getDisplays
    android.view.Display[] getDisplays(java.lang.String) -> getDisplays
android.support.v4.hardware.display.DisplayManagerJellybeanMr1 -> android.support.v4.hardware.display.DisplayManagerJellybeanMr1:
    java.lang.Object getDisplayManager(android.content.Context) -> getDisplayManager
    android.view.Display getDisplay(java.lang.Object,int) -> getDisplay
    android.view.Display[] getDisplays(java.lang.Object) -> getDisplays
    android.view.Display[] getDisplays(java.lang.Object,java.lang.String) -> getDisplays
android.support.v4.internal.view.SupportContextMenu -> android.support.v4.internal.view.SupportContextMenu:
    android.support.v4.internal.view.SupportContextMenu setHeaderTitle(int) -> setHeaderTitle
    android.support.v4.internal.view.SupportContextMenu setHeaderTitle(java.lang.CharSequence) -> setHeaderTitle
    android.support.v4.internal.view.SupportContextMenu setHeaderIcon(int) -> setHeaderIcon
    android.support.v4.internal.view.SupportContextMenu setHeaderIcon(android.graphics.drawable.Drawable) -> setHeaderIcon
    android.support.v4.internal.view.SupportContextMenu setHeaderView(android.view.View) -> setHeaderView
    void clearHeader() -> clearHeader
android.support.v4.internal.view.SupportMenu -> android.support.v4.internal.view.SupportMenu:
    int USER_MASK -> USER_MASK
    int USER_SHIFT -> USER_SHIFT
    int CATEGORY_MASK -> CATEGORY_MASK
    int CATEGORY_SHIFT -> CATEGORY_SHIFT
android.support.v4.internal.view.SupportMenuItem -> android.support.v4.internal.view.SupportMenuItem:
    int SHOW_AS_ACTION_NEVER -> SHOW_AS_ACTION_NEVER
    int SHOW_AS_ACTION_IF_ROOM -> SHOW_AS_ACTION_IF_ROOM
    int SHOW_AS_ACTION_ALWAYS -> SHOW_AS_ACTION_ALWAYS
    int SHOW_AS_ACTION_WITH_TEXT -> SHOW_AS_ACTION_WITH_TEXT
    int SHOW_AS_ACTION_COLLAPSE_ACTION_VIEW -> SHOW_AS_ACTION_COLLAPSE_ACTION_VIEW
    void setShowAsAction(int) -> setShowAsAction
    android.view.MenuItem setShowAsActionFlags(int) -> setShowAsActionFlags
    android.view.MenuItem setActionView(android.view.View) -> setActionView
    android.view.MenuItem setActionView(int) -> setActionView
    android.view.View getActionView() -> getActionView
    android.support.v4.internal.view.SupportMenuItem setSupportActionProvider(android.support.v4.view.ActionProvider) -> setSupportActionProvider
    android.support.v4.view.ActionProvider getSupportActionProvider() -> getSupportActionProvider
    boolean expandActionView() -> expandActionView
    boolean collapseActionView() -> collapseActionView
    boolean isActionViewExpanded() -> isActionViewExpanded
    android.support.v4.internal.view.SupportMenuItem setSupportOnActionExpandListener(android.support.v4.view.MenuItemCompat$OnActionExpandListener) -> setSupportOnActionExpandListener
android.support.v4.internal.view.SupportSubMenu -> android.support.v4.internal.view.SupportSubMenu:
android.support.v4.media.TransportController -> android.support.v4.media.TransportController:
    void registerStateListener(android.support.v4.media.TransportStateListener) -> registerStateListener
    void unregisterStateListener(android.support.v4.media.TransportStateListener) -> unregisterStateListener
    void startPlaying() -> startPlaying
    void pausePlaying() -> pausePlaying
    void stopPlaying() -> stopPlaying
    long getDuration() -> getDuration
    long getCurrentPosition() -> getCurrentPosition
    void seekTo(long) -> seekTo
    boolean isPlaying() -> isPlaying
    int getBufferPercentage() -> getBufferPercentage
    int getTransportControlFlags() -> getTransportControlFlags
android.support.v4.media.TransportMediator -> android.support.v4.media.TransportMediator:
    android.content.Context mContext -> mContext
    android.support.v4.media.TransportPerformer mCallbacks -> mCallbacks
    android.media.AudioManager mAudioManager -> mAudioManager
    android.view.View mView -> mView
    java.lang.Object mDispatcherState -> mDispatcherState
    android.support.v4.media.TransportMediatorJellybeanMR2 mController -> mController
    java.util.ArrayList mListeners -> mListeners
    android.support.v4.media.TransportMediatorCallback mTransportKeyCallback -> mTransportKeyCallback
    int KEYCODE_MEDIA_PLAY -> KEYCODE_MEDIA_PLAY
    int KEYCODE_MEDIA_PAUSE -> KEYCODE_MEDIA_PAUSE
    int KEYCODE_MEDIA_RECORD -> KEYCODE_MEDIA_RECORD
    int FLAG_KEY_MEDIA_PREVIOUS -> FLAG_KEY_MEDIA_PREVIOUS
    int FLAG_KEY_MEDIA_REWIND -> FLAG_KEY_MEDIA_REWIND
    int FLAG_KEY_MEDIA_PLAY -> FLAG_KEY_MEDIA_PLAY
    int FLAG_KEY_MEDIA_PLAY_PAUSE -> FLAG_KEY_MEDIA_PLAY_PAUSE
    int FLAG_KEY_MEDIA_PAUSE -> FLAG_KEY_MEDIA_PAUSE
    int FLAG_KEY_MEDIA_STOP -> FLAG_KEY_MEDIA_STOP
    int FLAG_KEY_MEDIA_FAST_FORWARD -> FLAG_KEY_MEDIA_FAST_FORWARD
    int FLAG_KEY_MEDIA_NEXT -> FLAG_KEY_MEDIA_NEXT
    android.view.KeyEvent$Callback mKeyEventCallback -> mKeyEventCallback
    boolean isMediaKey(int) -> isMediaKey
    java.lang.Object getRemoteControlClient() -> getRemoteControlClient
    boolean dispatchKeyEvent(android.view.KeyEvent) -> dispatchKeyEvent
    void registerStateListener(android.support.v4.media.TransportStateListener) -> registerStateListener
    void unregisterStateListener(android.support.v4.media.TransportStateListener) -> unregisterStateListener
    android.support.v4.media.TransportStateListener[] getListeners() -> getListeners
    void reportPlayingChanged() -> reportPlayingChanged
    void reportTransportControlsChanged() -> reportTransportControlsChanged
    void pushControllerState() -> pushControllerState
    void refreshState() -> refreshState
    void startPlaying() -> startPlaying
    void pausePlaying() -> pausePlaying
    void stopPlaying() -> stopPlaying
    long getDuration() -> getDuration
    long getCurrentPosition() -> getCurrentPosition
    void seekTo(long) -> seekTo
    boolean isPlaying() -> isPlaying
    int getBufferPercentage() -> getBufferPercentage
    int getTransportControlFlags() -> getTransportControlFlags
    void destroy() -> destroy
android.support.v4.media.TransportMediator$1 -> android.support.v4.media.TransportMediator$1:
    android.support.v4.media.TransportMediator this$0 -> this$0
    void handleKey(android.view.KeyEvent) -> handleKey
    void handleAudioFocusChange(int) -> handleAudioFocusChange
    long getPlaybackPosition() -> getPlaybackPosition
    void playbackPositionUpdate(long) -> playbackPositionUpdate
android.support.v4.media.TransportMediator$2 -> android.support.v4.media.TransportMediator$2:
    android.support.v4.media.TransportMediator this$0 -> this$0
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    boolean onKeyLongPress(int,android.view.KeyEvent) -> onKeyLongPress
    boolean onKeyUp(int,android.view.KeyEvent) -> onKeyUp
    boolean onKeyMultiple(int,int,android.view.KeyEvent) -> onKeyMultiple
android.support.v4.media.TransportMediatorCallback -> android.support.v4.media.TransportMediatorCallback:
    void handleKey(android.view.KeyEvent) -> handleKey
    void handleAudioFocusChange(int) -> handleAudioFocusChange
    long getPlaybackPosition() -> getPlaybackPosition
    void playbackPositionUpdate(long) -> playbackPositionUpdate
android.support.v4.media.TransportMediatorJellybeanMR2 -> android.support.v4.media.TransportMediatorJellybeanMR2:
    android.content.Context mContext -> mContext
    android.media.AudioManager mAudioManager -> mAudioManager
    android.view.View mTargetView -> mTargetView
    android.support.v4.media.TransportMediatorCallback mTransportCallback -> mTransportCallback
    java.lang.String mReceiverAction -> mReceiverAction
    android.content.IntentFilter mReceiverFilter -> mReceiverFilter
    android.content.Intent mIntent -> mIntent
    android.view.ViewTreeObserver$OnWindowAttachListener mWindowAttachListener -> mWindowAttachListener
    android.view.ViewTreeObserver$OnWindowFocusChangeListener mWindowFocusListener -> mWindowFocusListener
    android.content.BroadcastReceiver mMediaButtonReceiver -> mMediaButtonReceiver
    android.media.AudioManager$OnAudioFocusChangeListener mAudioFocusChangeListener -> mAudioFocusChangeListener
    android.app.PendingIntent mPendingIntent -> mPendingIntent
    android.media.RemoteControlClient mRemoteControl -> mRemoteControl
    boolean mFocused -> mFocused
    int mPlayState -> mPlayState
    boolean mAudioFocused -> mAudioFocused
    java.lang.Object getRemoteControlClient() -> getRemoteControlClient
    void destroy() -> destroy
    void windowAttached() -> windowAttached
    void gainFocus() -> gainFocus
    void takeAudioFocus() -> takeAudioFocus
    void startPlaying() -> startPlaying
    long onGetPlaybackPosition() -> onGetPlaybackPosition
    void onPlaybackPositionUpdate(long) -> onPlaybackPositionUpdate
    void refreshState(boolean,long,int) -> refreshState
    void pausePlaying() -> pausePlaying
    void stopPlaying() -> stopPlaying
    void dropAudioFocus() -> dropAudioFocus
    void loseFocus() -> loseFocus
    void windowDetached() -> windowDetached
android.support.v4.media.TransportMediatorJellybeanMR2$1 -> android.support.v4.media.TransportMediatorJellybeanMR2$1:
    android.support.v4.media.TransportMediatorJellybeanMR2 this$0 -> this$0
    void onWindowAttached() -> onWindowAttached
    void onWindowDetached() -> onWindowDetached
android.support.v4.media.TransportMediatorJellybeanMR2$2 -> android.support.v4.media.TransportMediatorJellybeanMR2$2:
    android.support.v4.media.TransportMediatorJellybeanMR2 this$0 -> this$0
    void onWindowFocusChanged(boolean) -> onWindowFocusChanged
android.support.v4.media.TransportMediatorJellybeanMR2$3 -> android.support.v4.media.TransportMediatorJellybeanMR2$3:
    android.support.v4.media.TransportMediatorJellybeanMR2 this$0 -> this$0
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
android.support.v4.media.TransportMediatorJellybeanMR2$4 -> android.support.v4.media.TransportMediatorJellybeanMR2$4:
    android.support.v4.media.TransportMediatorJellybeanMR2 this$0 -> this$0
    void onAudioFocusChange(int) -> onAudioFocusChange
android.support.v4.media.TransportPerformer -> android.support.v4.media.TransportPerformer:
    int AUDIOFOCUS_GAIN -> AUDIOFOCUS_GAIN
    int AUDIOFOCUS_GAIN_TRANSIENT -> AUDIOFOCUS_GAIN_TRANSIENT
    int AUDIOFOCUS_GAIN_TRANSIENT_MAY_DUCK -> AUDIOFOCUS_GAIN_TRANSIENT_MAY_DUCK
    int AUDIOFOCUS_LOSS -> AUDIOFOCUS_LOSS
    int AUDIOFOCUS_LOSS_TRANSIENT -> AUDIOFOCUS_LOSS_TRANSIENT
    int AUDIOFOCUS_LOSS_TRANSIENT_CAN_DUCK -> AUDIOFOCUS_LOSS_TRANSIENT_CAN_DUCK
    void onStart() -> onStart
    void onPause() -> onPause
    void onStop() -> onStop
    long onGetDuration() -> onGetDuration
    long onGetCurrentPosition() -> onGetCurrentPosition
    void onSeekTo(long) -> onSeekTo
    boolean onIsPlaying() -> onIsPlaying
    int onGetBufferPercentage() -> onGetBufferPercentage
    int onGetTransportControlFlags() -> onGetTransportControlFlags
    boolean onMediaButtonDown(int,android.view.KeyEvent) -> onMediaButtonDown
    boolean onMediaButtonUp(int,android.view.KeyEvent) -> onMediaButtonUp
    void onAudioFocusChange(int) -> onAudioFocusChange
android.support.v4.media.TransportStateListener -> android.support.v4.media.TransportStateListener:
    void onPlayingChanged(android.support.v4.media.TransportController) -> onPlayingChanged
    void onTransportControlsChanged(android.support.v4.media.TransportController) -> onTransportControlsChanged
android.support.v4.net.ConnectivityManagerCompat -> android.support.v4.net.ConnectivityManagerCompat:
    android.support.v4.net.ConnectivityManagerCompat$ConnectivityManagerCompatImpl IMPL -> IMPL
    boolean isActiveNetworkMetered(android.net.ConnectivityManager) -> isActiveNetworkMetered
    android.net.NetworkInfo getNetworkInfoFromBroadcast(android.net.ConnectivityManager,android.content.Intent) -> getNetworkInfoFromBroadcast
android.support.v4.net.ConnectivityManagerCompat$BaseConnectivityManagerCompatImpl -> android.support.v4.net.ConnectivityManagerCompat$BaseConnectivityManagerCompatImpl:
    boolean isActiveNetworkMetered(android.net.ConnectivityManager) -> isActiveNetworkMetered
android.support.v4.net.ConnectivityManagerCompat$ConnectivityManagerCompatImpl -> android.support.v4.net.ConnectivityManagerCompat$ConnectivityManagerCompatImpl:
    boolean isActiveNetworkMetered(android.net.ConnectivityManager) -> isActiveNetworkMetered
android.support.v4.net.ConnectivityManagerCompat$GingerbreadConnectivityManagerCompatImpl -> android.support.v4.net.ConnectivityManagerCompat$GingerbreadConnectivityManagerCompatImpl:
    boolean isActiveNetworkMetered(android.net.ConnectivityManager) -> isActiveNetworkMetered
android.support.v4.net.ConnectivityManagerCompat$HoneycombMR2ConnectivityManagerCompatImpl -> android.support.v4.net.ConnectivityManagerCompat$HoneycombMR2ConnectivityManagerCompatImpl:
    boolean isActiveNetworkMetered(android.net.ConnectivityManager) -> isActiveNetworkMetered
android.support.v4.net.ConnectivityManagerCompat$JellyBeanConnectivityManagerCompatImpl -> android.support.v4.net.ConnectivityManagerCompat$JellyBeanConnectivityManagerCompatImpl:
    boolean isActiveNetworkMetered(android.net.ConnectivityManager) -> isActiveNetworkMetered
android.support.v4.net.ConnectivityManagerCompatGingerbread -> android.support.v4.net.ConnectivityManagerCompatGingerbread:
    boolean isActiveNetworkMetered(android.net.ConnectivityManager) -> isActiveNetworkMetered
android.support.v4.net.ConnectivityManagerCompatHoneycombMR2 -> android.support.v4.net.ConnectivityManagerCompatHoneycombMR2:
    boolean isActiveNetworkMetered(android.net.ConnectivityManager) -> isActiveNetworkMetered
android.support.v4.net.ConnectivityManagerCompatJellyBean -> android.support.v4.net.ConnectivityManagerCompatJellyBean:
    boolean isActiveNetworkMetered(android.net.ConnectivityManager) -> isActiveNetworkMetered
android.support.v4.net.TrafficStatsCompat -> android.support.v4.net.TrafficStatsCompat:
    android.support.v4.net.TrafficStatsCompat$TrafficStatsCompatImpl IMPL -> IMPL
    void clearThreadStatsTag() -> clearThreadStatsTag
    int getThreadStatsTag() -> getThreadStatsTag
    void incrementOperationCount(int) -> incrementOperationCount
    void incrementOperationCount(int,int) -> incrementOperationCount
    void setThreadStatsTag(int) -> setThreadStatsTag
    void tagSocket(java.net.Socket) -> tagSocket
    void untagSocket(java.net.Socket) -> untagSocket
android.support.v4.net.TrafficStatsCompat$1 -> android.support.v4.net.TrafficStatsCompat$1:
android.support.v4.net.TrafficStatsCompat$BaseTrafficStatsCompatImpl -> android.support.v4.net.TrafficStatsCompat$BaseTrafficStatsCompatImpl:
    java.lang.ThreadLocal mThreadSocketTags -> mThreadSocketTags
    void clearThreadStatsTag() -> clearThreadStatsTag
    int getThreadStatsTag() -> getThreadStatsTag
    void incrementOperationCount(int) -> incrementOperationCount
    void incrementOperationCount(int,int) -> incrementOperationCount
    void setThreadStatsTag(int) -> setThreadStatsTag
    void tagSocket(java.net.Socket) -> tagSocket
    void untagSocket(java.net.Socket) -> untagSocket
android.support.v4.net.TrafficStatsCompat$BaseTrafficStatsCompatImpl$1 -> android.support.v4.net.TrafficStatsCompat$BaseTrafficStatsCompatImpl$1:
    android.support.v4.net.TrafficStatsCompat$BaseTrafficStatsCompatImpl this$0 -> this$0
    android.support.v4.net.TrafficStatsCompat$BaseTrafficStatsCompatImpl$SocketTags initialValue() -> initialValue
    java.lang.Object initialValue() -> initialValue
android.support.v4.net.TrafficStatsCompat$BaseTrafficStatsCompatImpl$SocketTags -> android.support.v4.net.TrafficStatsCompat$BaseTrafficStatsCompatImpl$SocketTags:
    int statsTag -> statsTag
android.support.v4.net.TrafficStatsCompat$IcsTrafficStatsCompatImpl -> android.support.v4.net.TrafficStatsCompat$IcsTrafficStatsCompatImpl:
    void clearThreadStatsTag() -> clearThreadStatsTag
    int getThreadStatsTag() -> getThreadStatsTag
    void incrementOperationCount(int) -> incrementOperationCount
    void incrementOperationCount(int,int) -> incrementOperationCount
    void setThreadStatsTag(int) -> setThreadStatsTag
    void tagSocket(java.net.Socket) -> tagSocket
    void untagSocket(java.net.Socket) -> untagSocket
android.support.v4.net.TrafficStatsCompat$TrafficStatsCompatImpl -> android.support.v4.net.TrafficStatsCompat$TrafficStatsCompatImpl:
    void clearThreadStatsTag() -> clearThreadStatsTag
    int getThreadStatsTag() -> getThreadStatsTag
    void incrementOperationCount(int) -> incrementOperationCount
    void incrementOperationCount(int,int) -> incrementOperationCount
    void setThreadStatsTag(int) -> setThreadStatsTag
    void tagSocket(java.net.Socket) -> tagSocket
    void untagSocket(java.net.Socket) -> untagSocket
android.support.v4.net.TrafficStatsCompatIcs -> android.support.v4.net.TrafficStatsCompatIcs:
    void clearThreadStatsTag() -> clearThreadStatsTag
    int getThreadStatsTag() -> getThreadStatsTag
    void incrementOperationCount(int) -> incrementOperationCount
    void incrementOperationCount(int,int) -> incrementOperationCount
    void setThreadStatsTag(int) -> setThreadStatsTag
    void tagSocket(java.net.Socket) -> tagSocket
    void untagSocket(java.net.Socket) -> untagSocket
android.support.v4.os.EnvironmentCompat -> android.support.v4.os.EnvironmentCompat:
    java.lang.String TAG -> TAG
    java.lang.String MEDIA_UNKNOWN -> MEDIA_UNKNOWN
    java.lang.String getStorageState(java.io.File) -> getStorageState
android.support.v4.os.EnvironmentCompatKitKat -> android.support.v4.os.EnvironmentCompatKitKat:
    java.lang.String getStorageState(java.io.File) -> getStorageState
android.support.v4.os.ParcelableCompat -> android.support.v4.os.ParcelableCompat:
    android.os.Parcelable$Creator newCreator(android.support.v4.os.ParcelableCompatCreatorCallbacks) -> newCreator
android.support.v4.os.ParcelableCompat$CompatCreator -> android.support.v4.os.ParcelableCompat$CompatCreator:
    android.support.v4.os.ParcelableCompatCreatorCallbacks mCallbacks -> mCallbacks
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    java.lang.Object[] newArray(int) -> newArray
android.support.v4.os.ParcelableCompatCreatorCallbacks -> android.support.v4.os.ParcelableCompatCreatorCallbacks:
    java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    java.lang.Object[] newArray(int) -> newArray
android.support.v4.os.ParcelableCompatCreatorHoneycombMR2 -> android.support.v4.os.ParcelableCompatCreatorHoneycombMR2:
    android.support.v4.os.ParcelableCompatCreatorCallbacks mCallbacks -> mCallbacks
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    java.lang.Object[] newArray(int) -> newArray
android.support.v4.os.ParcelableCompatCreatorHoneycombMR2Stub -> android.support.v4.os.ParcelableCompatCreatorHoneycombMR2Stub:
    android.os.Parcelable$Creator instantiate(android.support.v4.os.ParcelableCompatCreatorCallbacks) -> instantiate
android.support.v4.print.PrintHelper -> android.support.v4.print.PrintHelper:
    int SCALE_MODE_FIT -> SCALE_MODE_FIT
    int SCALE_MODE_FILL -> SCALE_MODE_FILL
    int COLOR_MODE_MONOCHROME -> COLOR_MODE_MONOCHROME
    int COLOR_MODE_COLOR -> COLOR_MODE_COLOR
    int ORIENTATION_LANDSCAPE -> ORIENTATION_LANDSCAPE
    int ORIENTATION_PORTRAIT -> ORIENTATION_PORTRAIT
    android.support.v4.print.PrintHelper$PrintHelperVersionImpl mImpl -> mImpl
    boolean systemSupportsPrint() -> systemSupportsPrint
    void setScaleMode(int) -> setScaleMode
    int getScaleMode() -> getScaleMode
    void setColorMode(int) -> setColorMode
    int getColorMode() -> getColorMode
    void setOrientation(int) -> setOrientation
    int getOrientation() -> getOrientation
    void printBitmap(java.lang.String,android.graphics.Bitmap) -> printBitmap
    void printBitmap(java.lang.String,android.net.Uri) -> printBitmap
android.support.v4.print.PrintHelper$1 -> android.support.v4.print.PrintHelper$1:
android.support.v4.print.PrintHelper$PrintHelperKitkatImpl -> android.support.v4.print.PrintHelper$PrintHelperKitkatImpl:
    android.support.v4.print.PrintHelperKitkat mPrintHelper -> mPrintHelper
    void setScaleMode(int) -> setScaleMode
    int getScaleMode() -> getScaleMode
    void setColorMode(int) -> setColorMode
    int getColorMode() -> getColorMode
    void setOrientation(int) -> setOrientation
    int getOrientation() -> getOrientation
    void printBitmap(java.lang.String,android.graphics.Bitmap) -> printBitmap
    void printBitmap(java.lang.String,android.net.Uri) -> printBitmap
android.support.v4.print.PrintHelper$PrintHelperStubImpl -> android.support.v4.print.PrintHelper$PrintHelperStubImpl:
    int mScaleMode -> mScaleMode
    int mColorMode -> mColorMode
    int mOrientation -> mOrientation
    void setScaleMode(int) -> setScaleMode
    int getColorMode() -> getColorMode
    void setColorMode(int) -> setColorMode
    void setOrientation(int) -> setOrientation
    int getOrientation() -> getOrientation
    int getScaleMode() -> getScaleMode
    void printBitmap(java.lang.String,android.graphics.Bitmap) -> printBitmap
    void printBitmap(java.lang.String,android.net.Uri) -> printBitmap
android.support.v4.print.PrintHelper$PrintHelperVersionImpl -> android.support.v4.print.PrintHelper$PrintHelperVersionImpl:
    void setScaleMode(int) -> setScaleMode
    int getScaleMode() -> getScaleMode
    void setColorMode(int) -> setColorMode
    int getColorMode() -> getColorMode
    void setOrientation(int) -> setOrientation
    int getOrientation() -> getOrientation
    void printBitmap(java.lang.String,android.graphics.Bitmap) -> printBitmap
    void printBitmap(java.lang.String,android.net.Uri) -> printBitmap
android.support.v4.print.PrintHelperKitkat -> android.support.v4.print.PrintHelperKitkat:
    java.lang.String LOG_TAG -> LOG_TAG
    int MAX_PRINT_SIZE -> MAX_PRINT_SIZE
    android.content.Context mContext -> mContext
    android.graphics.BitmapFactory$Options mDecodeOptions -> mDecodeOptions
    java.lang.Object mLock -> mLock
    int SCALE_MODE_FIT -> SCALE_MODE_FIT
    int SCALE_MODE_FILL -> SCALE_MODE_FILL
    int ORIENTATION_LANDSCAPE -> ORIENTATION_LANDSCAPE
    int ORIENTATION_PORTRAIT -> ORIENTATION_PORTRAIT
    int COLOR_MODE_MONOCHROME -> COLOR_MODE_MONOCHROME
    int COLOR_MODE_COLOR -> COLOR_MODE_COLOR
    int mScaleMode -> mScaleMode
    int mColorMode -> mColorMode
    int mOrientation -> mOrientation
    void setScaleMode(int) -> setScaleMode
    int getScaleMode() -> getScaleMode
    void setColorMode(int) -> setColorMode
    void setOrientation(int) -> setOrientation
    int getOrientation() -> getOrientation
    int getColorMode() -> getColorMode
    void printBitmap(java.lang.String,android.graphics.Bitmap) -> printBitmap
    android.graphics.Matrix getMatrix(int,int,android.graphics.RectF,int) -> getMatrix
    void printBitmap(java.lang.String,android.net.Uri) -> printBitmap
    android.graphics.Bitmap loadConstrainedBitmap(android.net.Uri,int) -> loadConstrainedBitmap
    android.graphics.Bitmap loadBitmap(android.net.Uri,android.graphics.BitmapFactory$Options) -> loadBitmap
    android.graphics.Matrix access$000(android.support.v4.print.PrintHelperKitkat,int,int,android.graphics.RectF,int) -> access$000
    android.graphics.Bitmap access$200(android.support.v4.print.PrintHelperKitkat,android.net.Uri,int) -> access$200
    java.lang.Object access$300(android.support.v4.print.PrintHelperKitkat) -> access$300
android.support.v4.print.PrintHelperKitkat$1 -> android.support.v4.print.PrintHelperKitkat$1:
    android.print.PrintAttributes mAttributes -> mAttributes
    java.lang.String val$jobName -> val$jobName
    android.graphics.Bitmap val$bitmap -> val$bitmap
    int val$fittingMode -> val$fittingMode
    android.support.v4.print.PrintHelperKitkat this$0 -> this$0
    void onLayout(android.print.PrintAttributes,android.print.PrintAttributes,android.os.CancellationSignal,android.print.PrintDocumentAdapter$LayoutResultCallback,android.os.Bundle) -> onLayout
    void onWrite(android.print.PageRange[],android.os.ParcelFileDescriptor,android.os.CancellationSignal,android.print.PrintDocumentAdapter$WriteResultCallback) -> onWrite
android.support.v4.print.PrintHelperKitkat$2 -> android.support.v4.print.PrintHelperKitkat$2:
    android.print.PrintAttributes mAttributes -> mAttributes
    android.os.AsyncTask loadBitmap -> loadBitmap
    android.graphics.Bitmap mBitmap -> mBitmap
    java.lang.String val$jobName -> val$jobName
    android.net.Uri val$imageFile -> val$imageFile
    int val$fittingMode -> val$fittingMode
    android.support.v4.print.PrintHelperKitkat this$0 -> this$0
    void onLayout(android.print.PrintAttributes,android.print.PrintAttributes,android.os.CancellationSignal,android.print.PrintDocumentAdapter$LayoutResultCallback,android.os.Bundle) -> onLayout
    void cancelLoad() -> cancelLoad
    void onFinish() -> onFinish
    void onWrite(android.print.PageRange[],android.os.ParcelFileDescriptor,android.os.CancellationSignal,android.print.PrintDocumentAdapter$WriteResultCallback) -> onWrite
    void access$100(android.support.v4.print.PrintHelperKitkat$2) -> access$100
android.support.v4.print.PrintHelperKitkat$2$1 -> android.support.v4.print.PrintHelperKitkat$2$1:
    android.os.CancellationSignal val$cancellationSignal -> val$cancellationSignal
    android.print.PrintAttributes val$newPrintAttributes -> val$newPrintAttributes
    android.print.PrintAttributes val$oldPrintAttributes -> val$oldPrintAttributes
    android.print.PrintDocumentAdapter$LayoutResultCallback val$layoutResultCallback -> val$layoutResultCallback
    android.support.v4.print.PrintHelperKitkat$2 this$1 -> this$1
    void onPreExecute() -> onPreExecute
    android.graphics.Bitmap doInBackground(android.net.Uri[]) -> doInBackground
    void onPostExecute(android.graphics.Bitmap) -> onPostExecute
    void onCancelled(android.graphics.Bitmap) -> onCancelled
    void onCancelled(java.lang.Object) -> onCancelled
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
android.support.v4.print.PrintHelperKitkat$2$1$1 -> android.support.v4.print.PrintHelperKitkat$2$1$1:
    android.support.v4.print.PrintHelperKitkat$2$1 this$2 -> this$2
    void onCancel() -> onCancel
android.support.v4.text.BidiFormatter -> android.support.v4.text.BidiFormatter:
    android.support.v4.text.TextDirectionHeuristicCompat DEFAULT_TEXT_DIRECTION_HEURISTIC -> DEFAULT_TEXT_DIRECTION_HEURISTIC
    char LRE -> LRE
    char RLE -> RLE
    char PDF -> PDF
    char LRM -> LRM
    char RLM -> RLM
    java.lang.String LRM_STRING -> LRM_STRING
    java.lang.String RLM_STRING -> RLM_STRING
    java.lang.String EMPTY_STRING -> EMPTY_STRING
    int FLAG_STEREO_RESET -> FLAG_STEREO_RESET
    int DEFAULT_FLAGS -> DEFAULT_FLAGS
    android.support.v4.text.BidiFormatter DEFAULT_LTR_INSTANCE -> DEFAULT_LTR_INSTANCE
    android.support.v4.text.BidiFormatter DEFAULT_RTL_INSTANCE -> DEFAULT_RTL_INSTANCE
    boolean mIsRtlContext -> mIsRtlContext
    int mFlags -> mFlags
    android.support.v4.text.TextDirectionHeuristicCompat mDefaultTextDirectionHeuristicCompat -> mDefaultTextDirectionHeuristicCompat
    int DIR_LTR -> DIR_LTR
    int DIR_UNKNOWN -> DIR_UNKNOWN
    int DIR_RTL -> DIR_RTL
    android.support.v4.text.BidiFormatter getInstance() -> getInstance
    android.support.v4.text.BidiFormatter getInstance(boolean) -> getInstance
    android.support.v4.text.BidiFormatter getInstance(java.util.Locale) -> getInstance
    boolean isRtlContext() -> isRtlContext
    boolean getStereoReset() -> getStereoReset
    java.lang.String markAfter(java.lang.String,android.support.v4.text.TextDirectionHeuristicCompat) -> markAfter
    java.lang.String markBefore(java.lang.String,android.support.v4.text.TextDirectionHeuristicCompat) -> markBefore
    boolean isRtl(java.lang.String) -> isRtl
    java.lang.String unicodeWrap(java.lang.String,android.support.v4.text.TextDirectionHeuristicCompat,boolean) -> unicodeWrap
    java.lang.String unicodeWrap(java.lang.String,android.support.v4.text.TextDirectionHeuristicCompat) -> unicodeWrap
    java.lang.String unicodeWrap(java.lang.String,boolean) -> unicodeWrap
    java.lang.String unicodeWrap(java.lang.String) -> unicodeWrap
    boolean isRtlLocale(java.util.Locale) -> isRtlLocale
    int getExitDir(java.lang.String) -> getExitDir
    int getEntryDir(java.lang.String) -> getEntryDir
    boolean access$000(java.util.Locale) -> access$000
    android.support.v4.text.TextDirectionHeuristicCompat access$100() -> access$100
    android.support.v4.text.BidiFormatter access$200() -> access$200
    android.support.v4.text.BidiFormatter access$300() -> access$300
android.support.v4.text.BidiFormatter$1 -> android.support.v4.text.BidiFormatter$1:
android.support.v4.text.BidiFormatter$Builder -> android.support.v4.text.BidiFormatter$Builder:
    boolean mIsRtlContext -> mIsRtlContext
    int mFlags -> mFlags
    android.support.v4.text.TextDirectionHeuristicCompat mTextDirectionHeuristicCompat -> mTextDirectionHeuristicCompat
    void initialize(boolean) -> initialize
    android.support.v4.text.BidiFormatter$Builder stereoReset(boolean) -> stereoReset
    android.support.v4.text.BidiFormatter$Builder setTextDirectionHeuristic(android.support.v4.text.TextDirectionHeuristicCompat) -> setTextDirectionHeuristic
    android.support.v4.text.BidiFormatter getDefaultInstanceFromContext(boolean) -> getDefaultInstanceFromContext
    android.support.v4.text.BidiFormatter build() -> build
android.support.v4.text.BidiFormatter$DirectionalityEstimator -> android.support.v4.text.BidiFormatter$DirectionalityEstimator:
    int DIR_TYPE_CACHE_SIZE -> DIR_TYPE_CACHE_SIZE
    byte[] DIR_TYPE_CACHE -> DIR_TYPE_CACHE
    java.lang.String text -> text
    boolean isHtml -> isHtml
    int length -> length
    int charIndex -> charIndex
    char lastChar -> lastChar
    int getEntryDir() -> getEntryDir
    int getExitDir() -> getExitDir
    byte getCachedDirectionality(char) -> getCachedDirectionality
    byte dirTypeForward() -> dirTypeForward
    byte dirTypeBackward() -> dirTypeBackward
    byte skipTagForward() -> skipTagForward
    byte skipTagBackward() -> skipTagBackward
    byte skipEntityForward() -> skipEntityForward
    byte skipEntityBackward() -> skipEntityBackward
android.support.v4.text.ICUCompat -> android.support.v4.text.ICUCompat:
    android.support.v4.text.ICUCompat$ICUCompatImpl IMPL -> IMPL
    java.lang.String getScript(java.lang.String) -> getScript
    java.lang.String addLikelySubtags(java.lang.String) -> addLikelySubtags
android.support.v4.text.ICUCompat$ICUCompatImpl -> android.support.v4.text.ICUCompat$ICUCompatImpl:
    java.lang.String getScript(java.lang.String) -> getScript
    java.lang.String addLikelySubtags(java.lang.String) -> addLikelySubtags
android.support.v4.text.ICUCompat$ICUCompatImplBase -> android.support.v4.text.ICUCompat$ICUCompatImplBase:
    java.lang.String getScript(java.lang.String) -> getScript
    java.lang.String addLikelySubtags(java.lang.String) -> addLikelySubtags
android.support.v4.text.ICUCompat$ICUCompatImplIcs -> android.support.v4.text.ICUCompat$ICUCompatImplIcs:
    java.lang.String getScript(java.lang.String) -> getScript
    java.lang.String addLikelySubtags(java.lang.String) -> addLikelySubtags
android.support.v4.text.ICUCompatIcs -> android.support.v4.text.ICUCompatIcs:
    java.lang.String TAG -> TAG
    java.lang.reflect.Method sGetScriptMethod -> sGetScriptMethod
    java.lang.reflect.Method sAddLikelySubtagsMethod -> sAddLikelySubtagsMethod
    java.lang.String getScript(java.lang.String) -> getScript
    java.lang.String addLikelySubtags(java.lang.String) -> addLikelySubtags
android.support.v4.text.TextDirectionHeuristicCompat -> android.support.v4.text.TextDirectionHeuristicCompat:
    boolean isRtl(char[],int,int) -> isRtl
    boolean isRtl(java.lang.CharSequence,int,int) -> isRtl
android.support.v4.text.TextDirectionHeuristicsCompat -> android.support.v4.text.TextDirectionHeuristicsCompat:
    android.support.v4.text.TextDirectionHeuristicCompat LTR -> LTR
    android.support.v4.text.TextDirectionHeuristicCompat RTL -> RTL
    android.support.v4.text.TextDirectionHeuristicCompat FIRSTSTRONG_LTR -> FIRSTSTRONG_LTR
    android.support.v4.text.TextDirectionHeuristicCompat FIRSTSTRONG_RTL -> FIRSTSTRONG_RTL
    android.support.v4.text.TextDirectionHeuristicCompat ANYRTL_LTR -> ANYRTL_LTR
    android.support.v4.text.TextDirectionHeuristicCompat LOCALE -> LOCALE
    int STATE_TRUE -> STATE_TRUE
    int STATE_FALSE -> STATE_FALSE
    int STATE_UNKNOWN -> STATE_UNKNOWN
    int isRtlText(int) -> isRtlText
    int isRtlTextOrFormat(int) -> isRtlTextOrFormat
    int access$100(int) -> access$100
    int access$200(int) -> access$200
android.support.v4.text.TextDirectionHeuristicsCompat$1 -> android.support.v4.text.TextDirectionHeuristicsCompat$1:
android.support.v4.text.TextDirectionHeuristicsCompat$AnyStrong -> android.support.v4.text.TextDirectionHeuristicsCompat$AnyStrong:
    boolean mLookForRtl -> mLookForRtl
    android.support.v4.text.TextDirectionHeuristicsCompat$AnyStrong INSTANCE_RTL -> INSTANCE_RTL
    android.support.v4.text.TextDirectionHeuristicsCompat$AnyStrong INSTANCE_LTR -> INSTANCE_LTR
    int checkRtl(java.lang.CharSequence,int,int) -> checkRtl
android.support.v4.text.TextDirectionHeuristicsCompat$FirstStrong -> android.support.v4.text.TextDirectionHeuristicsCompat$FirstStrong:
    android.support.v4.text.TextDirectionHeuristicsCompat$FirstStrong INSTANCE -> INSTANCE
    int checkRtl(java.lang.CharSequence,int,int) -> checkRtl
android.support.v4.text.TextDirectionHeuristicsCompat$TextDirectionAlgorithm -> android.support.v4.text.TextDirectionHeuristicsCompat$TextDirectionAlgorithm:
    int checkRtl(java.lang.CharSequence,int,int) -> checkRtl
android.support.v4.text.TextDirectionHeuristicsCompat$TextDirectionHeuristicImpl -> android.support.v4.text.TextDirectionHeuristicsCompat$TextDirectionHeuristicImpl:
    android.support.v4.text.TextDirectionHeuristicsCompat$TextDirectionAlgorithm mAlgorithm -> mAlgorithm
    boolean defaultIsRtl() -> defaultIsRtl
    boolean isRtl(char[],int,int) -> isRtl
    boolean isRtl(java.lang.CharSequence,int,int) -> isRtl
    boolean doCheck(java.lang.CharSequence,int,int) -> doCheck
android.support.v4.text.TextDirectionHeuristicsCompat$TextDirectionHeuristicInternal -> android.support.v4.text.TextDirectionHeuristicsCompat$TextDirectionHeuristicInternal:
    boolean mDefaultIsRtl -> mDefaultIsRtl
    boolean defaultIsRtl() -> defaultIsRtl
android.support.v4.text.TextDirectionHeuristicsCompat$TextDirectionHeuristicLocale -> android.support.v4.text.TextDirectionHeuristicsCompat$TextDirectionHeuristicLocale:
    android.support.v4.text.TextDirectionHeuristicsCompat$TextDirectionHeuristicLocale INSTANCE -> INSTANCE
    boolean defaultIsRtl() -> defaultIsRtl
android.support.v4.text.TextUtilsCompat -> android.support.v4.text.TextUtilsCompat:
    java.util.Locale ROOT -> ROOT
    java.lang.String ARAB_SCRIPT_SUBTAG -> ARAB_SCRIPT_SUBTAG
    java.lang.String HEBR_SCRIPT_SUBTAG -> HEBR_SCRIPT_SUBTAG
    java.lang.String htmlEncode(java.lang.String) -> htmlEncode
    int getLayoutDirectionFromLocale(java.util.Locale) -> getLayoutDirectionFromLocale
    int getLayoutDirectionFromFirstChar(java.util.Locale) -> getLayoutDirectionFromFirstChar
android.support.v4.util.ArrayMap -> android.support.v4.util.ArrayMap:
    android.support.v4.util.MapCollections mCollections -> mCollections
    android.support.v4.util.MapCollections getCollection() -> getCollection
    boolean containsAll(java.util.Collection) -> containsAll
    void putAll(java.util.Map) -> putAll
    boolean removeAll(java.util.Collection) -> removeAll
    boolean retainAll(java.util.Collection) -> retainAll
    java.util.Set entrySet() -> entrySet
    java.util.Set keySet() -> keySet
    java.util.Collection values() -> values
android.support.v4.util.ArrayMap$1 -> android.support.v4.util.ArrayMap$1:
    android.support.v4.util.ArrayMap this$0 -> this$0
    int colGetSize() -> colGetSize
    java.lang.Object colGetEntry(int,int) -> colGetEntry
    int colIndexOfKey(java.lang.Object) -> colIndexOfKey
    int colIndexOfValue(java.lang.Object) -> colIndexOfValue
    java.util.Map colGetMap() -> colGetMap
    void colPut(java.lang.Object,java.lang.Object) -> colPut
    java.lang.Object colSetValue(int,java.lang.Object) -> colSetValue
    void colRemoveAt(int) -> colRemoveAt
    void colClear() -> colClear
android.support.v4.util.AtomicFile -> android.support.v4.util.AtomicFile:
    java.io.File mBaseName -> mBaseName
    java.io.File mBackupName -> mBackupName
    java.io.File getBaseFile() -> getBaseFile
    void delete() -> delete
    java.io.FileOutputStream startWrite() -> startWrite
    void finishWrite(java.io.FileOutputStream) -> finishWrite
    void failWrite(java.io.FileOutputStream) -> failWrite
    java.io.FileInputStream openRead() -> openRead
    byte[] readFully() -> readFully
    boolean sync(java.io.FileOutputStream) -> sync
android.support.v4.util.ContainerHelpers -> android.support.v4.util.ContainerHelpers:
    int[] EMPTY_INTS -> EMPTY_INTS
    long[] EMPTY_LONGS -> EMPTY_LONGS
    java.lang.Object[] EMPTY_OBJECTS -> EMPTY_OBJECTS
    int idealIntArraySize(int) -> idealIntArraySize
    int idealLongArraySize(int) -> idealLongArraySize
    int idealByteArraySize(int) -> idealByteArraySize
    boolean equal(java.lang.Object,java.lang.Object) -> equal
    int binarySearch(int[],int,int) -> binarySearch
    int binarySearch(long[],int,long) -> binarySearch
android.support.v4.util.DebugUtils -> android.support.v4.util.DebugUtils:
    void buildShortClassTag(java.lang.Object,java.lang.StringBuilder) -> buildShortClassTag
android.support.v4.util.LogWriter -> android.support.v4.util.LogWriter:
    java.lang.String mTag -> mTag
    java.lang.StringBuilder mBuilder -> mBuilder
    void close() -> close
    void flush() -> flush
    void write(char[],int,int) -> write
    void flushBuilder() -> flushBuilder
android.support.v4.util.LongSparseArray -> android.support.v4.util.LongSparseArray:
    java.lang.Object DELETED -> DELETED
    boolean mGarbage -> mGarbage
    long[] mKeys -> mKeys
    java.lang.Object[] mValues -> mValues
    int mSize -> mSize
    android.support.v4.util.LongSparseArray clone() -> clone
    java.lang.Object get(long) -> get
    java.lang.Object get(long,java.lang.Object) -> get
    void delete(long) -> delete
    void remove(long) -> remove
    void removeAt(int) -> removeAt
    void gc() -> gc
    void put(long,java.lang.Object) -> put
    int size() -> size
    long keyAt(int) -> keyAt
    java.lang.Object valueAt(int) -> valueAt
    void setValueAt(int,java.lang.Object) -> setValueAt
    int indexOfKey(long) -> indexOfKey
    int indexOfValue(java.lang.Object) -> indexOfValue
    void clear() -> clear
    void append(long,java.lang.Object) -> append
    java.lang.String toString() -> toString
    java.lang.Object clone() -> clone
android.support.v4.util.LruCache -> android.support.v4.util.LruCache:
    java.util.LinkedHashMap map -> map
    int size -> size
    int maxSize -> maxSize
    int putCount -> putCount
    int createCount -> createCount
    int evictionCount -> evictionCount
    int hitCount -> hitCount
    int missCount -> missCount
    java.lang.Object get(java.lang.Object) -> get
    java.lang.Object put(java.lang.Object,java.lang.Object) -> put
    void trimToSize(int) -> trimToSize
    java.lang.Object remove(java.lang.Object) -> remove
    void entryRemoved(boolean,java.lang.Object,java.lang.Object,java.lang.Object) -> entryRemoved
    java.lang.Object create(java.lang.Object) -> create
    int safeSizeOf(java.lang.Object,java.lang.Object) -> safeSizeOf
    int sizeOf(java.lang.Object,java.lang.Object) -> sizeOf
    void evictAll() -> evictAll
    int size() -> size
    int maxSize() -> maxSize
    int hitCount() -> hitCount
    int missCount() -> missCount
    int createCount() -> createCount
    int putCount() -> putCount
    int evictionCount() -> evictionCount
    java.util.Map snapshot() -> snapshot
    java.lang.String toString() -> toString
android.support.v4.util.MapCollections -> android.support.v4.util.MapCollections:
    android.support.v4.util.MapCollections$EntrySet mEntrySet -> mEntrySet
    android.support.v4.util.MapCollections$KeySet mKeySet -> mKeySet
    android.support.v4.util.MapCollections$ValuesCollection mValues -> mValues
    boolean containsAllHelper(java.util.Map,java.util.Collection) -> containsAllHelper
    boolean removeAllHelper(java.util.Map,java.util.Collection) -> removeAllHelper
    boolean retainAllHelper(java.util.Map,java.util.Collection) -> retainAllHelper
    java.lang.Object[] toArrayHelper(int) -> toArrayHelper
    java.lang.Object[] toArrayHelper(java.lang.Object[],int) -> toArrayHelper
    boolean equalsSetHelper(java.util.Set,java.lang.Object) -> equalsSetHelper
    java.util.Set getEntrySet() -> getEntrySet
    java.util.Set getKeySet() -> getKeySet
    java.util.Collection getValues() -> getValues
    int colGetSize() -> colGetSize
    java.lang.Object colGetEntry(int,int) -> colGetEntry
    int colIndexOfKey(java.lang.Object) -> colIndexOfKey
    int colIndexOfValue(java.lang.Object) -> colIndexOfValue
    java.util.Map colGetMap() -> colGetMap
    void colPut(java.lang.Object,java.lang.Object) -> colPut
    java.lang.Object colSetValue(int,java.lang.Object) -> colSetValue
    void colRemoveAt(int) -> colRemoveAt
    void colClear() -> colClear
android.support.v4.util.MapCollections$ArrayIterator -> android.support.v4.util.MapCollections$ArrayIterator:
    int mOffset -> mOffset
    int mSize -> mSize
    int mIndex -> mIndex
    boolean mCanRemove -> mCanRemove
    android.support.v4.util.MapCollections this$0 -> this$0
    boolean hasNext() -> hasNext
    java.lang.Object next() -> next
    void remove() -> remove
android.support.v4.util.MapCollections$EntrySet -> android.support.v4.util.MapCollections$EntrySet:
    android.support.v4.util.MapCollections this$0 -> this$0
    boolean add(java.util.Map$Entry) -> add
    boolean addAll(java.util.Collection) -> addAll
    void clear() -> clear
    boolean contains(java.lang.Object) -> contains
    boolean containsAll(java.util.Collection) -> containsAll
    boolean isEmpty() -> isEmpty
    java.util.Iterator iterator() -> iterator
    boolean remove(java.lang.Object) -> remove
    boolean removeAll(java.util.Collection) -> removeAll
    boolean retainAll(java.util.Collection) -> retainAll
    int size() -> size
    java.lang.Object[] toArray() -> toArray
    java.lang.Object[] toArray(java.lang.Object[]) -> toArray
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    boolean add(java.lang.Object) -> add
android.support.v4.util.MapCollections$KeySet -> android.support.v4.util.MapCollections$KeySet:
    android.support.v4.util.MapCollections this$0 -> this$0
    boolean add(java.lang.Object) -> add
    boolean addAll(java.util.Collection) -> addAll
    void clear() -> clear
    boolean contains(java.lang.Object) -> contains
    boolean containsAll(java.util.Collection) -> containsAll
    boolean isEmpty() -> isEmpty
    java.util.Iterator iterator() -> iterator
    boolean remove(java.lang.Object) -> remove
    boolean removeAll(java.util.Collection) -> removeAll
    boolean retainAll(java.util.Collection) -> retainAll
    int size() -> size
    java.lang.Object[] toArray() -> toArray
    java.lang.Object[] toArray(java.lang.Object[]) -> toArray
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
android.support.v4.util.MapCollections$MapIterator -> android.support.v4.util.MapCollections$MapIterator:
    int mEnd -> mEnd
    int mIndex -> mIndex
    boolean mEntryValid -> mEntryValid
    android.support.v4.util.MapCollections this$0 -> this$0
    boolean hasNext() -> hasNext
    java.util.Map$Entry next() -> next
    void remove() -> remove
    java.lang.Object getKey() -> getKey
    java.lang.Object getValue() -> getValue
    java.lang.Object setValue(java.lang.Object) -> setValue
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
    java.lang.Object next() -> next
android.support.v4.util.MapCollections$ValuesCollection -> android.support.v4.util.MapCollections$ValuesCollection:
    android.support.v4.util.MapCollections this$0 -> this$0
    boolean add(java.lang.Object) -> add
    boolean addAll(java.util.Collection) -> addAll
    void clear() -> clear
    boolean contains(java.lang.Object) -> contains
    boolean containsAll(java.util.Collection) -> containsAll
    boolean isEmpty() -> isEmpty
    java.util.Iterator iterator() -> iterator
    boolean remove(java.lang.Object) -> remove
    boolean removeAll(java.util.Collection) -> removeAll
    boolean retainAll(java.util.Collection) -> retainAll
    int size() -> size
    java.lang.Object[] toArray() -> toArray
    java.lang.Object[] toArray(java.lang.Object[]) -> toArray
android.support.v4.util.SimpleArrayMap -> android.support.v4.util.SimpleArrayMap:
    boolean DEBUG -> DEBUG
    java.lang.String TAG -> TAG
    int BASE_SIZE -> BASE_SIZE
    int CACHE_SIZE -> CACHE_SIZE
    java.lang.Object[] mBaseCache -> mBaseCache
    int mBaseCacheSize -> mBaseCacheSize
    java.lang.Object[] mTwiceBaseCache -> mTwiceBaseCache
    int mTwiceBaseCacheSize -> mTwiceBaseCacheSize
    int[] mHashes -> mHashes
    java.lang.Object[] mArray -> mArray
    int mSize -> mSize
    int indexOf(java.lang.Object,int) -> indexOf
    int indexOfNull() -> indexOfNull
    void allocArrays(int) -> allocArrays
    void freeArrays(int[],java.lang.Object[],int) -> freeArrays
    void clear() -> clear
    void ensureCapacity(int) -> ensureCapacity
    boolean containsKey(java.lang.Object) -> containsKey
    int indexOfValue(java.lang.Object) -> indexOfValue
    boolean containsValue(java.lang.Object) -> containsValue
    java.lang.Object get(java.lang.Object) -> get
    java.lang.Object keyAt(int) -> keyAt
    java.lang.Object valueAt(int) -> valueAt
    java.lang.Object setValueAt(int,java.lang.Object) -> setValueAt
    boolean isEmpty() -> isEmpty
    java.lang.Object put(java.lang.Object,java.lang.Object) -> put
    void putAll(android.support.v4.util.SimpleArrayMap) -> putAll
    java.lang.Object remove(java.lang.Object) -> remove
    java.lang.Object removeAt(int) -> removeAt
    int size() -> size
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
android.support.v4.util.SparseArrayCompat -> android.support.v4.util.SparseArrayCompat:
    java.lang.Object DELETED -> DELETED
    boolean mGarbage -> mGarbage
    int[] mKeys -> mKeys
    java.lang.Object[] mValues -> mValues
    int mSize -> mSize
    android.support.v4.util.SparseArrayCompat clone() -> clone
    java.lang.Object get(int) -> get
    java.lang.Object get(int,java.lang.Object) -> get
    void delete(int) -> delete
    void remove(int) -> remove
    void removeAt(int) -> removeAt
    void removeAtRange(int,int) -> removeAtRange
    void gc() -> gc
    void put(int,java.lang.Object) -> put
    int size() -> size
    int keyAt(int) -> keyAt
    java.lang.Object valueAt(int) -> valueAt
    void setValueAt(int,java.lang.Object) -> setValueAt
    int indexOfKey(int) -> indexOfKey
    int indexOfValue(java.lang.Object) -> indexOfValue
    void clear() -> clear
    void append(int,java.lang.Object) -> append
    java.lang.String toString() -> toString
    java.lang.Object clone() -> clone
android.support.v4.util.TimeUtils -> android.support.v4.util.TimeUtils:
    int HUNDRED_DAY_FIELD_LEN -> HUNDRED_DAY_FIELD_LEN
    int SECONDS_PER_MINUTE -> SECONDS_PER_MINUTE
    int SECONDS_PER_HOUR -> SECONDS_PER_HOUR
    int SECONDS_PER_DAY -> SECONDS_PER_DAY
    java.lang.Object sFormatSync -> sFormatSync
    char[] sFormatStr -> sFormatStr
    int accumField(int,int,boolean,int) -> accumField
    int printField(char[],int,char,int,boolean,int) -> printField
    int formatDurationLocked(long,int) -> formatDurationLocked
    void formatDuration(long,java.lang.StringBuilder) -> formatDuration
    void formatDuration(long,java.io.PrintWriter,int) -> formatDuration
    void formatDuration(long,java.io.PrintWriter) -> formatDuration
    void formatDuration(long,long,java.io.PrintWriter) -> formatDuration
android.support.v4.view.AccessibilityDelegateCompat -> android.support.v4.view.AccessibilityDelegateCompat:
    android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateImpl IMPL -> IMPL
    java.lang.Object DEFAULT_DELEGATE -> DEFAULT_DELEGATE
    java.lang.Object mBridge -> mBridge
    java.lang.Object getBridge() -> getBridge
    void sendAccessibilityEvent(android.view.View,int) -> sendAccessibilityEvent
    void sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent) -> sendAccessibilityEventUnchecked
    boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat getAccessibilityNodeProvider(android.view.View) -> getAccessibilityNodeProvider
    boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> performAccessibilityAction
android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateIcsImpl -> android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateIcsImpl:
    java.lang.Object newAccessiblityDelegateDefaultImpl() -> newAccessiblityDelegateDefaultImpl
    java.lang.Object newAccessiblityDelegateBridge(android.support.v4.view.AccessibilityDelegateCompat) -> newAccessiblityDelegateBridge
    boolean dispatchPopulateAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    void onInitializeAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(java.lang.Object,android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
    void onPopulateAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    boolean onRequestSendAccessibilityEvent(java.lang.Object,android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
    void sendAccessibilityEvent(java.lang.Object,android.view.View,int) -> sendAccessibilityEvent
    void sendAccessibilityEventUnchecked(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> sendAccessibilityEventUnchecked
android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateIcsImpl$1 -> android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateIcsImpl$1:
    android.support.v4.view.AccessibilityDelegateCompat val$compat -> val$compat
    android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateIcsImpl this$0 -> this$0
    boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(android.view.View,java.lang.Object) -> onInitializeAccessibilityNodeInfo
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
    void sendAccessibilityEvent(android.view.View,int) -> sendAccessibilityEvent
    void sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent) -> sendAccessibilityEventUnchecked
android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateImpl -> android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateImpl:
    java.lang.Object newAccessiblityDelegateDefaultImpl() -> newAccessiblityDelegateDefaultImpl
    java.lang.Object newAccessiblityDelegateBridge(android.support.v4.view.AccessibilityDelegateCompat) -> newAccessiblityDelegateBridge
    boolean dispatchPopulateAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    void onInitializeAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(java.lang.Object,android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
    void onPopulateAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    boolean onRequestSendAccessibilityEvent(java.lang.Object,android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
    void sendAccessibilityEvent(java.lang.Object,android.view.View,int) -> sendAccessibilityEvent
    void sendAccessibilityEventUnchecked(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> sendAccessibilityEventUnchecked
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat getAccessibilityNodeProvider(java.lang.Object,android.view.View) -> getAccessibilityNodeProvider
    boolean performAccessibilityAction(java.lang.Object,android.view.View,int,android.os.Bundle) -> performAccessibilityAction
android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateJellyBeanImpl -> android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateJellyBeanImpl:
    java.lang.Object newAccessiblityDelegateBridge(android.support.v4.view.AccessibilityDelegateCompat) -> newAccessiblityDelegateBridge
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat getAccessibilityNodeProvider(java.lang.Object,android.view.View) -> getAccessibilityNodeProvider
    boolean performAccessibilityAction(java.lang.Object,android.view.View,int,android.os.Bundle) -> performAccessibilityAction
android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateJellyBeanImpl$1 -> android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateJellyBeanImpl$1:
    android.support.v4.view.AccessibilityDelegateCompat val$compat -> val$compat
    android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateJellyBeanImpl this$0 -> this$0
    boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(android.view.View,java.lang.Object) -> onInitializeAccessibilityNodeInfo
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
    void sendAccessibilityEvent(android.view.View,int) -> sendAccessibilityEvent
    void sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent) -> sendAccessibilityEventUnchecked
    java.lang.Object getAccessibilityNodeProvider(android.view.View) -> getAccessibilityNodeProvider
    boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> performAccessibilityAction
android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateStubImpl -> android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateStubImpl:
    java.lang.Object newAccessiblityDelegateDefaultImpl() -> newAccessiblityDelegateDefaultImpl
    java.lang.Object newAccessiblityDelegateBridge(android.support.v4.view.AccessibilityDelegateCompat) -> newAccessiblityDelegateBridge
    boolean dispatchPopulateAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    void onInitializeAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(java.lang.Object,android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
    void onPopulateAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    boolean onRequestSendAccessibilityEvent(java.lang.Object,android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
    void sendAccessibilityEvent(java.lang.Object,android.view.View,int) -> sendAccessibilityEvent
    void sendAccessibilityEventUnchecked(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> sendAccessibilityEventUnchecked
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat getAccessibilityNodeProvider(java.lang.Object,android.view.View) -> getAccessibilityNodeProvider
    boolean performAccessibilityAction(java.lang.Object,android.view.View,int,android.os.Bundle) -> performAccessibilityAction
android.support.v4.view.AccessibilityDelegateCompatIcs -> android.support.v4.view.AccessibilityDelegateCompatIcs:
    java.lang.Object newAccessibilityDelegateDefaultImpl() -> newAccessibilityDelegateDefaultImpl
    java.lang.Object newAccessibilityDelegateBridge(android.support.v4.view.AccessibilityDelegateCompatIcs$AccessibilityDelegateBridge) -> newAccessibilityDelegateBridge
    boolean dispatchPopulateAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    void onInitializeAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(java.lang.Object,android.view.View,java.lang.Object) -> onInitializeAccessibilityNodeInfo
    void onPopulateAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    boolean onRequestSendAccessibilityEvent(java.lang.Object,android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
    void sendAccessibilityEvent(java.lang.Object,android.view.View,int) -> sendAccessibilityEvent
    void sendAccessibilityEventUnchecked(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> sendAccessibilityEventUnchecked
android.support.v4.view.AccessibilityDelegateCompatIcs$1 -> android.support.v4.view.AccessibilityDelegateCompatIcs$1:
    android.support.v4.view.AccessibilityDelegateCompatIcs$AccessibilityDelegateBridge val$bridge -> val$bridge
    boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(android.view.View,android.view.accessibility.AccessibilityNodeInfo) -> onInitializeAccessibilityNodeInfo
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
    void sendAccessibilityEvent(android.view.View,int) -> sendAccessibilityEvent
    void sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent) -> sendAccessibilityEventUnchecked
android.support.v4.view.AccessibilityDelegateCompatIcs$AccessibilityDelegateBridge -> android.support.v4.view.AccessibilityDelegateCompatIcs$AccessibilityDelegateBridge:
    boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(android.view.View,java.lang.Object) -> onInitializeAccessibilityNodeInfo
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
    void sendAccessibilityEvent(android.view.View,int) -> sendAccessibilityEvent
    void sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent) -> sendAccessibilityEventUnchecked
android.support.v4.view.AccessibilityDelegateCompatJellyBean -> android.support.v4.view.AccessibilityDelegateCompatJellyBean:
    java.lang.Object newAccessibilityDelegateBridge(android.support.v4.view.AccessibilityDelegateCompatJellyBean$AccessibilityDelegateBridgeJellyBean) -> newAccessibilityDelegateBridge
    java.lang.Object getAccessibilityNodeProvider(java.lang.Object,android.view.View) -> getAccessibilityNodeProvider
    boolean performAccessibilityAction(java.lang.Object,android.view.View,int,android.os.Bundle) -> performAccessibilityAction
android.support.v4.view.AccessibilityDelegateCompatJellyBean$1 -> android.support.v4.view.AccessibilityDelegateCompatJellyBean$1:
    android.support.v4.view.AccessibilityDelegateCompatJellyBean$AccessibilityDelegateBridgeJellyBean val$bridge -> val$bridge
    boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(android.view.View,android.view.accessibility.AccessibilityNodeInfo) -> onInitializeAccessibilityNodeInfo
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
    void sendAccessibilityEvent(android.view.View,int) -> sendAccessibilityEvent
    void sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent) -> sendAccessibilityEventUnchecked
    android.view.accessibility.AccessibilityNodeProvider getAccessibilityNodeProvider(android.view.View) -> getAccessibilityNodeProvider
    boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> performAccessibilityAction
android.support.v4.view.AccessibilityDelegateCompatJellyBean$AccessibilityDelegateBridgeJellyBean -> android.support.v4.view.AccessibilityDelegateCompatJellyBean$AccessibilityDelegateBridgeJellyBean:
    boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(android.view.View,java.lang.Object) -> onInitializeAccessibilityNodeInfo
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
    void sendAccessibilityEvent(android.view.View,int) -> sendAccessibilityEvent
    void sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent) -> sendAccessibilityEventUnchecked
    java.lang.Object getAccessibilityNodeProvider(android.view.View) -> getAccessibilityNodeProvider
    boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> performAccessibilityAction
android.support.v4.view.ActionProvider -> android.support.v4.view.ActionProvider:
    java.lang.String TAG -> TAG
    android.content.Context mContext -> mContext
    android.support.v4.view.ActionProvider$SubUiVisibilityListener mSubUiVisibilityListener -> mSubUiVisibilityListener
    android.support.v4.view.ActionProvider$VisibilityListener mVisibilityListener -> mVisibilityListener
    android.content.Context getContext() -> getContext
    android.view.View onCreateActionView() -> onCreateActionView
    android.view.View onCreateActionView(android.view.MenuItem) -> onCreateActionView
    boolean overridesItemVisibility() -> overridesItemVisibility
    boolean isVisible() -> isVisible
    void refreshVisibility() -> refreshVisibility
    boolean onPerformDefaultAction() -> onPerformDefaultAction
    boolean hasSubMenu() -> hasSubMenu
    void onPrepareSubMenu(android.view.SubMenu) -> onPrepareSubMenu
    void subUiVisibilityChanged(boolean) -> subUiVisibilityChanged
    void setSubUiVisibilityListener(android.support.v4.view.ActionProvider$SubUiVisibilityListener) -> setSubUiVisibilityListener
    void setVisibilityListener(android.support.v4.view.ActionProvider$VisibilityListener) -> setVisibilityListener
android.support.v4.view.ActionProvider$SubUiVisibilityListener -> android.support.v4.view.ActionProvider$SubUiVisibilityListener:
    void onSubUiVisibilityChanged(boolean) -> onSubUiVisibilityChanged
android.support.v4.view.ActionProvider$VisibilityListener -> android.support.v4.view.ActionProvider$VisibilityListener:
    void onActionProviderVisibilityChanged(boolean) -> onActionProviderVisibilityChanged
android.support.v4.view.GestureDetectorCompat -> android.support.v4.view.GestureDetectorCompat:
    android.support.v4.view.GestureDetectorCompat$GestureDetectorCompatImpl mImpl -> mImpl
    boolean isLongpressEnabled() -> isLongpressEnabled
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void setIsLongpressEnabled(boolean) -> setIsLongpressEnabled
    void setOnDoubleTapListener(android.view.GestureDetector$OnDoubleTapListener) -> setOnDoubleTapListener
android.support.v4.view.GestureDetectorCompat$GestureDetectorCompatImpl -> android.support.v4.view.GestureDetectorCompat$GestureDetectorCompatImpl:
    boolean isLongpressEnabled() -> isLongpressEnabled
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void setIsLongpressEnabled(boolean) -> setIsLongpressEnabled
    void setOnDoubleTapListener(android.view.GestureDetector$OnDoubleTapListener) -> setOnDoubleTapListener
android.support.v4.view.GestureDetectorCompat$GestureDetectorCompatImplBase -> android.support.v4.view.GestureDetectorCompat$GestureDetectorCompatImplBase:
    int mTouchSlopSquare -> mTouchSlopSquare
    int mDoubleTapSlopSquare -> mDoubleTapSlopSquare
    int mMinimumFlingVelocity -> mMinimumFlingVelocity
    int mMaximumFlingVelocity -> mMaximumFlingVelocity
    int LONGPRESS_TIMEOUT -> LONGPRESS_TIMEOUT
    int TAP_TIMEOUT -> TAP_TIMEOUT
    int DOUBLE_TAP_TIMEOUT -> DOUBLE_TAP_TIMEOUT
    int SHOW_PRESS -> SHOW_PRESS
    int LONG_PRESS -> LONG_PRESS
    int TAP -> TAP
    android.os.Handler mHandler -> mHandler
    android.view.GestureDetector$OnGestureListener mListener -> mListener
    android.view.GestureDetector$OnDoubleTapListener mDoubleTapListener -> mDoubleTapListener
    boolean mStillDown -> mStillDown
    boolean mDeferConfirmSingleTap -> mDeferConfirmSingleTap
    boolean mInLongPress -> mInLongPress
    boolean mAlwaysInTapRegion -> mAlwaysInTapRegion
    boolean mAlwaysInBiggerTapRegion -> mAlwaysInBiggerTapRegion
    android.view.MotionEvent mCurrentDownEvent -> mCurrentDownEvent
    android.view.MotionEvent mPreviousUpEvent -> mPreviousUpEvent
    boolean mIsDoubleTapping -> mIsDoubleTapping
    float mLastFocusX -> mLastFocusX
    float mLastFocusY -> mLastFocusY
    float mDownFocusX -> mDownFocusX
    float mDownFocusY -> mDownFocusY
    boolean mIsLongpressEnabled -> mIsLongpressEnabled
    android.view.VelocityTracker mVelocityTracker -> mVelocityTracker
    void init(android.content.Context) -> init
    void setOnDoubleTapListener(android.view.GestureDetector$OnDoubleTapListener) -> setOnDoubleTapListener
    void setIsLongpressEnabled(boolean) -> setIsLongpressEnabled
    boolean isLongpressEnabled() -> isLongpressEnabled
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void cancel() -> cancel
    void cancelTaps() -> cancelTaps
    boolean isConsideredDoubleTap(android.view.MotionEvent,android.view.MotionEvent,android.view.MotionEvent) -> isConsideredDoubleTap
    void dispatchLongPress() -> dispatchLongPress
    android.view.MotionEvent access$000(android.support.v4.view.GestureDetectorCompat$GestureDetectorCompatImplBase) -> access$000
    android.view.GestureDetector$OnGestureListener access$100(android.support.v4.view.GestureDetectorCompat$GestureDetectorCompatImplBase) -> access$100
    void access$200(android.support.v4.view.GestureDetectorCompat$GestureDetectorCompatImplBase) -> access$200
    android.view.GestureDetector$OnDoubleTapListener access$300(android.support.v4.view.GestureDetectorCompat$GestureDetectorCompatImplBase) -> access$300
    boolean access$400(android.support.v4.view.GestureDetectorCompat$GestureDetectorCompatImplBase) -> access$400
    boolean access$502(android.support.v4.view.GestureDetectorCompat$GestureDetectorCompatImplBase,boolean) -> access$502
android.support.v4.view.GestureDetectorCompat$GestureDetectorCompatImplBase$GestureHandler -> android.support.v4.view.GestureDetectorCompat$GestureDetectorCompatImplBase$GestureHandler:
    android.support.v4.view.GestureDetectorCompat$GestureDetectorCompatImplBase this$0 -> this$0
    void handleMessage(android.os.Message) -> handleMessage
android.support.v4.view.GestureDetectorCompat$GestureDetectorCompatImplJellybeanMr2 -> android.support.v4.view.GestureDetectorCompat$GestureDetectorCompatImplJellybeanMr2:
    android.view.GestureDetector mDetector -> mDetector
    boolean isLongpressEnabled() -> isLongpressEnabled
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void setIsLongpressEnabled(boolean) -> setIsLongpressEnabled
    void setOnDoubleTapListener(android.view.GestureDetector$OnDoubleTapListener) -> setOnDoubleTapListener
android.support.v4.view.GravityCompat -> android.support.v4.view.GravityCompat:
    android.support.v4.view.GravityCompat$GravityCompatImpl IMPL -> IMPL
    int RELATIVE_LAYOUT_DIRECTION -> RELATIVE_LAYOUT_DIRECTION
    int START -> START
    int END -> END
    int RELATIVE_HORIZONTAL_GRAVITY_MASK -> RELATIVE_HORIZONTAL_GRAVITY_MASK
    void apply(int,int,int,android.graphics.Rect,android.graphics.Rect,int) -> apply
    void apply(int,int,int,android.graphics.Rect,int,int,android.graphics.Rect,int) -> apply
    void applyDisplay(int,android.graphics.Rect,android.graphics.Rect,int) -> applyDisplay
    int getAbsoluteGravity(int,int) -> getAbsoluteGravity
android.support.v4.view.GravityCompat$GravityCompatImpl -> android.support.v4.view.GravityCompat$GravityCompatImpl:
    int getAbsoluteGravity(int,int) -> getAbsoluteGravity
    void apply(int,int,int,android.graphics.Rect,android.graphics.Rect,int) -> apply
    void apply(int,int,int,android.graphics.Rect,int,int,android.graphics.Rect,int) -> apply
    void applyDisplay(int,android.graphics.Rect,android.graphics.Rect,int) -> applyDisplay
android.support.v4.view.GravityCompat$GravityCompatImplBase -> android.support.v4.view.GravityCompat$GravityCompatImplBase:
    int getAbsoluteGravity(int,int) -> getAbsoluteGravity
    void apply(int,int,int,android.graphics.Rect,android.graphics.Rect,int) -> apply
    void apply(int,int,int,android.graphics.Rect,int,int,android.graphics.Rect,int) -> apply
    void applyDisplay(int,android.graphics.Rect,android.graphics.Rect,int) -> applyDisplay
android.support.v4.view.GravityCompat$GravityCompatImplJellybeanMr1 -> android.support.v4.view.GravityCompat$GravityCompatImplJellybeanMr1:
    int getAbsoluteGravity(int,int) -> getAbsoluteGravity
    void apply(int,int,int,android.graphics.Rect,android.graphics.Rect,int) -> apply
    void apply(int,int,int,android.graphics.Rect,int,int,android.graphics.Rect,int) -> apply
    void applyDisplay(int,android.graphics.Rect,android.graphics.Rect,int) -> applyDisplay
android.support.v4.view.GravityCompatJellybeanMr1 -> android.support.v4.view.GravityCompatJellybeanMr1:
    int getAbsoluteGravity(int,int) -> getAbsoluteGravity
    void apply(int,int,int,android.graphics.Rect,android.graphics.Rect,int) -> apply
    void apply(int,int,int,android.graphics.Rect,int,int,android.graphics.Rect,int) -> apply
    void applyDisplay(int,android.graphics.Rect,android.graphics.Rect,int) -> applyDisplay
android.support.v4.view.KeyEventCompat -> android.support.v4.view.KeyEventCompat:
    android.support.v4.view.KeyEventCompat$KeyEventVersionImpl IMPL -> IMPL
    int normalizeMetaState(int) -> normalizeMetaState
    boolean metaStateHasModifiers(int,int) -> metaStateHasModifiers
    boolean metaStateHasNoModifiers(int) -> metaStateHasNoModifiers
    boolean hasModifiers(android.view.KeyEvent,int) -> hasModifiers
    boolean hasNoModifiers(android.view.KeyEvent) -> hasNoModifiers
    void startTracking(android.view.KeyEvent) -> startTracking
    boolean isTracking(android.view.KeyEvent) -> isTracking
    java.lang.Object getKeyDispatcherState(android.view.View) -> getKeyDispatcherState
    boolean dispatch(android.view.KeyEvent,android.view.KeyEvent$Callback,java.lang.Object,java.lang.Object) -> dispatch
android.support.v4.view.KeyEventCompat$BaseKeyEventVersionImpl -> android.support.v4.view.KeyEventCompat$BaseKeyEventVersionImpl:
    int META_MODIFIER_MASK -> META_MODIFIER_MASK
    int META_ALL_MASK -> META_ALL_MASK
    int metaStateFilterDirectionalModifiers(int,int,int,int,int) -> metaStateFilterDirectionalModifiers
    int normalizeMetaState(int) -> normalizeMetaState
    boolean metaStateHasModifiers(int,int) -> metaStateHasModifiers
    boolean metaStateHasNoModifiers(int) -> metaStateHasNoModifiers
    void startTracking(android.view.KeyEvent) -> startTracking
    boolean isTracking(android.view.KeyEvent) -> isTracking
    java.lang.Object getKeyDispatcherState(android.view.View) -> getKeyDispatcherState
    boolean dispatch(android.view.KeyEvent,android.view.KeyEvent$Callback,java.lang.Object,java.lang.Object) -> dispatch
android.support.v4.view.KeyEventCompat$EclairKeyEventVersionImpl -> android.support.v4.view.KeyEventCompat$EclairKeyEventVersionImpl:
    void startTracking(android.view.KeyEvent) -> startTracking
    boolean isTracking(android.view.KeyEvent) -> isTracking
    java.lang.Object getKeyDispatcherState(android.view.View) -> getKeyDispatcherState
    boolean dispatch(android.view.KeyEvent,android.view.KeyEvent$Callback,java.lang.Object,java.lang.Object) -> dispatch
android.support.v4.view.KeyEventCompat$HoneycombKeyEventVersionImpl -> android.support.v4.view.KeyEventCompat$HoneycombKeyEventVersionImpl:
    int normalizeMetaState(int) -> normalizeMetaState
    boolean metaStateHasModifiers(int,int) -> metaStateHasModifiers
    boolean metaStateHasNoModifiers(int) -> metaStateHasNoModifiers
android.support.v4.view.KeyEventCompat$KeyEventVersionImpl -> android.support.v4.view.KeyEventCompat$KeyEventVersionImpl:
    int normalizeMetaState(int) -> normalizeMetaState
    boolean metaStateHasModifiers(int,int) -> metaStateHasModifiers
    boolean metaStateHasNoModifiers(int) -> metaStateHasNoModifiers
    void startTracking(android.view.KeyEvent) -> startTracking
    boolean isTracking(android.view.KeyEvent) -> isTracking
    java.lang.Object getKeyDispatcherState(android.view.View) -> getKeyDispatcherState
    boolean dispatch(android.view.KeyEvent,android.view.KeyEvent$Callback,java.lang.Object,java.lang.Object) -> dispatch
android.support.v4.view.KeyEventCompatEclair -> android.support.v4.view.KeyEventCompatEclair:
    java.lang.Object getKeyDispatcherState(android.view.View) -> getKeyDispatcherState
    boolean dispatch(android.view.KeyEvent,android.view.KeyEvent$Callback,java.lang.Object,java.lang.Object) -> dispatch
    void startTracking(android.view.KeyEvent) -> startTracking
    boolean isTracking(android.view.KeyEvent) -> isTracking
android.support.v4.view.KeyEventCompatHoneycomb -> android.support.v4.view.KeyEventCompatHoneycomb:
    int normalizeMetaState(int) -> normalizeMetaState
    boolean metaStateHasModifiers(int,int) -> metaStateHasModifiers
    boolean metaStateHasNoModifiers(int) -> metaStateHasNoModifiers
android.support.v4.view.MarginLayoutParamsCompat -> android.support.v4.view.MarginLayoutParamsCompat:
    android.support.v4.view.MarginLayoutParamsCompat$MarginLayoutParamsCompatImpl IMPL -> IMPL
    int getMarginStart(android.view.ViewGroup$MarginLayoutParams) -> getMarginStart
    int getMarginEnd(android.view.ViewGroup$MarginLayoutParams) -> getMarginEnd
    void setMarginStart(android.view.ViewGroup$MarginLayoutParams,int) -> setMarginStart
    void setMarginEnd(android.view.ViewGroup$MarginLayoutParams,int) -> setMarginEnd
    boolean isMarginRelative(android.view.ViewGroup$MarginLayoutParams) -> isMarginRelative
    int getLayoutDirection(android.view.ViewGroup$MarginLayoutParams) -> getLayoutDirection
    void setLayoutDirection(android.view.ViewGroup$MarginLayoutParams,int) -> setLayoutDirection
    void resolveLayoutDirection(android.view.ViewGroup$MarginLayoutParams,int) -> resolveLayoutDirection
android.support.v4.view.MarginLayoutParamsCompat$MarginLayoutParamsCompatImpl -> android.support.v4.view.MarginLayoutParamsCompat$MarginLayoutParamsCompatImpl:
    int getMarginStart(android.view.ViewGroup$MarginLayoutParams) -> getMarginStart
    int getMarginEnd(android.view.ViewGroup$MarginLayoutParams) -> getMarginEnd
    void setMarginStart(android.view.ViewGroup$MarginLayoutParams,int) -> setMarginStart
    void setMarginEnd(android.view.ViewGroup$MarginLayoutParams,int) -> setMarginEnd
    boolean isMarginRelative(android.view.ViewGroup$MarginLayoutParams) -> isMarginRelative
    int getLayoutDirection(android.view.ViewGroup$MarginLayoutParams) -> getLayoutDirection
    void setLayoutDirection(android.view.ViewGroup$MarginLayoutParams,int) -> setLayoutDirection
    void resolveLayoutDirection(android.view.ViewGroup$MarginLayoutParams,int) -> resolveLayoutDirection
android.support.v4.view.MarginLayoutParamsCompat$MarginLayoutParamsCompatImplBase -> android.support.v4.view.MarginLayoutParamsCompat$MarginLayoutParamsCompatImplBase:
    int getMarginStart(android.view.ViewGroup$MarginLayoutParams) -> getMarginStart
    int getMarginEnd(android.view.ViewGroup$MarginLayoutParams) -> getMarginEnd
    void setMarginStart(android.view.ViewGroup$MarginLayoutParams,int) -> setMarginStart
    void setMarginEnd(android.view.ViewGroup$MarginLayoutParams,int) -> setMarginEnd
    boolean isMarginRelative(android.view.ViewGroup$MarginLayoutParams) -> isMarginRelative
    int getLayoutDirection(android.view.ViewGroup$MarginLayoutParams) -> getLayoutDirection
    void setLayoutDirection(android.view.ViewGroup$MarginLayoutParams,int) -> setLayoutDirection
    void resolveLayoutDirection(android.view.ViewGroup$MarginLayoutParams,int) -> resolveLayoutDirection
android.support.v4.view.MarginLayoutParamsCompat$MarginLayoutParamsCompatImplJbMr1 -> android.support.v4.view.MarginLayoutParamsCompat$MarginLayoutParamsCompatImplJbMr1:
    int getMarginStart(android.view.ViewGroup$MarginLayoutParams) -> getMarginStart
    int getMarginEnd(android.view.ViewGroup$MarginLayoutParams) -> getMarginEnd
    void setMarginStart(android.view.ViewGroup$MarginLayoutParams,int) -> setMarginStart
    void setMarginEnd(android.view.ViewGroup$MarginLayoutParams,int) -> setMarginEnd
    boolean isMarginRelative(android.view.ViewGroup$MarginLayoutParams) -> isMarginRelative
    int getLayoutDirection(android.view.ViewGroup$MarginLayoutParams) -> getLayoutDirection
    void setLayoutDirection(android.view.ViewGroup$MarginLayoutParams,int) -> setLayoutDirection
    void resolveLayoutDirection(android.view.ViewGroup$MarginLayoutParams,int) -> resolveLayoutDirection
android.support.v4.view.MarginLayoutParamsCompatJellybeanMr1 -> android.support.v4.view.MarginLayoutParamsCompatJellybeanMr1:
    int getMarginStart(android.view.ViewGroup$MarginLayoutParams) -> getMarginStart
    int getMarginEnd(android.view.ViewGroup$MarginLayoutParams) -> getMarginEnd
    void setMarginStart(android.view.ViewGroup$MarginLayoutParams,int) -> setMarginStart
    void setMarginEnd(android.view.ViewGroup$MarginLayoutParams,int) -> setMarginEnd
    boolean isMarginRelative(android.view.ViewGroup$MarginLayoutParams) -> isMarginRelative
    int getLayoutDirection(android.view.ViewGroup$MarginLayoutParams) -> getLayoutDirection
    void setLayoutDirection(android.view.ViewGroup$MarginLayoutParams,int) -> setLayoutDirection
    void resolveLayoutDirection(android.view.ViewGroup$MarginLayoutParams,int) -> resolveLayoutDirection
android.support.v4.view.MenuCompat -> android.support.v4.view.MenuCompat:
    void setShowAsAction(android.view.MenuItem,int) -> setShowAsAction
android.support.v4.view.MenuItemCompat -> android.support.v4.view.MenuItemCompat:
    java.lang.String TAG -> TAG
    int SHOW_AS_ACTION_NEVER -> SHOW_AS_ACTION_NEVER
    int SHOW_AS_ACTION_IF_ROOM -> SHOW_AS_ACTION_IF_ROOM
    int SHOW_AS_ACTION_ALWAYS -> SHOW_AS_ACTION_ALWAYS
    int SHOW_AS_ACTION_WITH_TEXT -> SHOW_AS_ACTION_WITH_TEXT
    int SHOW_AS_ACTION_COLLAPSE_ACTION_VIEW -> SHOW_AS_ACTION_COLLAPSE_ACTION_VIEW
    android.support.v4.view.MenuItemCompat$MenuVersionImpl IMPL -> IMPL
    void setShowAsAction(android.view.MenuItem,int) -> setShowAsAction
    android.view.MenuItem setActionView(android.view.MenuItem,android.view.View) -> setActionView
    android.view.MenuItem setActionView(android.view.MenuItem,int) -> setActionView
    android.view.View getActionView(android.view.MenuItem) -> getActionView
    android.view.MenuItem setActionProvider(android.view.MenuItem,android.support.v4.view.ActionProvider) -> setActionProvider
    android.support.v4.view.ActionProvider getActionProvider(android.view.MenuItem) -> getActionProvider
    boolean expandActionView(android.view.MenuItem) -> expandActionView
    boolean collapseActionView(android.view.MenuItem) -> collapseActionView
    boolean isActionViewExpanded(android.view.MenuItem) -> isActionViewExpanded
    android.view.MenuItem setOnActionExpandListener(android.view.MenuItem,android.support.v4.view.MenuItemCompat$OnActionExpandListener) -> setOnActionExpandListener
android.support.v4.view.MenuItemCompat$BaseMenuVersionImpl -> android.support.v4.view.MenuItemCompat$BaseMenuVersionImpl:
    void setShowAsAction(android.view.MenuItem,int) -> setShowAsAction
    android.view.MenuItem setActionView(android.view.MenuItem,android.view.View) -> setActionView
    android.view.MenuItem setActionView(android.view.MenuItem,int) -> setActionView
    android.view.View getActionView(android.view.MenuItem) -> getActionView
    boolean expandActionView(android.view.MenuItem) -> expandActionView
    boolean collapseActionView(android.view.MenuItem) -> collapseActionView
    boolean isActionViewExpanded(android.view.MenuItem) -> isActionViewExpanded
    android.view.MenuItem setOnActionExpandListener(android.view.MenuItem,android.support.v4.view.MenuItemCompat$OnActionExpandListener) -> setOnActionExpandListener
android.support.v4.view.MenuItemCompat$HoneycombMenuVersionImpl -> android.support.v4.view.MenuItemCompat$HoneycombMenuVersionImpl:
    void setShowAsAction(android.view.MenuItem,int) -> setShowAsAction
    android.view.MenuItem setActionView(android.view.MenuItem,android.view.View) -> setActionView
    android.view.MenuItem setActionView(android.view.MenuItem,int) -> setActionView
    android.view.View getActionView(android.view.MenuItem) -> getActionView
    boolean expandActionView(android.view.MenuItem) -> expandActionView
    boolean collapseActionView(android.view.MenuItem) -> collapseActionView
    boolean isActionViewExpanded(android.view.MenuItem) -> isActionViewExpanded
    android.view.MenuItem setOnActionExpandListener(android.view.MenuItem,android.support.v4.view.MenuItemCompat$OnActionExpandListener) -> setOnActionExpandListener
android.support.v4.view.MenuItemCompat$IcsMenuVersionImpl -> android.support.v4.view.MenuItemCompat$IcsMenuVersionImpl:
    boolean expandActionView(android.view.MenuItem) -> expandActionView
    boolean collapseActionView(android.view.MenuItem) -> collapseActionView
    boolean isActionViewExpanded(android.view.MenuItem) -> isActionViewExpanded
    android.view.MenuItem setOnActionExpandListener(android.view.MenuItem,android.support.v4.view.MenuItemCompat$OnActionExpandListener) -> setOnActionExpandListener
android.support.v4.view.MenuItemCompat$IcsMenuVersionImpl$1 -> android.support.v4.view.MenuItemCompat$IcsMenuVersionImpl$1:
    android.support.v4.view.MenuItemCompat$OnActionExpandListener val$listener -> val$listener
    android.support.v4.view.MenuItemCompat$IcsMenuVersionImpl this$0 -> this$0
    boolean onMenuItemActionExpand(android.view.MenuItem) -> onMenuItemActionExpand
    boolean onMenuItemActionCollapse(android.view.MenuItem) -> onMenuItemActionCollapse
android.support.v4.view.MenuItemCompat$MenuVersionImpl -> android.support.v4.view.MenuItemCompat$MenuVersionImpl:
    void setShowAsAction(android.view.MenuItem,int) -> setShowAsAction
    android.view.MenuItem setActionView(android.view.MenuItem,android.view.View) -> setActionView
    android.view.MenuItem setActionView(android.view.MenuItem,int) -> setActionView
    android.view.View getActionView(android.view.MenuItem) -> getActionView
    boolean expandActionView(android.view.MenuItem) -> expandActionView
    boolean collapseActionView(android.view.MenuItem) -> collapseActionView
    boolean isActionViewExpanded(android.view.MenuItem) -> isActionViewExpanded
    android.view.MenuItem setOnActionExpandListener(android.view.MenuItem,android.support.v4.view.MenuItemCompat$OnActionExpandListener) -> setOnActionExpandListener
android.support.v4.view.MenuItemCompat$OnActionExpandListener -> android.support.v4.view.MenuItemCompat$OnActionExpandListener:
    boolean onMenuItemActionExpand(android.view.MenuItem) -> onMenuItemActionExpand
    boolean onMenuItemActionCollapse(android.view.MenuItem) -> onMenuItemActionCollapse
android.support.v4.view.MenuItemCompatHoneycomb -> android.support.v4.view.MenuItemCompatHoneycomb:
    void setShowAsAction(android.view.MenuItem,int) -> setShowAsAction
    android.view.MenuItem setActionView(android.view.MenuItem,android.view.View) -> setActionView
    android.view.MenuItem setActionView(android.view.MenuItem,int) -> setActionView
    android.view.View getActionView(android.view.MenuItem) -> getActionView
android.support.v4.view.MenuItemCompatIcs -> android.support.v4.view.MenuItemCompatIcs:
    boolean expandActionView(android.view.MenuItem) -> expandActionView
    boolean collapseActionView(android.view.MenuItem) -> collapseActionView
    boolean isActionViewExpanded(android.view.MenuItem) -> isActionViewExpanded
    android.view.MenuItem setOnActionExpandListener(android.view.MenuItem,android.support.v4.view.MenuItemCompatIcs$SupportActionExpandProxy) -> setOnActionExpandListener
android.support.v4.view.MenuItemCompatIcs$OnActionExpandListenerWrapper -> android.support.v4.view.MenuItemCompatIcs$OnActionExpandListenerWrapper:
    android.support.v4.view.MenuItemCompatIcs$SupportActionExpandProxy mWrapped -> mWrapped
    boolean onMenuItemActionExpand(android.view.MenuItem) -> onMenuItemActionExpand
    boolean onMenuItemActionCollapse(android.view.MenuItem) -> onMenuItemActionCollapse
android.support.v4.view.MenuItemCompatIcs$SupportActionExpandProxy -> android.support.v4.view.MenuItemCompatIcs$SupportActionExpandProxy:
    boolean onMenuItemActionExpand(android.view.MenuItem) -> onMenuItemActionExpand
    boolean onMenuItemActionCollapse(android.view.MenuItem) -> onMenuItemActionCollapse
android.support.v4.view.MotionEventCompat -> android.support.v4.view.MotionEventCompat:
    android.support.v4.view.MotionEventCompat$MotionEventVersionImpl IMPL -> IMPL
    int ACTION_MASK -> ACTION_MASK
    int ACTION_POINTER_DOWN -> ACTION_POINTER_DOWN
    int ACTION_POINTER_UP -> ACTION_POINTER_UP
    int ACTION_HOVER_MOVE -> ACTION_HOVER_MOVE
    int ACTION_SCROLL -> ACTION_SCROLL
    int ACTION_POINTER_INDEX_MASK -> ACTION_POINTER_INDEX_MASK
    int ACTION_POINTER_INDEX_SHIFT -> ACTION_POINTER_INDEX_SHIFT
    int ACTION_HOVER_ENTER -> ACTION_HOVER_ENTER
    int ACTION_HOVER_EXIT -> ACTION_HOVER_EXIT
    int getActionMasked(android.view.MotionEvent) -> getActionMasked
    int getActionIndex(android.view.MotionEvent) -> getActionIndex
    int findPointerIndex(android.view.MotionEvent,int) -> findPointerIndex
    int getPointerId(android.view.MotionEvent,int) -> getPointerId
    float getX(android.view.MotionEvent,int) -> getX
    float getY(android.view.MotionEvent,int) -> getY
    int getPointerCount(android.view.MotionEvent) -> getPointerCount
android.support.v4.view.MotionEventCompat$BaseMotionEventVersionImpl -> android.support.v4.view.MotionEventCompat$BaseMotionEventVersionImpl:
    int findPointerIndex(android.view.MotionEvent,int) -> findPointerIndex
    int getPointerId(android.view.MotionEvent,int) -> getPointerId
    float getX(android.view.MotionEvent,int) -> getX
    float getY(android.view.MotionEvent,int) -> getY
    int getPointerCount(android.view.MotionEvent) -> getPointerCount
android.support.v4.view.MotionEventCompat$EclairMotionEventVersionImpl -> android.support.v4.view.MotionEventCompat$EclairMotionEventVersionImpl:
    int findPointerIndex(android.view.MotionEvent,int) -> findPointerIndex
    int getPointerId(android.view.MotionEvent,int) -> getPointerId
    float getX(android.view.MotionEvent,int) -> getX
    float getY(android.view.MotionEvent,int) -> getY
    int getPointerCount(android.view.MotionEvent) -> getPointerCount
android.support.v4.view.MotionEventCompat$MotionEventVersionImpl -> android.support.v4.view.MotionEventCompat$MotionEventVersionImpl:
    int findPointerIndex(android.view.MotionEvent,int) -> findPointerIndex
    int getPointerId(android.view.MotionEvent,int) -> getPointerId
    float getX(android.view.MotionEvent,int) -> getX
    float getY(android.view.MotionEvent,int) -> getY
    int getPointerCount(android.view.MotionEvent) -> getPointerCount
android.support.v4.view.MotionEventCompatEclair -> android.support.v4.view.MotionEventCompatEclair:
    int findPointerIndex(android.view.MotionEvent,int) -> findPointerIndex
    int getPointerId(android.view.MotionEvent,int) -> getPointerId
    float getX(android.view.MotionEvent,int) -> getX
    float getY(android.view.MotionEvent,int) -> getY
    int getPointerCount(android.view.MotionEvent) -> getPointerCount
android.support.v4.view.PagerAdapter -> android.support.v4.view.PagerAdapter:
    android.database.DataSetObservable mObservable -> mObservable
    int POSITION_UNCHANGED -> POSITION_UNCHANGED
    int POSITION_NONE -> POSITION_NONE
    int getCount() -> getCount
    void startUpdate(android.view.ViewGroup) -> startUpdate
    java.lang.Object instantiateItem(android.view.ViewGroup,int) -> instantiateItem
    void destroyItem(android.view.ViewGroup,int,java.lang.Object) -> destroyItem
    void setPrimaryItem(android.view.ViewGroup,int,java.lang.Object) -> setPrimaryItem
    void finishUpdate(android.view.ViewGroup) -> finishUpdate
    void startUpdate(android.view.View) -> startUpdate
    java.lang.Object instantiateItem(android.view.View,int) -> instantiateItem
    void destroyItem(android.view.View,int,java.lang.Object) -> destroyItem
    void setPrimaryItem(android.view.View,int,java.lang.Object) -> setPrimaryItem
    void finishUpdate(android.view.View) -> finishUpdate
    boolean isViewFromObject(android.view.View,java.lang.Object) -> isViewFromObject
    android.os.Parcelable saveState() -> saveState
    void restoreState(android.os.Parcelable,java.lang.ClassLoader) -> restoreState
    int getItemPosition(java.lang.Object) -> getItemPosition
    void notifyDataSetChanged() -> notifyDataSetChanged
    void registerDataSetObserver(android.database.DataSetObserver) -> registerDataSetObserver
    void unregisterDataSetObserver(android.database.DataSetObserver) -> unregisterDataSetObserver
    java.lang.CharSequence getPageTitle(int) -> getPageTitle
    float getPageWidth(int) -> getPageWidth
android.support.v4.view.PagerTabStrip -> android.support.v4.view.PagerTabStrip:
    java.lang.String TAG -> TAG
    int INDICATOR_HEIGHT -> INDICATOR_HEIGHT
    int MIN_PADDING_BOTTOM -> MIN_PADDING_BOTTOM
    int TAB_PADDING -> TAB_PADDING
    int TAB_SPACING -> TAB_SPACING
    int MIN_TEXT_SPACING -> MIN_TEXT_SPACING
    int FULL_UNDERLINE_HEIGHT -> FULL_UNDERLINE_HEIGHT
    int MIN_STRIP_HEIGHT -> MIN_STRIP_HEIGHT
    int mIndicatorColor -> mIndicatorColor
    int mIndicatorHeight -> mIndicatorHeight
    int mMinPaddingBottom -> mMinPaddingBottom
    int mMinTextSpacing -> mMinTextSpacing
    int mMinStripHeight -> mMinStripHeight
    int mTabPadding -> mTabPadding
    android.graphics.Paint mTabPaint -> mTabPaint
    android.graphics.Rect mTempRect -> mTempRect
    int mTabAlpha -> mTabAlpha
    boolean mDrawFullUnderline -> mDrawFullUnderline
    boolean mDrawFullUnderlineSet -> mDrawFullUnderlineSet
    int mFullUnderlineHeight -> mFullUnderlineHeight
    boolean mIgnoreTap -> mIgnoreTap
    float mInitialMotionX -> mInitialMotionX
    float mInitialMotionY -> mInitialMotionY
    int mTouchSlop -> mTouchSlop
    void setTabIndicatorColor(int) -> setTabIndicatorColor
    void setTabIndicatorColorResource(int) -> setTabIndicatorColorResource
    int getTabIndicatorColor() -> getTabIndicatorColor
    void setPadding(int,int,int,int) -> setPadding
    void setTextSpacing(int) -> setTextSpacing
    void setBackgroundDrawable(android.graphics.drawable.Drawable) -> setBackgroundDrawable
    void setBackgroundColor(int) -> setBackgroundColor
    void setBackgroundResource(int) -> setBackgroundResource
    void setDrawFullUnderline(boolean) -> setDrawFullUnderline
    boolean getDrawFullUnderline() -> getDrawFullUnderline
    int getMinHeight() -> getMinHeight
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void onDraw(android.graphics.Canvas) -> onDraw
    void updateTextPositions(int,float,boolean) -> updateTextPositions
android.support.v4.view.PagerTabStrip$1 -> android.support.v4.view.PagerTabStrip$1:
    android.support.v4.view.PagerTabStrip this$0 -> this$0
    void onClick(android.view.View) -> onClick
android.support.v4.view.PagerTabStrip$2 -> android.support.v4.view.PagerTabStrip$2:
    android.support.v4.view.PagerTabStrip this$0 -> this$0
    void onClick(android.view.View) -> onClick
android.support.v4.view.PagerTitleStrip -> android.support.v4.view.PagerTitleStrip:
    java.lang.String TAG -> TAG
    android.support.v4.view.ViewPager mPager -> mPager
    android.widget.TextView mPrevText -> mPrevText
    android.widget.TextView mCurrText -> mCurrText
    android.widget.TextView mNextText -> mNextText
    int mLastKnownCurrentPage -> mLastKnownCurrentPage
    float mLastKnownPositionOffset -> mLastKnownPositionOffset
    int mScaledTextSpacing -> mScaledTextSpacing
    int mGravity -> mGravity
    boolean mUpdatingText -> mUpdatingText
    boolean mUpdatingPositions -> mUpdatingPositions
    android.support.v4.view.PagerTitleStrip$PageListener mPageListener -> mPageListener
    java.lang.ref.WeakReference mWatchingAdapter -> mWatchingAdapter
    int[] ATTRS -> ATTRS
    int[] TEXT_ATTRS -> TEXT_ATTRS
    float SIDE_ALPHA -> SIDE_ALPHA
    int TEXT_SPACING -> TEXT_SPACING
    int mNonPrimaryAlpha -> mNonPrimaryAlpha
    int mTextColor -> mTextColor
    android.support.v4.view.PagerTitleStrip$PagerTitleStripImpl IMPL -> IMPL
    void setSingleLineAllCaps(android.widget.TextView) -> setSingleLineAllCaps
    void setTextSpacing(int) -> setTextSpacing
    int getTextSpacing() -> getTextSpacing
    void setNonPrimaryAlpha(float) -> setNonPrimaryAlpha
    void setTextColor(int) -> setTextColor
    void setTextSize(int,float) -> setTextSize
    void setGravity(int) -> setGravity
    void onAttachedToWindow() -> onAttachedToWindow
    void onDetachedFromWindow() -> onDetachedFromWindow
    void updateText(int,android.support.v4.view.PagerAdapter) -> updateText
    void requestLayout() -> requestLayout
    void updateAdapter(android.support.v4.view.PagerAdapter,android.support.v4.view.PagerAdapter) -> updateAdapter
    void updateTextPositions(int,float,boolean) -> updateTextPositions
    void onMeasure(int,int) -> onMeasure
    void onLayout(boolean,int,int,int,int) -> onLayout
    int getMinHeight() -> getMinHeight
    float access$100(android.support.v4.view.PagerTitleStrip) -> access$100
android.support.v4.view.PagerTitleStrip$1 -> android.support.v4.view.PagerTitleStrip$1:
android.support.v4.view.PagerTitleStrip$PageListener -> android.support.v4.view.PagerTitleStrip$PageListener:
    int mScrollState -> mScrollState
    android.support.v4.view.PagerTitleStrip this$0 -> this$0
    void onPageScrolled(int,float,int) -> onPageScrolled
    void onPageSelected(int) -> onPageSelected
    void onPageScrollStateChanged(int) -> onPageScrollStateChanged
    void onAdapterChanged(android.support.v4.view.PagerAdapter,android.support.v4.view.PagerAdapter) -> onAdapterChanged
    void onChanged() -> onChanged
android.support.v4.view.PagerTitleStrip$PagerTitleStripImpl -> android.support.v4.view.PagerTitleStrip$PagerTitleStripImpl:
    void setSingleLineAllCaps(android.widget.TextView) -> setSingleLineAllCaps
android.support.v4.view.PagerTitleStrip$PagerTitleStripImplBase -> android.support.v4.view.PagerTitleStrip$PagerTitleStripImplBase:
    void setSingleLineAllCaps(android.widget.TextView) -> setSingleLineAllCaps
android.support.v4.view.PagerTitleStrip$PagerTitleStripImplIcs -> android.support.v4.view.PagerTitleStrip$PagerTitleStripImplIcs:
    void setSingleLineAllCaps(android.widget.TextView) -> setSingleLineAllCaps
android.support.v4.view.PagerTitleStripIcs -> android.support.v4.view.PagerTitleStripIcs:
    void setSingleLineAllCaps(android.widget.TextView) -> setSingleLineAllCaps
android.support.v4.view.PagerTitleStripIcs$SingleLineAllCapsTransform -> android.support.v4.view.PagerTitleStripIcs$SingleLineAllCapsTransform:
    java.lang.String TAG -> TAG
    java.util.Locale mLocale -> mLocale
    java.lang.CharSequence getTransformation(java.lang.CharSequence,android.view.View) -> getTransformation
android.support.v4.view.ScaleGestureDetectorCompat -> android.support.v4.view.ScaleGestureDetectorCompat:
    android.support.v4.view.ScaleGestureDetectorCompat$ScaleGestureDetectorImpl IMPL -> IMPL
    void setQuickScaleEnabled(java.lang.Object,boolean) -> setQuickScaleEnabled
    boolean isQuickScaleEnabled(java.lang.Object) -> isQuickScaleEnabled
android.support.v4.view.ScaleGestureDetectorCompat$1 -> android.support.v4.view.ScaleGestureDetectorCompat$1:
android.support.v4.view.ScaleGestureDetectorCompat$BaseScaleGestureDetectorImpl -> android.support.v4.view.ScaleGestureDetectorCompat$BaseScaleGestureDetectorImpl:
    void setQuickScaleEnabled(java.lang.Object,boolean) -> setQuickScaleEnabled
    boolean isQuickScaleEnabled(java.lang.Object) -> isQuickScaleEnabled
android.support.v4.view.ScaleGestureDetectorCompat$ScaleGestureDetectorCompatKitKatImpl -> android.support.v4.view.ScaleGestureDetectorCompat$ScaleGestureDetectorCompatKitKatImpl:
    void setQuickScaleEnabled(java.lang.Object,boolean) -> setQuickScaleEnabled
    boolean isQuickScaleEnabled(java.lang.Object) -> isQuickScaleEnabled
android.support.v4.view.ScaleGestureDetectorCompat$ScaleGestureDetectorImpl -> android.support.v4.view.ScaleGestureDetectorCompat$ScaleGestureDetectorImpl:
    void setQuickScaleEnabled(java.lang.Object,boolean) -> setQuickScaleEnabled
    boolean isQuickScaleEnabled(java.lang.Object) -> isQuickScaleEnabled
android.support.v4.view.ScaleGestureDetectorCompatKitKat -> android.support.v4.view.ScaleGestureDetectorCompatKitKat:
    void setQuickScaleEnabled(java.lang.Object,boolean) -> setQuickScaleEnabled
    boolean isQuickScaleEnabled(java.lang.Object) -> isQuickScaleEnabled
android.support.v4.view.VelocityTrackerCompat -> android.support.v4.view.VelocityTrackerCompat:
    android.support.v4.view.VelocityTrackerCompat$VelocityTrackerVersionImpl IMPL -> IMPL
    float getXVelocity(android.view.VelocityTracker,int) -> getXVelocity
    float getYVelocity(android.view.VelocityTracker,int) -> getYVelocity
android.support.v4.view.VelocityTrackerCompat$BaseVelocityTrackerVersionImpl -> android.support.v4.view.VelocityTrackerCompat$BaseVelocityTrackerVersionImpl:
    float getXVelocity(android.view.VelocityTracker,int) -> getXVelocity
    float getYVelocity(android.view.VelocityTracker,int) -> getYVelocity
android.support.v4.view.VelocityTrackerCompat$HoneycombVelocityTrackerVersionImpl -> android.support.v4.view.VelocityTrackerCompat$HoneycombVelocityTrackerVersionImpl:
    float getXVelocity(android.view.VelocityTracker,int) -> getXVelocity
    float getYVelocity(android.view.VelocityTracker,int) -> getYVelocity
android.support.v4.view.VelocityTrackerCompat$VelocityTrackerVersionImpl -> android.support.v4.view.VelocityTrackerCompat$VelocityTrackerVersionImpl:
    float getXVelocity(android.view.VelocityTracker,int) -> getXVelocity
    float getYVelocity(android.view.VelocityTracker,int) -> getYVelocity
android.support.v4.view.VelocityTrackerCompatHoneycomb -> android.support.v4.view.VelocityTrackerCompatHoneycomb:
    float getXVelocity(android.view.VelocityTracker,int) -> getXVelocity
    float getYVelocity(android.view.VelocityTracker,int) -> getYVelocity
android.support.v4.view.ViewCompat -> android.support.v4.view.ViewCompat:
    int OVER_SCROLL_ALWAYS -> OVER_SCROLL_ALWAYS
    int OVER_SCROLL_IF_CONTENT_SCROLLS -> OVER_SCROLL_IF_CONTENT_SCROLLS
    int OVER_SCROLL_NEVER -> OVER_SCROLL_NEVER
    long FAKE_FRAME_TIME -> FAKE_FRAME_TIME
    int IMPORTANT_FOR_ACCESSIBILITY_AUTO -> IMPORTANT_FOR_ACCESSIBILITY_AUTO
    int IMPORTANT_FOR_ACCESSIBILITY_YES -> IMPORTANT_FOR_ACCESSIBILITY_YES
    int IMPORTANT_FOR_ACCESSIBILITY_NO -> IMPORTANT_FOR_ACCESSIBILITY_NO
    int IMPORTANT_FOR_ACCESSIBILITY_NO_HIDE_DESCENDANTS -> IMPORTANT_FOR_ACCESSIBILITY_NO_HIDE_DESCENDANTS
    int ACCESSIBILITY_LIVE_REGION_NONE -> ACCESSIBILITY_LIVE_REGION_NONE
    int ACCESSIBILITY_LIVE_REGION_POLITE -> ACCESSIBILITY_LIVE_REGION_POLITE
    int ACCESSIBILITY_LIVE_REGION_ASSERTIVE -> ACCESSIBILITY_LIVE_REGION_ASSERTIVE
    int LAYER_TYPE_NONE -> LAYER_TYPE_NONE
    int LAYER_TYPE_SOFTWARE -> LAYER_TYPE_SOFTWARE
    int LAYER_TYPE_HARDWARE -> LAYER_TYPE_HARDWARE
    int LAYOUT_DIRECTION_LTR -> LAYOUT_DIRECTION_LTR
    int LAYOUT_DIRECTION_RTL -> LAYOUT_DIRECTION_RTL
    int LAYOUT_DIRECTION_INHERIT -> LAYOUT_DIRECTION_INHERIT
    int LAYOUT_DIRECTION_LOCALE -> LAYOUT_DIRECTION_LOCALE
    int MEASURED_SIZE_MASK -> MEASURED_SIZE_MASK
    int MEASURED_STATE_MASK -> MEASURED_STATE_MASK
    int MEASURED_HEIGHT_STATE_SHIFT -> MEASURED_HEIGHT_STATE_SHIFT
    int MEASURED_STATE_TOO_SMALL -> MEASURED_STATE_TOO_SMALL
    android.support.v4.view.ViewCompat$ViewCompatImpl IMPL -> IMPL
    boolean canScrollHorizontally(android.view.View,int) -> canScrollHorizontally
    boolean canScrollVertically(android.view.View,int) -> canScrollVertically
    int getOverScrollMode(android.view.View) -> getOverScrollMode
    void setOverScrollMode(android.view.View,int) -> setOverScrollMode
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
    void setAccessibilityDelegate(android.view.View,android.support.v4.view.AccessibilityDelegateCompat) -> setAccessibilityDelegate
    boolean hasTransientState(android.view.View) -> hasTransientState
    void setHasTransientState(android.view.View,boolean) -> setHasTransientState
    void postInvalidateOnAnimation(android.view.View) -> postInvalidateOnAnimation
    void postInvalidateOnAnimation(android.view.View,int,int,int,int) -> postInvalidateOnAnimation
    void postOnAnimation(android.view.View,java.lang.Runnable) -> postOnAnimation
    void postOnAnimationDelayed(android.view.View,java.lang.Runnable,long) -> postOnAnimationDelayed
    int getImportantForAccessibility(android.view.View) -> getImportantForAccessibility
    void setImportantForAccessibility(android.view.View,int) -> setImportantForAccessibility
    boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> performAccessibilityAction
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat getAccessibilityNodeProvider(android.view.View) -> getAccessibilityNodeProvider
    float getAlpha(android.view.View) -> getAlpha
    void setLayerType(android.view.View,int,android.graphics.Paint) -> setLayerType
    int getLayerType(android.view.View) -> getLayerType
    int getLabelFor(android.view.View) -> getLabelFor
    void setLabelFor(android.view.View,int) -> setLabelFor
    void setLayerPaint(android.view.View,android.graphics.Paint) -> setLayerPaint
    int getLayoutDirection(android.view.View) -> getLayoutDirection
    void setLayoutDirection(android.view.View,int) -> setLayoutDirection
    android.view.ViewParent getParentForAccessibility(android.view.View) -> getParentForAccessibility
    boolean isOpaque(android.view.View) -> isOpaque
    int resolveSizeAndState(int,int,int) -> resolveSizeAndState
    int getMeasuredWidthAndState(android.view.View) -> getMeasuredWidthAndState
    int getMeasuredHeightAndState(android.view.View) -> getMeasuredHeightAndState
    int getMeasuredState(android.view.View) -> getMeasuredState
    int getAccessibilityLiveRegion(android.view.View) -> getAccessibilityLiveRegion
    void setAccessibilityLiveRegion(android.view.View,int) -> setAccessibilityLiveRegion
    int[] mergeDrawableStates(int[],int[]) -> mergeDrawableStates
android.support.v4.view.ViewCompat$BaseViewCompatImpl -> android.support.v4.view.ViewCompat$BaseViewCompatImpl:
    boolean canScrollHorizontally(android.view.View,int) -> canScrollHorizontally
    boolean canScrollVertically(android.view.View,int) -> canScrollVertically
    int getOverScrollMode(android.view.View) -> getOverScrollMode
    void setOverScrollMode(android.view.View,int) -> setOverScrollMode
    void setAccessibilityDelegate(android.view.View,android.support.v4.view.AccessibilityDelegateCompat) -> setAccessibilityDelegate
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
    boolean hasTransientState(android.view.View) -> hasTransientState
    void setHasTransientState(android.view.View,boolean) -> setHasTransientState
    void postInvalidateOnAnimation(android.view.View) -> postInvalidateOnAnimation
    void postInvalidateOnAnimation(android.view.View,int,int,int,int) -> postInvalidateOnAnimation
    void postOnAnimation(android.view.View,java.lang.Runnable) -> postOnAnimation
    void postOnAnimationDelayed(android.view.View,java.lang.Runnable,long) -> postOnAnimationDelayed
    long getFrameTime() -> getFrameTime
    int getImportantForAccessibility(android.view.View) -> getImportantForAccessibility
    void setImportantForAccessibility(android.view.View,int) -> setImportantForAccessibility
    boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> performAccessibilityAction
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat getAccessibilityNodeProvider(android.view.View) -> getAccessibilityNodeProvider
    float getAlpha(android.view.View) -> getAlpha
    void setLayerType(android.view.View,int,android.graphics.Paint) -> setLayerType
    int getLayerType(android.view.View) -> getLayerType
    int getLabelFor(android.view.View) -> getLabelFor
    void setLabelFor(android.view.View,int) -> setLabelFor
    void setLayerPaint(android.view.View,android.graphics.Paint) -> setLayerPaint
    int getLayoutDirection(android.view.View) -> getLayoutDirection
    void setLayoutDirection(android.view.View,int) -> setLayoutDirection
    android.view.ViewParent getParentForAccessibility(android.view.View) -> getParentForAccessibility
    boolean isOpaque(android.view.View) -> isOpaque
    int resolveSizeAndState(int,int,int) -> resolveSizeAndState
    int getMeasuredWidthAndState(android.view.View) -> getMeasuredWidthAndState
    int getMeasuredHeightAndState(android.view.View) -> getMeasuredHeightAndState
    int getMeasuredState(android.view.View) -> getMeasuredState
    int getAccessibilityLiveRegion(android.view.View) -> getAccessibilityLiveRegion
    void setAccessibilityLiveRegion(android.view.View,int) -> setAccessibilityLiveRegion
    int[] mergeDrawableStates(int[],int[]) -> mergeDrawableStates
android.support.v4.view.ViewCompat$EclairMr1ViewCompatImpl -> android.support.v4.view.ViewCompat$EclairMr1ViewCompatImpl:
    boolean isOpaque(android.view.View) -> isOpaque
android.support.v4.view.ViewCompat$GBViewCompatImpl -> android.support.v4.view.ViewCompat$GBViewCompatImpl:
    int getOverScrollMode(android.view.View) -> getOverScrollMode
    void setOverScrollMode(android.view.View,int) -> setOverScrollMode
android.support.v4.view.ViewCompat$HCViewCompatImpl -> android.support.v4.view.ViewCompat$HCViewCompatImpl:
    long getFrameTime() -> getFrameTime
    float getAlpha(android.view.View) -> getAlpha
    void setLayerType(android.view.View,int,android.graphics.Paint) -> setLayerType
    int getLayerType(android.view.View) -> getLayerType
    void setLayerPaint(android.view.View,android.graphics.Paint) -> setLayerPaint
    int resolveSizeAndState(int,int,int) -> resolveSizeAndState
    int getMeasuredWidthAndState(android.view.View) -> getMeasuredWidthAndState
    int getMeasuredHeightAndState(android.view.View) -> getMeasuredHeightAndState
    int getMeasuredState(android.view.View) -> getMeasuredState
android.support.v4.view.ViewCompat$ICSViewCompatImpl -> android.support.v4.view.ViewCompat$ICSViewCompatImpl:
    boolean canScrollHorizontally(android.view.View,int) -> canScrollHorizontally
    boolean canScrollVertically(android.view.View,int) -> canScrollVertically
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
    void setAccessibilityDelegate(android.view.View,android.support.v4.view.AccessibilityDelegateCompat) -> setAccessibilityDelegate
android.support.v4.view.ViewCompat$JBViewCompatImpl -> android.support.v4.view.ViewCompat$JBViewCompatImpl:
    boolean hasTransientState(android.view.View) -> hasTransientState
    void setHasTransientState(android.view.View,boolean) -> setHasTransientState
    void postInvalidateOnAnimation(android.view.View) -> postInvalidateOnAnimation
    void postInvalidateOnAnimation(android.view.View,int,int,int,int) -> postInvalidateOnAnimation
    void postOnAnimation(android.view.View,java.lang.Runnable) -> postOnAnimation
    void postOnAnimationDelayed(android.view.View,java.lang.Runnable,long) -> postOnAnimationDelayed
    int getImportantForAccessibility(android.view.View) -> getImportantForAccessibility
    void setImportantForAccessibility(android.view.View,int) -> setImportantForAccessibility
    boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> performAccessibilityAction
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat getAccessibilityNodeProvider(android.view.View) -> getAccessibilityNodeProvider
    android.view.ViewParent getParentForAccessibility(android.view.View) -> getParentForAccessibility
android.support.v4.view.ViewCompat$JbMr1ViewCompatImpl -> android.support.v4.view.ViewCompat$JbMr1ViewCompatImpl:
    int getLabelFor(android.view.View) -> getLabelFor
    void setLabelFor(android.view.View,int) -> setLabelFor
    void setLayerPaint(android.view.View,android.graphics.Paint) -> setLayerPaint
    int getLayoutDirection(android.view.View) -> getLayoutDirection
    void setLayoutDirection(android.view.View,int) -> setLayoutDirection
android.support.v4.view.ViewCompat$KitKatViewCompatImpl -> android.support.v4.view.ViewCompat$KitKatViewCompatImpl:
    int getAccessibilityLiveRegion(android.view.View) -> getAccessibilityLiveRegion
    void setAccessibilityLiveRegion(android.view.View,int) -> setAccessibilityLiveRegion
android.support.v4.view.ViewCompat$ViewCompatImpl -> android.support.v4.view.ViewCompat$ViewCompatImpl:
    boolean canScrollHorizontally(android.view.View,int) -> canScrollHorizontally
    boolean canScrollVertically(android.view.View,int) -> canScrollVertically
    int getOverScrollMode(android.view.View) -> getOverScrollMode
    void setOverScrollMode(android.view.View,int) -> setOverScrollMode
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
    void setAccessibilityDelegate(android.view.View,android.support.v4.view.AccessibilityDelegateCompat) -> setAccessibilityDelegate
    boolean hasTransientState(android.view.View) -> hasTransientState
    void setHasTransientState(android.view.View,boolean) -> setHasTransientState
    void postInvalidateOnAnimation(android.view.View) -> postInvalidateOnAnimation
    void postInvalidateOnAnimation(android.view.View,int,int,int,int) -> postInvalidateOnAnimation
    void postOnAnimation(android.view.View,java.lang.Runnable) -> postOnAnimation
    void postOnAnimationDelayed(android.view.View,java.lang.Runnable,long) -> postOnAnimationDelayed
    int getImportantForAccessibility(android.view.View) -> getImportantForAccessibility
    void setImportantForAccessibility(android.view.View,int) -> setImportantForAccessibility
    boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> performAccessibilityAction
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat getAccessibilityNodeProvider(android.view.View) -> getAccessibilityNodeProvider
    float getAlpha(android.view.View) -> getAlpha
    void setLayerType(android.view.View,int,android.graphics.Paint) -> setLayerType
    int getLayerType(android.view.View) -> getLayerType
    int getLabelFor(android.view.View) -> getLabelFor
    void setLabelFor(android.view.View,int) -> setLabelFor
    void setLayerPaint(android.view.View,android.graphics.Paint) -> setLayerPaint
    int getLayoutDirection(android.view.View) -> getLayoutDirection
    void setLayoutDirection(android.view.View,int) -> setLayoutDirection
    android.view.ViewParent getParentForAccessibility(android.view.View) -> getParentForAccessibility
    boolean isOpaque(android.view.View) -> isOpaque
    int resolveSizeAndState(int,int,int) -> resolveSizeAndState
    int getMeasuredWidthAndState(android.view.View) -> getMeasuredWidthAndState
    int getMeasuredHeightAndState(android.view.View) -> getMeasuredHeightAndState
    int getMeasuredState(android.view.View) -> getMeasuredState
    int getAccessibilityLiveRegion(android.view.View) -> getAccessibilityLiveRegion
    void setAccessibilityLiveRegion(android.view.View,int) -> setAccessibilityLiveRegion
    int[] mergeDrawableStates(int[],int[]) -> mergeDrawableStates
android.support.v4.view.ViewCompatGingerbread -> android.support.v4.view.ViewCompatGingerbread:
    int getOverScrollMode(android.view.View) -> getOverScrollMode
    void setOverScrollMode(android.view.View,int) -> setOverScrollMode
android.support.v4.view.ViewCompatHC -> android.support.v4.view.ViewCompatHC:
    long getFrameTime() -> getFrameTime
    float getAlpha(android.view.View) -> getAlpha
    void setLayerType(android.view.View,int,android.graphics.Paint) -> setLayerType
    int getLayerType(android.view.View) -> getLayerType
    int resolveSizeAndState(int,int,int) -> resolveSizeAndState
    int getMeasuredWidthAndState(android.view.View) -> getMeasuredWidthAndState
    int getMeasuredHeightAndState(android.view.View) -> getMeasuredHeightAndState
    int getMeasuredState(android.view.View) -> getMeasuredState
android.support.v4.view.ViewCompatICS -> android.support.v4.view.ViewCompatICS:
    boolean canScrollHorizontally(android.view.View,int) -> canScrollHorizontally
    boolean canScrollVertically(android.view.View,int) -> canScrollVertically
    void setAccessibilityDelegate(android.view.View,java.lang.Object) -> setAccessibilityDelegate
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(android.view.View,java.lang.Object) -> onInitializeAccessibilityNodeInfo
android.support.v4.view.ViewCompatJB -> android.support.v4.view.ViewCompatJB:
    boolean hasTransientState(android.view.View) -> hasTransientState
    void setHasTransientState(android.view.View,boolean) -> setHasTransientState
    void postInvalidateOnAnimation(android.view.View) -> postInvalidateOnAnimation
    void postInvalidateOnAnimation(android.view.View,int,int,int,int) -> postInvalidateOnAnimation
    void postOnAnimation(android.view.View,java.lang.Runnable) -> postOnAnimation
    void postOnAnimationDelayed(android.view.View,java.lang.Runnable,long) -> postOnAnimationDelayed
    int getImportantForAccessibility(android.view.View) -> getImportantForAccessibility
    void setImportantForAccessibility(android.view.View,int) -> setImportantForAccessibility
    boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> performAccessibilityAction
    java.lang.Object getAccessibilityNodeProvider(android.view.View) -> getAccessibilityNodeProvider
    android.view.ViewParent getParentForAccessibility(android.view.View) -> getParentForAccessibility
android.support.v4.view.ViewCompatJellybeanMr1 -> android.support.v4.view.ViewCompatJellybeanMr1:
    int getLabelFor(android.view.View) -> getLabelFor
    void setLabelFor(android.view.View,int) -> setLabelFor
    void setLayerPaint(android.view.View,android.graphics.Paint) -> setLayerPaint
    int getLayoutDirection(android.view.View) -> getLayoutDirection
    void setLayoutDirection(android.view.View,int) -> setLayoutDirection
android.support.v4.view.ViewCompatKitKat -> android.support.v4.view.ViewCompatKitKat:
    int getAccessibilityLiveRegion(android.view.View) -> getAccessibilityLiveRegion
    void setAccessibilityLiveRegion(android.view.View,int) -> setAccessibilityLiveRegion
android.support.v4.view.ViewConfigurationCompat -> android.support.v4.view.ViewConfigurationCompat:
    android.support.v4.view.ViewConfigurationCompat$ViewConfigurationVersionImpl IMPL -> IMPL
    int getScaledPagingTouchSlop(android.view.ViewConfiguration) -> getScaledPagingTouchSlop
android.support.v4.view.ViewConfigurationCompat$BaseViewConfigurationVersionImpl -> android.support.v4.view.ViewConfigurationCompat$BaseViewConfigurationVersionImpl:
    int getScaledPagingTouchSlop(android.view.ViewConfiguration) -> getScaledPagingTouchSlop
android.support.v4.view.ViewConfigurationCompat$FroyoViewConfigurationVersionImpl -> android.support.v4.view.ViewConfigurationCompat$FroyoViewConfigurationVersionImpl:
    int getScaledPagingTouchSlop(android.view.ViewConfiguration) -> getScaledPagingTouchSlop
android.support.v4.view.ViewConfigurationCompat$ViewConfigurationVersionImpl -> android.support.v4.view.ViewConfigurationCompat$ViewConfigurationVersionImpl:
    int getScaledPagingTouchSlop(android.view.ViewConfiguration) -> getScaledPagingTouchSlop
android.support.v4.view.ViewConfigurationCompatFroyo -> android.support.v4.view.ViewConfigurationCompatFroyo:
    int getScaledPagingTouchSlop(android.view.ViewConfiguration) -> getScaledPagingTouchSlop
android.support.v4.view.ViewGroupCompat -> android.support.v4.view.ViewGroupCompat:
    int LAYOUT_MODE_CLIP_BOUNDS -> LAYOUT_MODE_CLIP_BOUNDS
    int LAYOUT_MODE_OPTICAL_BOUNDS -> LAYOUT_MODE_OPTICAL_BOUNDS
    android.support.v4.view.ViewGroupCompat$ViewGroupCompatImpl IMPL -> IMPL
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
    void setMotionEventSplittingEnabled(android.view.ViewGroup,boolean) -> setMotionEventSplittingEnabled
    int getLayoutMode(android.view.ViewGroup) -> getLayoutMode
    void setLayoutMode(android.view.ViewGroup,int) -> setLayoutMode
android.support.v4.view.ViewGroupCompat$ViewGroupCompatHCImpl -> android.support.v4.view.ViewGroupCompat$ViewGroupCompatHCImpl:
    void setMotionEventSplittingEnabled(android.view.ViewGroup,boolean) -> setMotionEventSplittingEnabled
android.support.v4.view.ViewGroupCompat$ViewGroupCompatIcsImpl -> android.support.v4.view.ViewGroupCompat$ViewGroupCompatIcsImpl:
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
android.support.v4.view.ViewGroupCompat$ViewGroupCompatImpl -> android.support.v4.view.ViewGroupCompat$ViewGroupCompatImpl:
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
    void setMotionEventSplittingEnabled(android.view.ViewGroup,boolean) -> setMotionEventSplittingEnabled
    int getLayoutMode(android.view.ViewGroup) -> getLayoutMode
    void setLayoutMode(android.view.ViewGroup,int) -> setLayoutMode
android.support.v4.view.ViewGroupCompat$ViewGroupCompatJellybeanMR2Impl -> android.support.v4.view.ViewGroupCompat$ViewGroupCompatJellybeanMR2Impl:
    int getLayoutMode(android.view.ViewGroup) -> getLayoutMode
    void setLayoutMode(android.view.ViewGroup,int) -> setLayoutMode
android.support.v4.view.ViewGroupCompat$ViewGroupCompatStubImpl -> android.support.v4.view.ViewGroupCompat$ViewGroupCompatStubImpl:
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
    void setMotionEventSplittingEnabled(android.view.ViewGroup,boolean) -> setMotionEventSplittingEnabled
    int getLayoutMode(android.view.ViewGroup) -> getLayoutMode
    void setLayoutMode(android.view.ViewGroup,int) -> setLayoutMode
android.support.v4.view.ViewGroupCompatHC -> android.support.v4.view.ViewGroupCompatHC:
    void setMotionEventSplittingEnabled(android.view.ViewGroup,boolean) -> setMotionEventSplittingEnabled
android.support.v4.view.ViewGroupCompatIcs -> android.support.v4.view.ViewGroupCompatIcs:
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
android.support.v4.view.ViewGroupCompatJellybeanMR2 -> android.support.v4.view.ViewGroupCompatJellybeanMR2:
    int getLayoutMode(android.view.ViewGroup) -> getLayoutMode
    void setLayoutMode(android.view.ViewGroup,int) -> setLayoutMode
android.support.v4.view.ViewPager -> android.support.v4.view.ViewPager:
    java.lang.String TAG -> TAG
    boolean DEBUG -> DEBUG
    boolean USE_CACHE -> USE_CACHE
    int DEFAULT_OFFSCREEN_PAGES -> DEFAULT_OFFSCREEN_PAGES
    int MAX_SETTLE_DURATION -> MAX_SETTLE_DURATION
    int MIN_DISTANCE_FOR_FLING -> MIN_DISTANCE_FOR_FLING
    int DEFAULT_GUTTER_SIZE -> DEFAULT_GUTTER_SIZE
    int MIN_FLING_VELOCITY -> MIN_FLING_VELOCITY
    int[] LAYOUT_ATTRS -> LAYOUT_ATTRS
    int mExpectedAdapterCount -> mExpectedAdapterCount
    java.util.Comparator COMPARATOR -> COMPARATOR
    android.view.animation.Interpolator sInterpolator -> sInterpolator
    java.util.ArrayList mItems -> mItems
    android.support.v4.view.ViewPager$ItemInfo mTempItem -> mTempItem
    android.graphics.Rect mTempRect -> mTempRect
    android.support.v4.view.PagerAdapter mAdapter -> mAdapter
    int mCurItem -> mCurItem
    int mRestoredCurItem -> mRestoredCurItem
    android.os.Parcelable mRestoredAdapterState -> mRestoredAdapterState
    java.lang.ClassLoader mRestoredClassLoader -> mRestoredClassLoader
    android.widget.Scroller mScroller -> mScroller
    android.support.v4.view.ViewPager$PagerObserver mObserver -> mObserver
    int mPageMargin -> mPageMargin
    android.graphics.drawable.Drawable mMarginDrawable -> mMarginDrawable
    int mTopPageBounds -> mTopPageBounds
    int mBottomPageBounds -> mBottomPageBounds
    float mFirstOffset -> mFirstOffset
    float mLastOffset -> mLastOffset
    int mChildWidthMeasureSpec -> mChildWidthMeasureSpec
    int mChildHeightMeasureSpec -> mChildHeightMeasureSpec
    boolean mInLayout -> mInLayout
    boolean mScrollingCacheEnabled -> mScrollingCacheEnabled
    boolean mPopulatePending -> mPopulatePending
    int mOffscreenPageLimit -> mOffscreenPageLimit
    boolean mIsBeingDragged -> mIsBeingDragged
    boolean mIsUnableToDrag -> mIsUnableToDrag
    boolean mIgnoreGutter -> mIgnoreGutter
    int mDefaultGutterSize -> mDefaultGutterSize
    int mGutterSize -> mGutterSize
    int mTouchSlop -> mTouchSlop
    float mLastMotionX -> mLastMotionX
    float mLastMotionY -> mLastMotionY
    float mInitialMotionX -> mInitialMotionX
    float mInitialMotionY -> mInitialMotionY
    int mActivePointerId -> mActivePointerId
    int INVALID_POINTER -> INVALID_POINTER
    android.view.VelocityTracker mVelocityTracker -> mVelocityTracker
    int mMinimumVelocity -> mMinimumVelocity
    int mMaximumVelocity -> mMaximumVelocity
    int mFlingDistance -> mFlingDistance
    int mCloseEnough -> mCloseEnough
    int CLOSE_ENOUGH -> CLOSE_ENOUGH
    boolean mFakeDragging -> mFakeDragging
    long mFakeDragBeginTime -> mFakeDragBeginTime
    android.support.v4.widget.EdgeEffectCompat mLeftEdge -> mLeftEdge
    android.support.v4.widget.EdgeEffectCompat mRightEdge -> mRightEdge
    boolean mFirstLayout -> mFirstLayout
    boolean mNeedCalculatePageOffsets -> mNeedCalculatePageOffsets
    boolean mCalledSuper -> mCalledSuper
    int mDecorChildCount -> mDecorChildCount
    android.support.v4.view.ViewPager$OnPageChangeListener mOnPageChangeListener -> mOnPageChangeListener
    android.support.v4.view.ViewPager$OnPageChangeListener mInternalPageChangeListener -> mInternalPageChangeListener
    android.support.v4.view.ViewPager$OnAdapterChangeListener mAdapterChangeListener -> mAdapterChangeListener
    android.support.v4.view.ViewPager$PageTransformer mPageTransformer -> mPageTransformer
    java.lang.reflect.Method mSetChildrenDrawingOrderEnabled -> mSetChildrenDrawingOrderEnabled
    int DRAW_ORDER_DEFAULT -> DRAW_ORDER_DEFAULT
    int DRAW_ORDER_FORWARD -> DRAW_ORDER_FORWARD
    int DRAW_ORDER_REVERSE -> DRAW_ORDER_REVERSE
    int mDrawingOrder -> mDrawingOrder
    java.util.ArrayList mDrawingOrderedChildren -> mDrawingOrderedChildren
    android.support.v4.view.ViewPager$ViewPositionComparator sPositionComparator -> sPositionComparator
    int SCROLL_STATE_IDLE -> SCROLL_STATE_IDLE
    int SCROLL_STATE_DRAGGING -> SCROLL_STATE_DRAGGING
    int SCROLL_STATE_SETTLING -> SCROLL_STATE_SETTLING
    java.lang.Runnable mEndScrollRunnable -> mEndScrollRunnable
    int mScrollState -> mScrollState
    void initViewPager() -> initViewPager
    void onDetachedFromWindow() -> onDetachedFromWindow
    void setScrollState(int) -> setScrollState
    void setAdapter(android.support.v4.view.PagerAdapter) -> setAdapter
    void removeNonDecorViews() -> removeNonDecorViews
    android.support.v4.view.PagerAdapter getAdapter() -> getAdapter
    void setOnAdapterChangeListener(android.support.v4.view.ViewPager$OnAdapterChangeListener) -> setOnAdapterChangeListener
    int getClientWidth() -> getClientWidth
    void setCurrentItem(int) -> setCurrentItem
    void setCurrentItem(int,boolean) -> setCurrentItem
    int getCurrentItem() -> getCurrentItem
    void setCurrentItemInternal(int,boolean,boolean) -> setCurrentItemInternal
    void setCurrentItemInternal(int,boolean,boolean,int) -> setCurrentItemInternal
    void scrollToItem(int,boolean,int,boolean) -> scrollToItem
    void setOnPageChangeListener(android.support.v4.view.ViewPager$OnPageChangeListener) -> setOnPageChangeListener
    void setPageTransformer(boolean,android.support.v4.view.ViewPager$PageTransformer) -> setPageTransformer
    void setChildrenDrawingOrderEnabledCompat(boolean) -> setChildrenDrawingOrderEnabledCompat
    int getChildDrawingOrder(int,int) -> getChildDrawingOrder
    android.support.v4.view.ViewPager$OnPageChangeListener setInternalPageChangeListener(android.support.v4.view.ViewPager$OnPageChangeListener) -> setInternalPageChangeListener
    int getOffscreenPageLimit() -> getOffscreenPageLimit
    void setOffscreenPageLimit(int) -> setOffscreenPageLimit
    void setPageMargin(int) -> setPageMargin
    int getPageMargin() -> getPageMargin
    void setPageMarginDrawable(android.graphics.drawable.Drawable) -> setPageMarginDrawable
    void setPageMarginDrawable(int) -> setPageMarginDrawable
    boolean verifyDrawable(android.graphics.drawable.Drawable) -> verifyDrawable
    void drawableStateChanged() -> drawableStateChanged
    float distanceInfluenceForSnapDuration(float) -> distanceInfluenceForSnapDuration
    void smoothScrollTo(int,int) -> smoothScrollTo
    void smoothScrollTo(int,int,int) -> smoothScrollTo
    android.support.v4.view.ViewPager$ItemInfo addNewItem(int,int) -> addNewItem
    void dataSetChanged() -> dataSetChanged
    void populate() -> populate
    void populate(int) -> populate
    void sortChildDrawingOrder() -> sortChildDrawingOrder
    void calculatePageOffsets(android.support.v4.view.ViewPager$ItemInfo,int,android.support.v4.view.ViewPager$ItemInfo) -> calculatePageOffsets
    android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    void addView(android.view.View,int,android.view.ViewGroup$LayoutParams) -> addView
    void removeView(android.view.View) -> removeView
    android.support.v4.view.ViewPager$ItemInfo infoForChild(android.view.View) -> infoForChild
    android.support.v4.view.ViewPager$ItemInfo infoForAnyChild(android.view.View) -> infoForAnyChild
    android.support.v4.view.ViewPager$ItemInfo infoForPosition(int) -> infoForPosition
    void onAttachedToWindow() -> onAttachedToWindow
    void onMeasure(int,int) -> onMeasure
    void onSizeChanged(int,int,int,int) -> onSizeChanged
    void recomputeScrollPosition(int,int,int,int) -> recomputeScrollPosition
    void onLayout(boolean,int,int,int,int) -> onLayout
    void computeScroll() -> computeScroll
    boolean pageScrolled(int) -> pageScrolled
    void onPageScrolled(int,float,int) -> onPageScrolled
    void completeScroll(boolean) -> completeScroll
    boolean isGutterDrag(float,float) -> isGutterDrag
    void enableLayers(boolean) -> enableLayers
    boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void requestParentDisallowInterceptTouchEvent(boolean) -> requestParentDisallowInterceptTouchEvent
    boolean performDrag(float) -> performDrag
    android.support.v4.view.ViewPager$ItemInfo infoForCurrentScrollPosition() -> infoForCurrentScrollPosition
    int determineTargetPage(int,float,int,int) -> determineTargetPage
    void draw(android.graphics.Canvas) -> draw
    void onDraw(android.graphics.Canvas) -> onDraw
    boolean beginFakeDrag() -> beginFakeDrag
    void endFakeDrag() -> endFakeDrag
    void fakeDragBy(float) -> fakeDragBy
    boolean isFakeDragging() -> isFakeDragging
    void onSecondaryPointerUp(android.view.MotionEvent) -> onSecondaryPointerUp
    void endDrag() -> endDrag
    void setScrollingCacheEnabled(boolean) -> setScrollingCacheEnabled
    boolean canScrollHorizontally(int) -> canScrollHorizontally
    boolean canScroll(android.view.View,boolean,int,int,int) -> canScroll
    boolean dispatchKeyEvent(android.view.KeyEvent) -> dispatchKeyEvent
    boolean executeKeyEvent(android.view.KeyEvent) -> executeKeyEvent
    boolean arrowScroll(int) -> arrowScroll
    android.graphics.Rect getChildRectInPagerCoordinates(android.graphics.Rect,android.view.View) -> getChildRectInPagerCoordinates
    boolean pageLeft() -> pageLeft
    boolean pageRight() -> pageRight
    void addFocusables(java.util.ArrayList,int,int) -> addFocusables
    void addTouchables(java.util.ArrayList) -> addTouchables
    boolean onRequestFocusInDescendants(int,android.graphics.Rect) -> onRequestFocusInDescendants
    boolean dispatchPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    android.view.ViewGroup$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    boolean checkLayoutParams(android.view.ViewGroup$LayoutParams) -> checkLayoutParams
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    void access$000(android.support.v4.view.ViewPager,int) -> access$000
    android.support.v4.view.PagerAdapter access$200(android.support.v4.view.ViewPager) -> access$200
    int access$300(android.support.v4.view.ViewPager) -> access$300
    int[] access$400() -> access$400
android.support.v4.view.ViewPager$1 -> android.support.v4.view.ViewPager$1:
    int compare(android.support.v4.view.ViewPager$ItemInfo,android.support.v4.view.ViewPager$ItemInfo) -> compare
    int compare(java.lang.Object,java.lang.Object) -> compare
android.support.v4.view.ViewPager$2 -> android.support.v4.view.ViewPager$2:
    float getInterpolation(float) -> getInterpolation
android.support.v4.view.ViewPager$3 -> android.support.v4.view.ViewPager$3:
    android.support.v4.view.ViewPager this$0 -> this$0
    void run() -> run
android.support.v4.view.ViewPager$Decor -> android.support.v4.view.ViewPager$Decor:
android.support.v4.view.ViewPager$ItemInfo -> android.support.v4.view.ViewPager$ItemInfo:
    java.lang.Object object -> object
    int position -> position
    boolean scrolling -> scrolling
    float widthFactor -> widthFactor
    float offset -> offset
android.support.v4.view.ViewPager$LayoutParams -> android.support.v4.view.ViewPager$LayoutParams:
    boolean isDecor -> isDecor
    int gravity -> gravity
    float widthFactor -> widthFactor
    boolean needsMeasure -> needsMeasure
    int position -> position
    int childIndex -> childIndex
android.support.v4.view.ViewPager$MyAccessibilityDelegate -> android.support.v4.view.ViewPager$MyAccessibilityDelegate:
    android.support.v4.view.ViewPager this$0 -> this$0
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
    boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> performAccessibilityAction
    boolean canScroll() -> canScroll
android.support.v4.view.ViewPager$OnAdapterChangeListener -> android.support.v4.view.ViewPager$OnAdapterChangeListener:
    void onAdapterChanged(android.support.v4.view.PagerAdapter,android.support.v4.view.PagerAdapter) -> onAdapterChanged
android.support.v4.view.ViewPager$OnPageChangeListener -> android.support.v4.view.ViewPager$OnPageChangeListener:
    void onPageScrolled(int,float,int) -> onPageScrolled
    void onPageSelected(int) -> onPageSelected
    void onPageScrollStateChanged(int) -> onPageScrollStateChanged
android.support.v4.view.ViewPager$PageTransformer -> android.support.v4.view.ViewPager$PageTransformer:
    void transformPage(android.view.View,float) -> transformPage
android.support.v4.view.ViewPager$PagerObserver -> android.support.v4.view.ViewPager$PagerObserver:
    android.support.v4.view.ViewPager this$0 -> this$0
    void onChanged() -> onChanged
    void onInvalidated() -> onInvalidated
android.support.v4.view.ViewPager$SavedState -> android.support.v4.view.ViewPager$SavedState:
    int position -> position
    android.os.Parcelable adapterState -> adapterState
    java.lang.ClassLoader loader -> loader
    android.os.Parcelable$Creator CREATOR -> CREATOR
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    java.lang.String toString() -> toString
android.support.v4.view.ViewPager$SavedState$1 -> android.support.v4.view.ViewPager$SavedState$1:
    android.support.v4.view.ViewPager$SavedState createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    android.support.v4.view.ViewPager$SavedState[] newArray(int) -> newArray
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
android.support.v4.view.ViewPager$SimpleOnPageChangeListener -> android.support.v4.view.ViewPager$SimpleOnPageChangeListener:
    void onPageScrolled(int,float,int) -> onPageScrolled
    void onPageSelected(int) -> onPageSelected
    void onPageScrollStateChanged(int) -> onPageScrollStateChanged
android.support.v4.view.ViewPager$ViewPositionComparator -> android.support.v4.view.ViewPager$ViewPositionComparator:
    int compare(android.view.View,android.view.View) -> compare
    int compare(java.lang.Object,java.lang.Object) -> compare
android.support.v4.view.ViewParentCompat -> android.support.v4.view.ViewParentCompat:
    android.support.v4.view.ViewParentCompat$ViewParentCompatImpl IMPL -> IMPL
    boolean requestSendAccessibilityEvent(android.view.ViewParent,android.view.View,android.view.accessibility.AccessibilityEvent) -> requestSendAccessibilityEvent
android.support.v4.view.ViewParentCompat$ViewParentCompatICSImpl -> android.support.v4.view.ViewParentCompat$ViewParentCompatICSImpl:
    boolean requestSendAccessibilityEvent(android.view.ViewParent,android.view.View,android.view.accessibility.AccessibilityEvent) -> requestSendAccessibilityEvent
android.support.v4.view.ViewParentCompat$ViewParentCompatImpl -> android.support.v4.view.ViewParentCompat$ViewParentCompatImpl:
    boolean requestSendAccessibilityEvent(android.view.ViewParent,android.view.View,android.view.accessibility.AccessibilityEvent) -> requestSendAccessibilityEvent
android.support.v4.view.ViewParentCompat$ViewParentCompatStubImpl -> android.support.v4.view.ViewParentCompat$ViewParentCompatStubImpl:
    boolean requestSendAccessibilityEvent(android.view.ViewParent,android.view.View,android.view.accessibility.AccessibilityEvent) -> requestSendAccessibilityEvent
android.support.v4.view.ViewParentCompatICS -> android.support.v4.view.ViewParentCompatICS:
    boolean requestSendAccessibilityEvent(android.view.ViewParent,android.view.View,android.view.accessibility.AccessibilityEvent) -> requestSendAccessibilityEvent
android.support.v4.view.WindowCompat -> android.support.v4.view.WindowCompat:
    int FEATURE_ACTION_BAR -> FEATURE_ACTION_BAR
    int FEATURE_ACTION_BAR_OVERLAY -> FEATURE_ACTION_BAR_OVERLAY
    int FEATURE_ACTION_MODE_OVERLAY -> FEATURE_ACTION_MODE_OVERLAY
android.support.v4.view.accessibility.AccessibilityEventCompat -> android.support.v4.view.accessibility.AccessibilityEventCompat:
    android.support.v4.view.accessibility.AccessibilityEventCompat$AccessibilityEventVersionImpl IMPL -> IMPL
    int TYPE_VIEW_HOVER_ENTER -> TYPE_VIEW_HOVER_ENTER
    int TYPE_VIEW_HOVER_EXIT -> TYPE_VIEW_HOVER_EXIT
    int TYPE_TOUCH_EXPLORATION_GESTURE_START -> TYPE_TOUCH_EXPLORATION_GESTURE_START
    int TYPE_TOUCH_EXPLORATION_GESTURE_END -> TYPE_TOUCH_EXPLORATION_GESTURE_END
    int TYPE_WINDOW_CONTENT_CHANGED -> TYPE_WINDOW_CONTENT_CHANGED
    int TYPE_VIEW_SCROLLED -> TYPE_VIEW_SCROLLED
    int TYPE_VIEW_TEXT_SELECTION_CHANGED -> TYPE_VIEW_TEXT_SELECTION_CHANGED
    int TYPE_ANNOUNCEMENT -> TYPE_ANNOUNCEMENT
    int TYPE_VIEW_ACCESSIBILITY_FOCUSED -> TYPE_VIEW_ACCESSIBILITY_FOCUSED
    int TYPE_VIEW_ACCESSIBILITY_FOCUS_CLEARED -> TYPE_VIEW_ACCESSIBILITY_FOCUS_CLEARED
    int TYPE_VIEW_TEXT_TRAVERSED_AT_MOVEMENT_GRANULARITY -> TYPE_VIEW_TEXT_TRAVERSED_AT_MOVEMENT_GRANULARITY
    int TYPE_GESTURE_DETECTION_START -> TYPE_GESTURE_DETECTION_START
    int TYPE_GESTURE_DETECTION_END -> TYPE_GESTURE_DETECTION_END
    int TYPE_TOUCH_INTERACTION_START -> TYPE_TOUCH_INTERACTION_START
    int TYPE_TOUCH_INTERACTION_END -> TYPE_TOUCH_INTERACTION_END
    int TYPES_ALL_MASK -> TYPES_ALL_MASK
    int getRecordCount(android.view.accessibility.AccessibilityEvent) -> getRecordCount
    void appendRecord(android.view.accessibility.AccessibilityEvent,android.support.v4.view.accessibility.AccessibilityRecordCompat) -> appendRecord
    android.support.v4.view.accessibility.AccessibilityRecordCompat getRecord(android.view.accessibility.AccessibilityEvent,int) -> getRecord
    android.support.v4.view.accessibility.AccessibilityRecordCompat asRecord(android.view.accessibility.AccessibilityEvent) -> asRecord
android.support.v4.view.accessibility.AccessibilityEventCompat$AccessibilityEventIcsImpl -> android.support.v4.view.accessibility.AccessibilityEventCompat$AccessibilityEventIcsImpl:
    void appendRecord(android.view.accessibility.AccessibilityEvent,java.lang.Object) -> appendRecord
    java.lang.Object getRecord(android.view.accessibility.AccessibilityEvent,int) -> getRecord
    int getRecordCount(android.view.accessibility.AccessibilityEvent) -> getRecordCount
android.support.v4.view.accessibility.AccessibilityEventCompat$AccessibilityEventStubImpl -> android.support.v4.view.accessibility.AccessibilityEventCompat$AccessibilityEventStubImpl:
    void appendRecord(android.view.accessibility.AccessibilityEvent,java.lang.Object) -> appendRecord
    java.lang.Object getRecord(android.view.accessibility.AccessibilityEvent,int) -> getRecord
    int getRecordCount(android.view.accessibility.AccessibilityEvent) -> getRecordCount
android.support.v4.view.accessibility.AccessibilityEventCompat$AccessibilityEventVersionImpl -> android.support.v4.view.accessibility.AccessibilityEventCompat$AccessibilityEventVersionImpl:
    int getRecordCount(android.view.accessibility.AccessibilityEvent) -> getRecordCount
    void appendRecord(android.view.accessibility.AccessibilityEvent,java.lang.Object) -> appendRecord
    java.lang.Object getRecord(android.view.accessibility.AccessibilityEvent,int) -> getRecord
android.support.v4.view.accessibility.AccessibilityEventCompatIcs -> android.support.v4.view.accessibility.AccessibilityEventCompatIcs:
    int getRecordCount(android.view.accessibility.AccessibilityEvent) -> getRecordCount
    void appendRecord(android.view.accessibility.AccessibilityEvent,java.lang.Object) -> appendRecord
    java.lang.Object getRecord(android.view.accessibility.AccessibilityEvent,int) -> getRecord
android.support.v4.view.accessibility.AccessibilityManagerCompat -> android.support.v4.view.accessibility.AccessibilityManagerCompat:
    android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityManagerVersionImpl IMPL -> IMPL
    boolean addAccessibilityStateChangeListener(android.view.accessibility.AccessibilityManager,android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListenerCompat) -> addAccessibilityStateChangeListener
    boolean removeAccessibilityStateChangeListener(android.view.accessibility.AccessibilityManager,android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListenerCompat) -> removeAccessibilityStateChangeListener
    java.util.List getInstalledAccessibilityServiceList(android.view.accessibility.AccessibilityManager) -> getInstalledAccessibilityServiceList
    java.util.List getEnabledAccessibilityServiceList(android.view.accessibility.AccessibilityManager,int) -> getEnabledAccessibilityServiceList
    boolean isTouchExplorationEnabled(android.view.accessibility.AccessibilityManager) -> isTouchExplorationEnabled
    android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityManagerVersionImpl access$000() -> access$000
android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityManagerIcsImpl -> android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityManagerIcsImpl:
    java.lang.Object newAccessiblityStateChangeListener(android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListenerCompat) -> newAccessiblityStateChangeListener
    boolean addAccessibilityStateChangeListener(android.view.accessibility.AccessibilityManager,android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListenerCompat) -> addAccessibilityStateChangeListener
    boolean removeAccessibilityStateChangeListener(android.view.accessibility.AccessibilityManager,android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListenerCompat) -> removeAccessibilityStateChangeListener
    java.util.List getEnabledAccessibilityServiceList(android.view.accessibility.AccessibilityManager,int) -> getEnabledAccessibilityServiceList
    java.util.List getInstalledAccessibilityServiceList(android.view.accessibility.AccessibilityManager) -> getInstalledAccessibilityServiceList
    boolean isTouchExplorationEnabled(android.view.accessibility.AccessibilityManager) -> isTouchExplorationEnabled
android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityManagerIcsImpl$1 -> android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityManagerIcsImpl$1:
    android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListenerCompat val$listener -> val$listener
    android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityManagerIcsImpl this$0 -> this$0
    void onAccessibilityStateChanged(boolean) -> onAccessibilityStateChanged
android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityManagerStubImpl -> android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityManagerStubImpl:
    java.lang.Object newAccessiblityStateChangeListener(android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListenerCompat) -> newAccessiblityStateChangeListener
    boolean addAccessibilityStateChangeListener(android.view.accessibility.AccessibilityManager,android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListenerCompat) -> addAccessibilityStateChangeListener
    boolean removeAccessibilityStateChangeListener(android.view.accessibility.AccessibilityManager,android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListenerCompat) -> removeAccessibilityStateChangeListener
    java.util.List getEnabledAccessibilityServiceList(android.view.accessibility.AccessibilityManager,int) -> getEnabledAccessibilityServiceList
    java.util.List getInstalledAccessibilityServiceList(android.view.accessibility.AccessibilityManager) -> getInstalledAccessibilityServiceList
    boolean isTouchExplorationEnabled(android.view.accessibility.AccessibilityManager) -> isTouchExplorationEnabled
android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityManagerVersionImpl -> android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityManagerVersionImpl:
    java.lang.Object newAccessiblityStateChangeListener(android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListenerCompat) -> newAccessiblityStateChangeListener
    boolean addAccessibilityStateChangeListener(android.view.accessibility.AccessibilityManager,android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListenerCompat) -> addAccessibilityStateChangeListener
    boolean removeAccessibilityStateChangeListener(android.view.accessibility.AccessibilityManager,android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListenerCompat) -> removeAccessibilityStateChangeListener
    java.util.List getEnabledAccessibilityServiceList(android.view.accessibility.AccessibilityManager,int) -> getEnabledAccessibilityServiceList
    java.util.List getInstalledAccessibilityServiceList(android.view.accessibility.AccessibilityManager) -> getInstalledAccessibilityServiceList
    boolean isTouchExplorationEnabled(android.view.accessibility.AccessibilityManager) -> isTouchExplorationEnabled
android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListenerCompat -> android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListenerCompat:
    java.lang.Object mListener -> mListener
    void onAccessibilityStateChanged(boolean) -> onAccessibilityStateChanged
android.support.v4.view.accessibility.AccessibilityManagerCompatIcs -> android.support.v4.view.accessibility.AccessibilityManagerCompatIcs:
    java.lang.Object newAccessibilityStateChangeListener(android.support.v4.view.accessibility.AccessibilityManagerCompatIcs$AccessibilityStateChangeListenerBridge) -> newAccessibilityStateChangeListener
    boolean addAccessibilityStateChangeListener(android.view.accessibility.AccessibilityManager,java.lang.Object) -> addAccessibilityStateChangeListener
    boolean removeAccessibilityStateChangeListener(android.view.accessibility.AccessibilityManager,java.lang.Object) -> removeAccessibilityStateChangeListener
    java.util.List getEnabledAccessibilityServiceList(android.view.accessibility.AccessibilityManager,int) -> getEnabledAccessibilityServiceList
    java.util.List getInstalledAccessibilityServiceList(android.view.accessibility.AccessibilityManager) -> getInstalledAccessibilityServiceList
    boolean isTouchExplorationEnabled(android.view.accessibility.AccessibilityManager) -> isTouchExplorationEnabled
android.support.v4.view.accessibility.AccessibilityManagerCompatIcs$1 -> android.support.v4.view.accessibility.AccessibilityManagerCompatIcs$1:
    android.support.v4.view.accessibility.AccessibilityManagerCompatIcs$AccessibilityStateChangeListenerBridge val$bridge -> val$bridge
    void onAccessibilityStateChanged(boolean) -> onAccessibilityStateChanged
android.support.v4.view.accessibility.AccessibilityManagerCompatIcs$AccessibilityStateChangeListenerBridge -> android.support.v4.view.accessibility.AccessibilityManagerCompatIcs$AccessibilityStateChangeListenerBridge:
    void onAccessibilityStateChanged(boolean) -> onAccessibilityStateChanged
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat -> android.support.v4.view.accessibility.AccessibilityNodeInfoCompat:
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoImpl IMPL -> IMPL
    java.lang.Object mInfo -> mInfo
    int ACTION_FOCUS -> ACTION_FOCUS
    int ACTION_CLEAR_FOCUS -> ACTION_CLEAR_FOCUS
    int ACTION_SELECT -> ACTION_SELECT
    int ACTION_CLEAR_SELECTION -> ACTION_CLEAR_SELECTION
    int ACTION_CLICK -> ACTION_CLICK
    int ACTION_LONG_CLICK -> ACTION_LONG_CLICK
    int ACTION_ACCESSIBILITY_FOCUS -> ACTION_ACCESSIBILITY_FOCUS
    int ACTION_CLEAR_ACCESSIBILITY_FOCUS -> ACTION_CLEAR_ACCESSIBILITY_FOCUS
    int ACTION_NEXT_AT_MOVEMENT_GRANULARITY -> ACTION_NEXT_AT_MOVEMENT_GRANULARITY
    int ACTION_PREVIOUS_AT_MOVEMENT_GRANULARITY -> ACTION_PREVIOUS_AT_MOVEMENT_GRANULARITY
    int ACTION_NEXT_HTML_ELEMENT -> ACTION_NEXT_HTML_ELEMENT
    int ACTION_PREVIOUS_HTML_ELEMENT -> ACTION_PREVIOUS_HTML_ELEMENT
    int ACTION_SCROLL_FORWARD -> ACTION_SCROLL_FORWARD
    int ACTION_SCROLL_BACKWARD -> ACTION_SCROLL_BACKWARD
    int ACTION_COPY -> ACTION_COPY
    int ACTION_PASTE -> ACTION_PASTE
    int ACTION_CUT -> ACTION_CUT
    int ACTION_SET_SELECTION -> ACTION_SET_SELECTION
    java.lang.String ACTION_ARGUMENT_MOVEMENT_GRANULARITY_INT -> ACTION_ARGUMENT_MOVEMENT_GRANULARITY_INT
    java.lang.String ACTION_ARGUMENT_HTML_ELEMENT_STRING -> ACTION_ARGUMENT_HTML_ELEMENT_STRING
    java.lang.String ACTION_ARGUMENT_EXTEND_SELECTION_BOOLEAN -> ACTION_ARGUMENT_EXTEND_SELECTION_BOOLEAN
    java.lang.String ACTION_ARGUMENT_SELECTION_START_INT -> ACTION_ARGUMENT_SELECTION_START_INT
    java.lang.String ACTION_ARGUMENT_SELECTION_END_INT -> ACTION_ARGUMENT_SELECTION_END_INT
    int FOCUS_INPUT -> FOCUS_INPUT
    int FOCUS_ACCESSIBILITY -> FOCUS_ACCESSIBILITY
    int MOVEMENT_GRANULARITY_CHARACTER -> MOVEMENT_GRANULARITY_CHARACTER
    int MOVEMENT_GRANULARITY_WORD -> MOVEMENT_GRANULARITY_WORD
    int MOVEMENT_GRANULARITY_LINE -> MOVEMENT_GRANULARITY_LINE
    int MOVEMENT_GRANULARITY_PARAGRAPH -> MOVEMENT_GRANULARITY_PARAGRAPH
    int MOVEMENT_GRANULARITY_PAGE -> MOVEMENT_GRANULARITY_PAGE
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat wrapNonNullInstance(java.lang.Object) -> wrapNonNullInstance
    java.lang.Object getInfo() -> getInfo
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat obtain(android.view.View) -> obtain
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat obtain(android.view.View,int) -> obtain
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat obtain() -> obtain
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat obtain(android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> obtain
    void setSource(android.view.View) -> setSource
    void setSource(android.view.View,int) -> setSource
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat findFocus(int) -> findFocus
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat focusSearch(int) -> focusSearch
    int getWindowId() -> getWindowId
    int getChildCount() -> getChildCount
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat getChild(int) -> getChild
    void addChild(android.view.View) -> addChild
    void addChild(android.view.View,int) -> addChild
    int getActions() -> getActions
    void addAction(int) -> addAction
    boolean performAction(int) -> performAction
    boolean performAction(int,android.os.Bundle) -> performAction
    void setMovementGranularities(int) -> setMovementGranularities
    int getMovementGranularities() -> getMovementGranularities
    java.util.List findAccessibilityNodeInfosByText(java.lang.String) -> findAccessibilityNodeInfosByText
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat getParent() -> getParent
    void setParent(android.view.View) -> setParent
    void setParent(android.view.View,int) -> setParent
    void getBoundsInParent(android.graphics.Rect) -> getBoundsInParent
    void setBoundsInParent(android.graphics.Rect) -> setBoundsInParent
    void getBoundsInScreen(android.graphics.Rect) -> getBoundsInScreen
    void setBoundsInScreen(android.graphics.Rect) -> setBoundsInScreen
    boolean isCheckable() -> isCheckable
    void setCheckable(boolean) -> setCheckable
    boolean isChecked() -> isChecked
    void setChecked(boolean) -> setChecked
    boolean isFocusable() -> isFocusable
    void setFocusable(boolean) -> setFocusable
    boolean isFocused() -> isFocused
    void setFocused(boolean) -> setFocused
    boolean isVisibleToUser() -> isVisibleToUser
    void setVisibleToUser(boolean) -> setVisibleToUser
    boolean isAccessibilityFocused() -> isAccessibilityFocused
    void setAccessibilityFocused(boolean) -> setAccessibilityFocused
    boolean isSelected() -> isSelected
    void setSelected(boolean) -> setSelected
    boolean isClickable() -> isClickable
    void setClickable(boolean) -> setClickable
    boolean isLongClickable() -> isLongClickable
    void setLongClickable(boolean) -> setLongClickable
    boolean isEnabled() -> isEnabled
    void setEnabled(boolean) -> setEnabled
    boolean isPassword() -> isPassword
    void setPassword(boolean) -> setPassword
    boolean isScrollable() -> isScrollable
    void setScrollable(boolean) -> setScrollable
    java.lang.CharSequence getPackageName() -> getPackageName
    void setPackageName(java.lang.CharSequence) -> setPackageName
    java.lang.CharSequence getClassName() -> getClassName
    void setClassName(java.lang.CharSequence) -> setClassName
    java.lang.CharSequence getText() -> getText
    void setText(java.lang.CharSequence) -> setText
    java.lang.CharSequence getContentDescription() -> getContentDescription
    void setContentDescription(java.lang.CharSequence) -> setContentDescription
    void recycle() -> recycle
    void setViewIdResourceName(java.lang.String) -> setViewIdResourceName
    java.lang.String getViewIdResourceName() -> getViewIdResourceName
    int getLiveRegion() -> getLiveRegion
    void setLiveRegion(int) -> setLiveRegion
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
    java.lang.String toString() -> toString
    java.lang.String getActionSymbolicName(int) -> getActionSymbolicName
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoIcsImpl -> android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoIcsImpl:
    java.lang.Object obtain() -> obtain
    java.lang.Object obtain(android.view.View) -> obtain
    java.lang.Object obtain(java.lang.Object) -> obtain
    void addAction(java.lang.Object,int) -> addAction
    void addChild(java.lang.Object,android.view.View) -> addChild
    java.util.List findAccessibilityNodeInfosByText(java.lang.Object,java.lang.String) -> findAccessibilityNodeInfosByText
    int getActions(java.lang.Object) -> getActions
    void getBoundsInParent(java.lang.Object,android.graphics.Rect) -> getBoundsInParent
    void getBoundsInScreen(java.lang.Object,android.graphics.Rect) -> getBoundsInScreen
    java.lang.Object getChild(java.lang.Object,int) -> getChild
    int getChildCount(java.lang.Object) -> getChildCount
    java.lang.CharSequence getClassName(java.lang.Object) -> getClassName
    java.lang.CharSequence getContentDescription(java.lang.Object) -> getContentDescription
    java.lang.CharSequence getPackageName(java.lang.Object) -> getPackageName
    java.lang.Object getParent(java.lang.Object) -> getParent
    java.lang.CharSequence getText(java.lang.Object) -> getText
    int getWindowId(java.lang.Object) -> getWindowId
    boolean isCheckable(java.lang.Object) -> isCheckable
    boolean isChecked(java.lang.Object) -> isChecked
    boolean isClickable(java.lang.Object) -> isClickable
    boolean isEnabled(java.lang.Object) -> isEnabled
    boolean isFocusable(java.lang.Object) -> isFocusable
    boolean isFocused(java.lang.Object) -> isFocused
    boolean isLongClickable(java.lang.Object) -> isLongClickable
    boolean isPassword(java.lang.Object) -> isPassword
    boolean isScrollable(java.lang.Object) -> isScrollable
    boolean isSelected(java.lang.Object) -> isSelected
    boolean performAction(java.lang.Object,int) -> performAction
    void setBoundsInParent(java.lang.Object,android.graphics.Rect) -> setBoundsInParent
    void setBoundsInScreen(java.lang.Object,android.graphics.Rect) -> setBoundsInScreen
    void setCheckable(java.lang.Object,boolean) -> setCheckable
    void setChecked(java.lang.Object,boolean) -> setChecked
    void setClassName(java.lang.Object,java.lang.CharSequence) -> setClassName
    void setClickable(java.lang.Object,boolean) -> setClickable
    void setContentDescription(java.lang.Object,java.lang.CharSequence) -> setContentDescription
    void setEnabled(java.lang.Object,boolean) -> setEnabled
    void setFocusable(java.lang.Object,boolean) -> setFocusable
    void setFocused(java.lang.Object,boolean) -> setFocused
    void setLongClickable(java.lang.Object,boolean) -> setLongClickable
    void setPackageName(java.lang.Object,java.lang.CharSequence) -> setPackageName
    void setParent(java.lang.Object,android.view.View) -> setParent
    void setPassword(java.lang.Object,boolean) -> setPassword
    void setScrollable(java.lang.Object,boolean) -> setScrollable
    void setSelected(java.lang.Object,boolean) -> setSelected
    void setSource(java.lang.Object,android.view.View) -> setSource
    void setText(java.lang.Object,java.lang.CharSequence) -> setText
    void recycle(java.lang.Object) -> recycle
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoImpl -> android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoImpl:
    java.lang.Object obtain() -> obtain
    java.lang.Object obtain(android.view.View) -> obtain
    java.lang.Object obtain(java.lang.Object) -> obtain
    java.lang.Object obtain(android.view.View,int) -> obtain
    void setSource(java.lang.Object,android.view.View) -> setSource
    void setSource(java.lang.Object,android.view.View,int) -> setSource
    java.lang.Object findFocus(java.lang.Object,int) -> findFocus
    java.lang.Object focusSearch(java.lang.Object,int) -> focusSearch
    int getWindowId(java.lang.Object) -> getWindowId
    int getChildCount(java.lang.Object) -> getChildCount
    java.lang.Object getChild(java.lang.Object,int) -> getChild
    void addChild(java.lang.Object,android.view.View) -> addChild
    void addChild(java.lang.Object,android.view.View,int) -> addChild
    int getActions(java.lang.Object) -> getActions
    void addAction(java.lang.Object,int) -> addAction
    boolean performAction(java.lang.Object,int) -> performAction
    boolean performAction(java.lang.Object,int,android.os.Bundle) -> performAction
    void setMovementGranularities(java.lang.Object,int) -> setMovementGranularities
    int getMovementGranularities(java.lang.Object) -> getMovementGranularities
    java.util.List findAccessibilityNodeInfosByText(java.lang.Object,java.lang.String) -> findAccessibilityNodeInfosByText
    java.lang.Object getParent(java.lang.Object) -> getParent
    void setParent(java.lang.Object,android.view.View,int) -> setParent
    void setParent(java.lang.Object,android.view.View) -> setParent
    void getBoundsInParent(java.lang.Object,android.graphics.Rect) -> getBoundsInParent
    void setBoundsInParent(java.lang.Object,android.graphics.Rect) -> setBoundsInParent
    void getBoundsInScreen(java.lang.Object,android.graphics.Rect) -> getBoundsInScreen
    void setBoundsInScreen(java.lang.Object,android.graphics.Rect) -> setBoundsInScreen
    boolean isCheckable(java.lang.Object) -> isCheckable
    void setCheckable(java.lang.Object,boolean) -> setCheckable
    boolean isChecked(java.lang.Object) -> isChecked
    void setChecked(java.lang.Object,boolean) -> setChecked
    boolean isFocusable(java.lang.Object) -> isFocusable
    void setFocusable(java.lang.Object,boolean) -> setFocusable
    boolean isFocused(java.lang.Object) -> isFocused
    void setFocused(java.lang.Object,boolean) -> setFocused
    boolean isVisibleToUser(java.lang.Object) -> isVisibleToUser
    void setVisibleToUser(java.lang.Object,boolean) -> setVisibleToUser
    boolean isAccessibilityFocused(java.lang.Object) -> isAccessibilityFocused
    void setAccessibilityFocused(java.lang.Object,boolean) -> setAccessibilityFocused
    boolean isSelected(java.lang.Object) -> isSelected
    void setSelected(java.lang.Object,boolean) -> setSelected
    boolean isClickable(java.lang.Object) -> isClickable
    void setClickable(java.lang.Object,boolean) -> setClickable
    boolean isLongClickable(java.lang.Object) -> isLongClickable
    void setLongClickable(java.lang.Object,boolean) -> setLongClickable
    boolean isEnabled(java.lang.Object) -> isEnabled
    void setEnabled(java.lang.Object,boolean) -> setEnabled
    boolean isPassword(java.lang.Object) -> isPassword
    void setPassword(java.lang.Object,boolean) -> setPassword
    boolean isScrollable(java.lang.Object) -> isScrollable
    void setScrollable(java.lang.Object,boolean) -> setScrollable
    java.lang.CharSequence getPackageName(java.lang.Object) -> getPackageName
    void setPackageName(java.lang.Object,java.lang.CharSequence) -> setPackageName
    java.lang.CharSequence getClassName(java.lang.Object) -> getClassName
    void setClassName(java.lang.Object,java.lang.CharSequence) -> setClassName
    java.lang.CharSequence getText(java.lang.Object) -> getText
    void setText(java.lang.Object,java.lang.CharSequence) -> setText
    java.lang.CharSequence getContentDescription(java.lang.Object) -> getContentDescription
    void setContentDescription(java.lang.Object,java.lang.CharSequence) -> setContentDescription
    void recycle(java.lang.Object) -> recycle
    java.lang.String getViewIdResourceName(java.lang.Object) -> getViewIdResourceName
    void setViewIdResourceName(java.lang.Object,java.lang.String) -> setViewIdResourceName
    int getLiveRegion(java.lang.Object) -> getLiveRegion
    void setLiveRegion(java.lang.Object,int) -> setLiveRegion
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoJellybeanImpl -> android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoJellybeanImpl:
    java.lang.Object obtain(android.view.View,int) -> obtain
    java.lang.Object findFocus(java.lang.Object,int) -> findFocus
    java.lang.Object focusSearch(java.lang.Object,int) -> focusSearch
    void addChild(java.lang.Object,android.view.View,int) -> addChild
    void setSource(java.lang.Object,android.view.View,int) -> setSource
    boolean isVisibleToUser(java.lang.Object) -> isVisibleToUser
    void setVisibleToUser(java.lang.Object,boolean) -> setVisibleToUser
    boolean isAccessibilityFocused(java.lang.Object) -> isAccessibilityFocused
    void setAccessibilityFocused(java.lang.Object,boolean) -> setAccessibilityFocused
    boolean performAction(java.lang.Object,int,android.os.Bundle) -> performAction
    void setMovementGranularities(java.lang.Object,int) -> setMovementGranularities
    int getMovementGranularities(java.lang.Object) -> getMovementGranularities
    void setParent(java.lang.Object,android.view.View,int) -> setParent
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoJellybeanMr2Impl -> android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoJellybeanMr2Impl:
    java.lang.String getViewIdResourceName(java.lang.Object) -> getViewIdResourceName
    void setViewIdResourceName(java.lang.Object,java.lang.String) -> setViewIdResourceName
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoKitKatImpl -> android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoKitKatImpl:
    int getLiveRegion(java.lang.Object) -> getLiveRegion
    void setLiveRegion(java.lang.Object,int) -> setLiveRegion
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoStubImpl -> android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoStubImpl:
    java.lang.Object obtain() -> obtain
    java.lang.Object obtain(android.view.View) -> obtain
    java.lang.Object obtain(android.view.View,int) -> obtain
    java.lang.Object obtain(java.lang.Object) -> obtain
    void addAction(java.lang.Object,int) -> addAction
    void addChild(java.lang.Object,android.view.View) -> addChild
    void addChild(java.lang.Object,android.view.View,int) -> addChild
    java.util.List findAccessibilityNodeInfosByText(java.lang.Object,java.lang.String) -> findAccessibilityNodeInfosByText
    int getActions(java.lang.Object) -> getActions
    void getBoundsInParent(java.lang.Object,android.graphics.Rect) -> getBoundsInParent
    void getBoundsInScreen(java.lang.Object,android.graphics.Rect) -> getBoundsInScreen
    java.lang.Object getChild(java.lang.Object,int) -> getChild
    int getChildCount(java.lang.Object) -> getChildCount
    java.lang.CharSequence getClassName(java.lang.Object) -> getClassName
    java.lang.CharSequence getContentDescription(java.lang.Object) -> getContentDescription
    java.lang.CharSequence getPackageName(java.lang.Object) -> getPackageName
    java.lang.Object getParent(java.lang.Object) -> getParent
    java.lang.CharSequence getText(java.lang.Object) -> getText
    int getWindowId(java.lang.Object) -> getWindowId
    boolean isCheckable(java.lang.Object) -> isCheckable
    boolean isChecked(java.lang.Object) -> isChecked
    boolean isClickable(java.lang.Object) -> isClickable
    boolean isEnabled(java.lang.Object) -> isEnabled
    boolean isFocusable(java.lang.Object) -> isFocusable
    boolean isFocused(java.lang.Object) -> isFocused
    boolean isVisibleToUser(java.lang.Object) -> isVisibleToUser
    boolean isAccessibilityFocused(java.lang.Object) -> isAccessibilityFocused
    boolean isLongClickable(java.lang.Object) -> isLongClickable
    boolean isPassword(java.lang.Object) -> isPassword
    boolean isScrollable(java.lang.Object) -> isScrollable
    boolean isSelected(java.lang.Object) -> isSelected
    boolean performAction(java.lang.Object,int) -> performAction
    boolean performAction(java.lang.Object,int,android.os.Bundle) -> performAction
    void setMovementGranularities(java.lang.Object,int) -> setMovementGranularities
    int getMovementGranularities(java.lang.Object) -> getMovementGranularities
    void setBoundsInParent(java.lang.Object,android.graphics.Rect) -> setBoundsInParent
    void setBoundsInScreen(java.lang.Object,android.graphics.Rect) -> setBoundsInScreen
    void setCheckable(java.lang.Object,boolean) -> setCheckable
    void setChecked(java.lang.Object,boolean) -> setChecked
    void setClassName(java.lang.Object,java.lang.CharSequence) -> setClassName
    void setClickable(java.lang.Object,boolean) -> setClickable
    void setContentDescription(java.lang.Object,java.lang.CharSequence) -> setContentDescription
    void setEnabled(java.lang.Object,boolean) -> setEnabled
    void setFocusable(java.lang.Object,boolean) -> setFocusable
    void setFocused(java.lang.Object,boolean) -> setFocused
    void setVisibleToUser(java.lang.Object,boolean) -> setVisibleToUser
    void setAccessibilityFocused(java.lang.Object,boolean) -> setAccessibilityFocused
    void setLongClickable(java.lang.Object,boolean) -> setLongClickable
    void setPackageName(java.lang.Object,java.lang.CharSequence) -> setPackageName
    void setParent(java.lang.Object,android.view.View) -> setParent
    void setPassword(java.lang.Object,boolean) -> setPassword
    void setScrollable(java.lang.Object,boolean) -> setScrollable
    void setSelected(java.lang.Object,boolean) -> setSelected
    void setSource(java.lang.Object,android.view.View) -> setSource
    void setSource(java.lang.Object,android.view.View,int) -> setSource
    java.lang.Object findFocus(java.lang.Object,int) -> findFocus
    java.lang.Object focusSearch(java.lang.Object,int) -> focusSearch
    void setText(java.lang.Object,java.lang.CharSequence) -> setText
    void recycle(java.lang.Object) -> recycle
    void setParent(java.lang.Object,android.view.View,int) -> setParent
    java.lang.String getViewIdResourceName(java.lang.Object) -> getViewIdResourceName
    void setViewIdResourceName(java.lang.Object,java.lang.String) -> setViewIdResourceName
    int getLiveRegion(java.lang.Object) -> getLiveRegion
    void setLiveRegion(java.lang.Object,int) -> setLiveRegion
android.support.v4.view.accessibility.AccessibilityNodeInfoCompatIcs -> android.support.v4.view.accessibility.AccessibilityNodeInfoCompatIcs:
    java.lang.Object obtain() -> obtain
    java.lang.Object obtain(android.view.View) -> obtain
    java.lang.Object obtain(java.lang.Object) -> obtain
    void addAction(java.lang.Object,int) -> addAction
    void addChild(java.lang.Object,android.view.View) -> addChild
    java.util.List findAccessibilityNodeInfosByText(java.lang.Object,java.lang.String) -> findAccessibilityNodeInfosByText
    int getActions(java.lang.Object) -> getActions
    void getBoundsInParent(java.lang.Object,android.graphics.Rect) -> getBoundsInParent
    void getBoundsInScreen(java.lang.Object,android.graphics.Rect) -> getBoundsInScreen
    java.lang.Object getChild(java.lang.Object,int) -> getChild
    int getChildCount(java.lang.Object) -> getChildCount
    java.lang.CharSequence getClassName(java.lang.Object) -> getClassName
    java.lang.CharSequence getContentDescription(java.lang.Object) -> getContentDescription
    java.lang.CharSequence getPackageName(java.lang.Object) -> getPackageName
    java.lang.Object getParent(java.lang.Object) -> getParent
    java.lang.CharSequence getText(java.lang.Object) -> getText
    int getWindowId(java.lang.Object) -> getWindowId
    boolean isCheckable(java.lang.Object) -> isCheckable
    boolean isChecked(java.lang.Object) -> isChecked
    boolean isClickable(java.lang.Object) -> isClickable
    boolean isEnabled(java.lang.Object) -> isEnabled
    boolean isFocusable(java.lang.Object) -> isFocusable
    boolean isFocused(java.lang.Object) -> isFocused
    boolean isLongClickable(java.lang.Object) -> isLongClickable
    boolean isPassword(java.lang.Object) -> isPassword
    boolean isScrollable(java.lang.Object) -> isScrollable
    boolean isSelected(java.lang.Object) -> isSelected
    boolean performAction(java.lang.Object,int) -> performAction
    void setBoundsInParent(java.lang.Object,android.graphics.Rect) -> setBoundsInParent
    void setBoundsInScreen(java.lang.Object,android.graphics.Rect) -> setBoundsInScreen
    void setCheckable(java.lang.Object,boolean) -> setCheckable
    void setChecked(java.lang.Object,boolean) -> setChecked
    void setClassName(java.lang.Object,java.lang.CharSequence) -> setClassName
    void setClickable(java.lang.Object,boolean) -> setClickable
    void setContentDescription(java.lang.Object,java.lang.CharSequence) -> setContentDescription
    void setEnabled(java.lang.Object,boolean) -> setEnabled
    void setFocusable(java.lang.Object,boolean) -> setFocusable
    void setFocused(java.lang.Object,boolean) -> setFocused
    void setLongClickable(java.lang.Object,boolean) -> setLongClickable
    void setPackageName(java.lang.Object,java.lang.CharSequence) -> setPackageName
    void setParent(java.lang.Object,android.view.View) -> setParent
    void setPassword(java.lang.Object,boolean) -> setPassword
    void setScrollable(java.lang.Object,boolean) -> setScrollable
    void setSelected(java.lang.Object,boolean) -> setSelected
    void setSource(java.lang.Object,android.view.View) -> setSource
    void setText(java.lang.Object,java.lang.CharSequence) -> setText
    void recycle(java.lang.Object) -> recycle
android.support.v4.view.accessibility.AccessibilityNodeInfoCompatJellyBean -> android.support.v4.view.accessibility.AccessibilityNodeInfoCompatJellyBean:
    void addChild(java.lang.Object,android.view.View,int) -> addChild
    void setSource(java.lang.Object,android.view.View,int) -> setSource
    boolean isVisibleToUser(java.lang.Object) -> isVisibleToUser
    void setVisibleToUser(java.lang.Object,boolean) -> setVisibleToUser
    boolean performAction(java.lang.Object,int,android.os.Bundle) -> performAction
    void setMovementGranularities(java.lang.Object,int) -> setMovementGranularities
    int getMovementGranularities(java.lang.Object) -> getMovementGranularities
    java.lang.Object obtain(android.view.View,int) -> obtain
    java.lang.Object findFocus(java.lang.Object,int) -> findFocus
    java.lang.Object focusSearch(java.lang.Object,int) -> focusSearch
    void setParent(java.lang.Object,android.view.View,int) -> setParent
    boolean isAccessibilityFocused(java.lang.Object) -> isAccessibilityFocused
    void setAccesibilityFocused(java.lang.Object,boolean) -> setAccesibilityFocused
android.support.v4.view.accessibility.AccessibilityNodeInfoCompatJellybeanMr2 -> android.support.v4.view.accessibility.AccessibilityNodeInfoCompatJellybeanMr2:
    void setViewIdResourceName(java.lang.Object,java.lang.String) -> setViewIdResourceName
    java.lang.String getViewIdResourceName(java.lang.Object) -> getViewIdResourceName
android.support.v4.view.accessibility.AccessibilityNodeInfoCompatKitKat -> android.support.v4.view.accessibility.AccessibilityNodeInfoCompatKitKat:
    int getLiveRegion(java.lang.Object) -> getLiveRegion
    void setLiveRegion(java.lang.Object,int) -> setLiveRegion
android.support.v4.view.accessibility.AccessibilityNodeProviderCompat -> android.support.v4.view.accessibility.AccessibilityNodeProviderCompat:
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderImpl IMPL -> IMPL
    java.lang.Object mProvider -> mProvider
    java.lang.Object getProvider() -> getProvider
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat createAccessibilityNodeInfo(int) -> createAccessibilityNodeInfo
    boolean performAction(int,int,android.os.Bundle) -> performAction
    java.util.List findAccessibilityNodeInfosByText(java.lang.String,int) -> findAccessibilityNodeInfosByText
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat findFocus(int) -> findFocus
android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderImpl -> android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderImpl:
    java.lang.Object newAccessibilityNodeProviderBridge(android.support.v4.view.accessibility.AccessibilityNodeProviderCompat) -> newAccessibilityNodeProviderBridge
android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderJellyBeanImpl -> android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderJellyBeanImpl:
    java.lang.Object newAccessibilityNodeProviderBridge(android.support.v4.view.accessibility.AccessibilityNodeProviderCompat) -> newAccessibilityNodeProviderBridge
android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderJellyBeanImpl$1 -> android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderJellyBeanImpl$1:
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat val$compat -> val$compat
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderJellyBeanImpl this$0 -> this$0
    boolean performAction(int,int,android.os.Bundle) -> performAction
    java.util.List findAccessibilityNodeInfosByText(java.lang.String,int) -> findAccessibilityNodeInfosByText
    java.lang.Object createAccessibilityNodeInfo(int) -> createAccessibilityNodeInfo
android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderKitKatImpl -> android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderKitKatImpl:
    java.lang.Object newAccessibilityNodeProviderBridge(android.support.v4.view.accessibility.AccessibilityNodeProviderCompat) -> newAccessibilityNodeProviderBridge
android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderKitKatImpl$1 -> android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderKitKatImpl$1:
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat val$compat -> val$compat
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderKitKatImpl this$0 -> this$0
    boolean performAction(int,int,android.os.Bundle) -> performAction
    java.util.List findAccessibilityNodeInfosByText(java.lang.String,int) -> findAccessibilityNodeInfosByText
    java.lang.Object createAccessibilityNodeInfo(int) -> createAccessibilityNodeInfo
    java.lang.Object findFocus(int) -> findFocus
android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderStubImpl -> android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderStubImpl:
    java.lang.Object newAccessibilityNodeProviderBridge(android.support.v4.view.accessibility.AccessibilityNodeProviderCompat) -> newAccessibilityNodeProviderBridge
android.support.v4.view.accessibility.AccessibilityNodeProviderCompatJellyBean -> android.support.v4.view.accessibility.AccessibilityNodeProviderCompatJellyBean:
    java.lang.Object newAccessibilityNodeProviderBridge(android.support.v4.view.accessibility.AccessibilityNodeProviderCompatJellyBean$AccessibilityNodeInfoBridge) -> newAccessibilityNodeProviderBridge
android.support.v4.view.accessibility.AccessibilityNodeProviderCompatJellyBean$1 -> android.support.v4.view.accessibility.AccessibilityNodeProviderCompatJellyBean$1:
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompatJellyBean$AccessibilityNodeInfoBridge val$bridge -> val$bridge
    android.view.accessibility.AccessibilityNodeInfo createAccessibilityNodeInfo(int) -> createAccessibilityNodeInfo
    java.util.List findAccessibilityNodeInfosByText(java.lang.String,int) -> findAccessibilityNodeInfosByText
    boolean performAction(int,int,android.os.Bundle) -> performAction
android.support.v4.view.accessibility.AccessibilityNodeProviderCompatJellyBean$AccessibilityNodeInfoBridge -> android.support.v4.view.accessibility.AccessibilityNodeProviderCompatJellyBean$AccessibilityNodeInfoBridge:
    java.lang.Object createAccessibilityNodeInfo(int) -> createAccessibilityNodeInfo
    boolean performAction(int,int,android.os.Bundle) -> performAction
    java.util.List findAccessibilityNodeInfosByText(java.lang.String,int) -> findAccessibilityNodeInfosByText
android.support.v4.view.accessibility.AccessibilityNodeProviderCompatKitKat -> android.support.v4.view.accessibility.AccessibilityNodeProviderCompatKitKat:
    java.lang.Object newAccessibilityNodeProviderBridge(android.support.v4.view.accessibility.AccessibilityNodeProviderCompatKitKat$AccessibilityNodeInfoBridge) -> newAccessibilityNodeProviderBridge
android.support.v4.view.accessibility.AccessibilityNodeProviderCompatKitKat$1 -> android.support.v4.view.accessibility.AccessibilityNodeProviderCompatKitKat$1:
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompatKitKat$AccessibilityNodeInfoBridge val$bridge -> val$bridge
    android.view.accessibility.AccessibilityNodeInfo createAccessibilityNodeInfo(int) -> createAccessibilityNodeInfo
    java.util.List findAccessibilityNodeInfosByText(java.lang.String,int) -> findAccessibilityNodeInfosByText
    boolean performAction(int,int,android.os.Bundle) -> performAction
    android.view.accessibility.AccessibilityNodeInfo findFocus(int) -> findFocus
android.support.v4.view.accessibility.AccessibilityNodeProviderCompatKitKat$AccessibilityNodeInfoBridge -> android.support.v4.view.accessibility.AccessibilityNodeProviderCompatKitKat$AccessibilityNodeInfoBridge:
    java.lang.Object createAccessibilityNodeInfo(int) -> createAccessibilityNodeInfo
    boolean performAction(int,int,android.os.Bundle) -> performAction
    java.util.List findAccessibilityNodeInfosByText(java.lang.String,int) -> findAccessibilityNodeInfosByText
    java.lang.Object findFocus(int) -> findFocus
android.support.v4.view.accessibility.AccessibilityRecordCompat -> android.support.v4.view.accessibility.AccessibilityRecordCompat:
    android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordImpl IMPL -> IMPL
    java.lang.Object mRecord -> mRecord
    java.lang.Object getImpl() -> getImpl
    android.support.v4.view.accessibility.AccessibilityRecordCompat obtain(android.support.v4.view.accessibility.AccessibilityRecordCompat) -> obtain
    android.support.v4.view.accessibility.AccessibilityRecordCompat obtain() -> obtain
    void setSource(android.view.View) -> setSource
    void setSource(android.view.View,int) -> setSource
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat getSource() -> getSource
    int getWindowId() -> getWindowId
    boolean isChecked() -> isChecked
    void setChecked(boolean) -> setChecked
    boolean isEnabled() -> isEnabled
    void setEnabled(boolean) -> setEnabled
    boolean isPassword() -> isPassword
    void setPassword(boolean) -> setPassword
    boolean isFullScreen() -> isFullScreen
    void setFullScreen(boolean) -> setFullScreen
    boolean isScrollable() -> isScrollable
    void setScrollable(boolean) -> setScrollable
    int getItemCount() -> getItemCount
    void setItemCount(int) -> setItemCount
    int getCurrentItemIndex() -> getCurrentItemIndex
    void setCurrentItemIndex(int) -> setCurrentItemIndex
    int getFromIndex() -> getFromIndex
    void setFromIndex(int) -> setFromIndex
    int getToIndex() -> getToIndex
    void setToIndex(int) -> setToIndex
    int getScrollX() -> getScrollX
    void setScrollX(int) -> setScrollX
    int getScrollY() -> getScrollY
    void setScrollY(int) -> setScrollY
    int getMaxScrollX() -> getMaxScrollX
    void setMaxScrollX(int) -> setMaxScrollX
    int getMaxScrollY() -> getMaxScrollY
    void setMaxScrollY(int) -> setMaxScrollY
    int getAddedCount() -> getAddedCount
    void setAddedCount(int) -> setAddedCount
    int getRemovedCount() -> getRemovedCount
    void setRemovedCount(int) -> setRemovedCount
    java.lang.CharSequence getClassName() -> getClassName
    void setClassName(java.lang.CharSequence) -> setClassName
    java.util.List getText() -> getText
    java.lang.CharSequence getBeforeText() -> getBeforeText
    void setBeforeText(java.lang.CharSequence) -> setBeforeText
    java.lang.CharSequence getContentDescription() -> getContentDescription
    void setContentDescription(java.lang.CharSequence) -> setContentDescription
    android.os.Parcelable getParcelableData() -> getParcelableData
    void setParcelableData(android.os.Parcelable) -> setParcelableData
    void recycle() -> recycle
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordIcsImpl -> android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordIcsImpl:
    java.lang.Object obtain() -> obtain
    java.lang.Object obtain(java.lang.Object) -> obtain
    int getAddedCount(java.lang.Object) -> getAddedCount
    java.lang.CharSequence getBeforeText(java.lang.Object) -> getBeforeText
    java.lang.CharSequence getClassName(java.lang.Object) -> getClassName
    java.lang.CharSequence getContentDescription(java.lang.Object) -> getContentDescription
    int getCurrentItemIndex(java.lang.Object) -> getCurrentItemIndex
    int getFromIndex(java.lang.Object) -> getFromIndex
    int getItemCount(java.lang.Object) -> getItemCount
    android.os.Parcelable getParcelableData(java.lang.Object) -> getParcelableData
    int getRemovedCount(java.lang.Object) -> getRemovedCount
    int getScrollX(java.lang.Object) -> getScrollX
    int getScrollY(java.lang.Object) -> getScrollY
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat getSource(java.lang.Object) -> getSource
    java.util.List getText(java.lang.Object) -> getText
    int getToIndex(java.lang.Object) -> getToIndex
    int getWindowId(java.lang.Object) -> getWindowId
    boolean isChecked(java.lang.Object) -> isChecked
    boolean isEnabled(java.lang.Object) -> isEnabled
    boolean isFullScreen(java.lang.Object) -> isFullScreen
    boolean isPassword(java.lang.Object) -> isPassword
    boolean isScrollable(java.lang.Object) -> isScrollable
    void recycle(java.lang.Object) -> recycle
    void setAddedCount(java.lang.Object,int) -> setAddedCount
    void setBeforeText(java.lang.Object,java.lang.CharSequence) -> setBeforeText
    void setChecked(java.lang.Object,boolean) -> setChecked
    void setClassName(java.lang.Object,java.lang.CharSequence) -> setClassName
    void setContentDescription(java.lang.Object,java.lang.CharSequence) -> setContentDescription
    void setCurrentItemIndex(java.lang.Object,int) -> setCurrentItemIndex
    void setEnabled(java.lang.Object,boolean) -> setEnabled
    void setFromIndex(java.lang.Object,int) -> setFromIndex
    void setFullScreen(java.lang.Object,boolean) -> setFullScreen
    void setItemCount(java.lang.Object,int) -> setItemCount
    void setParcelableData(java.lang.Object,android.os.Parcelable) -> setParcelableData
    void setPassword(java.lang.Object,boolean) -> setPassword
    void setRemovedCount(java.lang.Object,int) -> setRemovedCount
    void setScrollX(java.lang.Object,int) -> setScrollX
    void setScrollY(java.lang.Object,int) -> setScrollY
    void setScrollable(java.lang.Object,boolean) -> setScrollable
    void setSource(java.lang.Object,android.view.View) -> setSource
    void setToIndex(java.lang.Object,int) -> setToIndex
android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordIcsMr1Impl -> android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordIcsMr1Impl:
    int getMaxScrollX(java.lang.Object) -> getMaxScrollX
    int getMaxScrollY(java.lang.Object) -> getMaxScrollY
    void setMaxScrollX(java.lang.Object,int) -> setMaxScrollX
    void setMaxScrollY(java.lang.Object,int) -> setMaxScrollY
android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordImpl -> android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordImpl:
    java.lang.Object obtain() -> obtain
    java.lang.Object obtain(java.lang.Object) -> obtain
    void setSource(java.lang.Object,android.view.View) -> setSource
    void setSource(java.lang.Object,android.view.View,int) -> setSource
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat getSource(java.lang.Object) -> getSource
    int getWindowId(java.lang.Object) -> getWindowId
    boolean isChecked(java.lang.Object) -> isChecked
    void setChecked(java.lang.Object,boolean) -> setChecked
    boolean isEnabled(java.lang.Object) -> isEnabled
    void setEnabled(java.lang.Object,boolean) -> setEnabled
    boolean isPassword(java.lang.Object) -> isPassword
    void setPassword(java.lang.Object,boolean) -> setPassword
    boolean isFullScreen(java.lang.Object) -> isFullScreen
    void setFullScreen(java.lang.Object,boolean) -> setFullScreen
    boolean isScrollable(java.lang.Object) -> isScrollable
    void setScrollable(java.lang.Object,boolean) -> setScrollable
    int getItemCount(java.lang.Object) -> getItemCount
    void setItemCount(java.lang.Object,int) -> setItemCount
    int getCurrentItemIndex(java.lang.Object) -> getCurrentItemIndex
    void setCurrentItemIndex(java.lang.Object,int) -> setCurrentItemIndex
    int getFromIndex(java.lang.Object) -> getFromIndex
    void setFromIndex(java.lang.Object,int) -> setFromIndex
    int getToIndex(java.lang.Object) -> getToIndex
    void setToIndex(java.lang.Object,int) -> setToIndex
    int getScrollX(java.lang.Object) -> getScrollX
    void setScrollX(java.lang.Object,int) -> setScrollX
    int getScrollY(java.lang.Object) -> getScrollY
    void setScrollY(java.lang.Object,int) -> setScrollY
    int getMaxScrollX(java.lang.Object) -> getMaxScrollX
    void setMaxScrollX(java.lang.Object,int) -> setMaxScrollX
    int getMaxScrollY(java.lang.Object) -> getMaxScrollY
    void setMaxScrollY(java.lang.Object,int) -> setMaxScrollY
    int getAddedCount(java.lang.Object) -> getAddedCount
    void setAddedCount(java.lang.Object,int) -> setAddedCount
    int getRemovedCount(java.lang.Object) -> getRemovedCount
    void setRemovedCount(java.lang.Object,int) -> setRemovedCount
    java.lang.CharSequence getClassName(java.lang.Object) -> getClassName
    void setClassName(java.lang.Object,java.lang.CharSequence) -> setClassName
    java.util.List getText(java.lang.Object) -> getText
    java.lang.CharSequence getBeforeText(java.lang.Object) -> getBeforeText
    void setBeforeText(java.lang.Object,java.lang.CharSequence) -> setBeforeText
    java.lang.CharSequence getContentDescription(java.lang.Object) -> getContentDescription
    void setContentDescription(java.lang.Object,java.lang.CharSequence) -> setContentDescription
    android.os.Parcelable getParcelableData(java.lang.Object) -> getParcelableData
    void setParcelableData(java.lang.Object,android.os.Parcelable) -> setParcelableData
    void recycle(java.lang.Object) -> recycle
android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordJellyBeanImpl -> android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordJellyBeanImpl:
    void setSource(java.lang.Object,android.view.View,int) -> setSource
android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordStubImpl -> android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordStubImpl:
    java.lang.Object obtain() -> obtain
    java.lang.Object obtain(java.lang.Object) -> obtain
    int getAddedCount(java.lang.Object) -> getAddedCount
    java.lang.CharSequence getBeforeText(java.lang.Object) -> getBeforeText
    java.lang.CharSequence getClassName(java.lang.Object) -> getClassName
    java.lang.CharSequence getContentDescription(java.lang.Object) -> getContentDescription
    int getCurrentItemIndex(java.lang.Object) -> getCurrentItemIndex
    int getFromIndex(java.lang.Object) -> getFromIndex
    int getItemCount(java.lang.Object) -> getItemCount
    int getMaxScrollX(java.lang.Object) -> getMaxScrollX
    int getMaxScrollY(java.lang.Object) -> getMaxScrollY
    android.os.Parcelable getParcelableData(java.lang.Object) -> getParcelableData
    int getRemovedCount(java.lang.Object) -> getRemovedCount
    int getScrollX(java.lang.Object) -> getScrollX
    int getScrollY(java.lang.Object) -> getScrollY
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat getSource(java.lang.Object) -> getSource
    java.util.List getText(java.lang.Object) -> getText
    int getToIndex(java.lang.Object) -> getToIndex
    int getWindowId(java.lang.Object) -> getWindowId
    boolean isChecked(java.lang.Object) -> isChecked
    boolean isEnabled(java.lang.Object) -> isEnabled
    boolean isFullScreen(java.lang.Object) -> isFullScreen
    boolean isPassword(java.lang.Object) -> isPassword
    boolean isScrollable(java.lang.Object) -> isScrollable
    void recycle(java.lang.Object) -> recycle
    void setAddedCount(java.lang.Object,int) -> setAddedCount
    void setBeforeText(java.lang.Object,java.lang.CharSequence) -> setBeforeText
    void setChecked(java.lang.Object,boolean) -> setChecked
    void setClassName(java.lang.Object,java.lang.CharSequence) -> setClassName
    void setContentDescription(java.lang.Object,java.lang.CharSequence) -> setContentDescription
    void setCurrentItemIndex(java.lang.Object,int) -> setCurrentItemIndex
    void setEnabled(java.lang.Object,boolean) -> setEnabled
    void setFromIndex(java.lang.Object,int) -> setFromIndex
    void setFullScreen(java.lang.Object,boolean) -> setFullScreen
    void setItemCount(java.lang.Object,int) -> setItemCount
    void setMaxScrollX(java.lang.Object,int) -> setMaxScrollX
    void setMaxScrollY(java.lang.Object,int) -> setMaxScrollY
    void setParcelableData(java.lang.Object,android.os.Parcelable) -> setParcelableData
    void setPassword(java.lang.Object,boolean) -> setPassword
    void setRemovedCount(java.lang.Object,int) -> setRemovedCount
    void setScrollX(java.lang.Object,int) -> setScrollX
    void setScrollY(java.lang.Object,int) -> setScrollY
    void setScrollable(java.lang.Object,boolean) -> setScrollable
    void setSource(java.lang.Object,android.view.View) -> setSource
    void setSource(java.lang.Object,android.view.View,int) -> setSource
    void setToIndex(java.lang.Object,int) -> setToIndex
android.support.v4.view.accessibility.AccessibilityRecordCompatIcs -> android.support.v4.view.accessibility.AccessibilityRecordCompatIcs:
    java.lang.Object obtain() -> obtain
    java.lang.Object obtain(java.lang.Object) -> obtain
    int getAddedCount(java.lang.Object) -> getAddedCount
    java.lang.CharSequence getBeforeText(java.lang.Object) -> getBeforeText
    java.lang.CharSequence getClassName(java.lang.Object) -> getClassName
    java.lang.CharSequence getContentDescription(java.lang.Object) -> getContentDescription
    int getCurrentItemIndex(java.lang.Object) -> getCurrentItemIndex
    int getFromIndex(java.lang.Object) -> getFromIndex
    int getItemCount(java.lang.Object) -> getItemCount
    android.os.Parcelable getParcelableData(java.lang.Object) -> getParcelableData
    int getRemovedCount(java.lang.Object) -> getRemovedCount
    int getScrollX(java.lang.Object) -> getScrollX
    int getScrollY(java.lang.Object) -> getScrollY
    java.lang.Object getSource(java.lang.Object) -> getSource
    java.util.List getText(java.lang.Object) -> getText
    int getToIndex(java.lang.Object) -> getToIndex
    int getWindowId(java.lang.Object) -> getWindowId
    boolean isChecked(java.lang.Object) -> isChecked
    boolean isEnabled(java.lang.Object) -> isEnabled
    boolean isFullScreen(java.lang.Object) -> isFullScreen
    boolean isPassword(java.lang.Object) -> isPassword
    boolean isScrollable(java.lang.Object) -> isScrollable
    void recycle(java.lang.Object) -> recycle
    void setAddedCount(java.lang.Object,int) -> setAddedCount
    void setBeforeText(java.lang.Object,java.lang.CharSequence) -> setBeforeText
    void setChecked(java.lang.Object,boolean) -> setChecked
    void setClassName(java.lang.Object,java.lang.CharSequence) -> setClassName
    void setContentDescription(java.lang.Object,java.lang.CharSequence) -> setContentDescription
    void setCurrentItemIndex(java.lang.Object,int) -> setCurrentItemIndex
    void setEnabled(java.lang.Object,boolean) -> setEnabled
    void setFromIndex(java.lang.Object,int) -> setFromIndex
    void setFullScreen(java.lang.Object,boolean) -> setFullScreen
    void setItemCount(java.lang.Object,int) -> setItemCount
    void setParcelableData(java.lang.Object,android.os.Parcelable) -> setParcelableData
    void setPassword(java.lang.Object,boolean) -> setPassword
    void setRemovedCount(java.lang.Object,int) -> setRemovedCount
    void setScrollX(java.lang.Object,int) -> setScrollX
    void setScrollY(java.lang.Object,int) -> setScrollY
    void setScrollable(java.lang.Object,boolean) -> setScrollable
    void setSource(java.lang.Object,android.view.View) -> setSource
    void setToIndex(java.lang.Object,int) -> setToIndex
android.support.v4.view.accessibility.AccessibilityRecordCompatIcsMr1 -> android.support.v4.view.accessibility.AccessibilityRecordCompatIcsMr1:
    int getMaxScrollX(java.lang.Object) -> getMaxScrollX
    int getMaxScrollY(java.lang.Object) -> getMaxScrollY
    void setMaxScrollX(java.lang.Object,int) -> setMaxScrollX
    void setMaxScrollY(java.lang.Object,int) -> setMaxScrollY
android.support.v4.view.accessibility.AccessibilityRecordCompatJellyBean -> android.support.v4.view.accessibility.AccessibilityRecordCompatJellyBean:
    void setSource(java.lang.Object,android.view.View,int) -> setSource
android.support.v4.widget.AutoScrollHelper -> android.support.v4.widget.AutoScrollHelper:
    float RELATIVE_UNSPECIFIED -> RELATIVE_UNSPECIFIED
    float NO_MAX -> NO_MAX
    float NO_MIN -> NO_MIN
    int EDGE_TYPE_INSIDE -> EDGE_TYPE_INSIDE
    int EDGE_TYPE_INSIDE_EXTEND -> EDGE_TYPE_INSIDE_EXTEND
    int EDGE_TYPE_OUTSIDE -> EDGE_TYPE_OUTSIDE
    int HORIZONTAL -> HORIZONTAL
    int VERTICAL -> VERTICAL
    android.support.v4.widget.AutoScrollHelper$ClampedScroller mScroller -> mScroller
    android.view.animation.Interpolator mEdgeInterpolator -> mEdgeInterpolator
    android.view.View mTarget -> mTarget
    java.lang.Runnable mRunnable -> mRunnable
    float[] mRelativeEdges -> mRelativeEdges
    float[] mMaximumEdges -> mMaximumEdges
    int mEdgeType -> mEdgeType
    int mActivationDelay -> mActivationDelay
    float[] mRelativeVelocity -> mRelativeVelocity
    float[] mMinimumVelocity -> mMinimumVelocity
    float[] mMaximumVelocity -> mMaximumVelocity
    boolean mAlreadyDelayed -> mAlreadyDelayed
    boolean mNeedsReset -> mNeedsReset
    boolean mNeedsCancel -> mNeedsCancel
    boolean mAnimating -> mAnimating
    boolean mEnabled -> mEnabled
    boolean mExclusive -> mExclusive
    int DEFAULT_EDGE_TYPE -> DEFAULT_EDGE_TYPE
    int DEFAULT_MINIMUM_VELOCITY_DIPS -> DEFAULT_MINIMUM_VELOCITY_DIPS
    int DEFAULT_MAXIMUM_VELOCITY_DIPS -> DEFAULT_MAXIMUM_VELOCITY_DIPS
    float DEFAULT_MAXIMUM_EDGE -> DEFAULT_MAXIMUM_EDGE
    float DEFAULT_RELATIVE_EDGE -> DEFAULT_RELATIVE_EDGE
    float DEFAULT_RELATIVE_VELOCITY -> DEFAULT_RELATIVE_VELOCITY
    int DEFAULT_ACTIVATION_DELAY -> DEFAULT_ACTIVATION_DELAY
    int DEFAULT_RAMP_UP_DURATION -> DEFAULT_RAMP_UP_DURATION
    int DEFAULT_RAMP_DOWN_DURATION -> DEFAULT_RAMP_DOWN_DURATION
    android.support.v4.widget.AutoScrollHelper setEnabled(boolean) -> setEnabled
    boolean isEnabled() -> isEnabled
    android.support.v4.widget.AutoScrollHelper setExclusive(boolean) -> setExclusive
    boolean isExclusive() -> isExclusive
    android.support.v4.widget.AutoScrollHelper setMaximumVelocity(float,float) -> setMaximumVelocity
    android.support.v4.widget.AutoScrollHelper setMinimumVelocity(float,float) -> setMinimumVelocity
    android.support.v4.widget.AutoScrollHelper setRelativeVelocity(float,float) -> setRelativeVelocity
    android.support.v4.widget.AutoScrollHelper setEdgeType(int) -> setEdgeType
    android.support.v4.widget.AutoScrollHelper setRelativeEdges(float,float) -> setRelativeEdges
    android.support.v4.widget.AutoScrollHelper setMaximumEdges(float,float) -> setMaximumEdges
    android.support.v4.widget.AutoScrollHelper setActivationDelay(int) -> setActivationDelay
    android.support.v4.widget.AutoScrollHelper setRampUpDuration(int) -> setRampUpDuration
    android.support.v4.widget.AutoScrollHelper setRampDownDuration(int) -> setRampDownDuration
    boolean onTouch(android.view.View,android.view.MotionEvent) -> onTouch
    boolean shouldAnimate() -> shouldAnimate
    void startAnimating() -> startAnimating
    void requestStop() -> requestStop
    float computeTargetVelocity(int,float,float,float) -> computeTargetVelocity
    void scrollTargetBy(int,int) -> scrollTargetBy
    boolean canTargetScrollHorizontally(int) -> canTargetScrollHorizontally
    boolean canTargetScrollVertically(int) -> canTargetScrollVertically
    float getEdgeValue(float,float,float,float) -> getEdgeValue
    float constrainEdgeValue(float,float) -> constrainEdgeValue
    int constrain(int,int,int) -> constrain
    float constrain(float,float,float) -> constrain
    void cancelTargetTouch() -> cancelTargetTouch
    boolean access$100(android.support.v4.widget.AutoScrollHelper) -> access$100
    boolean access$200(android.support.v4.widget.AutoScrollHelper) -> access$200
    boolean access$202(android.support.v4.widget.AutoScrollHelper,boolean) -> access$202
    android.support.v4.widget.AutoScrollHelper$ClampedScroller access$300(android.support.v4.widget.AutoScrollHelper) -> access$300
    boolean access$400(android.support.v4.widget.AutoScrollHelper) -> access$400
    boolean access$102(android.support.v4.widget.AutoScrollHelper,boolean) -> access$102
    boolean access$500(android.support.v4.widget.AutoScrollHelper) -> access$500
    boolean access$502(android.support.v4.widget.AutoScrollHelper,boolean) -> access$502
    void access$600(android.support.v4.widget.AutoScrollHelper) -> access$600
    android.view.View access$700(android.support.v4.widget.AutoScrollHelper) -> access$700
    int access$800(int,int,int) -> access$800
    float access$900(float,float,float) -> access$900
android.support.v4.widget.AutoScrollHelper$1 -> android.support.v4.widget.AutoScrollHelper$1:
android.support.v4.widget.AutoScrollHelper$ClampedScroller -> android.support.v4.widget.AutoScrollHelper$ClampedScroller:
    int mRampUpDuration -> mRampUpDuration
    int mRampDownDuration -> mRampDownDuration
    float mTargetVelocityX -> mTargetVelocityX
    float mTargetVelocityY -> mTargetVelocityY
    long mStartTime -> mStartTime
    long mDeltaTime -> mDeltaTime
    int mDeltaX -> mDeltaX
    int mDeltaY -> mDeltaY
    long mStopTime -> mStopTime
    float mStopValue -> mStopValue
    int mEffectiveRampDown -> mEffectiveRampDown
    void setRampUpDuration(int) -> setRampUpDuration
    void setRampDownDuration(int) -> setRampDownDuration
    void start() -> start
    void requestStop() -> requestStop
    boolean isFinished() -> isFinished
    float getValueAt(long) -> getValueAt
    float interpolateValue(float) -> interpolateValue
    void computeScrollDelta() -> computeScrollDelta
    void setTargetVelocity(float,float) -> setTargetVelocity
    int getHorizontalDirection() -> getHorizontalDirection
    int getVerticalDirection() -> getVerticalDirection
    int getDeltaX() -> getDeltaX
    int getDeltaY() -> getDeltaY
android.support.v4.widget.AutoScrollHelper$ScrollAnimationRunnable -> android.support.v4.widget.AutoScrollHelper$ScrollAnimationRunnable:
    android.support.v4.widget.AutoScrollHelper this$0 -> this$0
    void run() -> run
android.support.v4.widget.ContentLoadingProgressBar -> android.support.v4.widget.ContentLoadingProgressBar:
    int MIN_SHOW_TIME -> MIN_SHOW_TIME
    int MIN_DELAY -> MIN_DELAY
    long mStartTime -> mStartTime
    boolean mPostedHide -> mPostedHide
    boolean mPostedShow -> mPostedShow
    boolean mDismissed -> mDismissed
    java.lang.Runnable mDelayedHide -> mDelayedHide
    java.lang.Runnable mDelayedShow -> mDelayedShow
    void onAttachedToWindow() -> onAttachedToWindow
    void onDetachedFromWindow() -> onDetachedFromWindow
    void removeCallbacks() -> removeCallbacks
    void hide() -> hide
    void show() -> show
    boolean access$002(android.support.v4.widget.ContentLoadingProgressBar,boolean) -> access$002
    long access$102(android.support.v4.widget.ContentLoadingProgressBar,long) -> access$102
    boolean access$202(android.support.v4.widget.ContentLoadingProgressBar,boolean) -> access$202
    boolean access$300(android.support.v4.widget.ContentLoadingProgressBar) -> access$300
android.support.v4.widget.ContentLoadingProgressBar$1 -> android.support.v4.widget.ContentLoadingProgressBar$1:
    android.support.v4.widget.ContentLoadingProgressBar this$0 -> this$0
    void run() -> run
android.support.v4.widget.ContentLoadingProgressBar$2 -> android.support.v4.widget.ContentLoadingProgressBar$2:
    android.support.v4.widget.ContentLoadingProgressBar this$0 -> this$0
    void run() -> run
android.support.v4.widget.CursorAdapter -> android.support.v4.widget.CursorAdapter:
    boolean mDataValid -> mDataValid
    boolean mAutoRequery -> mAutoRequery
    android.database.Cursor mCursor -> mCursor
    android.content.Context mContext -> mContext
    int mRowIDColumn -> mRowIDColumn
    android.support.v4.widget.CursorAdapter$ChangeObserver mChangeObserver -> mChangeObserver
    android.database.DataSetObserver mDataSetObserver -> mDataSetObserver
    android.support.v4.widget.CursorFilter mCursorFilter -> mCursorFilter
    android.widget.FilterQueryProvider mFilterQueryProvider -> mFilterQueryProvider
    int FLAG_AUTO_REQUERY -> FLAG_AUTO_REQUERY
    int FLAG_REGISTER_CONTENT_OBSERVER -> FLAG_REGISTER_CONTENT_OBSERVER
    void init(android.content.Context,android.database.Cursor,boolean) -> init
    void init(android.content.Context,android.database.Cursor,int) -> init
    android.database.Cursor getCursor() -> getCursor
    int getCount() -> getCount
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
    boolean hasStableIds() -> hasStableIds
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    android.view.View getDropDownView(int,android.view.View,android.view.ViewGroup) -> getDropDownView
    android.view.View newView(android.content.Context,android.database.Cursor,android.view.ViewGroup) -> newView
    android.view.View newDropDownView(android.content.Context,android.database.Cursor,android.view.ViewGroup) -> newDropDownView
    void bindView(android.view.View,android.content.Context,android.database.Cursor) -> bindView
    void changeCursor(android.database.Cursor) -> changeCursor
    android.database.Cursor swapCursor(android.database.Cursor) -> swapCursor
    java.lang.CharSequence convertToString(android.database.Cursor) -> convertToString
    android.database.Cursor runQueryOnBackgroundThread(java.lang.CharSequence) -> runQueryOnBackgroundThread
    android.widget.Filter getFilter() -> getFilter
    android.widget.FilterQueryProvider getFilterQueryProvider() -> getFilterQueryProvider
    void setFilterQueryProvider(android.widget.FilterQueryProvider) -> setFilterQueryProvider
    void onContentChanged() -> onContentChanged
android.support.v4.widget.CursorAdapter$1 -> android.support.v4.widget.CursorAdapter$1:
android.support.v4.widget.CursorAdapter$ChangeObserver -> android.support.v4.widget.CursorAdapter$ChangeObserver:
    android.support.v4.widget.CursorAdapter this$0 -> this$0
    boolean deliverSelfNotifications() -> deliverSelfNotifications
    void onChange(boolean) -> onChange
android.support.v4.widget.CursorAdapter$MyDataSetObserver -> android.support.v4.widget.CursorAdapter$MyDataSetObserver:
    android.support.v4.widget.CursorAdapter this$0 -> this$0
    void onChanged() -> onChanged
    void onInvalidated() -> onInvalidated
android.support.v4.widget.CursorFilter -> android.support.v4.widget.CursorFilter:
    android.support.v4.widget.CursorFilter$CursorFilterClient mClient -> mClient
    java.lang.CharSequence convertResultToString(java.lang.Object) -> convertResultToString
    android.widget.Filter$FilterResults performFiltering(java.lang.CharSequence) -> performFiltering
    void publishResults(java.lang.CharSequence,android.widget.Filter$FilterResults) -> publishResults
android.support.v4.widget.CursorFilter$CursorFilterClient -> android.support.v4.widget.CursorFilter$CursorFilterClient:
    java.lang.CharSequence convertToString(android.database.Cursor) -> convertToString
    android.database.Cursor runQueryOnBackgroundThread(java.lang.CharSequence) -> runQueryOnBackgroundThread
    android.database.Cursor getCursor() -> getCursor
    void changeCursor(android.database.Cursor) -> changeCursor
android.support.v4.widget.DrawerLayout -> android.support.v4.widget.DrawerLayout:
    java.lang.String TAG -> TAG
    int STATE_IDLE -> STATE_IDLE
    int STATE_DRAGGING -> STATE_DRAGGING
    int STATE_SETTLING -> STATE_SETTLING
    int LOCK_MODE_UNLOCKED -> LOCK_MODE_UNLOCKED
    int LOCK_MODE_LOCKED_CLOSED -> LOCK_MODE_LOCKED_CLOSED
    int LOCK_MODE_LOCKED_OPEN -> LOCK_MODE_LOCKED_OPEN
    int MIN_DRAWER_MARGIN -> MIN_DRAWER_MARGIN
    int DEFAULT_SCRIM_COLOR -> DEFAULT_SCRIM_COLOR
    int PEEK_DELAY -> PEEK_DELAY
    int MIN_FLING_VELOCITY -> MIN_FLING_VELOCITY
    boolean ALLOW_EDGE_LOCK -> ALLOW_EDGE_LOCK
    boolean CHILDREN_DISALLOW_INTERCEPT -> CHILDREN_DISALLOW_INTERCEPT
    float TOUCH_SLOP_SENSITIVITY -> TOUCH_SLOP_SENSITIVITY
    int[] LAYOUT_ATTRS -> LAYOUT_ATTRS
    int mMinDrawerMargin -> mMinDrawerMargin
    int mScrimColor -> mScrimColor
    float mScrimOpacity -> mScrimOpacity
    android.graphics.Paint mScrimPaint -> mScrimPaint
    android.support.v4.widget.ViewDragHelper mLeftDragger -> mLeftDragger
    android.support.v4.widget.ViewDragHelper mRightDragger -> mRightDragger
    android.support.v4.widget.DrawerLayout$ViewDragCallback mLeftCallback -> mLeftCallback
    android.support.v4.widget.DrawerLayout$ViewDragCallback mRightCallback -> mRightCallback
    int mDrawerState -> mDrawerState
    boolean mInLayout -> mInLayout
    boolean mFirstLayout -> mFirstLayout
    int mLockModeLeft -> mLockModeLeft
    int mLockModeRight -> mLockModeRight
    boolean mDisallowInterceptRequested -> mDisallowInterceptRequested
    boolean mChildrenCanceledTouch -> mChildrenCanceledTouch
    android.support.v4.widget.DrawerLayout$DrawerListener mListener -> mListener
    float mInitialMotionX -> mInitialMotionX
    float mInitialMotionY -> mInitialMotionY
    android.graphics.drawable.Drawable mShadowLeft -> mShadowLeft
    android.graphics.drawable.Drawable mShadowRight -> mShadowRight
    void setDrawerShadow(android.graphics.drawable.Drawable,int) -> setDrawerShadow
    void setDrawerShadow(int,int) -> setDrawerShadow
    void setScrimColor(int) -> setScrimColor
    void setDrawerListener(android.support.v4.widget.DrawerLayout$DrawerListener) -> setDrawerListener
    void setDrawerLockMode(int) -> setDrawerLockMode
    void setDrawerLockMode(int,int) -> setDrawerLockMode
    void setDrawerLockMode(int,android.view.View) -> setDrawerLockMode
    int getDrawerLockMode(int) -> getDrawerLockMode
    int getDrawerLockMode(android.view.View) -> getDrawerLockMode
    void updateDrawerState(int,int,android.view.View) -> updateDrawerState
    void dispatchOnDrawerClosed(android.view.View) -> dispatchOnDrawerClosed
    void dispatchOnDrawerOpened(android.view.View) -> dispatchOnDrawerOpened
    void dispatchOnDrawerSlide(android.view.View,float) -> dispatchOnDrawerSlide
    void setDrawerViewOffset(android.view.View,float) -> setDrawerViewOffset
    float getDrawerViewOffset(android.view.View) -> getDrawerViewOffset
    int getDrawerViewAbsoluteGravity(android.view.View) -> getDrawerViewAbsoluteGravity
    boolean checkDrawerViewAbsoluteGravity(android.view.View,int) -> checkDrawerViewAbsoluteGravity
    android.view.View findOpenDrawer() -> findOpenDrawer
    void moveDrawerToOffset(android.view.View,float) -> moveDrawerToOffset
    android.view.View findDrawerWithGravity(int) -> findDrawerWithGravity
    java.lang.String gravityToString(int) -> gravityToString
    void onDetachedFromWindow() -> onDetachedFromWindow
    void onAttachedToWindow() -> onAttachedToWindow
    void onMeasure(int,int) -> onMeasure
    void onLayout(boolean,int,int,int,int) -> onLayout
    void requestLayout() -> requestLayout
    void computeScroll() -> computeScroll
    boolean hasOpaqueBackground(android.view.View) -> hasOpaqueBackground
    boolean drawChild(android.graphics.Canvas,android.view.View,long) -> drawChild
    boolean isContentView(android.view.View) -> isContentView
    boolean isDrawerView(android.view.View) -> isDrawerView
    boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void requestDisallowInterceptTouchEvent(boolean) -> requestDisallowInterceptTouchEvent
    void closeDrawers() -> closeDrawers
    void closeDrawers(boolean) -> closeDrawers
    void openDrawer(android.view.View) -> openDrawer
    void openDrawer(int) -> openDrawer
    void closeDrawer(android.view.View) -> closeDrawer
    void closeDrawer(int) -> closeDrawer
    boolean isDrawerOpen(android.view.View) -> isDrawerOpen
    boolean isDrawerOpen(int) -> isDrawerOpen
    boolean isDrawerVisible(android.view.View) -> isDrawerVisible
    boolean isDrawerVisible(int) -> isDrawerVisible
    boolean hasPeekingDrawer() -> hasPeekingDrawer
    android.view.ViewGroup$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    boolean checkLayoutParams(android.view.ViewGroup$LayoutParams) -> checkLayoutParams
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    boolean hasVisibleDrawer() -> hasVisibleDrawer
    android.view.View findVisibleDrawer() -> findVisibleDrawer
    void cancelChildViewTouch() -> cancelChildViewTouch
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    boolean onKeyUp(int,android.view.KeyEvent) -> onKeyUp
    void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    int[] access$100() -> access$100
android.support.v4.widget.DrawerLayout$AccessibilityDelegate -> android.support.v4.widget.DrawerLayout$AccessibilityDelegate:
    android.graphics.Rect mTmpRect -> mTmpRect
    android.support.v4.widget.DrawerLayout this$0 -> this$0
    void onInitializeAccessibilityNodeInfo(android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
    void addChildrenForAccessibility(android.support.v4.view.accessibility.AccessibilityNodeInfoCompat,android.view.ViewGroup) -> addChildrenForAccessibility
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
    boolean filter(android.view.View) -> filter
    void copyNodeInfoNoChildren(android.support.v4.view.accessibility.AccessibilityNodeInfoCompat,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> copyNodeInfoNoChildren
android.support.v4.widget.DrawerLayout$DrawerListener -> android.support.v4.widget.DrawerLayout$DrawerListener:
    void onDrawerSlide(android.view.View,float) -> onDrawerSlide
    void onDrawerOpened(android.view.View) -> onDrawerOpened
    void onDrawerClosed(android.view.View) -> onDrawerClosed
    void onDrawerStateChanged(int) -> onDrawerStateChanged
android.support.v4.widget.DrawerLayout$LayoutParams -> android.support.v4.widget.DrawerLayout$LayoutParams:
    int gravity -> gravity
    float onScreen -> onScreen
    boolean isPeeking -> isPeeking
    boolean knownOpen -> knownOpen
android.support.v4.widget.DrawerLayout$SavedState -> android.support.v4.widget.DrawerLayout$SavedState:
    int openDrawerGravity -> openDrawerGravity
    int lockModeLeft -> lockModeLeft
    int lockModeRight -> lockModeRight
    android.os.Parcelable$Creator CREATOR -> CREATOR
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.widget.DrawerLayout$SavedState$1 -> android.support.v4.widget.DrawerLayout$SavedState$1:
    android.support.v4.widget.DrawerLayout$SavedState createFromParcel(android.os.Parcel) -> createFromParcel
    android.support.v4.widget.DrawerLayout$SavedState[] newArray(int) -> newArray
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.widget.DrawerLayout$SimpleDrawerListener -> android.support.v4.widget.DrawerLayout$SimpleDrawerListener:
    void onDrawerSlide(android.view.View,float) -> onDrawerSlide
    void onDrawerOpened(android.view.View) -> onDrawerOpened
    void onDrawerClosed(android.view.View) -> onDrawerClosed
    void onDrawerStateChanged(int) -> onDrawerStateChanged
android.support.v4.widget.DrawerLayout$ViewDragCallback -> android.support.v4.widget.DrawerLayout$ViewDragCallback:
    int mAbsGravity -> mAbsGravity
    android.support.v4.widget.ViewDragHelper mDragger -> mDragger
    java.lang.Runnable mPeekRunnable -> mPeekRunnable
    android.support.v4.widget.DrawerLayout this$0 -> this$0
    void setDragger(android.support.v4.widget.ViewDragHelper) -> setDragger
    void removeCallbacks() -> removeCallbacks
    boolean tryCaptureView(android.view.View,int) -> tryCaptureView
    void onViewDragStateChanged(int) -> onViewDragStateChanged
    void onViewPositionChanged(android.view.View,int,int,int,int) -> onViewPositionChanged
    void onViewCaptured(android.view.View,int) -> onViewCaptured
    void closeOtherDrawer() -> closeOtherDrawer
    void onViewReleased(android.view.View,float,float) -> onViewReleased
    void onEdgeTouched(int,int) -> onEdgeTouched
    void peekDrawer() -> peekDrawer
    boolean onEdgeLock(int) -> onEdgeLock
    void onEdgeDragStarted(int,int) -> onEdgeDragStarted
    int getViewHorizontalDragRange(android.view.View) -> getViewHorizontalDragRange
    int clampViewPositionHorizontal(android.view.View,int,int) -> clampViewPositionHorizontal
    int clampViewPositionVertical(android.view.View,int,int) -> clampViewPositionVertical
    void access$000(android.support.v4.widget.DrawerLayout$ViewDragCallback) -> access$000
android.support.v4.widget.DrawerLayout$ViewDragCallback$1 -> android.support.v4.widget.DrawerLayout$ViewDragCallback$1:
    android.support.v4.widget.DrawerLayout$ViewDragCallback this$1 -> this$1
    void run() -> run
android.support.v4.widget.EdgeEffectCompat -> android.support.v4.widget.EdgeEffectCompat:
    java.lang.Object mEdgeEffect -> mEdgeEffect
    android.support.v4.widget.EdgeEffectCompat$EdgeEffectImpl IMPL -> IMPL
    void setSize(int,int) -> setSize
    boolean isFinished() -> isFinished
    void finish() -> finish
    boolean onPull(float) -> onPull
    boolean onRelease() -> onRelease
    boolean onAbsorb(int) -> onAbsorb
    boolean draw(android.graphics.Canvas) -> draw
android.support.v4.widget.EdgeEffectCompat$BaseEdgeEffectImpl -> android.support.v4.widget.EdgeEffectCompat$BaseEdgeEffectImpl:
    java.lang.Object newEdgeEffect(android.content.Context) -> newEdgeEffect
    void setSize(java.lang.Object,int,int) -> setSize
    boolean isFinished(java.lang.Object) -> isFinished
    void finish(java.lang.Object) -> finish
    boolean onPull(java.lang.Object,float) -> onPull
    boolean onRelease(java.lang.Object) -> onRelease
    boolean onAbsorb(java.lang.Object,int) -> onAbsorb
    boolean draw(java.lang.Object,android.graphics.Canvas) -> draw
android.support.v4.widget.EdgeEffectCompat$EdgeEffectIcsImpl -> android.support.v4.widget.EdgeEffectCompat$EdgeEffectIcsImpl:
    java.lang.Object newEdgeEffect(android.content.Context) -> newEdgeEffect
    void setSize(java.lang.Object,int,int) -> setSize
    boolean isFinished(java.lang.Object) -> isFinished
    void finish(java.lang.Object) -> finish
    boolean onPull(java.lang.Object,float) -> onPull
    boolean onRelease(java.lang.Object) -> onRelease
    boolean onAbsorb(java.lang.Object,int) -> onAbsorb
    boolean draw(java.lang.Object,android.graphics.Canvas) -> draw
android.support.v4.widget.EdgeEffectCompat$EdgeEffectImpl -> android.support.v4.widget.EdgeEffectCompat$EdgeEffectImpl:
    java.lang.Object newEdgeEffect(android.content.Context) -> newEdgeEffect
    void setSize(java.lang.Object,int,int) -> setSize
    boolean isFinished(java.lang.Object) -> isFinished
    void finish(java.lang.Object) -> finish
    boolean onPull(java.lang.Object,float) -> onPull
    boolean onRelease(java.lang.Object) -> onRelease
    boolean onAbsorb(java.lang.Object,int) -> onAbsorb
    boolean draw(java.lang.Object,android.graphics.Canvas) -> draw
android.support.v4.widget.EdgeEffectCompatIcs -> android.support.v4.widget.EdgeEffectCompatIcs:
    java.lang.Object newEdgeEffect(android.content.Context) -> newEdgeEffect
    void setSize(java.lang.Object,int,int) -> setSize
    boolean isFinished(java.lang.Object) -> isFinished
    void finish(java.lang.Object) -> finish
    boolean onPull(java.lang.Object,float) -> onPull
    boolean onRelease(java.lang.Object) -> onRelease
    boolean onAbsorb(java.lang.Object,int) -> onAbsorb
    boolean draw(java.lang.Object,android.graphics.Canvas) -> draw
android.support.v4.widget.ExploreByTouchHelper -> android.support.v4.widget.ExploreByTouchHelper:
    int INVALID_ID -> INVALID_ID
    java.lang.String DEFAULT_CLASS_NAME -> DEFAULT_CLASS_NAME
    android.graphics.Rect mTempScreenRect -> mTempScreenRect
    android.graphics.Rect mTempParentRect -> mTempParentRect
    android.graphics.Rect mTempVisibleRect -> mTempVisibleRect
    int[] mTempGlobalRect -> mTempGlobalRect
    android.view.accessibility.AccessibilityManager mManager -> mManager
    android.view.View mView -> mView
    android.support.v4.widget.ExploreByTouchHelper$ExploreByTouchNodeProvider mNodeProvider -> mNodeProvider
    int mFocusedVirtualViewId -> mFocusedVirtualViewId
    int mHoveredVirtualViewId -> mHoveredVirtualViewId
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat getAccessibilityNodeProvider(android.view.View) -> getAccessibilityNodeProvider
    boolean dispatchHoverEvent(android.view.MotionEvent) -> dispatchHoverEvent
    boolean sendEventForVirtualView(int,int) -> sendEventForVirtualView
    void invalidateRoot() -> invalidateRoot
    void invalidateVirtualView(int) -> invalidateVirtualView
    int getFocusedVirtualView() -> getFocusedVirtualView
    void updateHoveredVirtualView(int) -> updateHoveredVirtualView
    android.view.accessibility.AccessibilityEvent createEvent(int,int) -> createEvent
    android.view.accessibility.AccessibilityEvent createEventForHost(int) -> createEventForHost
    android.view.accessibility.AccessibilityEvent createEventForChild(int,int) -> createEventForChild
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat createNode(int) -> createNode
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat createNodeForHost() -> createNodeForHost
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat createNodeForChild(int) -> createNodeForChild
    boolean performAction(int,int,android.os.Bundle) -> performAction
    boolean performActionForHost(int,android.os.Bundle) -> performActionForHost
    boolean performActionForChild(int,int,android.os.Bundle) -> performActionForChild
    boolean manageFocusForChild(int,int,android.os.Bundle) -> manageFocusForChild
    boolean intersectVisibleToUser(android.graphics.Rect) -> intersectVisibleToUser
    boolean isAccessibilityFocused(int) -> isAccessibilityFocused
    boolean requestAccessibilityFocus(int) -> requestAccessibilityFocus
    boolean clearAccessibilityFocus(int) -> clearAccessibilityFocus
    int getVirtualViewAt(float,float) -> getVirtualViewAt
    void getVisibleVirtualViews(java.util.List) -> getVisibleVirtualViews
    void onPopulateEventForVirtualView(int,android.view.accessibility.AccessibilityEvent) -> onPopulateEventForVirtualView
    void onPopulateNodeForVirtualView(int,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> onPopulateNodeForVirtualView
    boolean onPerformActionForVirtualView(int,int,android.os.Bundle) -> onPerformActionForVirtualView
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat access$100(android.support.v4.widget.ExploreByTouchHelper,int) -> access$100
    boolean access$200(android.support.v4.widget.ExploreByTouchHelper,int,int,android.os.Bundle) -> access$200
android.support.v4.widget.ExploreByTouchHelper$1 -> android.support.v4.widget.ExploreByTouchHelper$1:
android.support.v4.widget.ExploreByTouchHelper$ExploreByTouchNodeProvider -> android.support.v4.widget.ExploreByTouchHelper$ExploreByTouchNodeProvider:
    android.support.v4.widget.ExploreByTouchHelper this$0 -> this$0
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat createAccessibilityNodeInfo(int) -> createAccessibilityNodeInfo
    boolean performAction(int,int,android.os.Bundle) -> performAction
android.support.v4.widget.ListPopupWindowCompat -> android.support.v4.widget.ListPopupWindowCompat:
    android.support.v4.widget.ListPopupWindowCompat$ListPopupWindowImpl IMPL -> IMPL
    android.view.View$OnTouchListener createDragToOpenListener(java.lang.Object,android.view.View) -> createDragToOpenListener
android.support.v4.widget.ListPopupWindowCompat$BaseListPopupWindowImpl -> android.support.v4.widget.ListPopupWindowCompat$BaseListPopupWindowImpl:
    android.view.View$OnTouchListener createDragToOpenListener(java.lang.Object,android.view.View) -> createDragToOpenListener
android.support.v4.widget.ListPopupWindowCompat$KitKatListPopupWindowImpl -> android.support.v4.widget.ListPopupWindowCompat$KitKatListPopupWindowImpl:
    android.view.View$OnTouchListener createDragToOpenListener(java.lang.Object,android.view.View) -> createDragToOpenListener
android.support.v4.widget.ListPopupWindowCompat$ListPopupWindowImpl -> android.support.v4.widget.ListPopupWindowCompat$ListPopupWindowImpl:
    android.view.View$OnTouchListener createDragToOpenListener(java.lang.Object,android.view.View) -> createDragToOpenListener
android.support.v4.widget.ListPopupWindowCompatKitKat -> android.support.v4.widget.ListPopupWindowCompatKitKat:
    android.view.View$OnTouchListener createDragToOpenListener(java.lang.Object,android.view.View) -> createDragToOpenListener
android.support.v4.widget.ListViewAutoScrollHelper -> android.support.v4.widget.ListViewAutoScrollHelper:
    android.widget.ListView mTarget -> mTarget
    void scrollTargetBy(int,int) -> scrollTargetBy
    boolean canTargetScrollHorizontally(int) -> canTargetScrollHorizontally
    boolean canTargetScrollVertically(int) -> canTargetScrollVertically
android.support.v4.widget.PopupMenuCompat -> android.support.v4.widget.PopupMenuCompat:
    android.support.v4.widget.PopupMenuCompat$PopupMenuImpl IMPL -> IMPL
    android.view.View$OnTouchListener getDragToOpenListener(java.lang.Object) -> getDragToOpenListener
android.support.v4.widget.PopupMenuCompat$BasePopupMenuImpl -> android.support.v4.widget.PopupMenuCompat$BasePopupMenuImpl:
    android.view.View$OnTouchListener getDragToOpenListener(java.lang.Object) -> getDragToOpenListener
android.support.v4.widget.PopupMenuCompat$KitKatPopupMenuImpl -> android.support.v4.widget.PopupMenuCompat$KitKatPopupMenuImpl:
    android.view.View$OnTouchListener getDragToOpenListener(java.lang.Object) -> getDragToOpenListener
android.support.v4.widget.PopupMenuCompat$PopupMenuImpl -> android.support.v4.widget.PopupMenuCompat$PopupMenuImpl:
    android.view.View$OnTouchListener getDragToOpenListener(java.lang.Object) -> getDragToOpenListener
android.support.v4.widget.PopupMenuCompatKitKat -> android.support.v4.widget.PopupMenuCompatKitKat:
    android.view.View$OnTouchListener getDragToOpenListener(java.lang.Object) -> getDragToOpenListener
android.support.v4.widget.ResourceCursorAdapter -> android.support.v4.widget.ResourceCursorAdapter:
    int mLayout -> mLayout
    int mDropDownLayout -> mDropDownLayout
    android.view.LayoutInflater mInflater -> mInflater
    android.view.View newView(android.content.Context,android.database.Cursor,android.view.ViewGroup) -> newView
    android.view.View newDropDownView(android.content.Context,android.database.Cursor,android.view.ViewGroup) -> newDropDownView
    void setViewResource(int) -> setViewResource
    void setDropDownViewResource(int) -> setDropDownViewResource
android.support.v4.widget.ScrollerCompat -> android.support.v4.widget.ScrollerCompat:
    java.lang.Object mScroller -> mScroller
    android.support.v4.widget.ScrollerCompat$ScrollerCompatImpl IMPL -> IMPL
    android.support.v4.widget.ScrollerCompat create(android.content.Context) -> create
    android.support.v4.widget.ScrollerCompat create(android.content.Context,android.view.animation.Interpolator) -> create
    boolean isFinished() -> isFinished
    int getCurrX() -> getCurrX
    int getCurrY() -> getCurrY
    int getFinalX() -> getFinalX
    int getFinalY() -> getFinalY
    float getCurrVelocity() -> getCurrVelocity
    boolean computeScrollOffset() -> computeScrollOffset
    void startScroll(int,int,int,int) -> startScroll
    void startScroll(int,int,int,int,int) -> startScroll
    void fling(int,int,int,int,int,int,int,int) -> fling
    void fling(int,int,int,int,int,int,int,int,int,int) -> fling
    void abortAnimation() -> abortAnimation
    void notifyHorizontalEdgeReached(int,int,int) -> notifyHorizontalEdgeReached
    void notifyVerticalEdgeReached(int,int,int) -> notifyVerticalEdgeReached
    boolean isOverScrolled() -> isOverScrolled
android.support.v4.widget.ScrollerCompat$ScrollerCompatImpl -> android.support.v4.widget.ScrollerCompat$ScrollerCompatImpl:
    java.lang.Object createScroller(android.content.Context,android.view.animation.Interpolator) -> createScroller
    boolean isFinished(java.lang.Object) -> isFinished
    int getCurrX(java.lang.Object) -> getCurrX
    int getCurrY(java.lang.Object) -> getCurrY
    float getCurrVelocity(java.lang.Object) -> getCurrVelocity
    boolean computeScrollOffset(java.lang.Object) -> computeScrollOffset
    void startScroll(java.lang.Object,int,int,int,int) -> startScroll
    void startScroll(java.lang.Object,int,int,int,int,int) -> startScroll
    void fling(java.lang.Object,int,int,int,int,int,int,int,int) -> fling
    void fling(java.lang.Object,int,int,int,int,int,int,int,int,int,int) -> fling
    void abortAnimation(java.lang.Object) -> abortAnimation
    void notifyHorizontalEdgeReached(java.lang.Object,int,int,int) -> notifyHorizontalEdgeReached
    void notifyVerticalEdgeReached(java.lang.Object,int,int,int) -> notifyVerticalEdgeReached
    boolean isOverScrolled(java.lang.Object) -> isOverScrolled
    int getFinalX(java.lang.Object) -> getFinalX
    int getFinalY(java.lang.Object) -> getFinalY
android.support.v4.widget.ScrollerCompat$ScrollerCompatImplBase -> android.support.v4.widget.ScrollerCompat$ScrollerCompatImplBase:
    java.lang.Object createScroller(android.content.Context,android.view.animation.Interpolator) -> createScroller
    boolean isFinished(java.lang.Object) -> isFinished
    int getCurrX(java.lang.Object) -> getCurrX
    int getCurrY(java.lang.Object) -> getCurrY
    float getCurrVelocity(java.lang.Object) -> getCurrVelocity
    boolean computeScrollOffset(java.lang.Object) -> computeScrollOffset
    void startScroll(java.lang.Object,int,int,int,int) -> startScroll
    void startScroll(java.lang.Object,int,int,int,int,int) -> startScroll
    void fling(java.lang.Object,int,int,int,int,int,int,int,int) -> fling
    void fling(java.lang.Object,int,int,int,int,int,int,int,int,int,int) -> fling
    void abortAnimation(java.lang.Object) -> abortAnimation
    void notifyHorizontalEdgeReached(java.lang.Object,int,int,int) -> notifyHorizontalEdgeReached
    void notifyVerticalEdgeReached(java.lang.Object,int,int,int) -> notifyVerticalEdgeReached
    boolean isOverScrolled(java.lang.Object) -> isOverScrolled
    int getFinalX(java.lang.Object) -> getFinalX
    int getFinalY(java.lang.Object) -> getFinalY
android.support.v4.widget.ScrollerCompat$ScrollerCompatImplGingerbread -> android.support.v4.widget.ScrollerCompat$ScrollerCompatImplGingerbread:
    java.lang.Object createScroller(android.content.Context,android.view.animation.Interpolator) -> createScroller
    boolean isFinished(java.lang.Object) -> isFinished
    int getCurrX(java.lang.Object) -> getCurrX
    int getCurrY(java.lang.Object) -> getCurrY
    float getCurrVelocity(java.lang.Object) -> getCurrVelocity
    boolean computeScrollOffset(java.lang.Object) -> computeScrollOffset
    void startScroll(java.lang.Object,int,int,int,int) -> startScroll
    void startScroll(java.lang.Object,int,int,int,int,int) -> startScroll
    void fling(java.lang.Object,int,int,int,int,int,int,int,int) -> fling
    void fling(java.lang.Object,int,int,int,int,int,int,int,int,int,int) -> fling
    void abortAnimation(java.lang.Object) -> abortAnimation
    void notifyHorizontalEdgeReached(java.lang.Object,int,int,int) -> notifyHorizontalEdgeReached
    void notifyVerticalEdgeReached(java.lang.Object,int,int,int) -> notifyVerticalEdgeReached
    boolean isOverScrolled(java.lang.Object) -> isOverScrolled
    int getFinalX(java.lang.Object) -> getFinalX
    int getFinalY(java.lang.Object) -> getFinalY
android.support.v4.widget.ScrollerCompat$ScrollerCompatImplIcs -> android.support.v4.widget.ScrollerCompat$ScrollerCompatImplIcs:
    float getCurrVelocity(java.lang.Object) -> getCurrVelocity
android.support.v4.widget.ScrollerCompatGingerbread -> android.support.v4.widget.ScrollerCompatGingerbread:
    java.lang.Object createScroller(android.content.Context,android.view.animation.Interpolator) -> createScroller
    boolean isFinished(java.lang.Object) -> isFinished
    int getCurrX(java.lang.Object) -> getCurrX
    int getCurrY(java.lang.Object) -> getCurrY
    boolean computeScrollOffset(java.lang.Object) -> computeScrollOffset
    void startScroll(java.lang.Object,int,int,int,int) -> startScroll
    void startScroll(java.lang.Object,int,int,int,int,int) -> startScroll
    void fling(java.lang.Object,int,int,int,int,int,int,int,int) -> fling
    void fling(java.lang.Object,int,int,int,int,int,int,int,int,int,int) -> fling
    void abortAnimation(java.lang.Object) -> abortAnimation
    void notifyHorizontalEdgeReached(java.lang.Object,int,int,int) -> notifyHorizontalEdgeReached
    void notifyVerticalEdgeReached(java.lang.Object,int,int,int) -> notifyVerticalEdgeReached
    boolean isOverScrolled(java.lang.Object) -> isOverScrolled
    int getFinalX(java.lang.Object) -> getFinalX
    int getFinalY(java.lang.Object) -> getFinalY
android.support.v4.widget.ScrollerCompatIcs -> android.support.v4.widget.ScrollerCompatIcs:
    float getCurrVelocity(java.lang.Object) -> getCurrVelocity
android.support.v4.widget.SearchViewCompat -> android.support.v4.widget.SearchViewCompat:
    android.support.v4.widget.SearchViewCompat$SearchViewCompatImpl IMPL -> IMPL
    android.view.View newSearchView(android.content.Context) -> newSearchView
    void setSearchableInfo(android.view.View,android.content.ComponentName) -> setSearchableInfo
    void setImeOptions(android.view.View,int) -> setImeOptions
    void setInputType(android.view.View,int) -> setInputType
    void setOnQueryTextListener(android.view.View,android.support.v4.widget.SearchViewCompat$OnQueryTextListenerCompat) -> setOnQueryTextListener
    void setOnCloseListener(android.view.View,android.support.v4.widget.SearchViewCompat$OnCloseListenerCompat) -> setOnCloseListener
    java.lang.CharSequence getQuery(android.view.View) -> getQuery
    void setQuery(android.view.View,java.lang.CharSequence,boolean) -> setQuery
    void setQueryHint(android.view.View,java.lang.CharSequence) -> setQueryHint
    void setIconified(android.view.View,boolean) -> setIconified
    boolean isIconified(android.view.View) -> isIconified
    void setSubmitButtonEnabled(android.view.View,boolean) -> setSubmitButtonEnabled
    boolean isSubmitButtonEnabled(android.view.View) -> isSubmitButtonEnabled
    void setQueryRefinementEnabled(android.view.View,boolean) -> setQueryRefinementEnabled
    boolean isQueryRefinementEnabled(android.view.View) -> isQueryRefinementEnabled
    void setMaxWidth(android.view.View,int) -> setMaxWidth
    android.support.v4.widget.SearchViewCompat$SearchViewCompatImpl access$000() -> access$000
android.support.v4.widget.SearchViewCompat$OnCloseListenerCompat -> android.support.v4.widget.SearchViewCompat$OnCloseListenerCompat:
    java.lang.Object mListener -> mListener
    boolean onClose() -> onClose
android.support.v4.widget.SearchViewCompat$OnQueryTextListenerCompat -> android.support.v4.widget.SearchViewCompat$OnQueryTextListenerCompat:
    java.lang.Object mListener -> mListener
    boolean onQueryTextSubmit(java.lang.String) -> onQueryTextSubmit
    boolean onQueryTextChange(java.lang.String) -> onQueryTextChange
android.support.v4.widget.SearchViewCompat$SearchViewCompatHoneycombImpl -> android.support.v4.widget.SearchViewCompat$SearchViewCompatHoneycombImpl:
    android.view.View newSearchView(android.content.Context) -> newSearchView
    void setSearchableInfo(android.view.View,android.content.ComponentName) -> setSearchableInfo
    java.lang.Object newOnQueryTextListener(android.support.v4.widget.SearchViewCompat$OnQueryTextListenerCompat) -> newOnQueryTextListener
    void setOnQueryTextListener(java.lang.Object,java.lang.Object) -> setOnQueryTextListener
    java.lang.Object newOnCloseListener(android.support.v4.widget.SearchViewCompat$OnCloseListenerCompat) -> newOnCloseListener
    void setOnCloseListener(java.lang.Object,java.lang.Object) -> setOnCloseListener
    java.lang.CharSequence getQuery(android.view.View) -> getQuery
    void setQuery(android.view.View,java.lang.CharSequence,boolean) -> setQuery
    void setQueryHint(android.view.View,java.lang.CharSequence) -> setQueryHint
    void setIconified(android.view.View,boolean) -> setIconified
    boolean isIconified(android.view.View) -> isIconified
    void setSubmitButtonEnabled(android.view.View,boolean) -> setSubmitButtonEnabled
    boolean isSubmitButtonEnabled(android.view.View) -> isSubmitButtonEnabled
    void setQueryRefinementEnabled(android.view.View,boolean) -> setQueryRefinementEnabled
    boolean isQueryRefinementEnabled(android.view.View) -> isQueryRefinementEnabled
    void setMaxWidth(android.view.View,int) -> setMaxWidth
android.support.v4.widget.SearchViewCompat$SearchViewCompatHoneycombImpl$1 -> android.support.v4.widget.SearchViewCompat$SearchViewCompatHoneycombImpl$1:
    android.support.v4.widget.SearchViewCompat$OnQueryTextListenerCompat val$listener -> val$listener
    android.support.v4.widget.SearchViewCompat$SearchViewCompatHoneycombImpl this$0 -> this$0
    boolean onQueryTextSubmit(java.lang.String) -> onQueryTextSubmit
    boolean onQueryTextChange(java.lang.String) -> onQueryTextChange
android.support.v4.widget.SearchViewCompat$SearchViewCompatHoneycombImpl$2 -> android.support.v4.widget.SearchViewCompat$SearchViewCompatHoneycombImpl$2:
    android.support.v4.widget.SearchViewCompat$OnCloseListenerCompat val$listener -> val$listener
    android.support.v4.widget.SearchViewCompat$SearchViewCompatHoneycombImpl this$0 -> this$0
    boolean onClose() -> onClose
android.support.v4.widget.SearchViewCompat$SearchViewCompatIcsImpl -> android.support.v4.widget.SearchViewCompat$SearchViewCompatIcsImpl:
    android.view.View newSearchView(android.content.Context) -> newSearchView
    void setImeOptions(android.view.View,int) -> setImeOptions
    void setInputType(android.view.View,int) -> setInputType
android.support.v4.widget.SearchViewCompat$SearchViewCompatImpl -> android.support.v4.widget.SearchViewCompat$SearchViewCompatImpl:
    android.view.View newSearchView(android.content.Context) -> newSearchView
    void setSearchableInfo(android.view.View,android.content.ComponentName) -> setSearchableInfo
    void setImeOptions(android.view.View,int) -> setImeOptions
    void setInputType(android.view.View,int) -> setInputType
    java.lang.Object newOnQueryTextListener(android.support.v4.widget.SearchViewCompat$OnQueryTextListenerCompat) -> newOnQueryTextListener
    void setOnQueryTextListener(java.lang.Object,java.lang.Object) -> setOnQueryTextListener
    java.lang.Object newOnCloseListener(android.support.v4.widget.SearchViewCompat$OnCloseListenerCompat) -> newOnCloseListener
    void setOnCloseListener(java.lang.Object,java.lang.Object) -> setOnCloseListener
    java.lang.CharSequence getQuery(android.view.View) -> getQuery
    void setQuery(android.view.View,java.lang.CharSequence,boolean) -> setQuery
    void setQueryHint(android.view.View,java.lang.CharSequence) -> setQueryHint
    void setIconified(android.view.View,boolean) -> setIconified
    boolean isIconified(android.view.View) -> isIconified
    void setSubmitButtonEnabled(android.view.View,boolean) -> setSubmitButtonEnabled
    boolean isSubmitButtonEnabled(android.view.View) -> isSubmitButtonEnabled
    void setQueryRefinementEnabled(android.view.View,boolean) -> setQueryRefinementEnabled
    boolean isQueryRefinementEnabled(android.view.View) -> isQueryRefinementEnabled
    void setMaxWidth(android.view.View,int) -> setMaxWidth
android.support.v4.widget.SearchViewCompat$SearchViewCompatStubImpl -> android.support.v4.widget.SearchViewCompat$SearchViewCompatStubImpl:
    android.view.View newSearchView(android.content.Context) -> newSearchView
    void setSearchableInfo(android.view.View,android.content.ComponentName) -> setSearchableInfo
    void setImeOptions(android.view.View,int) -> setImeOptions
    void setInputType(android.view.View,int) -> setInputType
    java.lang.Object newOnQueryTextListener(android.support.v4.widget.SearchViewCompat$OnQueryTextListenerCompat) -> newOnQueryTextListener
    void setOnQueryTextListener(java.lang.Object,java.lang.Object) -> setOnQueryTextListener
    java.lang.Object newOnCloseListener(android.support.v4.widget.SearchViewCompat$OnCloseListenerCompat) -> newOnCloseListener
    void setOnCloseListener(java.lang.Object,java.lang.Object) -> setOnCloseListener
    java.lang.CharSequence getQuery(android.view.View) -> getQuery
    void setQuery(android.view.View,java.lang.CharSequence,boolean) -> setQuery
    void setQueryHint(android.view.View,java.lang.CharSequence) -> setQueryHint
    void setIconified(android.view.View,boolean) -> setIconified
    boolean isIconified(android.view.View) -> isIconified
    void setSubmitButtonEnabled(android.view.View,boolean) -> setSubmitButtonEnabled
    boolean isSubmitButtonEnabled(android.view.View) -> isSubmitButtonEnabled
    void setQueryRefinementEnabled(android.view.View,boolean) -> setQueryRefinementEnabled
    boolean isQueryRefinementEnabled(android.view.View) -> isQueryRefinementEnabled
    void setMaxWidth(android.view.View,int) -> setMaxWidth
android.support.v4.widget.SearchViewCompatHoneycomb -> android.support.v4.widget.SearchViewCompatHoneycomb:
    android.view.View newSearchView(android.content.Context) -> newSearchView
    void setSearchableInfo(android.view.View,android.content.ComponentName) -> setSearchableInfo
    java.lang.Object newOnQueryTextListener(android.support.v4.widget.SearchViewCompatHoneycomb$OnQueryTextListenerCompatBridge) -> newOnQueryTextListener
    void setOnQueryTextListener(java.lang.Object,java.lang.Object) -> setOnQueryTextListener
    java.lang.Object newOnCloseListener(android.support.v4.widget.SearchViewCompatHoneycomb$OnCloseListenerCompatBridge) -> newOnCloseListener
    void setOnCloseListener(java.lang.Object,java.lang.Object) -> setOnCloseListener
    java.lang.CharSequence getQuery(android.view.View) -> getQuery
    void setQuery(android.view.View,java.lang.CharSequence,boolean) -> setQuery
    void setQueryHint(android.view.View,java.lang.CharSequence) -> setQueryHint
    void setIconified(android.view.View,boolean) -> setIconified
    boolean isIconified(android.view.View) -> isIconified
    void setSubmitButtonEnabled(android.view.View,boolean) -> setSubmitButtonEnabled
    boolean isSubmitButtonEnabled(android.view.View) -> isSubmitButtonEnabled
    void setQueryRefinementEnabled(android.view.View,boolean) -> setQueryRefinementEnabled
    boolean isQueryRefinementEnabled(android.view.View) -> isQueryRefinementEnabled
    void setMaxWidth(android.view.View,int) -> setMaxWidth
android.support.v4.widget.SearchViewCompatHoneycomb$1 -> android.support.v4.widget.SearchViewCompatHoneycomb$1:
    android.support.v4.widget.SearchViewCompatHoneycomb$OnQueryTextListenerCompatBridge val$listener -> val$listener
    boolean onQueryTextSubmit(java.lang.String) -> onQueryTextSubmit
    boolean onQueryTextChange(java.lang.String) -> onQueryTextChange
android.support.v4.widget.SearchViewCompatHoneycomb$2 -> android.support.v4.widget.SearchViewCompatHoneycomb$2:
    android.support.v4.widget.SearchViewCompatHoneycomb$OnCloseListenerCompatBridge val$listener -> val$listener
    boolean onClose() -> onClose
android.support.v4.widget.SearchViewCompatHoneycomb$OnCloseListenerCompatBridge -> android.support.v4.widget.SearchViewCompatHoneycomb$OnCloseListenerCompatBridge:
    boolean onClose() -> onClose
android.support.v4.widget.SearchViewCompatHoneycomb$OnQueryTextListenerCompatBridge -> android.support.v4.widget.SearchViewCompatHoneycomb$OnQueryTextListenerCompatBridge:
    boolean onQueryTextSubmit(java.lang.String) -> onQueryTextSubmit
    boolean onQueryTextChange(java.lang.String) -> onQueryTextChange
android.support.v4.widget.SearchViewCompatIcs -> android.support.v4.widget.SearchViewCompatIcs:
    android.view.View newSearchView(android.content.Context) -> newSearchView
    void setImeOptions(android.view.View,int) -> setImeOptions
    void setInputType(android.view.View,int) -> setInputType
android.support.v4.widget.SearchViewCompatIcs$MySearchView -> android.support.v4.widget.SearchViewCompatIcs$MySearchView:
    void onActionViewCollapsed() -> onActionViewCollapsed
android.support.v4.widget.SimpleCursorAdapter -> android.support.v4.widget.SimpleCursorAdapter:
    int[] mFrom -> mFrom
    int[] mTo -> mTo
    int mStringConversionColumn -> mStringConversionColumn
    android.support.v4.widget.SimpleCursorAdapter$CursorToStringConverter mCursorToStringConverter -> mCursorToStringConverter
    android.support.v4.widget.SimpleCursorAdapter$ViewBinder mViewBinder -> mViewBinder
    java.lang.String[] mOriginalFrom -> mOriginalFrom
    void bindView(android.view.View,android.content.Context,android.database.Cursor) -> bindView
    android.support.v4.widget.SimpleCursorAdapter$ViewBinder getViewBinder() -> getViewBinder
    void setViewBinder(android.support.v4.widget.SimpleCursorAdapter$ViewBinder) -> setViewBinder
    void setViewImage(android.widget.ImageView,java.lang.String) -> setViewImage
    void setViewText(android.widget.TextView,java.lang.String) -> setViewText
    int getStringConversionColumn() -> getStringConversionColumn
    void setStringConversionColumn(int) -> setStringConversionColumn
    android.support.v4.widget.SimpleCursorAdapter$CursorToStringConverter getCursorToStringConverter() -> getCursorToStringConverter
    void setCursorToStringConverter(android.support.v4.widget.SimpleCursorAdapter$CursorToStringConverter) -> setCursorToStringConverter
    java.lang.CharSequence convertToString(android.database.Cursor) -> convertToString
    void findColumns(java.lang.String[]) -> findColumns
    android.database.Cursor swapCursor(android.database.Cursor) -> swapCursor
    void changeCursorAndColumns(android.database.Cursor,java.lang.String[],int[]) -> changeCursorAndColumns
android.support.v4.widget.SimpleCursorAdapter$CursorToStringConverter -> android.support.v4.widget.SimpleCursorAdapter$CursorToStringConverter:
    java.lang.CharSequence convertToString(android.database.Cursor) -> convertToString
android.support.v4.widget.SimpleCursorAdapter$ViewBinder -> android.support.v4.widget.SimpleCursorAdapter$ViewBinder:
    boolean setViewValue(android.view.View,android.database.Cursor,int) -> setViewValue
android.support.v4.widget.SlidingPaneLayout -> android.support.v4.widget.SlidingPaneLayout:
    java.lang.String TAG -> TAG
    int DEFAULT_OVERHANG_SIZE -> DEFAULT_OVERHANG_SIZE
    int DEFAULT_FADE_COLOR -> DEFAULT_FADE_COLOR
    int mSliderFadeColor -> mSliderFadeColor
    int MIN_FLING_VELOCITY -> MIN_FLING_VELOCITY
    int mCoveredFadeColor -> mCoveredFadeColor
    android.graphics.drawable.Drawable mShadowDrawable -> mShadowDrawable
    int mOverhangSize -> mOverhangSize
    boolean mCanSlide -> mCanSlide
    android.view.View mSlideableView -> mSlideableView
    float mSlideOffset -> mSlideOffset
    float mParallaxOffset -> mParallaxOffset
    int mSlideRange -> mSlideRange
    boolean mIsUnableToDrag -> mIsUnableToDrag
    int mParallaxBy -> mParallaxBy
    float mInitialMotionX -> mInitialMotionX
    float mInitialMotionY -> mInitialMotionY
    android.support.v4.widget.SlidingPaneLayout$PanelSlideListener mPanelSlideListener -> mPanelSlideListener
    android.support.v4.widget.ViewDragHelper mDragHelper -> mDragHelper
    boolean mPreservedOpenState -> mPreservedOpenState
    boolean mFirstLayout -> mFirstLayout
    android.graphics.Rect mTmpRect -> mTmpRect
    java.util.ArrayList mPostedRunnables -> mPostedRunnables
    android.support.v4.widget.SlidingPaneLayout$SlidingPanelLayoutImpl IMPL -> IMPL
    void setParallaxDistance(int) -> setParallaxDistance
    int getParallaxDistance() -> getParallaxDistance
    void setSliderFadeColor(int) -> setSliderFadeColor
    int getSliderFadeColor() -> getSliderFadeColor
    void setCoveredFadeColor(int) -> setCoveredFadeColor
    int getCoveredFadeColor() -> getCoveredFadeColor
    void setPanelSlideListener(android.support.v4.widget.SlidingPaneLayout$PanelSlideListener) -> setPanelSlideListener
    void dispatchOnPanelSlide(android.view.View) -> dispatchOnPanelSlide
    void dispatchOnPanelOpened(android.view.View) -> dispatchOnPanelOpened
    void dispatchOnPanelClosed(android.view.View) -> dispatchOnPanelClosed
    void updateObscuredViewsVisibility(android.view.View) -> updateObscuredViewsVisibility
    void setAllChildrenVisible() -> setAllChildrenVisible
    boolean viewIsOpaque(android.view.View) -> viewIsOpaque
    void onAttachedToWindow() -> onAttachedToWindow
    void onDetachedFromWindow() -> onDetachedFromWindow
    void onMeasure(int,int) -> onMeasure
    void onLayout(boolean,int,int,int,int) -> onLayout
    void onSizeChanged(int,int,int,int) -> onSizeChanged
    void requestChildFocus(android.view.View,android.view.View) -> requestChildFocus
    boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    boolean closePane(android.view.View,int) -> closePane
    boolean openPane(android.view.View,int) -> openPane
    void smoothSlideOpen() -> smoothSlideOpen
    boolean openPane() -> openPane
    void smoothSlideClosed() -> smoothSlideClosed
    boolean closePane() -> closePane
    boolean isOpen() -> isOpen
    boolean canSlide() -> canSlide
    boolean isSlideable() -> isSlideable
    void onPanelDragged(int) -> onPanelDragged
    void dimChildView(android.view.View,float,int) -> dimChildView
    boolean drawChild(android.graphics.Canvas,android.view.View,long) -> drawChild
    void invalidateChildRegion(android.view.View) -> invalidateChildRegion
    boolean smoothSlideTo(float,int) -> smoothSlideTo
    void computeScroll() -> computeScroll
    void setShadowDrawable(android.graphics.drawable.Drawable) -> setShadowDrawable
    void setShadowResource(int) -> setShadowResource
    void draw(android.graphics.Canvas) -> draw
    void parallaxOtherViews(float) -> parallaxOtherViews
    boolean canScroll(android.view.View,boolean,int,int,int) -> canScroll
    boolean isDimmed(android.view.View) -> isDimmed
    android.view.ViewGroup$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    boolean checkLayoutParams(android.view.ViewGroup$LayoutParams) -> checkLayoutParams
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    boolean access$100(android.support.v4.widget.SlidingPaneLayout) -> access$100
    android.support.v4.widget.ViewDragHelper access$200(android.support.v4.widget.SlidingPaneLayout) -> access$200
    float access$300(android.support.v4.widget.SlidingPaneLayout) -> access$300
    android.view.View access$400(android.support.v4.widget.SlidingPaneLayout) -> access$400
    boolean access$502(android.support.v4.widget.SlidingPaneLayout,boolean) -> access$502
    void access$600(android.support.v4.widget.SlidingPaneLayout,int) -> access$600
    int access$700(android.support.v4.widget.SlidingPaneLayout) -> access$700
    void access$900(android.support.v4.widget.SlidingPaneLayout,android.view.View) -> access$900
    java.util.ArrayList access$1000(android.support.v4.widget.SlidingPaneLayout) -> access$1000
android.support.v4.widget.SlidingPaneLayout$1 -> android.support.v4.widget.SlidingPaneLayout$1:
android.support.v4.widget.SlidingPaneLayout$AccessibilityDelegate -> android.support.v4.widget.SlidingPaneLayout$AccessibilityDelegate:
    android.graphics.Rect mTmpRect -> mTmpRect
    android.support.v4.widget.SlidingPaneLayout this$0 -> this$0
    void onInitializeAccessibilityNodeInfo(android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
    boolean filter(android.view.View) -> filter
    void copyNodeInfoNoChildren(android.support.v4.view.accessibility.AccessibilityNodeInfoCompat,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> copyNodeInfoNoChildren
android.support.v4.widget.SlidingPaneLayout$DisableLayerRunnable -> android.support.v4.widget.SlidingPaneLayout$DisableLayerRunnable:
    android.view.View mChildView -> mChildView
    android.support.v4.widget.SlidingPaneLayout this$0 -> this$0
    void run() -> run
android.support.v4.widget.SlidingPaneLayout$DragHelperCallback -> android.support.v4.widget.SlidingPaneLayout$DragHelperCallback:
    android.support.v4.widget.SlidingPaneLayout this$0 -> this$0
    boolean tryCaptureView(android.view.View,int) -> tryCaptureView
    void onViewDragStateChanged(int) -> onViewDragStateChanged
    void onViewCaptured(android.view.View,int) -> onViewCaptured
    void onViewPositionChanged(android.view.View,int,int,int,int) -> onViewPositionChanged
    void onViewReleased(android.view.View,float,float) -> onViewReleased
    int getViewHorizontalDragRange(android.view.View) -> getViewHorizontalDragRange
    int clampViewPositionHorizontal(android.view.View,int,int) -> clampViewPositionHorizontal
    void onEdgeDragStarted(int,int) -> onEdgeDragStarted
android.support.v4.widget.SlidingPaneLayout$LayoutParams -> android.support.v4.widget.SlidingPaneLayout$LayoutParams:
    int[] ATTRS -> ATTRS
    float weight -> weight
    boolean slideable -> slideable
    boolean dimWhenOffset -> dimWhenOffset
    android.graphics.Paint dimPaint -> dimPaint
android.support.v4.widget.SlidingPaneLayout$PanelSlideListener -> android.support.v4.widget.SlidingPaneLayout$PanelSlideListener:
    void onPanelSlide(android.view.View,float) -> onPanelSlide
    void onPanelOpened(android.view.View) -> onPanelOpened
    void onPanelClosed(android.view.View) -> onPanelClosed
android.support.v4.widget.SlidingPaneLayout$SavedState -> android.support.v4.widget.SlidingPaneLayout$SavedState:
    boolean isOpen -> isOpen
    android.os.Parcelable$Creator CREATOR -> CREATOR
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.widget.SlidingPaneLayout$SavedState$1 -> android.support.v4.widget.SlidingPaneLayout$SavedState$1:
    android.support.v4.widget.SlidingPaneLayout$SavedState createFromParcel(android.os.Parcel) -> createFromParcel
    android.support.v4.widget.SlidingPaneLayout$SavedState[] newArray(int) -> newArray
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.widget.SlidingPaneLayout$SimplePanelSlideListener -> android.support.v4.widget.SlidingPaneLayout$SimplePanelSlideListener:
    void onPanelSlide(android.view.View,float) -> onPanelSlide
    void onPanelOpened(android.view.View) -> onPanelOpened
    void onPanelClosed(android.view.View) -> onPanelClosed
android.support.v4.widget.SlidingPaneLayout$SlidingPanelLayoutImpl -> android.support.v4.widget.SlidingPaneLayout$SlidingPanelLayoutImpl:
    void invalidateChildRegion(android.support.v4.widget.SlidingPaneLayout,android.view.View) -> invalidateChildRegion
android.support.v4.widget.SlidingPaneLayout$SlidingPanelLayoutImplBase -> android.support.v4.widget.SlidingPaneLayout$SlidingPanelLayoutImplBase:
    void invalidateChildRegion(android.support.v4.widget.SlidingPaneLayout,android.view.View) -> invalidateChildRegion
android.support.v4.widget.SlidingPaneLayout$SlidingPanelLayoutImplJB -> android.support.v4.widget.SlidingPaneLayout$SlidingPanelLayoutImplJB:
    java.lang.reflect.Method mGetDisplayList -> mGetDisplayList
    java.lang.reflect.Field mRecreateDisplayList -> mRecreateDisplayList
    void invalidateChildRegion(android.support.v4.widget.SlidingPaneLayout,android.view.View) -> invalidateChildRegion
android.support.v4.widget.SlidingPaneLayout$SlidingPanelLayoutImplJBMR1 -> android.support.v4.widget.SlidingPaneLayout$SlidingPanelLayoutImplJBMR1:
    void invalidateChildRegion(android.support.v4.widget.SlidingPaneLayout,android.view.View) -> invalidateChildRegion
android.support.v4.widget.ViewDragHelper -> android.support.v4.widget.ViewDragHelper:
    java.lang.String TAG -> TAG
    int INVALID_POINTER -> INVALID_POINTER
    int STATE_IDLE -> STATE_IDLE
    int STATE_DRAGGING -> STATE_DRAGGING
    int STATE_SETTLING -> STATE_SETTLING
    int EDGE_LEFT -> EDGE_LEFT
    int EDGE_RIGHT -> EDGE_RIGHT
    int EDGE_TOP -> EDGE_TOP
    int EDGE_BOTTOM -> EDGE_BOTTOM
    int EDGE_ALL -> EDGE_ALL
    int DIRECTION_HORIZONTAL -> DIRECTION_HORIZONTAL
    int DIRECTION_VERTICAL -> DIRECTION_VERTICAL
    int DIRECTION_ALL -> DIRECTION_ALL
    int EDGE_SIZE -> EDGE_SIZE
    int BASE_SETTLE_DURATION -> BASE_SETTLE_DURATION
    int MAX_SETTLE_DURATION -> MAX_SETTLE_DURATION
    int mDragState -> mDragState
    int mTouchSlop -> mTouchSlop
    int mActivePointerId -> mActivePointerId
    float[] mInitialMotionX -> mInitialMotionX
    float[] mInitialMotionY -> mInitialMotionY
    float[] mLastMotionX -> mLastMotionX
    float[] mLastMotionY -> mLastMotionY
    int[] mInitialEdgesTouched -> mInitialEdgesTouched
    int[] mEdgeDragsInProgress -> mEdgeDragsInProgress
    int[] mEdgeDragsLocked -> mEdgeDragsLocked
    int mPointersDown -> mPointersDown
    android.view.VelocityTracker mVelocityTracker -> mVelocityTracker
    float mMaxVelocity -> mMaxVelocity
    float mMinVelocity -> mMinVelocity
    int mEdgeSize -> mEdgeSize
    int mTrackingEdges -> mTrackingEdges
    android.support.v4.widget.ScrollerCompat mScroller -> mScroller
    android.support.v4.widget.ViewDragHelper$Callback mCallback -> mCallback
    android.view.View mCapturedView -> mCapturedView
    boolean mReleaseInProgress -> mReleaseInProgress
    android.view.ViewGroup mParentView -> mParentView
    android.view.animation.Interpolator sInterpolator -> sInterpolator
    java.lang.Runnable mSetIdleRunnable -> mSetIdleRunnable
    android.support.v4.widget.ViewDragHelper create(android.view.ViewGroup,android.support.v4.widget.ViewDragHelper$Callback) -> create
    android.support.v4.widget.ViewDragHelper create(android.view.ViewGroup,float,android.support.v4.widget.ViewDragHelper$Callback) -> create
    void setMinVelocity(float) -> setMinVelocity
    float getMinVelocity() -> getMinVelocity
    int getViewDragState() -> getViewDragState
    void setEdgeTrackingEnabled(int) -> setEdgeTrackingEnabled
    int getEdgeSize() -> getEdgeSize
    void captureChildView(android.view.View,int) -> captureChildView
    android.view.View getCapturedView() -> getCapturedView
    int getActivePointerId() -> getActivePointerId
    int getTouchSlop() -> getTouchSlop
    void cancel() -> cancel
    void abort() -> abort
    boolean smoothSlideViewTo(android.view.View,int,int) -> smoothSlideViewTo
    boolean settleCapturedViewAt(int,int) -> settleCapturedViewAt
    boolean forceSettleCapturedViewAt(int,int,int,int) -> forceSettleCapturedViewAt
    int computeSettleDuration(android.view.View,int,int,int,int) -> computeSettleDuration
    int computeAxisDuration(int,int,int) -> computeAxisDuration
    int clampMag(int,int,int) -> clampMag
    float clampMag(float,float,float) -> clampMag
    float distanceInfluenceForSnapDuration(float) -> distanceInfluenceForSnapDuration
    void flingCapturedView(int,int,int,int) -> flingCapturedView
    boolean continueSettling(boolean) -> continueSettling
    void dispatchViewReleased(float,float) -> dispatchViewReleased
    void clearMotionHistory() -> clearMotionHistory
    void clearMotionHistory(int) -> clearMotionHistory
    void ensureMotionHistorySizeForId(int) -> ensureMotionHistorySizeForId
    void saveInitialMotion(float,float,int) -> saveInitialMotion
    void saveLastMotion(android.view.MotionEvent) -> saveLastMotion
    boolean isPointerDown(int) -> isPointerDown
    void setDragState(int) -> setDragState
    boolean tryCaptureViewForDrag(android.view.View,int) -> tryCaptureViewForDrag
    boolean canScroll(android.view.View,boolean,int,int,int,int) -> canScroll
    boolean shouldInterceptTouchEvent(android.view.MotionEvent) -> shouldInterceptTouchEvent
    void processTouchEvent(android.view.MotionEvent) -> processTouchEvent
    void reportNewEdgeDrags(float,float,int) -> reportNewEdgeDrags
    boolean checkNewEdgeDrag(float,float,int,int) -> checkNewEdgeDrag
    boolean checkTouchSlop(android.view.View,float,float) -> checkTouchSlop
    boolean checkTouchSlop(int) -> checkTouchSlop
    boolean checkTouchSlop(int,int) -> checkTouchSlop
    boolean isEdgeTouched(int) -> isEdgeTouched
    boolean isEdgeTouched(int,int) -> isEdgeTouched
    void releaseViewForPointerUp() -> releaseViewForPointerUp
    void dragTo(int,int,int,int) -> dragTo
    boolean isCapturedViewUnder(int,int) -> isCapturedViewUnder
    boolean isViewUnder(android.view.View,int,int) -> isViewUnder
    android.view.View findTopChildUnder(int,int) -> findTopChildUnder
    int getEdgesTouched(int,int) -> getEdgesTouched
android.support.v4.widget.ViewDragHelper$1 -> android.support.v4.widget.ViewDragHelper$1:
    float getInterpolation(float) -> getInterpolation
android.support.v4.widget.ViewDragHelper$2 -> android.support.v4.widget.ViewDragHelper$2:
    android.support.v4.widget.ViewDragHelper this$0 -> this$0
    void run() -> run
android.support.v4.widget.ViewDragHelper$Callback -> android.support.v4.widget.ViewDragHelper$Callback:
    void onViewDragStateChanged(int) -> onViewDragStateChanged
    void onViewPositionChanged(android.view.View,int,int,int,int) -> onViewPositionChanged
    void onViewCaptured(android.view.View,int) -> onViewCaptured
    void onViewReleased(android.view.View,float,float) -> onViewReleased
    void onEdgeTouched(int,int) -> onEdgeTouched
    boolean onEdgeLock(int) -> onEdgeLock
    void onEdgeDragStarted(int,int) -> onEdgeDragStarted
    int getOrderedChildIndex(int) -> getOrderedChildIndex
    int getViewHorizontalDragRange(android.view.View) -> getViewHorizontalDragRange
    int getViewVerticalDragRange(android.view.View) -> getViewVerticalDragRange
    boolean tryCaptureView(android.view.View,int) -> tryCaptureView
    int clampViewPositionHorizontal(android.view.View,int,int) -> clampViewPositionHorizontal
    int clampViewPositionVertical(android.view.View,int,int) -> clampViewPositionVertical
android.support.v7.app.ActionBar -> android.support.v7.app.ActionBar:
    void setDisplayHomeAsUpEnabled(boolean) -> a
    int getDisplayOptions() -> a
    void setHomeButtonEnabled(boolean) -> b
    android.content.Context getThemedContext() -> b
android.support.v7.app.ActionBar$Callback -> android.support.v7.app.ActionBar$Callback:
android.support.v7.app.ActionBar$LayoutParams -> android.support.v7.app.ActionBar$LayoutParams:
    int gravity -> a
android.support.v7.app.ActionBar$OnNavigationListener -> android.support.v7.app.ActionBar$OnNavigationListener:
    boolean onNavigationItemSelected(int,long) -> a
android.support.v7.app.ActionBar$Tab -> android.support.v7.app.ActionBar$Tab:
    android.graphics.drawable.Drawable getIcon() -> a
    java.lang.CharSequence getText() -> b
    android.view.View getCustomView() -> c
    void select() -> d
    java.lang.CharSequence getContentDescription() -> e
android.support.v7.app.ActionBarActivity -> android.support.v7.app.ActionBarActivity:
    android.support.v7.app.ActionBarActivityDelegate mImpl -> mImpl
    android.support.v7.app.ActionBar getSupportActionBar() -> getSupportActionBar
    android.view.MenuInflater getMenuInflater() -> getMenuInflater
    void setContentView(int) -> setContentView
    void setContentView(android.view.View) -> setContentView
    void setContentView(android.view.View,android.view.ViewGroup$LayoutParams) -> setContentView
    void addContentView(android.view.View,android.view.ViewGroup$LayoutParams) -> addContentView
    void onCreate(android.os.Bundle) -> onCreate
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    void onStop() -> onStop
    void onPostResume() -> onPostResume
    android.view.View onCreatePanelView(int) -> onCreatePanelView
    boolean onMenuItemSelected(int,android.view.MenuItem) -> onMenuItemSelected
    void onTitleChanged(java.lang.CharSequence,int) -> onTitleChanged
    boolean supportRequestWindowFeature(int) -> supportRequestWindowFeature
    void supportInvalidateOptionsMenu() -> supportInvalidateOptionsMenu
    void onSupportActionModeStarted(android.support.v7.view.ActionMode) -> onSupportActionModeStarted
    void onSupportActionModeFinished(android.support.v7.view.ActionMode) -> onSupportActionModeFinished
    android.support.v7.view.ActionMode startSupportActionMode(android.support.v7.view.ActionMode$Callback) -> startSupportActionMode
    boolean onCreatePanelMenu(int,android.view.Menu) -> onCreatePanelMenu
    boolean onPreparePanel(int,android.view.View,android.view.Menu) -> onPreparePanel
    void superSetContentView(int) -> superSetContentView
    void superSetContentView(android.view.View) -> superSetContentView
    void superSetContentView(android.view.View,android.view.ViewGroup$LayoutParams) -> superSetContentView
    void superAddContentView(android.view.View,android.view.ViewGroup$LayoutParams) -> superAddContentView
    boolean superOnCreatePanelMenu(int,android.view.Menu) -> superOnCreatePanelMenu
    boolean superOnPreparePanel(int,android.view.View,android.view.Menu) -> superOnPreparePanel
    boolean superOnMenuItemSelected(int,android.view.MenuItem) -> superOnMenuItemSelected
    void onBackPressed() -> onBackPressed
    void setSupportProgressBarVisibility(boolean) -> setSupportProgressBarVisibility
    void setSupportProgressBarIndeterminateVisibility(boolean) -> setSupportProgressBarIndeterminateVisibility
    void setSupportProgressBarIndeterminate(boolean) -> setSupportProgressBarIndeterminate
    void setSupportProgress(int) -> setSupportProgress
    void onCreateSupportNavigateUpTaskStack(android.support.v4.app.TaskStackBuilder) -> onCreateSupportNavigateUpTaskStack
    void onPrepareSupportNavigateUpTaskStack(android.support.v4.app.TaskStackBuilder) -> onPrepareSupportNavigateUpTaskStack
    boolean onSupportNavigateUp() -> onSupportNavigateUp
    android.content.Intent getSupportParentActivityIntent() -> getSupportParentActivityIntent
    boolean supportShouldUpRecreateTask(android.content.Intent) -> supportShouldUpRecreateTask
    void supportNavigateUpTo(android.content.Intent) -> supportNavigateUpTo
    android.support.v4.app.ActionBarDrawerToggle$Delegate getDrawerToggleDelegate() -> getDrawerToggleDelegate
    boolean isSupportImplReady() -> isSupportImplReady
android.support.v7.app.ActionBarActivityDelegate -> android.support.v7.app.ActionBarActivityDelegate:
    android.support.v7.app.ActionBarActivity mActivity -> a
    android.support.v7.app.ActionBar mActionBar -> d
    android.view.MenuInflater mMenuInflater -> e
    boolean mHasActionBar -> b
    boolean mOverlayActionBar -> c
    android.support.v7.app.ActionBarActivityDelegate createDelegate(android.support.v7.app.ActionBarActivity) -> a
    android.support.v7.app.ActionBar createSupportActionBar() -> a
    android.support.v7.app.ActionBar getSupportActionBar() -> b
    android.view.MenuInflater getMenuInflater() -> c
    void onCreate(android.os.Bundle) -> a
    void onConfigurationChanged(android.content.res.Configuration) -> a
    void onStop() -> d
    void onPostResume() -> e
    void setContentView(android.view.View) -> a
    void setContentView(int) -> a
    void setContentView(android.view.View,android.view.ViewGroup$LayoutParams) -> a
    void addContentView(android.view.View,android.view.ViewGroup$LayoutParams) -> b
    void onTitleChanged(java.lang.CharSequence) -> a
    void supportInvalidateOptionsMenu() -> f
    boolean supportRequestWindowFeature(int) -> b
    android.view.View onCreatePanelView(int) -> c
    boolean onPreparePanel(int,android.view.View,android.view.Menu) -> a
    boolean onCreatePanelMenu(int,android.view.Menu) -> a
    boolean onMenuItemSelected(int,android.view.MenuItem) -> a
    boolean onBackPressed() -> g
    android.support.v7.view.ActionMode startSupportActionMode(android.support.v7.view.ActionMode$Callback) -> a
    void setSupportProgressBarVisibility(boolean) -> a
    void setSupportProgressBarIndeterminateVisibility(boolean) -> b
    void setSupportProgressBarIndeterminate(boolean) -> c
    void setSupportProgress(int) -> d
    android.support.v4.app.ActionBarDrawerToggle$Delegate getDrawerToggleDelegate() -> h
    java.lang.String getUiOptionsFromMetadata() -> i
    android.content.Context getActionBarThemedContext() -> j
android.support.v7.app.ActionBarActivityDelegateBase -> android.support.v7.app.ActionBarActivityDelegateBase:
    int[] ACTION_BAR_DRAWABLE_TOGGLE_ATTRS -> d
    java.lang.Runnable mInvalidateMenuRunnable -> e
    android.support.v7.internal.widget.ActionBarView mActionBarView -> f
    android.support.v7.internal.view.menu.ListMenuPresenter mListMenuPresenter -> g
    android.support.v7.internal.view.menu.MenuBuilder mMenu -> h
    android.support.v7.view.ActionMode mActionMode -> i
    boolean mSubDecorInstalled -> j
    boolean mFeatureProgress -> k
    boolean mFeatureIndeterminateProgress -> l
    boolean mInvalidateMenuPosted -> m
    android.support.v7.app.ActionBar createSupportActionBar() -> a
    void onConfigurationChanged(android.content.res.Configuration) -> a
    void onStop() -> d
    void onPostResume() -> e
    void setContentView(android.view.View) -> a
    void setContentView(int) -> a
    void setContentView(android.view.View,android.view.ViewGroup$LayoutParams) -> a
    void addContentView(android.view.View,android.view.ViewGroup$LayoutParams) -> b
    void ensureSubDecor() -> k
    boolean supportRequestWindowFeature(int) -> b
    void onTitleChanged(java.lang.CharSequence) -> a
    android.view.View onCreatePanelView(int) -> c
    boolean onCreatePanelMenu(int,android.view.Menu) -> a
    boolean onPreparePanel(int,android.view.View,android.view.Menu) -> a
    boolean onMenuItemSelected(int,android.view.MenuItem) -> a
    boolean onMenuItemSelected(android.support.v7.internal.view.menu.MenuBuilder,android.view.MenuItem) -> onMenuItemSelected
    void onMenuModeChange(android.support.v7.internal.view.menu.MenuBuilder) -> onMenuModeChange
    void onCloseMenu(android.support.v7.internal.view.menu.MenuBuilder,boolean) -> onCloseMenu
    boolean onOpenSubMenu(android.support.v7.internal.view.menu.MenuBuilder) -> onOpenSubMenu
    android.support.v7.view.ActionMode startSupportActionMode(android.support.v7.view.ActionMode$Callback) -> a
    void supportInvalidateOptionsMenu() -> f
    android.support.v7.internal.view.menu.MenuBuilder createMenu() -> m
    void reopenMenu(android.support.v7.internal.view.menu.MenuBuilder,boolean) -> a
    android.support.v7.internal.view.menu.MenuView getListMenuView(android.content.Context,android.support.v7.internal.view.menu.MenuPresenter$Callback) -> a
    void setMenu(android.support.v7.internal.view.menu.MenuBuilder) -> a
    boolean onBackPressed() -> g
    void setSupportProgressBarVisibility(boolean) -> a
    void setSupportProgressBarIndeterminateVisibility(boolean) -> b
    void setSupportProgressBarIndeterminate(boolean) -> c
    void setSupportProgress(int) -> d
    android.support.v4.app.ActionBarDrawerToggle$Delegate getDrawerToggleDelegate() -> h
    void updateProgressBars(int) -> e
    void showProgressBars(org.holoeverywhere.widget.ProgressBar,org.holoeverywhere.widget.ProgressBar) -> a
    void hideProgressBars(org.holoeverywhere.widget.ProgressBar,org.holoeverywhere.widget.ProgressBar) -> b
    org.holoeverywhere.widget.ProgressBar getCircularProgressBar() -> n
    org.holoeverywhere.widget.ProgressBar getHorizontalProgressBar() -> o
    android.support.v7.internal.view.menu.MenuBuilder access$000(android.support.v7.app.ActionBarActivityDelegateBase) -> a
    android.support.v7.internal.view.menu.MenuBuilder access$100(android.support.v7.app.ActionBarActivityDelegateBase) -> b
    void access$200(android.support.v7.app.ActionBarActivityDelegateBase,android.support.v7.internal.view.menu.MenuBuilder) -> a
    boolean access$302(android.support.v7.app.ActionBarActivityDelegateBase,boolean) -> a
    android.support.v7.view.ActionMode access$502(android.support.v7.app.ActionBarActivityDelegateBase,android.support.v7.view.ActionMode) -> a
    int[] access$600() -> l
    android.support.v7.internal.widget.ActionBarView access$700(android.support.v7.app.ActionBarActivityDelegateBase) -> c
android.support.v7.app.ActionBarActivityDelegateBase$1 -> android.support.v7.app.ActionBarActivityDelegateBase$1:
    android.support.v7.app.ActionBarActivityDelegateBase this$0 -> a
    void run() -> run
android.support.v7.app.ActionBarActivityDelegateBase$ActionBarDrawableToggleImpl -> android.support.v7.app.ActionBarActivityDelegateBase$ActionBarDrawableToggleImpl:
    android.support.v7.app.ActionBarActivityDelegateBase this$0 -> a
    android.graphics.drawable.Drawable getThemeUpIndicator() -> getThemeUpIndicator
    void setActionBarUpIndicator(android.graphics.drawable.Drawable,int) -> setActionBarUpIndicator
    void setActionBarDescription(int) -> setActionBarDescription
android.support.v7.app.ActionBarActivityDelegateBase$ActionModeCallbackWrapper -> android.support.v7.app.ActionBarActivityDelegateBase$ActionModeCallbackWrapper:
    android.support.v7.view.ActionMode$Callback mWrapped -> b
    android.support.v7.app.ActionBarActivityDelegateBase this$0 -> a
    boolean onCreateActionMode(android.support.v7.view.ActionMode,android.view.Menu) -> a
    boolean onPrepareActionMode(android.support.v7.view.ActionMode,android.view.Menu) -> b
    boolean onActionItemClicked(android.support.v7.view.ActionMode,android.view.MenuItem) -> a
    void onDestroyActionMode(android.support.v7.view.ActionMode) -> a
android.support.v7.app.ActionBarActivityDelegateHC -> android.support.v7.app.ActionBarActivityDelegateHC:
    void onCreate(android.os.Bundle) -> a
    android.support.v7.app.ActionBar createSupportActionBar() -> a
android.support.v7.app.ActionBarActivityDelegateICS -> android.support.v7.app.ActionBarActivityDelegateICS:
    android.view.Menu mMenu -> d
    android.support.v7.app.ActionBar createSupportActionBar() -> a
    void onCreate(android.os.Bundle) -> a
    android.view.Window$Callback createWindowCallbackWrapper(android.view.Window$Callback) -> a
    void onConfigurationChanged(android.content.res.Configuration) -> a
    void onStop() -> d
    void onPostResume() -> e
    void setContentView(android.view.View) -> a
    void setContentView(int) -> a
    void setContentView(android.view.View,android.view.ViewGroup$LayoutParams) -> a
    void addContentView(android.view.View,android.view.ViewGroup$LayoutParams) -> b
    boolean supportRequestWindowFeature(int) -> b
    android.view.View onCreatePanelView(int) -> c
    boolean onCreatePanelMenu(int,android.view.Menu) -> a
    boolean onPreparePanel(int,android.view.View,android.view.Menu) -> a
    boolean onMenuItemSelected(int,android.view.MenuItem) -> a
    void onTitleChanged(java.lang.CharSequence) -> a
    android.support.v7.view.ActionMode startSupportActionMode(android.support.v7.view.ActionMode$Callback) -> a
    void onActionModeStarted(android.view.ActionMode) -> a
    void setSupportProgressBarVisibility(boolean) -> a
    void setSupportProgressBarIndeterminateVisibility(boolean) -> b
    void setSupportProgressBarIndeterminate(boolean) -> c
    void setSupportProgress(int) -> d
    void onActionModeFinished(android.view.ActionMode) -> b
    void supportInvalidateOptionsMenu() -> f
    boolean onBackPressed() -> g
    android.support.v4.app.ActionBarDrawerToggle$Delegate getDrawerToggleDelegate() -> h
android.support.v7.app.ActionBarActivityDelegateICS$WindowCallbackWrapper -> android.support.v7.app.ActionBarActivityDelegateICS$WindowCallbackWrapper:
    android.view.Window$Callback mWrapped -> a
    android.support.v7.app.ActionBarActivityDelegateICS this$0 -> b
    boolean dispatchKeyEvent(android.view.KeyEvent) -> dispatchKeyEvent
    boolean dispatchKeyShortcutEvent(android.view.KeyEvent) -> dispatchKeyShortcutEvent
    boolean dispatchTouchEvent(android.view.MotionEvent) -> dispatchTouchEvent
    boolean dispatchTrackballEvent(android.view.MotionEvent) -> dispatchTrackballEvent
    boolean dispatchGenericMotionEvent(android.view.MotionEvent) -> dispatchGenericMotionEvent
    boolean dispatchPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    android.view.View onCreatePanelView(int) -> onCreatePanelView
    boolean onCreatePanelMenu(int,android.view.Menu) -> onCreatePanelMenu
    boolean onPreparePanel(int,android.view.View,android.view.Menu) -> onPreparePanel
    boolean onMenuOpened(int,android.view.Menu) -> onMenuOpened
    boolean onMenuItemSelected(int,android.view.MenuItem) -> onMenuItemSelected
    void onWindowAttributesChanged(android.view.WindowManager$LayoutParams) -> onWindowAttributesChanged
    void onContentChanged() -> onContentChanged
    void onWindowFocusChanged(boolean) -> onWindowFocusChanged
    void onAttachedToWindow() -> onAttachedToWindow
    void onDetachedFromWindow() -> onDetachedFromWindow
    void onPanelClosed(int,android.view.Menu) -> onPanelClosed
    boolean onSearchRequested() -> onSearchRequested
    android.view.ActionMode onWindowStartingActionMode(android.view.ActionMode$Callback) -> onWindowStartingActionMode
    void onActionModeStarted(android.view.ActionMode) -> onActionModeStarted
    void onActionModeFinished(android.view.ActionMode) -> onActionModeFinished
android.support.v7.app.ActionBarImplBase -> android.support.v7.app.ActionBarImplBase:
    android.content.Context mContext -> e
    android.content.Context mThemedContext -> f
    android.support.v7.app.ActionBarActivity mActivity -> g
    android.support.v7.internal.widget.ActionBarOverlayLayout mOverlayLayout -> h
    android.support.v7.internal.widget.ActionBarContainer mContainerView -> i
    android.view.ViewGroup mTopVisibilityView -> j
    android.support.v7.internal.widget.ActionBarView mActionView -> k
    android.support.v7.internal.widget.ActionBarContextView mContextView -> l
    android.support.v7.internal.widget.ActionBarContainer mSplitView -> m
    android.support.v7.internal.widget.ScrollingTabContainerView mTabScrollView -> n
    java.util.ArrayList mTabs -> o
    int mSavedTabPosition -> p
    boolean mDisplayHomeAsUpSet -> q
    android.support.v7.app.ActionBarImplBase$ActionModeImpl mActionMode -> a
    android.support.v7.view.ActionMode mDeferredDestroyActionMode -> b
    android.support.v7.view.ActionMode$Callback mDeferredModeDestroyCallback -> c
    java.util.ArrayList mMenuVisibilityListeners -> r
    int mContextDisplayMode -> s
    boolean mHasEmbeddedTabs -> t
    android.os.Handler mHandler -> d
    int mCurWindowVisibility -> u
    boolean mHiddenByApp -> v
    boolean mHiddenBySystem -> w
    boolean mShowingForMode -> x
    boolean mNowShowing -> y
    boolean mShowHideAnimationEnabled -> z
    android.support.v7.app.ActionBar$Callback mCallback -> A
    void init(android.support.v7.app.ActionBarActivity) -> a
    void onConfigurationChanged(android.content.res.Configuration) -> a
    void setHasEmbeddedTabs(boolean) -> g
    void setTitle(java.lang.CharSequence) -> a
    void setDisplayOptions(int,int) -> a
    void setDisplayHomeAsUpEnabled(boolean) -> a
    void setHomeButtonEnabled(boolean) -> b
    int getNavigationMode() -> c
    int getDisplayOptions() -> a
    android.content.Context getThemedContext() -> b
    void showForActionMode() -> d
    void hideForActionMode() -> e
    android.support.v7.view.ActionMode startActionMode(android.support.v7.view.ActionMode$Callback) -> a
    void animateToMode(boolean) -> c
    boolean checkShowingFlags(boolean,boolean,boolean) -> b
    void updateVisibility(boolean) -> h
    void setShowHideAnimationEnabled(boolean) -> d
    void doShow(boolean) -> e
    void doHide(boolean) -> f
    boolean isShowHideAnimationEnabled() -> f
    boolean access$200(android.support.v7.app.ActionBarImplBase) -> a
    boolean access$300(android.support.v7.app.ActionBarImplBase) -> b
    boolean access$400(boolean,boolean,boolean) -> a
    android.support.v7.internal.widget.ActionBarContextView access$500(android.support.v7.app.ActionBarImplBase) -> c
    android.support.v7.internal.widget.ActionBarView access$600(android.support.v7.app.ActionBarImplBase) -> d
android.support.v7.app.ActionBarImplBase$ActionModeImpl -> android.support.v7.app.ActionBarImplBase$ActionModeImpl:
    android.support.v7.view.ActionMode$Callback mCallback -> b
    android.support.v7.internal.view.menu.MenuBuilder mMenu -> c
    android.support.v7.app.ActionBarImplBase this$0 -> a
    android.view.Menu getMenu() -> a
    void finish() -> b
    void invalidate() -> c
    boolean dispatchOnCreate() -> d
    boolean onMenuItemSelected(android.support.v7.internal.view.menu.MenuBuilder,android.view.MenuItem) -> onMenuItemSelected
    void onMenuModeChange(android.support.v7.internal.view.menu.MenuBuilder) -> onMenuModeChange
android.support.v7.app.ActionBarImplHC -> android.support.v7.app.ActionBarImplHC:
    android.support.v7.internal.widget.NativeActionModeAwareLayout mNativeActionModeAwareLayout -> e
    android.view.ActionMode mCurActionMode -> f
    android.view.ActionMode$Callback onActionModeForChild(android.view.ActionMode$Callback) -> a
    boolean isShowHideAnimationEnabled() -> f
    android.view.ActionMode access$002(android.support.v7.app.ActionBarImplHC,android.view.ActionMode) -> a
android.support.v7.app.ActionBarImplHC$CallbackWrapper -> android.support.v7.app.ActionBarImplHC$CallbackWrapper:
    android.view.ActionMode$Callback mWrappedCallback -> b
    android.support.v7.app.ActionBarImplHC this$0 -> a
    boolean onCreateActionMode(android.view.ActionMode,android.view.Menu) -> onCreateActionMode
    boolean onPrepareActionMode(android.view.ActionMode,android.view.Menu) -> onPrepareActionMode
    boolean onActionItemClicked(android.view.ActionMode,android.view.MenuItem) -> onActionItemClicked
    void onDestroyActionMode(android.view.ActionMode) -> onDestroyActionMode
android.support.v7.app.ActionBarImplICS -> android.support.v7.app.ActionBarImplICS:
    android.app.Activity mActivity -> a
    android.support.v7.app.ActionBar$Callback mCallback -> b
    android.app.ActionBar mActionBar -> c
    java.util.ArrayList mAddedMenuVisWrappers -> d
    void setDisplayHomeAsUpEnabled(boolean) -> a
    int getDisplayOptions() -> a
    android.content.Context getThemedContext() -> b
android.support.v7.internal.view.ActionBarPolicy -> android.support.v7.internal.view.ActionBarPolicy:
    android.content.Context mContext -> a
    android.support.v7.internal.view.ActionBarPolicy get(android.content.Context) -> a
    int getMaxActionButtons() -> a
    boolean showsOverflowMenuButton() -> b
    int getEmbeddedMenuWidthLimit() -> c
    boolean hasEmbeddedTabs() -> d
    int getTabContainerHeight() -> e
    boolean enableHomeButtonByDefault() -> f
    int getStackedTabMaxWidth() -> g
android.support.v7.internal.view.ActionModeWrapper -> android.support.v7.internal.view.ActionModeWrapper:
    android.view.MenuInflater mInflater -> a
    android.view.ActionMode mWrappedObject -> b
    void finish() -> b
    android.view.Menu getMenu() -> a
android.support.v7.internal.view.ActionModeWrapper$CallbackWrapper -> android.support.v7.internal.view.ActionModeWrapper$CallbackWrapper:
    android.support.v7.view.ActionMode$Callback mWrappedCallback -> a
    android.content.Context mContext -> b
    android.support.v7.internal.view.ActionModeWrapper mLastStartedActionMode -> c
    boolean onCreateActionMode(android.view.ActionMode,android.view.Menu) -> onCreateActionMode
    boolean onPrepareActionMode(android.view.ActionMode,android.view.Menu) -> onPrepareActionMode
    boolean onActionItemClicked(android.view.ActionMode,android.view.MenuItem) -> onActionItemClicked
    void onDestroyActionMode(android.view.ActionMode) -> onDestroyActionMode
    void setLastStartedActionMode(android.support.v7.internal.view.ActionModeWrapper) -> a
    android.support.v7.view.ActionMode getActionModeWrapper(android.view.ActionMode) -> a
android.support.v7.internal.view.SupportMenuInflater -> android.support.v7.internal.view.SupportMenuInflater:
    java.lang.Class[] ACTION_VIEW_CONSTRUCTOR_SIGNATURE -> a
    java.lang.Class[] ACTION_PROVIDER_CONSTRUCTOR_SIGNATURE -> b
    java.lang.Object[] mActionViewConstructorArguments -> c
    java.lang.Object[] mActionProviderConstructorArguments -> d
    android.content.Context mContext -> e
    java.lang.Object mRealOwner -> f
    void inflate(int,android.view.Menu) -> inflate
    void parseMenu(org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.view.Menu) -> a
    android.content.Context access$100(android.support.v7.internal.view.SupportMenuInflater) -> a
    java.lang.Class[] access$200() -> a
    java.lang.Object[] access$300(android.support.v7.internal.view.SupportMenuInflater) -> b
    java.lang.Object access$400(android.support.v7.internal.view.SupportMenuInflater) -> c
    java.lang.Class[] access$500() -> b
    java.lang.Object[] access$600(android.support.v7.internal.view.SupportMenuInflater) -> d
android.support.v7.internal.view.SupportMenuInflater$InflatedOnMenuItemClickListener -> android.support.v7.internal.view.SupportMenuInflater$InflatedOnMenuItemClickListener:
    java.lang.Class[] PARAM_TYPES -> a
    java.lang.Object mRealOwner -> b
    java.lang.reflect.Method mMethod -> c
    boolean onMenuItemClick(android.view.MenuItem) -> onMenuItemClick
android.support.v7.internal.view.SupportMenuInflater$MenuState -> android.support.v7.internal.view.SupportMenuInflater$MenuState:
    android.view.Menu menu -> b
    int groupId -> c
    int groupCategory -> d
    int groupOrder -> e
    int groupCheckable -> f
    boolean groupVisible -> g
    boolean groupEnabled -> h
    boolean itemAdded -> i
    int itemId -> j
    int itemCategoryOrder -> k
    java.lang.CharSequence itemTitle -> l
    java.lang.CharSequence itemTitleCondensed -> m
    int itemIconResId -> n
    char itemAlphabeticShortcut -> o
    char itemNumericShortcut -> p
    int itemCheckable -> q
    boolean itemChecked -> r
    boolean itemVisible -> s
    boolean itemEnabled -> t
    int itemShowAsAction -> u
    int itemActionViewLayout -> v
    java.lang.String itemActionViewClassName -> w
    java.lang.String itemActionProviderClassName -> x
    java.lang.String itemListenerMethodName -> y
    android.support.v4.view.ActionProvider itemActionProvider -> z
    android.support.v7.internal.view.SupportMenuInflater this$0 -> a
    void resetGroup() -> a
    void readGroup(android.util.AttributeSet) -> a
    void readItem(android.util.AttributeSet) -> b
    char getShortcut(java.lang.String) -> a
    void setItem(android.view.MenuItem) -> a
    void addItem() -> b
    android.view.SubMenu addSubMenuItem() -> c
    boolean hasAddedItem() -> d
    java.lang.Object newInstance(java.lang.String,java.lang.Class[],java.lang.Object[]) -> a
    android.support.v4.view.ActionProvider access$000(android.support.v7.internal.view.SupportMenuInflater$MenuState) -> a
android.support.v7.internal.view.menu.ActionMenuItem -> android.support.v7.internal.view.menu.ActionMenuItem:
    int mId -> a
    int mGroup -> b
    int mCategoryOrder -> c
    int mOrdering -> d
    java.lang.CharSequence mTitle -> e
    java.lang.CharSequence mTitleCondensed -> f
    android.content.Intent mIntent -> g
    char mShortcutNumericChar -> h
    char mShortcutAlphabeticChar -> i
    android.graphics.drawable.Drawable mIconDrawable -> j
    int mIconResId -> k
    android.content.Context mContext -> l
    android.view.MenuItem$OnMenuItemClickListener mClickListener -> m
    int mFlags -> n
    char getAlphabeticShortcut() -> getAlphabeticShortcut
    int getGroupId() -> getGroupId
    android.graphics.drawable.Drawable getIcon() -> getIcon
    android.content.Intent getIntent() -> getIntent
    int getItemId() -> getItemId
    android.view.ContextMenu$ContextMenuInfo getMenuInfo() -> getMenuInfo
    char getNumericShortcut() -> getNumericShortcut
    int getOrder() -> getOrder
    android.view.SubMenu getSubMenu() -> getSubMenu
    java.lang.CharSequence getTitle() -> getTitle
    java.lang.CharSequence getTitleCondensed() -> getTitleCondensed
    boolean hasSubMenu() -> hasSubMenu
    boolean isCheckable() -> isCheckable
    boolean isChecked() -> isChecked
    boolean isEnabled() -> isEnabled
    boolean isVisible() -> isVisible
    android.view.MenuItem setAlphabeticShortcut(char) -> setAlphabeticShortcut
    android.view.MenuItem setCheckable(boolean) -> setCheckable
    android.view.MenuItem setChecked(boolean) -> setChecked
    android.view.MenuItem setEnabled(boolean) -> setEnabled
    android.view.MenuItem setIcon(android.graphics.drawable.Drawable) -> setIcon
    android.view.MenuItem setIcon(int) -> setIcon
    android.view.MenuItem setIntent(android.content.Intent) -> setIntent
    android.view.MenuItem setNumericShortcut(char) -> setNumericShortcut
    android.view.MenuItem setOnMenuItemClickListener(android.view.MenuItem$OnMenuItemClickListener) -> setOnMenuItemClickListener
    android.view.MenuItem setShortcut(char,char) -> setShortcut
    android.view.MenuItem setTitle(java.lang.CharSequence) -> setTitle
    android.view.MenuItem setTitle(int) -> setTitle
    android.view.MenuItem setTitleCondensed(java.lang.CharSequence) -> setTitleCondensed
    android.view.MenuItem setVisible(boolean) -> setVisible
    void setShowAsAction(int) -> setShowAsAction
    android.support.v4.internal.view.SupportMenuItem setActionView(android.view.View) -> a
    android.view.View getActionView() -> getActionView
    android.view.MenuItem setActionProvider(android.view.ActionProvider) -> setActionProvider
    android.view.ActionProvider getActionProvider() -> getActionProvider
    android.support.v4.internal.view.SupportMenuItem setActionView(int) -> a
    android.support.v4.view.ActionProvider getSupportActionProvider() -> getSupportActionProvider
    android.support.v4.internal.view.SupportMenuItem setSupportActionProvider(android.support.v4.view.ActionProvider) -> setSupportActionProvider
    android.support.v4.internal.view.SupportMenuItem setShowAsActionFlags(int) -> b
    boolean expandActionView() -> expandActionView
    boolean collapseActionView() -> collapseActionView
    boolean isActionViewExpanded() -> isActionViewExpanded
    android.view.MenuItem setOnActionExpandListener(android.view.MenuItem$OnActionExpandListener) -> setOnActionExpandListener
    android.support.v4.internal.view.SupportMenuItem setSupportOnActionExpandListener(android.support.v4.view.MenuItemCompat$OnActionExpandListener) -> setSupportOnActionExpandListener
    android.view.MenuItem setActionView(int) -> setActionView
    android.view.MenuItem setActionView(android.view.View) -> setActionView
    android.view.MenuItem setShowAsActionFlags(int) -> setShowAsActionFlags
android.support.v7.internal.view.menu.ActionMenuItemView -> android.support.v7.internal.view.menu.ActionMenuItemView:
    android.support.v7.internal.view.menu.MenuItemImpl mItemData -> a
    java.lang.CharSequence mTitle -> b
    android.graphics.drawable.Drawable mIcon -> c
    android.support.v7.internal.view.menu.MenuBuilder$ItemInvoker mItemInvoker -> d
    boolean mAllowTextWithIcon -> e
    boolean mExpandedFormat -> f
    int mMinWidth -> g
    int mSavedPaddingLeft -> h
    void setPadding(int,int,int,int) -> setPadding
    android.support.v7.internal.view.menu.MenuItemImpl getItemData() -> getItemData
    void initialize(android.support.v7.internal.view.menu.MenuItemImpl,int) -> a
    void onClick(android.view.View) -> onClick
    void setItemInvoker(android.support.v7.internal.view.menu.MenuBuilder$ItemInvoker) -> setItemInvoker
    boolean prefersCondensedTitle() -> a
    void setCheckable(boolean) -> setCheckable
    void setChecked(boolean) -> setChecked
    void setExpandedFormat(boolean) -> setExpandedFormat
    void updateTextButtonVisibility() -> e
    void setIcon(android.graphics.drawable.Drawable) -> setIcon
    boolean hasText() -> b
    void setTitle(java.lang.CharSequence) -> setTitle
    boolean needsDividerBefore() -> c
    boolean needsDividerAfter() -> d
    boolean onLongClick(android.view.View) -> onLongClick
    void onMeasure(int,int) -> onMeasure
android.support.v7.internal.view.menu.ActionMenuItemView$AllCapsTransformationMethod -> android.support.v7.internal.view.menu.ActionMenuItemView$AllCapsTransformationMethod:
    java.util.Locale mLocale -> b
    android.support.v7.internal.view.menu.ActionMenuItemView this$0 -> a
    java.lang.CharSequence getTransformation(java.lang.CharSequence,android.view.View) -> getTransformation
    void onFocusChanged(android.view.View,java.lang.CharSequence,boolean,int,android.graphics.Rect) -> onFocusChanged
android.support.v7.internal.view.menu.ActionMenuPresenter -> android.support.v7.internal.view.menu.ActionMenuPresenter:
    android.support.v7.internal.view.menu.ActionMenuPresenter$PopupPresenterCallback mPopupPresenterCallback -> a
    android.util.SparseBooleanArray mActionButtonGroups -> i
    int mOpenSubMenuId -> b
    android.view.View mOverflowButton -> j
    boolean mReserveOverflow -> k
    boolean mReserveOverflowSet -> l
    int mWidthLimit -> m
    int mActionItemWidthLimit -> n
    int mMaxItems -> o
    boolean mMaxItemsSet -> p
    boolean mStrictWidthLimit -> q
    boolean mWidthLimitSet -> r
    boolean mExpandedActionViewsExclusive -> s
    int mMinCellSize -> t
    android.view.View mScrapActionButtonView -> u
    android.support.v7.internal.view.menu.ActionMenuPresenter$OverflowPopup mOverflowPopup -> v
    android.support.v7.internal.view.menu.ActionMenuPresenter$ActionButtonSubmenu mActionButtonPopup -> w
    android.support.v7.internal.view.menu.ActionMenuPresenter$OpenOverflowRunnable mPostedOpenRunnable -> x
    void initForMenu(android.content.Context,android.support.v7.internal.view.menu.MenuBuilder) -> a
    void onConfigurationChanged(android.content.res.Configuration) -> a
    void setWidthLimit(int,boolean) -> a
    void setReserveOverflow(boolean) -> a
    void setItemLimit(int) -> a
    void setExpandedActionViewsExclusive(boolean) -> b
    android.support.v7.internal.view.menu.MenuView getMenuView(android.view.ViewGroup) -> a
    android.view.View getItemView(android.support.v7.internal.view.menu.MenuItemImpl,android.view.View,android.view.ViewGroup) -> a
    void bindItemView(android.support.v7.internal.view.menu.MenuItemImpl,android.support.v7.internal.view.menu.MenuView$ItemView) -> a
    boolean shouldIncludeItem(int,android.support.v7.internal.view.menu.MenuItemImpl) -> a
    void updateMenuView(boolean) -> c
    boolean filterLeftoverView(android.view.ViewGroup,int) -> a
    boolean onSubMenuSelected(android.support.v7.internal.view.menu.SubMenuBuilder) -> a
    android.view.View findViewForItem(android.view.MenuItem) -> a
    boolean showOverflowMenu() -> a
    boolean hideOverflowMenu() -> b
    boolean dismissPopupMenus() -> c
    boolean hideSubMenus() -> d
    boolean isOverflowMenuShowing() -> e
    boolean isOverflowReserved() -> f
    boolean flagActionItems() -> g
    void onCloseMenu(android.support.v7.internal.view.menu.MenuBuilder,boolean) -> a
    void onSubUiVisibilityChanged(boolean) -> onSubUiVisibilityChanged
    android.support.v7.internal.view.menu.ActionMenuPresenter$OverflowPopup access$102(android.support.v7.internal.view.menu.ActionMenuPresenter,android.support.v7.internal.view.menu.ActionMenuPresenter$OverflowPopup) -> a
    android.view.View access$200(android.support.v7.internal.view.menu.ActionMenuPresenter) -> a
    android.support.v7.internal.view.menu.ActionMenuPresenter$ActionButtonSubmenu access$302(android.support.v7.internal.view.menu.ActionMenuPresenter,android.support.v7.internal.view.menu.ActionMenuPresenter$ActionButtonSubmenu) -> a
    android.support.v7.internal.view.menu.ActionMenuPresenter$OpenOverflowRunnable access$402(android.support.v7.internal.view.menu.ActionMenuPresenter,android.support.v7.internal.view.menu.ActionMenuPresenter$OpenOverflowRunnable) -> a
android.support.v7.internal.view.menu.ActionMenuPresenter$1 -> android.support.v7.internal.view.menu.ActionMenuPresenter$1:
android.support.v7.internal.view.menu.ActionMenuPresenter$ActionButtonSubmenu -> android.support.v7.internal.view.menu.ActionMenuPresenter$ActionButtonSubmenu:
    android.support.v7.internal.view.menu.SubMenuBuilder mSubMenu -> d
    android.support.v7.internal.view.menu.ActionMenuPresenter this$0 -> a
    void onDismiss() -> a_
android.support.v7.internal.view.menu.ActionMenuPresenter$OpenOverflowRunnable -> android.support.v7.internal.view.menu.ActionMenuPresenter$OpenOverflowRunnable:
    android.support.v7.internal.view.menu.ActionMenuPresenter$OverflowPopup mPopup -> b
    android.support.v7.internal.view.menu.ActionMenuPresenter this$0 -> a
    void run() -> run
android.support.v7.internal.view.menu.ActionMenuPresenter$OverflowMenuButton -> android.support.v7.internal.view.menu.ActionMenuPresenter$OverflowMenuButton:
    android.support.v7.internal.view.menu.ActionMenuPresenter this$0 -> a
    boolean performClick() -> performClick
    boolean needsDividerBefore() -> c
    boolean needsDividerAfter() -> d
android.support.v7.internal.view.menu.ActionMenuPresenter$OverflowPopup -> android.support.v7.internal.view.menu.ActionMenuPresenter$OverflowPopup:
    android.support.v7.internal.view.menu.ActionMenuPresenter this$0 -> a
    void onDismiss() -> a_
android.support.v7.internal.view.menu.ActionMenuPresenter$PopupPresenterCallback -> android.support.v7.internal.view.menu.ActionMenuPresenter$PopupPresenterCallback:
    android.support.v7.internal.view.menu.ActionMenuPresenter this$0 -> a
    boolean onOpenSubMenu(android.support.v7.internal.view.menu.MenuBuilder) -> onOpenSubMenu
    void onCloseMenu(android.support.v7.internal.view.menu.MenuBuilder,boolean) -> onCloseMenu
android.support.v7.internal.view.menu.ActionMenuPresenter$SavedState -> android.support.v7.internal.view.menu.ActionMenuPresenter$SavedState:
    android.os.Parcelable$Creator CREATOR -> CREATOR
    int openSubMenuId -> a
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v7.internal.view.menu.ActionMenuPresenter$SavedState$1 -> android.support.v7.internal.view.menu.ActionMenuPresenter$SavedState$1:
    android.support.v7.internal.view.menu.ActionMenuPresenter$SavedState createFromParcel(android.os.Parcel) -> a
    android.support.v7.internal.view.menu.ActionMenuPresenter$SavedState[] newArray(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v7.internal.view.menu.ActionMenuView -> android.support.v7.internal.view.menu.ActionMenuView:
    android.support.v7.internal.view.menu.MenuBuilder mMenu -> a
    boolean mReserveOverflow -> b
    android.support.v7.internal.view.menu.ActionMenuPresenter mPresenter -> c
    boolean mFormatItems -> d
    int mFormatItemsWidth -> e
    int mMinCellSize -> f
    int mGeneratedItemPadding -> g
    int mMeasuredExtraWidth -> h
    int mMaxItemHeight -> i
    void setPresenter(android.support.v7.internal.view.menu.ActionMenuPresenter) -> setPresenter
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    void onMeasure(int,int) -> onMeasure
    void onMeasureExactFormat(int,int) -> d
    int measureChildForCells(android.view.View,int,int,int,int) -> a
    void onLayout(boolean,int,int,int,int) -> onLayout
    void onDetachedFromWindow() -> onDetachedFromWindow
    void setOverflowReserved(boolean) -> setOverflowReserved
    android.support.v7.internal.view.menu.ActionMenuView$LayoutParams generateDefaultLayoutParams() -> a
    android.support.v7.internal.view.menu.ActionMenuView$LayoutParams generateLayoutParams(android.util.AttributeSet) -> a
    android.support.v7.internal.view.menu.ActionMenuView$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> a
    boolean checkLayoutParams(android.view.ViewGroup$LayoutParams) -> checkLayoutParams
    android.support.v7.internal.view.menu.ActionMenuView$LayoutParams generateOverflowButtonLayoutParams() -> b
    boolean invokeItem(android.support.v7.internal.view.menu.MenuItemImpl) -> a
    int getWindowAnimations() -> getWindowAnimations
    void initialize(android.support.v7.internal.view.menu.MenuBuilder) -> a
    boolean hasDividerBeforeChildAt(int) -> a
    boolean dispatchPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    android.widget.LinearLayout$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    android.widget.LinearLayout$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    android.widget.LinearLayout$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    android.view.ViewGroup$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
android.support.v7.internal.view.menu.ActionMenuView$ActionMenuChildView -> android.support.v7.internal.view.menu.ActionMenuView$ActionMenuChildView:
    boolean needsDividerBefore() -> c
    boolean needsDividerAfter() -> d
android.support.v7.internal.view.menu.ActionMenuView$LayoutParams -> android.support.v7.internal.view.menu.ActionMenuView$LayoutParams:
    boolean isOverflowButton -> a
    int cellsUsed -> b
    int extraPixels -> c
    boolean expandable -> d
    boolean preventEdgeOffset -> e
    boolean expanded -> f
android.support.v7.internal.view.menu.BaseMenuPresenter -> android.support.v7.internal.view.menu.BaseMenuPresenter:
    android.content.Context mSystemContext -> c
    android.content.Context mContext -> d
    android.support.v7.internal.view.menu.MenuBuilder mMenu -> e
    android.view.LayoutInflater mSystemInflater -> f
    android.view.LayoutInflater mInflater -> g
    android.support.v7.internal.view.menu.MenuPresenter$Callback mCallback -> a
    int mMenuLayoutRes -> b
    int mItemLayoutRes -> i
    android.support.v7.internal.view.menu.MenuView mMenuView -> h
    int mId -> j
    void initForMenu(android.content.Context,android.support.v7.internal.view.menu.MenuBuilder) -> a
    android.support.v7.internal.view.menu.MenuView getMenuView(android.view.ViewGroup) -> a
    void updateMenuView(boolean) -> c
    void addItemView(android.view.View,int) -> a
    boolean filterLeftoverView(android.view.ViewGroup,int) -> a
    void setCallback(android.support.v7.internal.view.menu.MenuPresenter$Callback) -> a
    android.support.v7.internal.view.menu.MenuView$ItemView createItemView(android.view.ViewGroup) -> b
    android.view.View getItemView(android.support.v7.internal.view.menu.MenuItemImpl,android.view.View,android.view.ViewGroup) -> a
    void bindItemView(android.support.v7.internal.view.menu.MenuItemImpl,android.support.v7.internal.view.menu.MenuView$ItemView) -> a
    boolean shouldIncludeItem(int,android.support.v7.internal.view.menu.MenuItemImpl) -> a
    void onCloseMenu(android.support.v7.internal.view.menu.MenuBuilder,boolean) -> a
    boolean onSubMenuSelected(android.support.v7.internal.view.menu.SubMenuBuilder) -> a
    boolean flagActionItems() -> g
    boolean expandItemActionView(android.support.v7.internal.view.menu.MenuBuilder,android.support.v7.internal.view.menu.MenuItemImpl) -> a
    boolean collapseItemActionView(android.support.v7.internal.view.menu.MenuBuilder,android.support.v7.internal.view.menu.MenuItemImpl) -> b
    void setId(int) -> b
android.support.v7.internal.view.menu.BaseMenuWrapper -> android.support.v7.internal.view.menu.BaseMenuWrapper:
    java.util.HashMap mMenuItems -> b
    java.util.HashMap mSubMenus -> c
    android.support.v4.internal.view.SupportMenuItem getMenuItemWrapper(android.view.MenuItem) -> a
    android.view.SubMenu getSubMenuWrapper(android.view.SubMenu) -> a
    void internalClear() -> a
    void internalRemoveGroup(int) -> a
    void internalRemoveItem(int) -> b
android.support.v7.internal.view.menu.BaseWrapper -> android.support.v7.internal.view.menu.BaseWrapper:
    java.lang.Object mWrappedObject -> a
    java.lang.Object getWrappedObject() -> b
android.support.v7.internal.view.menu.ContextMenuBuilder -> android.support.v7.internal.view.menu.ContextMenuBuilder:
    android.view.ContextMenu$ContextMenuInfo mContextMenuInfo -> d
    android.support.v7.internal.view.menu.ContextMenuListener mListener -> e
    android.view.ContextMenu$ContextMenuInfo getContextMenuInfo() -> a
    android.view.ContextMenu$ContextMenuInfo getContextMenuInfo(android.view.View) -> a
    void setContextMenuListener(android.support.v7.internal.view.menu.ContextMenuListener) -> a
    android.support.v4.internal.view.SupportContextMenu setHeaderIcon(android.graphics.drawable.Drawable) -> setHeaderIcon
    android.support.v4.internal.view.SupportContextMenu setHeaderIcon(int) -> setHeaderIcon
    android.support.v4.internal.view.SupportContextMenu setHeaderTitle(java.lang.CharSequence) -> setHeaderTitle
    android.support.v4.internal.view.SupportContextMenu setHeaderTitle(int) -> setHeaderTitle
    android.support.v4.internal.view.SupportContextMenu setHeaderView(android.view.View) -> setHeaderView
    android.support.v7.internal.view.menu.MenuDialogHelper show(android.view.View,android.os.IBinder) -> a
    android.view.ContextMenu setHeaderView(android.view.View) -> setHeaderView
    android.view.ContextMenu setHeaderIcon(android.graphics.drawable.Drawable) -> setHeaderIcon
    android.view.ContextMenu setHeaderIcon(int) -> setHeaderIcon
    android.view.ContextMenu setHeaderTitle(java.lang.CharSequence) -> setHeaderTitle
    android.view.ContextMenu setHeaderTitle(int) -> setHeaderTitle
android.support.v7.internal.view.menu.ContextMenuBuilder$ContextMenuInfoGetter -> android.support.v7.internal.view.menu.ContextMenuBuilder$ContextMenuInfoGetter:
    android.view.ContextMenu$ContextMenuInfo getContextMenuInfo() -> getContextMenuInfo
android.support.v7.internal.view.menu.ContextMenuCallbackGetter -> android.support.v7.internal.view.menu.ContextMenuCallbackGetter:
    android.view.View$OnCreateContextMenuListener getOnCreateContextMenuListener() -> a
android.support.v7.internal.view.menu.ContextMenuDecorView -> android.support.v7.internal.view.menu.ContextMenuDecorView:
    android.support.v7.internal.view.menu.ContextMenuBuilder mContextMenu -> mContextMenu
    android.support.v7.internal.view.menu.ContextMenuListener mListener -> mListener
    android.support.v7.internal.view.menu.MenuDialogHelper mMenuDialogHelper -> mMenuDialogHelper
    android.support.v7.internal.view.menu.ContextMenuDecorView$ContextMenuListenersProvider mProvider -> mProvider
    void onCloseMenu(android.support.v7.internal.view.menu.MenuBuilder,boolean) -> onCloseMenu
    boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    boolean onMenuItemSelected(android.support.v7.internal.view.menu.MenuBuilder,android.view.MenuItem) -> onMenuItemSelected
    void onMenuModeChange(android.support.v7.internal.view.menu.MenuBuilder) -> onMenuModeChange
    boolean onOpenSubMenu(android.support.v7.internal.view.menu.MenuBuilder) -> onOpenSubMenu
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void setProvider(android.support.v7.internal.view.menu.ContextMenuDecorView$ContextMenuListenersProvider) -> setProvider
    boolean showContextMenuForChild(android.view.View) -> showContextMenuForChild
android.support.v7.internal.view.menu.ContextMenuDecorView$ContextMenuListenersProvider -> android.support.v7.internal.view.menu.ContextMenuDecorView$ContextMenuListenersProvider:
    android.support.v7.internal.view.menu.ContextMenuListener getContextMenuListener(android.view.View) -> getContextMenuListener
android.support.v7.internal.view.menu.ContextMenuListener -> android.support.v7.internal.view.menu.ContextMenuListener:
    boolean onContextItemSelected(android.view.MenuItem) -> onContextItemSelected
    void onContextMenuClosed(android.view.ContextMenu) -> onContextMenuClosed
    void onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu$ContextMenuInfo) -> onCreateContextMenu
android.support.v7.internal.view.menu.ExpandedMenuView -> android.support.v7.internal.view.menu.ExpandedMenuView:
    android.support.v7.internal.view.menu.MenuBuilder mMenu -> a
    int mAnimations -> b
    void initialize(android.support.v7.internal.view.menu.MenuBuilder) -> a
    void onDetachedFromWindow() -> onDetachedFromWindow
    boolean invokeItem(android.support.v7.internal.view.menu.MenuItemImpl) -> a
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
    int getWindowAnimations() -> getWindowAnimations
android.support.v7.internal.view.menu.ListMenuItemView -> android.support.v7.internal.view.menu.ListMenuItemView:
    android.support.v7.internal.view.menu.MenuItemImpl mItemData -> b
    android.widget.ImageView mIconView -> c
    org.holoeverywhere.widget.RadioButton mRadioButton -> d
    org.holoeverywhere.widget.TextView mTitleView -> e
    org.holoeverywhere.widget.CheckBox mCheckBox -> f
    org.holoeverywhere.widget.TextView mShortcutView -> a
    android.graphics.drawable.Drawable mBackground -> g
    int mTextAppearance -> h
    android.content.Context mTextAppearanceContext -> i
    boolean mPreserveIconSpacing -> j
    int mMenuType -> k
    android.content.Context mContext -> l
    android.view.LayoutInflater mInflater -> m
    boolean mForceShowIcon -> n
    void onFinishInflate() -> onFinishInflate
    void initialize(android.support.v7.internal.view.menu.MenuItemImpl,int) -> a
    void setForceShowIcon(boolean) -> setForceShowIcon
    void setTitle(java.lang.CharSequence) -> setTitle
    android.support.v7.internal.view.menu.MenuItemImpl getItemData() -> getItemData
    void setCheckable(boolean) -> setCheckable
    void setChecked(boolean) -> setChecked
    void setShortcut(boolean,char) -> a
    void setIcon(android.graphics.drawable.Drawable) -> setIcon
    void onMeasure(int,int) -> onMeasure
    void insertIconView() -> b
    void insertRadioButton() -> c
    void insertCheckBox() -> d
    boolean prefersCondensedTitle() -> a
    android.view.LayoutInflater getInflater() -> getInflater
android.support.v7.internal.view.menu.ListMenuPresenter -> android.support.v7.internal.view.menu.ListMenuPresenter:
    android.content.Context mContext -> a
    org.holoeverywhere.LayoutInflater mInflater -> b
    android.support.v7.internal.view.menu.MenuBuilder mMenu -> c
    android.support.v7.internal.view.menu.ExpandedMenuView mMenuView -> d
    int mItemIndexOffset -> h
    int mThemeRes -> e
    int mItemLayoutRes -> f
    android.support.v7.internal.view.menu.MenuPresenter$Callback mCallback -> i
    android.support.v7.internal.view.menu.ListMenuPresenter$MenuAdapter mAdapter -> g
    void initForMenu(android.content.Context,android.support.v7.internal.view.menu.MenuBuilder) -> a
    android.support.v7.internal.view.menu.MenuView getMenuView(android.view.ViewGroup) -> a
    android.widget.ListAdapter getAdapter() -> a
    void updateMenuView(boolean) -> c
    void setCallback(android.support.v7.internal.view.menu.MenuPresenter$Callback) -> a
    boolean onSubMenuSelected(android.support.v7.internal.view.menu.SubMenuBuilder) -> a
    void onCloseMenu(android.support.v7.internal.view.menu.MenuBuilder,boolean) -> a
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
    boolean flagActionItems() -> g
    boolean expandItemActionView(android.support.v7.internal.view.menu.MenuBuilder,android.support.v7.internal.view.menu.MenuItemImpl) -> a
    boolean collapseItemActionView(android.support.v7.internal.view.menu.MenuBuilder,android.support.v7.internal.view.menu.MenuItemImpl) -> b
    int access$000(android.support.v7.internal.view.menu.ListMenuPresenter) -> a
android.support.v7.internal.view.menu.ListMenuPresenter$MenuAdapter -> android.support.v7.internal.view.menu.ListMenuPresenter$MenuAdapter:
    int mExpandedIndex -> b
    android.support.v7.internal.view.menu.ListMenuPresenter this$0 -> a
    int getCount() -> getCount
    android.support.v7.internal.view.menu.MenuItemImpl getItem(int) -> a
    long getItemId(int) -> getItemId
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    void findExpandedIndex() -> a
    void notifyDataSetChanged() -> notifyDataSetChanged
    java.lang.Object getItem(int) -> getItem
android.support.v7.internal.view.menu.MenuBuilder -> android.support.v7.internal.view.menu.MenuBuilder:
    int[] sCategoryToOrder -> d
    android.content.Context mContext -> e
    android.content.res.Resources mResources -> f
    boolean mQwertyMode -> g
    boolean mShortcutsVisible -> h
    android.support.v7.internal.view.menu.MenuBuilder$Callback mCallback -> i
    java.util.ArrayList mItems -> j
    java.util.ArrayList mVisibleItems -> k
    boolean mIsVisibleItemsStale -> l
    java.util.ArrayList mActionItems -> m
    java.util.ArrayList mNonActionItems -> n
    boolean mIsActionItemsStale -> o
    int mDefaultShowAsAction -> p
    android.view.ContextMenu$ContextMenuInfo mCurrentMenuInfo -> q
    java.lang.CharSequence mHeaderTitle -> a
    android.graphics.drawable.Drawable mHeaderIcon -> b
    android.view.View mHeaderView -> c
    boolean mPreventDispatchingItemsChanged -> r
    boolean mItemsChangedWhileDispatchPrevented -> s
    boolean mOptionalIconsVisible -> t
    boolean mIsClosing -> u
    java.util.ArrayList mTempShortcutItemList -> v
    java.util.concurrent.CopyOnWriteArrayList mPresenters -> w
    android.support.v7.internal.view.menu.MenuItemImpl mExpandedItem -> x
    android.support.v7.internal.view.menu.MenuBuilder setDefaultShowAsAction(int) -> a
    void addMenuPresenter(android.support.v7.internal.view.menu.MenuPresenter) -> a
    void removeMenuPresenter(android.support.v7.internal.view.menu.MenuPresenter) -> b
    void dispatchPresenterUpdate(boolean) -> c
    boolean dispatchSubMenuSelected(android.support.v7.internal.view.menu.SubMenuBuilder) -> a
    void setCallback(android.support.v7.internal.view.menu.MenuBuilder$Callback) -> a
    android.view.MenuItem addInternal(int,int,int,java.lang.CharSequence) -> a
    android.view.MenuItem add(java.lang.CharSequence) -> add
    android.view.MenuItem add(int) -> add
    android.view.MenuItem add(int,int,int,java.lang.CharSequence) -> add
    android.view.MenuItem add(int,int,int,int) -> add
    android.view.SubMenu addSubMenu(java.lang.CharSequence) -> addSubMenu
    android.view.SubMenu addSubMenu(int) -> addSubMenu
    android.view.SubMenu addSubMenu(int,int,int,java.lang.CharSequence) -> addSubMenu
    android.view.SubMenu addSubMenu(int,int,int,int) -> addSubMenu
    int addIntentOptions(int,int,int,android.content.ComponentName,android.content.Intent[],android.content.Intent,int,android.view.MenuItem[]) -> addIntentOptions
    void removeItem(int) -> removeItem
    void removeGroup(int) -> removeGroup
    void removeItemAtInt(int,boolean) -> a
    void clearAll() -> b
    void clear() -> clear
    void setExclusiveItemChecked(android.view.MenuItem) -> a
    void setGroupCheckable(int,boolean,boolean) -> setGroupCheckable
    void setGroupVisible(int,boolean) -> setGroupVisible
    void setGroupEnabled(int,boolean) -> setGroupEnabled
    boolean hasVisibleItems() -> hasVisibleItems
    android.view.MenuItem findItem(int) -> findItem
    int findItemIndex(int) -> b
    int findGroupIndex(int) -> c
    int findGroupIndex(int,int) -> a
    int size() -> size
    android.view.MenuItem getItem(int) -> getItem
    boolean isShortcutKey(int,android.view.KeyEvent) -> isShortcutKey
    void setQwertyMode(boolean) -> setQwertyMode
    int getOrdering(int) -> f
    boolean isQwertyMode() -> c
    void setShortcutsVisibleInner(boolean) -> d
    boolean isShortcutsVisible() -> d
    android.content.res.Resources getResources() -> e
    android.content.Context getContext() -> f
    boolean dispatchMenuItemSelected(android.support.v7.internal.view.menu.MenuBuilder,android.view.MenuItem) -> a
    void changeMenuMode() -> g
    int findInsertIndex(java.util.ArrayList,int) -> a
    boolean performShortcut(int,android.view.KeyEvent,int) -> performShortcut
    void findItemsWithShortcutForKey(java.util.List,int,android.view.KeyEvent) -> a
    android.support.v7.internal.view.menu.MenuItemImpl findItemWithShortcutForKey(int,android.view.KeyEvent) -> a
    boolean performIdentifierAction(int,int) -> performIdentifierAction
    boolean performItemAction(android.view.MenuItem,int) -> a
    void close(boolean) -> a
    void close() -> close
    void onItemsChanged(boolean) -> b
    void stopDispatchingItemsChanged() -> h
    void startDispatchingItemsChanged() -> i
    void onItemVisibleChanged(android.support.v7.internal.view.menu.MenuItemImpl) -> a
    void onItemActionRequestChanged(android.support.v7.internal.view.menu.MenuItemImpl) -> b
    java.util.ArrayList getVisibleItems() -> j
    void flagActionItems() -> k
    java.util.ArrayList getActionItems() -> l
    java.util.ArrayList getNonActionItems() -> m
    void clearHeader() -> clearHeader
    void setHeaderInternal(int,java.lang.CharSequence,int,android.graphics.drawable.Drawable,android.view.View) -> a
    android.support.v7.internal.view.menu.MenuBuilder setHeaderTitleInt(java.lang.CharSequence) -> a
    android.support.v7.internal.view.menu.MenuBuilder setHeaderTitleInt(int) -> d
    android.support.v7.internal.view.menu.MenuBuilder setHeaderIconInt(android.graphics.drawable.Drawable) -> a
    android.support.v7.internal.view.menu.MenuBuilder setHeaderIconInt(int) -> e
    android.support.v7.internal.view.menu.MenuBuilder setHeaderViewInt(android.view.View) -> b
    java.lang.CharSequence getHeaderTitle() -> n
    android.graphics.drawable.Drawable getHeaderIcon() -> o
    android.view.View getHeaderView() -> p
    android.support.v7.internal.view.menu.MenuBuilder getRootMenu() -> q
    boolean getOptionalIconsVisible() -> r
    boolean expandItemActionView(android.support.v7.internal.view.menu.MenuItemImpl) -> c
    boolean collapseItemActionView(android.support.v7.internal.view.menu.MenuItemImpl) -> d
    android.support.v7.internal.view.menu.MenuItemImpl getExpandedItem() -> s
android.support.v7.internal.view.menu.MenuBuilder$Callback -> android.support.v7.internal.view.menu.MenuBuilder$Callback:
    boolean onMenuItemSelected(android.support.v7.internal.view.menu.MenuBuilder,android.view.MenuItem) -> onMenuItemSelected
    void onMenuModeChange(android.support.v7.internal.view.menu.MenuBuilder) -> onMenuModeChange
android.support.v7.internal.view.menu.MenuBuilder$ItemInvoker -> android.support.v7.internal.view.menu.MenuBuilder$ItemInvoker:
    boolean invokeItem(android.support.v7.internal.view.menu.MenuItemImpl) -> a
android.support.v7.internal.view.menu.MenuDialogHelper -> android.support.v7.internal.view.menu.MenuDialogHelper:
    android.support.v7.internal.view.menu.ListMenuPresenter mPresenter -> a
    android.support.v7.internal.view.menu.MenuBuilder mMenu -> b
    org.holoeverywhere.app.AlertDialog mDialog -> c
    android.support.v7.internal.view.menu.MenuPresenter$Callback mPresenterCallback -> d
    void show(android.os.IBinder) -> a
    boolean onKey(android.content.DialogInterface,int,android.view.KeyEvent) -> onKey
    void setPresenterCallback(android.support.v7.internal.view.menu.MenuPresenter$Callback) -> a
    void dismiss() -> a
    void onDismiss(android.content.DialogInterface) -> onDismiss
    void onCloseMenu(android.support.v7.internal.view.menu.MenuBuilder,boolean) -> onCloseMenu
    boolean onOpenSubMenu(android.support.v7.internal.view.menu.MenuBuilder) -> onOpenSubMenu
    void onClick(android.content.DialogInterface,int) -> onClick
android.support.v7.internal.view.menu.MenuItemImpl -> android.support.v7.internal.view.menu.MenuItemImpl:
    int mId -> a
    int mGroup -> b
    int mCategoryOrder -> c
    int mOrdering -> d
    java.lang.CharSequence mTitle -> e
    java.lang.CharSequence mTitleCondensed -> f
    android.content.Intent mIntent -> g
    char mShortcutNumericChar -> h
    char mShortcutAlphabeticChar -> i
    android.graphics.drawable.Drawable mIconDrawable -> j
    int mIconResId -> k
    android.support.v7.internal.view.menu.MenuBuilder mMenu -> l
    android.support.v7.internal.view.menu.SubMenuBuilder mSubMenu -> m
    java.lang.Runnable mItemCallback -> n
    android.view.MenuItem$OnMenuItemClickListener mClickListener -> o
    int mFlags -> p
    int mShowAsAction -> q
    android.view.View mActionView -> r
    android.support.v4.view.ActionProvider mActionProvider -> s
    android.support.v4.view.MenuItemCompat$OnActionExpandListener mOnActionExpandListener -> t
    boolean mIsActionViewExpanded -> u
    android.view.ContextMenu$ContextMenuInfo mMenuInfo -> v
    java.lang.String sPrependShortcutLabel -> w
    java.lang.String sEnterShortcutLabel -> x
    java.lang.String sDeleteShortcutLabel -> y
    java.lang.String sSpaceShortcutLabel -> z
    boolean invoke() -> a
    boolean isEnabled() -> isEnabled
    android.view.MenuItem setEnabled(boolean) -> setEnabled
    int getGroupId() -> getGroupId
    int getItemId() -> getItemId
    int getOrder() -> getOrder
    int getOrdering() -> b
    android.content.Intent getIntent() -> getIntent
    android.view.MenuItem setIntent(android.content.Intent) -> setIntent
    char getAlphabeticShortcut() -> getAlphabeticShortcut
    android.view.MenuItem setAlphabeticShortcut(char) -> setAlphabeticShortcut
    char getNumericShortcut() -> getNumericShortcut
    android.view.MenuItem setNumericShortcut(char) -> setNumericShortcut
    android.view.MenuItem setShortcut(char,char) -> setShortcut
    char getShortcut() -> c
    java.lang.String getShortcutLabel() -> d
    boolean shouldShowShortcut() -> e
    android.view.SubMenu getSubMenu() -> getSubMenu
    boolean hasSubMenu() -> hasSubMenu
    void setSubMenu(android.support.v7.internal.view.menu.SubMenuBuilder) -> a
    java.lang.CharSequence getTitle() -> getTitle
    java.lang.CharSequence getTitleForItemView(android.support.v7.internal.view.menu.MenuView$ItemView) -> a
    android.view.MenuItem setTitle(java.lang.CharSequence) -> setTitle
    android.view.MenuItem setTitle(int) -> setTitle
    java.lang.CharSequence getTitleCondensed() -> getTitleCondensed
    android.view.MenuItem setTitleCondensed(java.lang.CharSequence) -> setTitleCondensed
    android.graphics.drawable.Drawable getIcon() -> getIcon
    android.view.MenuItem setIcon(android.graphics.drawable.Drawable) -> setIcon
    android.view.MenuItem setIcon(int) -> setIcon
    boolean isCheckable() -> isCheckable
    android.view.MenuItem setCheckable(boolean) -> setCheckable
    void setExclusiveCheckable(boolean) -> a
    boolean isExclusiveCheckable() -> f
    boolean isChecked() -> isChecked
    android.view.MenuItem setChecked(boolean) -> setChecked
    void setCheckedInt(boolean) -> b
    boolean isVisible() -> isVisible
    boolean setVisibleInt(boolean) -> c
    android.view.MenuItem setVisible(boolean) -> setVisible
    android.view.MenuItem setOnMenuItemClickListener(android.view.MenuItem$OnMenuItemClickListener) -> setOnMenuItemClickListener
    java.lang.String toString() -> toString
    void setMenuInfo(android.view.ContextMenu$ContextMenuInfo) -> a
    android.view.ContextMenu$ContextMenuInfo getMenuInfo() -> getMenuInfo
    void actionFormatChanged() -> g
    boolean shouldShowIcon() -> h
    boolean isActionButton() -> i
    boolean requestsActionButton() -> j
    boolean requiresActionButton() -> k
    void setIsActionButton(boolean) -> d
    boolean showsTextAsAction() -> l
    void setShowAsAction(int) -> setShowAsAction
    android.support.v4.internal.view.SupportMenuItem setActionView(android.view.View) -> a
    android.support.v4.internal.view.SupportMenuItem setActionView(int) -> a
    android.view.View getActionView() -> getActionView
    android.view.MenuItem setActionProvider(android.view.ActionProvider) -> setActionProvider
    android.view.ActionProvider getActionProvider() -> getActionProvider
    android.support.v4.view.ActionProvider getSupportActionProvider() -> getSupportActionProvider
    android.support.v4.internal.view.SupportMenuItem setSupportActionProvider(android.support.v4.view.ActionProvider) -> setSupportActionProvider
    android.support.v4.internal.view.SupportMenuItem setShowAsActionFlags(int) -> b
    boolean expandActionView() -> expandActionView
    boolean collapseActionView() -> collapseActionView
    android.support.v4.internal.view.SupportMenuItem setSupportOnActionExpandListener(android.support.v4.view.MenuItemCompat$OnActionExpandListener) -> setSupportOnActionExpandListener
    boolean hasCollapsibleActionView() -> m
    void setActionViewExpanded(boolean) -> e
    boolean isActionViewExpanded() -> isActionViewExpanded
    android.view.MenuItem setOnActionExpandListener(android.view.MenuItem$OnActionExpandListener) -> setOnActionExpandListener
    android.view.MenuItem setActionView(int) -> setActionView
    android.view.MenuItem setActionView(android.view.View) -> setActionView
    android.view.MenuItem setShowAsActionFlags(int) -> setShowAsActionFlags
    android.support.v7.internal.view.menu.MenuBuilder access$000(android.support.v7.internal.view.menu.MenuItemImpl) -> a
android.support.v7.internal.view.menu.MenuItemImpl$1 -> android.support.v7.internal.view.menu.MenuItemImpl$1:
    android.support.v7.internal.view.menu.MenuItemImpl this$0 -> a
    void onActionProviderVisibilityChanged(boolean) -> onActionProviderVisibilityChanged
android.support.v7.internal.view.menu.MenuItemWrapperICS -> android.support.v7.internal.view.menu.MenuItemWrapperICS:
    boolean mEmulateProviderVisibilityOverride -> b
    boolean mLastRequestVisible -> c
    int getItemId() -> getItemId
    int getGroupId() -> getGroupId
    int getOrder() -> getOrder
    android.view.MenuItem setTitle(java.lang.CharSequence) -> setTitle
    android.view.MenuItem setTitle(int) -> setTitle
    java.lang.CharSequence getTitle() -> getTitle
    android.view.MenuItem setTitleCondensed(java.lang.CharSequence) -> setTitleCondensed
    java.lang.CharSequence getTitleCondensed() -> getTitleCondensed
    android.view.MenuItem setIcon(android.graphics.drawable.Drawable) -> setIcon
    android.view.MenuItem setIcon(int) -> setIcon
    android.graphics.drawable.Drawable getIcon() -> getIcon
    android.view.MenuItem setIntent(android.content.Intent) -> setIntent
    android.content.Intent getIntent() -> getIntent
    android.view.MenuItem setShortcut(char,char) -> setShortcut
    android.view.MenuItem setNumericShortcut(char) -> setNumericShortcut
    char getNumericShortcut() -> getNumericShortcut
    android.view.MenuItem setAlphabeticShortcut(char) -> setAlphabeticShortcut
    char getAlphabeticShortcut() -> getAlphabeticShortcut
    android.view.MenuItem setCheckable(boolean) -> setCheckable
    boolean isCheckable() -> isCheckable
    android.view.MenuItem setChecked(boolean) -> setChecked
    boolean isChecked() -> isChecked
    android.view.MenuItem setVisible(boolean) -> setVisible
    boolean isVisible() -> isVisible
    android.view.MenuItem setEnabled(boolean) -> setEnabled
    boolean isEnabled() -> isEnabled
    boolean hasSubMenu() -> hasSubMenu
    android.view.SubMenu getSubMenu() -> getSubMenu
    android.view.MenuItem setOnMenuItemClickListener(android.view.MenuItem$OnMenuItemClickListener) -> setOnMenuItemClickListener
    android.view.ContextMenu$ContextMenuInfo getMenuInfo() -> getMenuInfo
    void setShowAsAction(int) -> setShowAsAction
    android.view.MenuItem setShowAsActionFlags(int) -> setShowAsActionFlags
    android.view.MenuItem setActionView(android.view.View) -> setActionView
    android.view.MenuItem setActionView(int) -> setActionView
    android.view.View getActionView() -> getActionView
    android.view.MenuItem setActionProvider(android.view.ActionProvider) -> setActionProvider
    android.view.ActionProvider getActionProvider() -> getActionProvider
    boolean expandActionView() -> expandActionView
    boolean collapseActionView() -> collapseActionView
    boolean isActionViewExpanded() -> isActionViewExpanded
    android.view.MenuItem setOnActionExpandListener(android.view.MenuItem$OnActionExpandListener) -> setOnActionExpandListener
    android.support.v4.internal.view.SupportMenuItem setSupportOnActionExpandListener(android.support.v4.view.MenuItemCompat$OnActionExpandListener) -> setSupportOnActionExpandListener
    android.support.v4.internal.view.SupportMenuItem setSupportActionProvider(android.support.v4.view.ActionProvider) -> setSupportActionProvider
    android.support.v4.view.ActionProvider getSupportActionProvider() -> getSupportActionProvider
    android.support.v7.internal.view.menu.MenuItemWrapperICS$ActionProviderWrapper createActionProviderWrapper(android.support.v4.view.ActionProvider) -> a
    boolean checkActionProviderOverrideVisibility() -> c
    android.view.MenuItem wrappedSetVisible(boolean) -> a
    boolean access$000(android.support.v7.internal.view.menu.MenuItemWrapperICS) -> a
    boolean access$100(android.support.v7.internal.view.menu.MenuItemWrapperICS) -> b
android.support.v7.internal.view.menu.MenuItemWrapperICS$ActionProviderWrapper -> android.support.v7.internal.view.menu.MenuItemWrapperICS$ActionProviderWrapper:
    android.support.v4.view.ActionProvider mInner -> a
    android.support.v7.internal.view.menu.MenuItemWrapperICS this$0 -> b
    android.view.View onCreateActionView() -> onCreateActionView
    boolean onPerformDefaultAction() -> onPerformDefaultAction
    boolean hasSubMenu() -> hasSubMenu
    void onPrepareSubMenu(android.view.SubMenu) -> onPrepareSubMenu
android.support.v7.internal.view.menu.MenuItemWrapperICS$ActionProviderWrapper$1 -> android.support.v7.internal.view.menu.MenuItemWrapperICS$ActionProviderWrapper$1:
    android.support.v7.internal.view.menu.MenuItemWrapperICS val$this$0 -> a
    android.support.v7.internal.view.menu.MenuItemWrapperICS$ActionProviderWrapper this$1 -> b
    void onActionProviderVisibilityChanged(boolean) -> onActionProviderVisibilityChanged
android.support.v7.internal.view.menu.MenuItemWrapperICS$CollapsibleActionViewWrapper -> android.support.v7.internal.view.menu.MenuItemWrapperICS$CollapsibleActionViewWrapper:
    android.support.v7.view.CollapsibleActionView mWrappedView -> a
    void onActionViewExpanded() -> onActionViewExpanded
    void onActionViewCollapsed() -> onActionViewCollapsed
    android.view.View getWrappedView() -> a
android.support.v7.internal.view.menu.MenuItemWrapperICS$OnActionExpandListenerWrapper -> android.support.v7.internal.view.menu.MenuItemWrapperICS$OnActionExpandListenerWrapper:
    android.support.v7.internal.view.menu.MenuItemWrapperICS this$0 -> b
    boolean onMenuItemActionExpand(android.view.MenuItem) -> onMenuItemActionExpand
    boolean onMenuItemActionCollapse(android.view.MenuItem) -> onMenuItemActionCollapse
android.support.v7.internal.view.menu.MenuItemWrapperICS$OnMenuItemClickListenerWrapper -> android.support.v7.internal.view.menu.MenuItemWrapperICS$OnMenuItemClickListenerWrapper:
    android.support.v7.internal.view.menu.MenuItemWrapperICS this$0 -> b
    boolean onMenuItemClick(android.view.MenuItem) -> onMenuItemClick
android.support.v7.internal.view.menu.MenuItemWrapperJB -> android.support.v7.internal.view.menu.MenuItemWrapperJB:
    android.support.v7.internal.view.menu.MenuItemWrapperICS$ActionProviderWrapper createActionProviderWrapper(android.support.v4.view.ActionProvider) -> a
android.support.v7.internal.view.menu.MenuItemWrapperJB$ActionProviderWrapperJB -> android.support.v7.internal.view.menu.MenuItemWrapperJB$ActionProviderWrapperJB:
    android.view.ActionProvider$VisibilityListener mListener -> c
    android.support.v7.internal.view.menu.MenuItemWrapperJB this$0 -> d
    android.view.View onCreateActionView(android.view.MenuItem) -> onCreateActionView
    boolean overridesItemVisibility() -> overridesItemVisibility
    boolean isVisible() -> isVisible
    void refreshVisibility() -> refreshVisibility
    void setVisibilityListener(android.view.ActionProvider$VisibilityListener) -> setVisibilityListener
    void onActionProviderVisibilityChanged(boolean) -> onActionProviderVisibilityChanged
android.support.v7.internal.view.menu.MenuPopupHelper -> android.support.v7.internal.view.menu.MenuPopupHelper:
    int ITEM_LAYOUT -> b
    android.content.Context mContext -> a
    org.holoeverywhere.LayoutInflater mInflater -> d
    org.holoeverywhere.widget.ListPopupWindow mPopup -> e
    android.support.v7.internal.view.menu.MenuBuilder mMenu -> f
    int mPopupMaxWidth -> g
    android.view.View mAnchorView -> h
    boolean mOverflowOnly -> i
    android.view.ViewTreeObserver mTreeObserver -> j
    android.support.v7.internal.view.menu.MenuPopupHelper$MenuAdapter mAdapter -> k
    android.support.v7.internal.view.menu.MenuPresenter$Callback mPresenterCallback -> l
    boolean mForceShowIcon -> c
    android.view.ViewGroup mMeasureParent -> m
    void setAnchorView(android.view.View) -> a
    void setForceShowIcon(boolean) -> a
    void show() -> b
    boolean tryShow() -> c
    void dismiss() -> d
    void onDismiss() -> a_
    boolean isShowing() -> e
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
    boolean onKey(android.view.View,int,android.view.KeyEvent) -> onKey
    int measureContentWidth(android.widget.ListAdapter) -> a
    void onGlobalLayout() -> onGlobalLayout
    void initForMenu(android.content.Context,android.support.v7.internal.view.menu.MenuBuilder) -> a
    void updateMenuView(boolean) -> c
    void setCallback(android.support.v7.internal.view.menu.MenuPresenter$Callback) -> a
    boolean onSubMenuSelected(android.support.v7.internal.view.menu.SubMenuBuilder) -> a
    void onCloseMenu(android.support.v7.internal.view.menu.MenuBuilder,boolean) -> a
    boolean flagActionItems() -> g
    boolean expandItemActionView(android.support.v7.internal.view.menu.MenuBuilder,android.support.v7.internal.view.menu.MenuItemImpl) -> a
    boolean collapseItemActionView(android.support.v7.internal.view.menu.MenuBuilder,android.support.v7.internal.view.menu.MenuItemImpl) -> b
    boolean access$100(android.support.v7.internal.view.menu.MenuPopupHelper) -> a
    org.holoeverywhere.LayoutInflater access$200(android.support.v7.internal.view.menu.MenuPopupHelper) -> b
    android.support.v7.internal.view.menu.MenuBuilder access$300(android.support.v7.internal.view.menu.MenuPopupHelper) -> c
android.support.v7.internal.view.menu.MenuPopupHelper$MenuAdapter -> android.support.v7.internal.view.menu.MenuPopupHelper$MenuAdapter:
    android.support.v7.internal.view.menu.MenuBuilder mAdapterMenu -> b
    int mExpandedIndex -> c
    android.support.v7.internal.view.menu.MenuPopupHelper this$0 -> a
    int getCount() -> getCount
    android.support.v7.internal.view.menu.MenuItemImpl getItem(int) -> a
    long getItemId(int) -> getItemId
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    void findExpandedIndex() -> a
    void notifyDataSetChanged() -> notifyDataSetChanged
    java.lang.Object getItem(int) -> getItem
    android.support.v7.internal.view.menu.MenuBuilder access$000(android.support.v7.internal.view.menu.MenuPopupHelper$MenuAdapter) -> a
android.support.v7.internal.view.menu.MenuPresenter -> android.support.v7.internal.view.menu.MenuPresenter:
    void initForMenu(android.content.Context,android.support.v7.internal.view.menu.MenuBuilder) -> a
    void updateMenuView(boolean) -> c
    boolean onSubMenuSelected(android.support.v7.internal.view.menu.SubMenuBuilder) -> a
    void onCloseMenu(android.support.v7.internal.view.menu.MenuBuilder,boolean) -> a
    boolean flagActionItems() -> g
    boolean expandItemActionView(android.support.v7.internal.view.menu.MenuBuilder,android.support.v7.internal.view.menu.MenuItemImpl) -> a
    boolean collapseItemActionView(android.support.v7.internal.view.menu.MenuBuilder,android.support.v7.internal.view.menu.MenuItemImpl) -> b
android.support.v7.internal.view.menu.MenuPresenter$Callback -> android.support.v7.internal.view.menu.MenuPresenter$Callback:
    void onCloseMenu(android.support.v7.internal.view.menu.MenuBuilder,boolean) -> onCloseMenu
    boolean onOpenSubMenu(android.support.v7.internal.view.menu.MenuBuilder) -> onOpenSubMenu
android.support.v7.internal.view.menu.MenuView -> android.support.v7.internal.view.menu.MenuView:
    void initialize(android.support.v7.internal.view.menu.MenuBuilder) -> a
android.support.v7.internal.view.menu.MenuView$ItemView -> android.support.v7.internal.view.menu.MenuView$ItemView:
    void initialize(android.support.v7.internal.view.menu.MenuItemImpl,int) -> a
    android.support.v7.internal.view.menu.MenuItemImpl getItemData() -> getItemData
    boolean prefersCondensedTitle() -> a
android.support.v7.internal.view.menu.MenuWrapperFactory -> android.support.v7.internal.view.menu.MenuWrapperFactory:
    android.view.Menu createMenuWrapper(android.view.Menu) -> a
    android.view.MenuItem createMenuItemWrapper(android.view.MenuItem) -> a
    android.support.v4.internal.view.SupportSubMenu createSupportSubMenuWrapper(android.view.SubMenu) -> a
    android.support.v4.internal.view.SupportMenuItem createSupportMenuItemWrapper(android.view.MenuItem) -> b
    android.view.MenuItem unwrap(android.view.MenuItem) -> c
android.support.v7.internal.view.menu.MenuWrapperICS -> android.support.v7.internal.view.menu.MenuWrapperICS:
    android.view.MenuItem add(java.lang.CharSequence) -> add
    android.view.MenuItem add(int) -> add
    android.view.MenuItem add(int,int,int,java.lang.CharSequence) -> add
    android.view.MenuItem add(int,int,int,int) -> add
    android.view.SubMenu addSubMenu(java.lang.CharSequence) -> addSubMenu
    android.view.SubMenu addSubMenu(int) -> addSubMenu
    android.view.SubMenu addSubMenu(int,int,int,java.lang.CharSequence) -> addSubMenu
    android.view.SubMenu addSubMenu(int,int,int,int) -> addSubMenu
    int addIntentOptions(int,int,int,android.content.ComponentName,android.content.Intent[],android.content.Intent,int,android.view.MenuItem[]) -> addIntentOptions
    void removeItem(int) -> removeItem
    void removeGroup(int) -> removeGroup
    void clear() -> clear
    void setGroupCheckable(int,boolean,boolean) -> setGroupCheckable
    void setGroupVisible(int,boolean) -> setGroupVisible
    void setGroupEnabled(int,boolean) -> setGroupEnabled
    boolean hasVisibleItems() -> hasVisibleItems
    android.view.MenuItem findItem(int) -> findItem
    int size() -> size
    android.view.MenuItem getItem(int) -> getItem
    void close() -> close
    boolean performShortcut(int,android.view.KeyEvent,int) -> performShortcut
    boolean isShortcutKey(int,android.view.KeyEvent) -> isShortcutKey
    boolean performIdentifierAction(int,int) -> performIdentifierAction
    void setQwertyMode(boolean) -> setQwertyMode
android.support.v7.internal.view.menu.SubMenuBuilder -> android.support.v7.internal.view.menu.SubMenuBuilder:
    android.support.v7.internal.view.menu.MenuBuilder mParentMenu -> d
    android.support.v7.internal.view.menu.MenuItemImpl mItem -> e
    void setQwertyMode(boolean) -> setQwertyMode
    boolean isQwertyMode() -> c
    boolean isShortcutsVisible() -> d
    android.view.Menu getParentMenu() -> a
    android.view.MenuItem getItem() -> getItem
    void setCallback(android.support.v7.internal.view.menu.MenuBuilder$Callback) -> a
    android.support.v7.internal.view.menu.MenuBuilder getRootMenu() -> q
    boolean dispatchMenuItemSelected(android.support.v7.internal.view.menu.MenuBuilder,android.view.MenuItem) -> a
    android.view.SubMenu setIcon(android.graphics.drawable.Drawable) -> setIcon
    android.view.SubMenu setIcon(int) -> setIcon
    android.view.SubMenu setHeaderIcon(android.graphics.drawable.Drawable) -> setHeaderIcon
    android.view.SubMenu setHeaderIcon(int) -> setHeaderIcon
    android.view.SubMenu setHeaderTitle(java.lang.CharSequence) -> setHeaderTitle
    android.view.SubMenu setHeaderTitle(int) -> setHeaderTitle
    android.view.SubMenu setHeaderView(android.view.View) -> setHeaderView
    void clearHeader() -> clearHeader
    boolean expandItemActionView(android.support.v7.internal.view.menu.MenuItemImpl) -> c
    boolean collapseItemActionView(android.support.v7.internal.view.menu.MenuItemImpl) -> d
android.support.v7.internal.view.menu.SubMenuWrapperICS -> android.support.v7.internal.view.menu.SubMenuWrapperICS:
    android.view.SubMenu getWrappedObject() -> c
    android.view.SubMenu setHeaderTitle(int) -> setHeaderTitle
    android.view.SubMenu setHeaderTitle(java.lang.CharSequence) -> setHeaderTitle
    android.view.SubMenu setHeaderIcon(int) -> setHeaderIcon
    android.view.SubMenu setHeaderIcon(android.graphics.drawable.Drawable) -> setHeaderIcon
    android.view.SubMenu setHeaderView(android.view.View) -> setHeaderView
    void clearHeader() -> clearHeader
    android.view.SubMenu setIcon(int) -> setIcon
    android.view.SubMenu setIcon(android.graphics.drawable.Drawable) -> setIcon
    android.view.MenuItem getItem() -> getItem
    java.lang.Object getWrappedObject() -> b
android.support.v7.internal.widget.AbsActionBarView -> android.support.v7.internal.widget.AbsActionBarView:
    android.support.v7.internal.view.menu.ActionMenuView mMenuView -> a
    android.support.v7.internal.view.menu.ActionMenuPresenter mActionMenuPresenter -> b
    android.support.v7.internal.widget.ActionBarContainer mSplitView -> c
    boolean mSplitActionBar -> d
    boolean mSplitWhenNarrow -> e
    int mContentHeight -> f
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    void setSplitActionBar(boolean) -> setSplitActionBar
    void setSplitWhenNarrow(boolean) -> setSplitWhenNarrow
    void setContentHeight(int) -> setContentHeight
    int getContentHeight() -> getContentHeight
    void setSplitView(android.support.v7.internal.widget.ActionBarContainer) -> setSplitView
    int getAnimatedVisibility() -> getAnimatedVisibility
    void animateToVisibility(int) -> a
    void setVisibility(int) -> setVisibility
    boolean showOverflowMenu() -> a
    void postShowOverflowMenu() -> b
    boolean hideOverflowMenu() -> c
    boolean isOverflowMenuShowing() -> d
    boolean isOverflowReserved() -> e
    int measureChildView(android.view.View,int,int,int) -> a
    int positionChild(android.view.View,int,int,int) -> b
    int positionChildInverse(android.view.View,int,int,int) -> c
android.support.v7.internal.widget.AbsActionBarView$1 -> android.support.v7.internal.widget.AbsActionBarView$1:
    android.support.v7.internal.widget.AbsActionBarView this$0 -> a
    void run() -> run
android.support.v7.internal.widget.ActionBarContainer -> android.support.v7.internal.widget.ActionBarContainer:
    boolean mIsTransitioning -> a
    android.view.View mTabContainer -> b
    android.support.v7.internal.widget.ActionBarView mActionBarView -> c
    android.graphics.drawable.Drawable mBackground -> d
    android.graphics.drawable.Drawable mStackedBackground -> e
    android.graphics.drawable.Drawable mSplitBackground -> f
    boolean mIsSplit -> g
    boolean mIsStacked -> h
    void onFinishInflate() -> onFinishInflate
    void setPrimaryBackground(android.graphics.drawable.Drawable) -> setPrimaryBackground
    void setStackedBackground(android.graphics.drawable.Drawable) -> setStackedBackground
    void setSplitBackground(android.graphics.drawable.Drawable) -> setSplitBackground
    void setVisibility(int) -> setVisibility
    boolean verifyDrawable(android.graphics.drawable.Drawable) -> verifyDrawable
    void drawableStateChanged() -> drawableStateChanged
    void setTransitioning(boolean) -> setTransitioning
    boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    boolean onHoverEvent(android.view.MotionEvent) -> onHoverEvent
    void setTabContainer(android.support.v7.internal.widget.ScrollingTabContainerView) -> setTabContainer
    android.view.View getTabContainer() -> getTabContainer
    void onDraw(android.graphics.Canvas) -> onDraw
    void onMeasure(int,int) -> onMeasure
    void onLayout(boolean,int,int,int,int) -> onLayout
android.support.v7.internal.widget.ActionBarContextView -> android.support.v7.internal.widget.ActionBarContextView:
    java.lang.CharSequence mTitle -> g
    java.lang.CharSequence mSubtitle -> h
    android.view.View mClose -> i
    android.view.View mCustomView -> j
    org.holoeverywhere.widget.LinearLayout mTitleLayout -> k
    org.holoeverywhere.widget.TextView mTitleView -> l
    org.holoeverywhere.widget.TextView mSubtitleView -> m
    int mTitleStyleRes -> n
    int mSubtitleStyleRes -> o
    android.graphics.drawable.Drawable mSplitBackground -> p
    boolean mTitleOptional -> q
    void onDetachedFromWindow() -> onDetachedFromWindow
    void setSplitActionBar(boolean) -> setSplitActionBar
    void setContentHeight(int) -> setContentHeight
    void setCustomView(android.view.View) -> setCustomView
    void setTitle(java.lang.CharSequence) -> setTitle
    void setSubtitle(java.lang.CharSequence) -> setSubtitle
    java.lang.CharSequence getTitle() -> getTitle
    java.lang.CharSequence getSubtitle() -> getSubtitle
    void initTitle() -> h
    void initForMode(android.support.v7.view.ActionMode) -> a
    void closeMode() -> f
    void killMode() -> g
    boolean showOverflowMenu() -> a
    boolean hideOverflowMenu() -> c
    boolean isOverflowMenuShowing() -> d
    android.view.ViewGroup$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    void onMeasure(int,int) -> onMeasure
    void onLayout(boolean,int,int,int,int) -> onLayout
    void setTitleOptional(boolean) -> setTitleOptional
    boolean isOverflowReserved() -> e
    void postShowOverflowMenu() -> b
    void setVisibility(int) -> setVisibility
    void animateToVisibility(int) -> a
    int getAnimatedVisibility() -> getAnimatedVisibility
    void setSplitView(android.support.v7.internal.widget.ActionBarContainer) -> setSplitView
    int getContentHeight() -> getContentHeight
    void setSplitWhenNarrow(boolean) -> setSplitWhenNarrow
android.support.v7.internal.widget.ActionBarContextView$1 -> android.support.v7.internal.widget.ActionBarContextView$1:
    android.support.v7.view.ActionMode val$mode -> a
    android.support.v7.internal.widget.ActionBarContextView this$0 -> b
    void onClick(android.view.View) -> onClick
android.support.v7.internal.widget.ActionBarOverlayLayout -> android.support.v7.internal.widget.ActionBarOverlayLayout:
    int mActionBarHeight -> b
    android.support.v7.app.ActionBar mActionBar -> c
    android.graphics.Rect mZeroRect -> d
    int[] mActionBarSizeAttr -> a
    void init(android.content.Context) -> a
    void setActionBar(android.support.v7.app.ActionBar) -> setActionBar
android.support.v7.internal.widget.ActionBarView -> android.support.v7.internal.widget.ActionBarView:
    int mNavigationMode -> i
    int mDisplayOptions -> j
    java.lang.CharSequence mTitle -> k
    java.lang.CharSequence mSubtitle -> l
    android.graphics.drawable.Drawable mIcon -> m
    android.graphics.drawable.Drawable mLogo -> n
    android.content.Context mContext -> o
    android.support.v7.internal.widget.ActionBarView$HomeView mHomeLayout -> p
    android.support.v7.internal.widget.ActionBarView$HomeView mExpandedHomeLayout -> q
    org.holoeverywhere.widget.LinearLayout mTitleLayout -> r
    org.holoeverywhere.widget.TextView mTitleView -> s
    org.holoeverywhere.widget.TextView mSubtitleView -> t
    android.view.View mTitleUpView -> u
    org.holoeverywhere.widget.Spinner mSpinner -> v
    org.holoeverywhere.widget.LinearLayout mListNavLayout -> w
    android.support.v7.internal.widget.ScrollingTabContainerView mTabScrollView -> x
    android.view.View mCustomNavView -> y
    org.holoeverywhere.widget.ProgressBar mProgressView -> z
    org.holoeverywhere.widget.ProgressBar mIndeterminateProgressView -> A
    int mProgressBarPadding -> B
    int mItemPadding -> C
    int mTitleStyleRes -> D
    int mSubtitleStyleRes -> E
    int mProgressStyle -> F
    int mIndeterminateProgressStyle -> G
    boolean mUserTitle -> H
    boolean mIncludeTabs -> I
    boolean mIsCollapsable -> J
    boolean mIsCollapsed -> K
    android.support.v7.internal.view.menu.MenuBuilder mOptionsMenu -> L
    android.support.v7.internal.widget.ActionBarContextView mContextView -> M
    android.support.v7.internal.view.menu.ActionMenuItem mLogoNavItem -> N
    android.widget.SpinnerAdapter mSpinnerAdapter -> O
    android.support.v7.app.ActionBar$OnNavigationListener mCallback -> P
    java.lang.Runnable mTabSelector -> Q
    android.support.v7.internal.widget.ActionBarView$ExpandedActionViewMenuPresenter mExpandedMenuPresenter -> R
    android.view.View mExpandedActionView -> g
    android.view.Window$Callback mWindowCallback -> h
    org.holoeverywhere.widget.AdapterView$OnItemSelectedListener mNavItemSelectedListener -> S
    android.view.View$OnClickListener mExpandedActionViewUpListener -> T
    android.view.View$OnClickListener mUpClickListener -> U
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    void setWindowCallback(android.view.Window$Callback) -> setWindowCallback
    void onDetachedFromWindow() -> onDetachedFromWindow
    boolean shouldDelayChildPressedState() -> shouldDelayChildPressedState
    void initProgress() -> f
    void initIndeterminateProgress() -> g
    void setSplitActionBar(boolean) -> setSplitActionBar
    boolean isSplitActionBar() -> h
    boolean hasEmbeddedTabs() -> i
    void setEmbeddedTabView(android.support.v7.internal.widget.ScrollingTabContainerView) -> setEmbeddedTabView
    void setCallback(android.support.v7.app.ActionBar$OnNavigationListener) -> setCallback
    void setMenu(android.support.v4.internal.view.SupportMenu,android.support.v7.internal.view.menu.MenuPresenter$Callback) -> a
    void configPresenters(android.support.v7.internal.view.menu.MenuBuilder) -> a
    boolean hasExpandedActionView() -> j
    void collapseActionView() -> k
    void setCustomNavigationView(android.view.View) -> setCustomNavigationView
    java.lang.CharSequence getTitle() -> getTitle
    void setTitle(java.lang.CharSequence) -> setTitle
    void setWindowTitle(java.lang.CharSequence) -> setWindowTitle
    void setTitleImpl(java.lang.CharSequence) -> setTitleImpl
    java.lang.CharSequence getSubtitle() -> getSubtitle
    void setSubtitle(java.lang.CharSequence) -> setSubtitle
    void setHomeButtonEnabled(boolean) -> setHomeButtonEnabled
    void setDisplayOptions(int) -> setDisplayOptions
    void setIcon(android.graphics.drawable.Drawable) -> setIcon
    void setIcon(int) -> setIcon
    void setLogo(android.graphics.drawable.Drawable) -> setLogo
    void setLogo(int) -> setLogo
    void setNavigationMode(int) -> setNavigationMode
    void setDropdownAdapter(android.widget.SpinnerAdapter) -> setDropdownAdapter
    android.widget.SpinnerAdapter getDropdownAdapter() -> getDropdownAdapter
    void setDropdownSelectedPosition(int) -> setDropdownSelectedPosition
    int getDropdownSelectedPosition() -> getDropdownSelectedPosition
    android.view.View getCustomNavigationView() -> getCustomNavigationView
    int getNavigationMode() -> getNavigationMode
    int getDisplayOptions() -> getDisplayOptions
    android.view.ViewGroup$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    void onFinishInflate() -> onFinishInflate
    void initTitle() -> m
    void setContextView(android.support.v7.internal.widget.ActionBarContextView) -> setContextView
    void setCollapsable(boolean) -> setCollapsable
    boolean isCollapsed() -> l
    void onMeasure(int,int) -> onMeasure
    void onLayout(boolean,int,int,int,int) -> onLayout
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    void setHomeAsUpIndicator(android.graphics.drawable.Drawable) -> setHomeAsUpIndicator
    void setHomeAsUpIndicator(int) -> setHomeAsUpIndicator
    boolean isOverflowReserved() -> e
    boolean isOverflowMenuShowing() -> d
    boolean hideOverflowMenu() -> c
    void postShowOverflowMenu() -> b
    boolean showOverflowMenu() -> a
    void setVisibility(int) -> setVisibility
    void animateToVisibility(int) -> a
    int getAnimatedVisibility() -> getAnimatedVisibility
    void setSplitView(android.support.v7.internal.widget.ActionBarContainer) -> setSplitView
    int getContentHeight() -> getContentHeight
    void setContentHeight(int) -> setContentHeight
    void setSplitWhenNarrow(boolean) -> setSplitWhenNarrow
    android.support.v7.app.ActionBar$OnNavigationListener access$000(android.support.v7.internal.widget.ActionBarView) -> a
    android.support.v7.internal.widget.ActionBarView$ExpandedActionViewMenuPresenter access$100(android.support.v7.internal.widget.ActionBarView) -> b
    android.support.v7.internal.view.menu.ActionMenuItem access$200(android.support.v7.internal.widget.ActionBarView) -> c
    android.graphics.drawable.Drawable access$500(android.support.v7.internal.widget.ActionBarView) -> d
    android.support.v7.internal.widget.ActionBarView$HomeView access$600(android.support.v7.internal.widget.ActionBarView) -> e
    android.support.v7.internal.widget.ActionBarView$HomeView access$700(android.support.v7.internal.widget.ActionBarView) -> f
    org.holoeverywhere.widget.LinearLayout access$800(android.support.v7.internal.widget.ActionBarView) -> g
    android.support.v7.internal.widget.ScrollingTabContainerView access$900(android.support.v7.internal.widget.ActionBarView) -> h
    org.holoeverywhere.widget.Spinner access$1000(android.support.v7.internal.widget.ActionBarView) -> i
    android.view.View access$1100(android.support.v7.internal.widget.ActionBarView) -> j
    int access$1200(android.support.v7.internal.widget.ActionBarView) -> k
    void access$1300(android.support.v7.internal.widget.ActionBarView) -> l
    int access$1400(android.support.v7.internal.widget.ActionBarView) -> m
android.support.v7.internal.widget.ActionBarView$1 -> android.support.v7.internal.widget.ActionBarView$1:
    android.support.v7.internal.widget.ActionBarView this$0 -> a
    void onItemSelected(org.holoeverywhere.widget.AdapterView,android.view.View,int,long) -> a
    void onNothingSelected(org.holoeverywhere.widget.AdapterView) -> a
android.support.v7.internal.widget.ActionBarView$2 -> android.support.v7.internal.widget.ActionBarView$2:
    android.support.v7.internal.widget.ActionBarView this$0 -> a
    void onClick(android.view.View) -> onClick
android.support.v7.internal.widget.ActionBarView$3 -> android.support.v7.internal.widget.ActionBarView$3:
    android.support.v7.internal.widget.ActionBarView this$0 -> a
    void onClick(android.view.View) -> onClick
android.support.v7.internal.widget.ActionBarView$ExpandedActionViewMenuPresenter -> android.support.v7.internal.widget.ActionBarView$ExpandedActionViewMenuPresenter:
    android.support.v7.internal.view.menu.MenuBuilder mMenu -> a
    android.support.v7.internal.view.menu.MenuItemImpl mCurrentExpandedItem -> b
    android.support.v7.internal.widget.ActionBarView this$0 -> c
    void initForMenu(android.content.Context,android.support.v7.internal.view.menu.MenuBuilder) -> a
    void updateMenuView(boolean) -> c
    boolean onSubMenuSelected(android.support.v7.internal.view.menu.SubMenuBuilder) -> a
    void onCloseMenu(android.support.v7.internal.view.menu.MenuBuilder,boolean) -> a
    boolean flagActionItems() -> g
    boolean expandItemActionView(android.support.v7.internal.view.menu.MenuBuilder,android.support.v7.internal.view.menu.MenuItemImpl) -> a
    boolean collapseItemActionView(android.support.v7.internal.view.menu.MenuBuilder,android.support.v7.internal.view.menu.MenuItemImpl) -> b
android.support.v7.internal.widget.ActionBarView$HomeView -> android.support.v7.internal.widget.ActionBarView$HomeView:
    android.widget.ImageView mUpView -> a
    android.widget.ImageView mIconView -> b
    int mUpWidth -> c
    int mUpIndicatorRes -> d
    android.graphics.drawable.Drawable mDefaultUpIndicator -> e
    void setUp(boolean) -> a
    void setIcon(android.graphics.drawable.Drawable) -> a
    void setUpIndicator(android.graphics.drawable.Drawable) -> b
    void setUpIndicator(int) -> a
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    boolean dispatchPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    void onFinishInflate() -> onFinishInflate
    int getLeftOffset() -> a
    void onMeasure(int,int) -> onMeasure
    void onLayout(boolean,int,int,int,int) -> onLayout
android.support.v7.internal.widget.ActionBarView$SavedState -> android.support.v7.internal.widget.ActionBarView$SavedState:
    int expandedMenuItemId -> a
    boolean isOverflowOpen -> b
    android.os.Parcelable$Creator CREATOR -> CREATOR
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v7.internal.widget.ActionBarView$SavedState$1 -> android.support.v7.internal.widget.ActionBarView$SavedState$1:
    android.support.v7.internal.widget.ActionBarView$SavedState createFromParcel(android.os.Parcel) -> a
    android.support.v7.internal.widget.ActionBarView$SavedState[] newArray(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v7.internal.widget.NativeActionModeAwareLayout -> android.support.v7.internal.widget.NativeActionModeAwareLayout:
    android.support.v7.internal.widget.NativeActionModeAwareLayout$OnActionModeForChildListener mActionModeForChildListener -> a
    void setActionModeForChildListener(android.support.v7.internal.widget.NativeActionModeAwareLayout$OnActionModeForChildListener) -> setActionModeForChildListener
    android.view.ActionMode startActionModeForChild(android.view.View,android.view.ActionMode$Callback) -> startActionModeForChild
android.support.v7.internal.widget.NativeActionModeAwareLayout$OnActionModeForChildListener -> android.support.v7.internal.widget.NativeActionModeAwareLayout$OnActionModeForChildListener:
    android.view.ActionMode$Callback onActionModeForChild(android.view.ActionMode$Callback) -> a
android.support.v7.internal.widget.ScrollingTabContainerView -> android.support.v7.internal.widget.ScrollingTabContainerView:
    java.lang.Runnable mTabSelector -> a
    android.support.v7.internal.widget.ScrollingTabContainerView$TabClickListener mTabClickListener -> d
    org.holoeverywhere.widget.LinearLayout mTabLayout -> e
    org.holoeverywhere.widget.Spinner mTabSpinner -> f
    boolean mAllowCollapse -> g
    org.holoeverywhere.LayoutInflater mInflater -> h
    int mMaxTabWidth -> b
    int mStackedTabMaxWidth -> c
    int mContentHeight -> i
    int mSelectedTabIndex -> j
    void onMeasure(int,int) -> onMeasure
    boolean isCollapsed() -> a
    void setAllowCollapse(boolean) -> setAllowCollapse
    void performCollapse() -> b
    boolean performExpand() -> c
    void setTabSelected(int) -> setTabSelected
    void setContentHeight(int) -> setContentHeight
    org.holoeverywhere.widget.Spinner createSpinner() -> d
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    void animateToTab(int) -> a
    void onAttachedToWindow() -> onAttachedToWindow
    void onDetachedFromWindow() -> onDetachedFromWindow
    android.support.v7.internal.widget.ScrollingTabContainerView$TabView createTabView(android.support.v7.app.ActionBar$Tab,boolean) -> a
    void onItemClick(org.holoeverywhere.widget.AdapterView,android.view.View,int,long) -> a
    org.holoeverywhere.widget.LinearLayout access$200(android.support.v7.internal.widget.ScrollingTabContainerView) -> a
    android.support.v7.internal.widget.ScrollingTabContainerView$TabView access$300(android.support.v7.internal.widget.ScrollingTabContainerView,android.support.v7.app.ActionBar$Tab,boolean) -> a
android.support.v7.internal.widget.ScrollingTabContainerView$1 -> android.support.v7.internal.widget.ScrollingTabContainerView$1:
    android.view.View val$tabView -> a
    android.support.v7.internal.widget.ScrollingTabContainerView this$0 -> b
    void run() -> run
android.support.v7.internal.widget.ScrollingTabContainerView$TabAdapter -> android.support.v7.internal.widget.ScrollingTabContainerView$TabAdapter:
    android.support.v7.internal.widget.ScrollingTabContainerView this$0 -> a
    int getCount() -> getCount
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
android.support.v7.internal.widget.ScrollingTabContainerView$TabClickListener -> android.support.v7.internal.widget.ScrollingTabContainerView$TabClickListener:
    android.support.v7.internal.widget.ScrollingTabContainerView this$0 -> a
    void onClick(android.view.View) -> onClick
android.support.v7.internal.widget.ScrollingTabContainerView$TabView -> android.support.v7.internal.widget.ScrollingTabContainerView$TabView:
    android.support.v7.app.ActionBar$Tab mTab -> a
    org.holoeverywhere.widget.TextView mTextView -> b
    android.widget.ImageView mIconView -> c
    android.view.View mCustomView -> d
    android.support.v7.internal.widget.ScrollingTabContainerView mParent -> e
    void attach(android.support.v7.internal.widget.ScrollingTabContainerView,android.support.v7.app.ActionBar$Tab,boolean) -> a
    void bindTab(android.support.v7.app.ActionBar$Tab) -> a
    void onMeasure(int,int) -> onMeasure
    void update() -> a
    android.support.v7.app.ActionBar$Tab getTab() -> getTab
android.support.v7.view.ActionMode -> android.support.v7.view.ActionMode:
    void finish() -> b
    android.view.Menu getMenu() -> a
android.support.v7.view.ActionMode$Callback -> android.support.v7.view.ActionMode$Callback:
    boolean onCreateActionMode(android.support.v7.view.ActionMode,android.view.Menu) -> a
    boolean onPrepareActionMode(android.support.v7.view.ActionMode,android.view.Menu) -> b
    boolean onActionItemClicked(android.support.v7.view.ActionMode,android.view.MenuItem) -> a
    void onDestroyActionMode(android.support.v7.view.ActionMode) -> a
android.support.v7.view.CollapsibleActionView -> android.support.v7.view.CollapsibleActionView:
    void onActionViewExpanded() -> a
    void onActionViewCollapsed() -> b
android.support.v7.widget.PopupMenu -> android.support.v7.widget.PopupMenu:
    android.content.Context mContext -> a
    android.support.v7.internal.view.menu.MenuBuilder mMenu -> b
    android.view.View mAnchor -> c
    android.support.v7.internal.view.menu.MenuPopupHelper mPopup -> d
    android.support.v7.widget.PopupMenu$OnMenuItemClickListener mMenuItemClickListener -> e
    android.support.v7.widget.PopupMenu$OnDismissListener mDismissListener -> f
    android.view.Menu getMenu() -> a
    android.view.MenuInflater getMenuInflater() -> b
    void show() -> c
    void setOnMenuItemClickListener(android.support.v7.widget.PopupMenu$OnMenuItemClickListener) -> a
    boolean onMenuItemSelected(android.support.v7.internal.view.menu.MenuBuilder,android.view.MenuItem) -> onMenuItemSelected
    void onCloseMenu(android.support.v7.internal.view.menu.MenuBuilder,boolean) -> onCloseMenu
    boolean onOpenSubMenu(android.support.v7.internal.view.menu.MenuBuilder) -> onOpenSubMenu
    void onMenuModeChange(android.support.v7.internal.view.menu.MenuBuilder) -> onMenuModeChange
android.support.v7.widget.PopupMenu$OnDismissListener -> android.support.v7.widget.PopupMenu$OnDismissListener:
    void onDismiss(android.support.v7.widget.PopupMenu) -> a
android.support.v7.widget.PopupMenu$OnMenuItemClickListener -> android.support.v7.widget.PopupMenu$OnMenuItemClickListener:
    boolean onMenuItemClick(android.view.MenuItem) -> a
android.support.v7.widget.SearchView -> android.support.v7.widget.SearchView:
    android.support.v7.widget.SearchView$OnQueryTextListener mOnQueryChangeListener -> b
    android.support.v7.widget.SearchView$OnCloseListener mOnCloseListener -> c
    android.view.View$OnFocusChangeListener mOnQueryTextFocusChangeListener -> d
    android.support.v7.widget.SearchView$OnSuggestionListener mOnSuggestionListener -> e
    android.view.View$OnClickListener mOnSearchClickListener -> f
    boolean mIconifiedByDefault -> g
    boolean mIconified -> h
    android.support.v4.widget.CursorAdapter mSuggestionsAdapter -> i
    android.view.View mSearchButton -> j
    android.view.View mSubmitButton -> k
    android.view.View mSubmitArea -> l
    android.widget.ImageView mCloseButton -> m
    android.view.View mSearchEditFrame -> n
    android.view.View mVoiceButton -> o
    android.support.v7.widget.SearchView$SearchAutoComplete mQueryTextView -> p
    android.widget.ImageView mSearchHintIcon -> q
    boolean mSubmitButtonEnabled -> r
    java.lang.CharSequence mQueryHint -> s
    boolean mQueryRefinement -> t
    boolean mClearingFocus -> u
    int mMaxWidth -> v
    boolean mVoiceButtonEnabled -> w
    boolean mExpandedInActionView -> x
    int mCollapsedImeOptions -> y
    android.app.SearchableInfo mSearchable -> z
    android.os.Bundle mAppSearchData -> A
    android.support.v7.widget.SearchView$AutoCompleteTextViewReflector HIDDEN_METHOD_INVOKER -> a
    java.lang.Runnable mShowImeRunnable -> B
    java.lang.Runnable mUpdateDrawableStateRunnable -> C
    java.lang.Runnable mReleaseCursorRunnable -> D
    android.content.Intent mVoiceWebSearchIntent -> E
    android.content.Intent mVoiceAppSearchIntent -> F
    java.util.WeakHashMap mOutsideDrawablesCache -> G
    void setSearchableInfo(android.app.SearchableInfo) -> setSearchableInfo
    void setAppSearchData(android.os.Bundle) -> setAppSearchData
    void setImeOptions(int) -> setImeOptions
    int getImeOptions() -> getImeOptions
    void setInputType(int) -> setInputType
    int getInputType() -> getInputType
    boolean requestFocus(int,android.graphics.Rect) -> requestFocus
    void clearFocus() -> clearFocus
    void setOnQueryTextListener(android.support.v7.widget.SearchView$OnQueryTextListener) -> setOnQueryTextListener
    void setOnCloseListener(android.support.v7.widget.SearchView$OnCloseListener) -> setOnCloseListener
    void setOnQueryTextFocusChangeListener(android.view.View$OnFocusChangeListener) -> setOnQueryTextFocusChangeListener
    void setOnSuggestionListener(android.support.v7.widget.SearchView$OnSuggestionListener) -> setOnSuggestionListener
    void setOnSearchClickListener(android.view.View$OnClickListener) -> setOnSearchClickListener
    java.lang.CharSequence getQuery() -> getQuery
    void setQueryHint(java.lang.CharSequence) -> setQueryHint
    java.lang.CharSequence getQueryHint() -> getQueryHint
    void setIconifiedByDefault(boolean) -> setIconifiedByDefault
    void setIconified(boolean) -> setIconified
    boolean isIconified() -> c
    void setSubmitButtonEnabled(boolean) -> setSubmitButtonEnabled
    void setQueryRefinementEnabled(boolean) -> setQueryRefinementEnabled
    void setSuggestionsAdapter(android.support.v4.widget.CursorAdapter) -> setSuggestionsAdapter
    android.support.v4.widget.CursorAdapter getSuggestionsAdapter() -> getSuggestionsAdapter
    void setMaxWidth(int) -> setMaxWidth
    int getMaxWidth() -> getMaxWidth
    void onMeasure(int,int) -> onMeasure
    int getPreferredWidth() -> getPreferredWidth
    void updateViewsVisibility(boolean) -> a
    boolean hasVoiceSearch() -> h
    boolean isSubmitAreaEnabled() -> i
    void updateSubmitButton(boolean) -> b
    void updateSubmitArea() -> j
    void updateCloseButton() -> k
    void postUpdateFocusedState() -> l
    void onDetachedFromWindow() -> onDetachedFromWindow
    void setImeVisibility(boolean) -> setImeVisibility
    void onQueryRefine(java.lang.CharSequence) -> a
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    int getSearchIconId() -> getSearchIconId
    java.lang.CharSequence getDecoratedHint(java.lang.CharSequence) -> b
    void updateQueryHint() -> m
    void updateSearchAutoComplete() -> n
    void updateVoiceButton(boolean) -> c
    void onCloseClicked() -> o
    void onSearchClicked() -> p
    void onTextFocusChanged() -> d
    void onWindowFocusChanged(boolean) -> onWindowFocusChanged
    void onActionViewCollapsed() -> b
    void onActionViewExpanded() -> a
    void setQuery(java.lang.CharSequence) -> setQuery
    void forceSuggestionQuery() -> q
    boolean isLandscapeMode(android.content.Context) -> a
    void access$2100(android.support.v7.widget.SearchView,boolean) -> a
android.support.v7.widget.SearchView$AutoCompleteTextViewReflector -> android.support.v7.widget.SearchView$AutoCompleteTextViewReflector:
    java.lang.reflect.Method doBeforeTextChanged -> a
    java.lang.reflect.Method doAfterTextChanged -> b
    java.lang.reflect.Method ensureImeVisible -> c
    java.lang.reflect.Method showSoftInputUnchecked -> d
    void doBeforeTextChanged(org.holoeverywhere.widget.AutoCompleteTextView) -> a
    void doAfterTextChanged(org.holoeverywhere.widget.AutoCompleteTextView) -> b
    void ensureImeVisible(org.holoeverywhere.widget.AutoCompleteTextView,boolean) -> a
android.support.v7.widget.SearchView$OnCloseListener -> android.support.v7.widget.SearchView$OnCloseListener:
    boolean onClose() -> a
android.support.v7.widget.SearchView$OnQueryTextListener -> android.support.v7.widget.SearchView$OnQueryTextListener:
android.support.v7.widget.SearchView$OnSuggestionListener -> android.support.v7.widget.SearchView$OnSuggestionListener:
android.support.v7.widget.SearchView$SearchAutoComplete -> android.support.v7.widget.SearchView$SearchAutoComplete:
    int mThreshold -> a
    android.support.v7.widget.SearchView mSearchView -> b
    void setSearchView(android.support.v7.widget.SearchView) -> setSearchView
    void setThreshold(int) -> setThreshold
    void replaceText(java.lang.CharSequence) -> a
    void performCompletion() -> a
    void onWindowFocusChanged(boolean) -> onWindowFocusChanged
    void onFocusChanged(boolean,int,android.graphics.Rect) -> onFocusChanged
    boolean enoughToFilter() -> b
    boolean onKeyPreIme(int,android.view.KeyEvent) -> onKeyPreIme
android.support.v7.widget.SuggestionsAdapter -> android.support.v7.widget.SuggestionsAdapter:
    android.app.SearchManager mSearchManager -> a
    android.support.v7.widget.SearchView mSearchView -> b
    android.app.SearchableInfo mSearchable -> c
    android.content.Context mProviderContext -> d
    java.util.WeakHashMap mOutsideDrawablesCache -> e
    boolean mClosed -> f
    int mQueryRefinement -> g
    android.content.res.ColorStateList mUrlColor -> h
    int mText1Col -> i
    int mText2Col -> j
    int mText2UrlCol -> k
    int mIconName1Col -> l
    int mIconName2Col -> m
    int mFlagsCol -> n
    void setQueryRefinement(int) -> a
    boolean hasStableIds() -> hasStableIds
    android.database.Cursor runQueryOnBackgroundThread(java.lang.CharSequence) -> runQueryOnBackgroundThread
    void notifyDataSetChanged() -> notifyDataSetChanged
    void notifyDataSetInvalidated() -> notifyDataSetInvalidated
    void updateSpinnerState(android.database.Cursor) -> a
    void changeCursor(android.database.Cursor) -> changeCursor
    android.view.View newView(android.content.Context,android.database.Cursor,android.view.ViewGroup) -> newView
    void bindView(android.view.View,android.content.Context,android.database.Cursor) -> bindView
    void onClick(android.view.View) -> onClick
    java.lang.CharSequence formatUrl(java.lang.CharSequence) -> a
    void setViewText(org.holoeverywhere.widget.TextView,java.lang.CharSequence) -> a
    android.graphics.drawable.Drawable getIcon1(android.database.Cursor) -> b
    android.graphics.drawable.Drawable getIcon2(android.database.Cursor) -> c
    void setViewDrawable(android.widget.ImageView,android.graphics.drawable.Drawable,int) -> a
    java.lang.CharSequence convertToString(android.database.Cursor) -> convertToString
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    android.graphics.drawable.Drawable getDrawableFromResourceValue(java.lang.String) -> a
    android.graphics.drawable.Drawable getDrawable(android.net.Uri) -> b
    android.graphics.drawable.Drawable checkIconCache(java.lang.String) -> b
    void storeInIconCache(java.lang.String,android.graphics.drawable.Drawable) -> a
    android.graphics.drawable.Drawable getDefaultIcon1(android.database.Cursor) -> d
    android.graphics.drawable.Drawable getActivityIconWithCache(android.content.ComponentName) -> a
    android.graphics.drawable.Drawable getActivityIcon(android.content.ComponentName) -> b
    java.lang.String getColumnString(android.database.Cursor,java.lang.String) -> a
    java.lang.String getStringOrNull(android.database.Cursor,int) -> a
    android.graphics.drawable.Drawable getDrawableFromResourceUri(android.net.Uri) -> a
    android.database.Cursor getSearchManagerSuggestions(android.app.SearchableInfo,java.lang.String,int) -> a
android.support.v7.widget.SuggestionsAdapter$ChildViewCache -> android.support.v7.widget.SuggestionsAdapter$ChildViewCache:
    org.holoeverywhere.widget.TextView mText1 -> a
    org.holoeverywhere.widget.TextView mText2 -> b
    android.widget.ImageView mIcon1 -> c
    android.widget.ImageView mIcon2 -> d
    android.widget.ImageView mIconRefine -> e
butterknife.Views -> butterknife.Views:
    boolean debug -> d
    java.util.Map INJECTORS -> a
    java.util.Map RESETTERS -> b
    java.lang.reflect.Method NO_OP -> c
    void inject(android.app.Activity) -> a
    void inject(java.lang.Object,java.lang.Object,butterknife.Views$Finder) -> a
    java.lang.reflect.Method findInjectorForClass(java.lang.Class) -> a
butterknife.Views$1 -> butterknife.Views$1:
butterknife.Views$Finder -> butterknife.Views$Finder:
    butterknife.Views$Finder VIEW -> a
    butterknife.Views$Finder ACTIVITY -> b
    butterknife.Views$Finder[] $VALUES -> c
    butterknife.Views$Finder[] values() -> values
    butterknife.Views$Finder valueOf(java.lang.String) -> valueOf
    android.view.View findById(java.lang.Object,int) -> a
butterknife.Views$Finder$1 -> butterknife.Views$Finder$1:
    android.view.View findById(java.lang.Object,int) -> a
butterknife.Views$Finder$2 -> butterknife.Views$Finder$2:
    android.view.View findById(java.lang.Object,int) -> a
butterknife.Views$UnableToInjectException -> butterknife.Views$UnableToInjectException:
com.bluetoothtool.BluetoothHandler -> com.bluetoothtool.BluetoothHandler:
    java.lang.String TAG -> a
    android.app.Activity activity -> b
    boolean DEBUG -> c
    void handleMessage(android.os.Message) -> handleMessage
    void onBeginPreparing(android.os.Message) -> a
    void onFoundDevice(android.os.Message) -> b
    void onChooseDevice(android.os.Message) -> c
    void onResetBluetooth(android.os.Message) -> d
    void onKillBluetooth(android.os.Message) -> e
    void onPrepared(android.os.Message) -> f
    void onPrepError(android.os.Message) -> g
    void onBeforeTalkSend(android.os.Message) -> h
    void onAfterTalkSend(android.os.Message) -> i
    void onTalkReceive(android.os.Message) -> j
    void onTalkError(android.os.Message) -> k
    void onHandlerChanged(android.os.Message) -> l
    void onMultiTalkBegin(android.os.Message) -> m
    void onMultiTalkEnd(android.os.Message) -> n
    void onDiscoveryFinished(android.os.Message) -> o
com.bluetoothtool.BluetoothTalk -> com.bluetoothtool.BluetoothTalk:
    byte[] sendBuffer -> a
    byte[] receivedBuffer -> b
    void beforeSend() -> a
    void afterSend() -> b
    void afterReceive() -> c
    java.lang.Object onParse() -> d
    byte[] getSendBuffer() -> e
    void setSendBuffer(byte[]) -> a
    byte[] getReceivedBuffer() -> f
    void setReceivedBuffer(byte[]) -> b
com.bluetoothtool.BluetoothTool -> com.bluetoothtool.BluetoothTool:
    java.lang.String TAG -> c
    int[] arrPorts -> d
    com.bluetoothtool.BluetoothHandler handler -> e
    com.bluetoothtool.BluetoothHandler searchHandler -> f
    android.app.Activity activity -> g
    android.bluetooth.BluetoothAdapter mAdapter -> h
    android.content.BroadcastReceiver broadcastReceiver -> i
    java.util.concurrent.ExecutorService pool -> j
    java.util.List foundedBluetoothDevice -> k
    boolean prepared -> l
    boolean discoveryMode -> m
    boolean abortTalking -> n
    com.bluetoothtool.ConnectListener judgement -> o
    com.bluetoothtool.BluetoothTalk[] communications -> p
    android.bluetooth.BluetoothSocket bluetoothSocket -> a
    com.bluetoothtool.BluetoothTool instance -> q
    android.bluetooth.BluetoothDevice connectedDevice -> b
    java.io.InputStream bluetoothInputStream -> r
    com.bluetoothtool.BluetoothTool getInstance(android.app.Activity) -> a
    void kill() -> a
    void reset(boolean) -> a
    void socketClose() -> e
    void talk(com.bluetoothtool.BluetoothTalk) -> a
    void pairDevice(android.bluetooth.BluetoothDevice) -> a
    void prepare() -> b
    void restartSearch() -> f
    void startDiscovery() -> g
    void stopDiscovery() -> h
    boolean isWantedDevice(android.bluetooth.BluetoothDevice) -> b
    boolean buildConnection(android.bluetooth.BluetoothDevice) -> c
    android.content.BroadcastReceiver getPrepareReceiver() -> i
    android.content.IntentFilter getPrepareFilter() -> j
    void run() -> run
    boolean isPrepared() -> c
    com.bluetoothtool.BluetoothTool setPrepared(boolean) -> b
    com.bluetoothtool.BluetoothTool setConnectDevice(com.bluetoothtool.ConnectListener) -> a
    com.bluetoothtool.BluetoothTool setDiscoveryMode(boolean) -> c
    com.bluetoothtool.BluetoothTool setHandler(com.bluetoothtool.BluetoothHandler) -> a
    com.bluetoothtool.BluetoothTool setSearchHandler(com.bluetoothtool.BluetoothHandler) -> b
    com.bluetoothtool.BluetoothTool setCommunications(com.bluetoothtool.BluetoothTalk[]) -> a
    com.bluetoothtool.BluetoothTool HInterrupt() -> k
    com.bluetoothtool.BluetoothTool Start() -> d
    boolean access$000(com.bluetoothtool.BluetoothTool) -> a
    java.util.List access$100(com.bluetoothtool.BluetoothTool) -> b
    java.util.List access$102(com.bluetoothtool.BluetoothTool,java.util.List) -> a
    com.bluetoothtool.BluetoothHandler access$200(com.bluetoothtool.BluetoothTool) -> c
    void access$300(com.bluetoothtool.BluetoothTool) -> d
    boolean access$400(com.bluetoothtool.BluetoothTool,android.bluetooth.BluetoothDevice) -> a
    boolean access$502(com.bluetoothtool.BluetoothTool,boolean) -> a
com.bluetoothtool.BluetoothTool$1 -> com.bluetoothtool.BluetoothTool$1:
    com.bluetoothtool.BluetoothTool this$0 -> a
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.bluetoothtool.ConnectListener -> com.bluetoothtool.ConnectListener:
    boolean connect(android.bluetooth.BluetoothDevice) -> a
com.bluetoothtool.DevicesHolder -> com.bluetoothtool.DevicesHolder:
    java.util.List devices -> a
    java.util.List getDevices() -> a
    void setDevices(java.util.List) -> a
com.bluetoothtool.SerialUtility -> com.bluetoothtool.SerialUtility:
    java.lang.String byte2HexStr(byte[]) -> a
    java.lang.String int2HexStr(int[]) -> a
    int[] hexStr2Ints(java.lang.String) -> a
    byte[] crc16(int[]) -> b
    boolean isCRC16Valid(byte[]) -> b
    int getCRCCheckValue(byte[],int) -> a
    byte[] trimEnd(byte[]) -> c
    boolean[] byte2BoolArr(byte,byte) -> a
    boolean[] byteArray2BitArray(byte[]) -> d
com.inovance.ElevatorControl.ElevatorControlApplication -> com.inovance.ElevatorControl.ElevatorControlApplication:
    void onCreate() -> onCreate
    void writeDefaultShortcutData() -> b
com.inovance.ElevatorControl.R -> com.inovance.ElevatorControl.R:
com.inovance.ElevatorControl.R$styleable -> com.inovance.ElevatorControl.R$styleable:
    int[] AbsListView -> AbsListView
    int AbsListView_android_choiceMode -> AbsListView_android_choiceMode
    int AbsListView_android_fastScrollAlwaysVisible -> AbsListView_android_fastScrollAlwaysVisible
    int AbsListView_android_fastScrollEnabled -> AbsListView_android_fastScrollEnabled
    int[] AbsSpinner -> AbsSpinner
    int AbsSpinner_android_entries -> AbsSpinner_android_entries
    int[] ActionBar -> ActionBar
    int ActionBar_background -> ActionBar_background
    int ActionBar_backgroundSplit -> ActionBar_backgroundSplit
    int ActionBar_backgroundStacked -> ActionBar_backgroundStacked
    int ActionBar_customNavigationLayout -> ActionBar_customNavigationLayout
    int ActionBar_displayOptions -> ActionBar_displayOptions
    int ActionBar_height -> ActionBar_height
    int ActionBar_homeLayout -> ActionBar_homeLayout
    int ActionBar_icon -> ActionBar_icon
    int ActionBar_indeterminateProgressStyle -> ActionBar_indeterminateProgressStyle
    int ActionBar_itemPadding -> ActionBar_itemPadding
    int ActionBar_logo -> ActionBar_logo
    int ActionBar_navigationMode -> ActionBar_navigationMode
    int ActionBar_progressBarPadding -> ActionBar_progressBarPadding
    int ActionBar_progressBarStyle -> ActionBar_progressBarStyle
    int ActionBar_subtitle -> ActionBar_subtitle
    int ActionBar_subtitleTextStyle -> ActionBar_subtitleTextStyle
    int ActionBar_title -> ActionBar_title
    int ActionBar_titleTextStyle -> ActionBar_titleTextStyle
    int[] ActionBarLayout -> ActionBarLayout
    int ActionBarLayout_android_layout_gravity -> ActionBarLayout_android_layout_gravity
    int[] ActionBarWindow -> ActionBarWindow
    int ActionBarWindow_windowActionBar -> ActionBarWindow_windowActionBar
    int ActionBarWindow_windowActionBarOverlay -> ActionBarWindow_windowActionBarOverlay
    int ActionBarWindow_windowSplitActionBar -> ActionBarWindow_windowSplitActionBar
    int[] ActionMenuItemView -> ActionMenuItemView
    int ActionMenuItemView_android_minWidth -> ActionMenuItemView_android_minWidth
    int[] ActionMenuView -> ActionMenuView
    int[] ActionMode -> ActionMode
    int ActionMode_background -> ActionMode_background
    int ActionMode_backgroundSplit -> ActionMode_backgroundSplit
    int ActionMode_height -> ActionMode_height
    int ActionMode_subtitleTextStyle -> ActionMode_subtitleTextStyle
    int ActionMode_titleTextStyle -> ActionMode_titleTextStyle
    int[] ActivityChooserView -> ActivityChooserView
    int ActivityChooserView_expandActivityOverflowButtonDrawable -> ActivityChooserView_expandActivityOverflowButtonDrawable
    int ActivityChooserView_initialActivityCount -> ActivityChooserView_initialActivityCount
    int[] AlertDialog -> AlertDialog
    int AlertDialog_android_gravity -> AlertDialog_android_gravity
    int AlertDialog_bottomBright -> AlertDialog_bottomBright
    int AlertDialog_bottomDark -> AlertDialog_bottomDark
    int AlertDialog_bottomMedium -> AlertDialog_bottomMedium
    int AlertDialog_centerBright -> AlertDialog_centerBright
    int AlertDialog_centerDark -> AlertDialog_centerDark
    int AlertDialog_centerMedium -> AlertDialog_centerMedium
    int AlertDialog_fullBright -> AlertDialog_fullBright
    int AlertDialog_fullDark -> AlertDialog_fullDark
    int AlertDialog_horizontalProgressLayout -> AlertDialog_horizontalProgressLayout
    int AlertDialog_layout -> AlertDialog_layout
    int AlertDialog_listItemLayout -> AlertDialog_listItemLayout
    int AlertDialog_listLayout -> AlertDialog_listLayout
    int AlertDialog_multiChoiceItemLayout -> AlertDialog_multiChoiceItemLayout
    int AlertDialog_progressLayout -> AlertDialog_progressLayout
    int AlertDialog_singleChoiceItemLayout -> AlertDialog_singleChoiceItemLayout
    int AlertDialog_topBright -> AlertDialog_topBright
    int AlertDialog_topDark -> AlertDialog_topDark
    int[] AutoCompleteTextView -> AutoCompleteTextView
    int AutoCompleteTextView_android_completionHint -> AutoCompleteTextView_android_completionHint
    int AutoCompleteTextView_android_completionHintView -> AutoCompleteTextView_android_completionHintView
    int AutoCompleteTextView_android_completionThreshold -> AutoCompleteTextView_android_completionThreshold
    int AutoCompleteTextView_android_dropDownAnchor -> AutoCompleteTextView_android_dropDownAnchor
    int AutoCompleteTextView_android_dropDownHeight -> AutoCompleteTextView_android_dropDownHeight
    int AutoCompleteTextView_android_dropDownSelector -> AutoCompleteTextView_android_dropDownSelector
    int AutoCompleteTextView_android_dropDownWidth -> AutoCompleteTextView_android_dropDownWidth
    int AutoCompleteTextView_android_entries -> AutoCompleteTextView_android_entries
    int AutoCompleteTextView_android_inputType -> AutoCompleteTextView_android_inputType
    int AutoCompleteTextView_dropDownHorizontalOffset -> AutoCompleteTextView_dropDownHorizontalOffset
    int AutoCompleteTextView_dropDownVerticalOffset -> AutoCompleteTextView_dropDownVerticalOffset
    int[] CirclePageIndicator -> CirclePageIndicator
    int CirclePageIndicator_android_background -> CirclePageIndicator_android_background
    int CirclePageIndicator_android_orientation -> CirclePageIndicator_android_orientation
    int CirclePageIndicator_centered -> CirclePageIndicator_centered
    int CirclePageIndicator_fillColor -> CirclePageIndicator_fillColor
    int CirclePageIndicator_pageColor -> CirclePageIndicator_pageColor
    int CirclePageIndicator_radius -> CirclePageIndicator_radius
    int CirclePageIndicator_snap -> CirclePageIndicator_snap
    int CirclePageIndicator_strokeColor -> CirclePageIndicator_strokeColor
    int CirclePageIndicator_strokeWidth -> CirclePageIndicator_strokeWidth
    int[] ColorDrawable -> ColorDrawable
    int ColorDrawable_android_color -> ColorDrawable_android_color
    int[] DateTimePicker -> DateTimePicker
    int DateTimePicker_dateCircleColor -> DateTimePicker_dateCircleColor
    int DateTimePicker_dateDayTextColor -> DateTimePicker_dateDayTextColor
    int DateTimePicker_dateMonthTitleColor -> DateTimePicker_dateMonthTitleColor
    int DateTimePicker_dateTodayColor -> DateTimePicker_dateTodayColor
    int DateTimePicker_dateYearSelectorColor -> DateTimePicker_dateYearSelectorColor
    int DateTimePicker_timeAmPmPicker -> DateTimePicker_timeAmPmPicker
    int DateTimePicker_timeAmPmPickerBackground -> DateTimePicker_timeAmPmPickerBackground
    int DateTimePicker_timeAmPmPickerTextColor -> DateTimePicker_timeAmPmPickerTextColor
    int DateTimePicker_timeCenterPointerColor -> DateTimePicker_timeCenterPointerColor
    int DateTimePicker_timeCenterPointerRadius -> DateTimePicker_timeCenterPointerRadius
    int DateTimePicker_timeCircleColor -> DateTimePicker_timeCircleColor
    int DateTimePicker_timePickerSelectorColor -> DateTimePicker_timePickerSelectorColor
    int DateTimePicker_timeRadialTextColor -> DateTimePicker_timeRadialTextColor
    int[] DialogPreference -> DialogPreference
    int DialogPreference_android_dialogIcon -> DialogPreference_android_dialogIcon
    int DialogPreference_android_dialogLayout -> DialogPreference_android_dialogLayout
    int DialogPreference_android_dialogMessage -> DialogPreference_android_dialogMessage
    int DialogPreference_android_dialogTitle -> DialogPreference_android_dialogTitle
    int DialogPreference_android_negativeButtonText -> DialogPreference_android_negativeButtonText
    int DialogPreference_android_positiveButtonText -> DialogPreference_android_positiveButtonText
    int[] Divider -> Divider
    int Divider_android_orientation -> Divider_android_orientation
    int[] ExpandableListView -> ExpandableListView
    int ExpandableListView_android_childDivider -> ExpandableListView_android_childDivider
    int ExpandableListView_android_childIndicator -> ExpandableListView_android_childIndicator
    int ExpandableListView_android_childIndicatorLeft -> ExpandableListView_android_childIndicatorLeft
    int ExpandableListView_android_childIndicatorRight -> ExpandableListView_android_childIndicatorRight
    int ExpandableListView_android_groupIndicator -> ExpandableListView_android_groupIndicator
    int ExpandableListView_android_indicatorLeft -> ExpandableListView_android_indicatorLeft
    int ExpandableListView_android_indicatorRight -> ExpandableListView_android_indicatorRight
    int[] Extra -> Extra
    int Extra_android_name -> Extra_android_name
    int Extra_android_value -> Extra_android_value
    int[] FastScroll -> FastScroll
    int FastScroll_fastScrollOverlayPosition -> FastScroll_fastScrollOverlayPosition
    int FastScroll_fastScrollPreviewBackgroundLeft -> FastScroll_fastScrollPreviewBackgroundLeft
    int FastScroll_fastScrollPreviewBackgroundRight -> FastScroll_fastScrollPreviewBackgroundRight
    int FastScroll_fastScrollTextColor -> FastScroll_fastScrollTextColor
    int FastScroll_fastScrollThumbDrawable -> FastScroll_fastScrollThumbDrawable
    int FastScroll_fastScrollTrackDrawable -> FastScroll_fastScrollTrackDrawable
    int[] IconMenuView -> IconMenuView
    int IconMenuView_android_maxItems -> IconMenuView_android_maxItems
    int IconMenuView_android_maxItemsPerRow -> IconMenuView_android_maxItemsPerRow
    int IconMenuView_android_maxRows -> IconMenuView_android_maxRows
    int IconMenuView_android_moreIcon -> IconMenuView_android_moreIcon
    int IconMenuView_android_rowHeight -> IconMenuView_android_rowHeight
    int[] Intent -> Intent
    int Intent_android_action -> Intent_android_action
    int Intent_android_data -> Intent_android_data
    int Intent_android_mimeType -> Intent_android_mimeType
    int Intent_android_targetClass -> Intent_android_targetClass
    int Intent_android_targetPackage -> Intent_android_targetPackage
    int[] IntentCategory -> IntentCategory
    int IntentCategory_android_name -> IntentCategory_android_name
    int[] LayerDrawable -> LayerDrawable
    int LayerDrawable_android_opacity -> LayerDrawable_android_opacity
    int[] LayerDrawableItem -> LayerDrawableItem
    int LayerDrawableItem_android_bottom -> LayerDrawableItem_android_bottom
    int LayerDrawableItem_android_drawable -> LayerDrawableItem_android_drawable
    int LayerDrawableItem_android_id -> LayerDrawableItem_android_id
    int LayerDrawableItem_android_left -> LayerDrawableItem_android_left
    int LayerDrawableItem_android_right -> LayerDrawableItem_android_right
    int LayerDrawableItem_android_top -> LayerDrawableItem_android_top
    int[] LinePageIndicator -> LinePageIndicator
    int LinePageIndicator_android_background -> LinePageIndicator_android_background
    int LinePageIndicator_centered -> LinePageIndicator_centered
    int LinePageIndicator_gapWidth -> LinePageIndicator_gapWidth
    int LinePageIndicator_lineWidth -> LinePageIndicator_lineWidth
    int LinePageIndicator_selectedColor -> LinePageIndicator_selectedColor
    int LinePageIndicator_strokeWidth -> LinePageIndicator_strokeWidth
    int LinePageIndicator_unselectedColor -> LinePageIndicator_unselectedColor
    int[] LinearLayout -> LinearLayout
    int LinearLayout_android_baselineAligned -> LinearLayout_android_baselineAligned
    int LinearLayout_android_baselineAlignedChildIndex -> LinearLayout_android_baselineAlignedChildIndex
    int LinearLayout_android_divider -> LinearLayout_android_divider
    int LinearLayout_android_dividerPadding -> LinearLayout_android_dividerPadding
    int LinearLayout_android_gravity -> LinearLayout_android_gravity
    int LinearLayout_android_measureWithLargestChild -> LinearLayout_android_measureWithLargestChild
    int LinearLayout_android_orientation -> LinearLayout_android_orientation
    int LinearLayout_android_showDividers -> LinearLayout_android_showDividers
    int LinearLayout_android_weightSum -> LinearLayout_android_weightSum
    int[] ListPreference -> ListPreference
    int ListPreference_android_entries -> ListPreference_android_entries
    int ListPreference_android_entryValues -> ListPreference_android_entryValues
    int[] MenuGroup -> MenuGroup
    int MenuGroup_android_checkableBehavior -> MenuGroup_android_checkableBehavior
    int MenuGroup_android_enabled -> MenuGroup_android_enabled
    int MenuGroup_android_id -> MenuGroup_android_id
    int MenuGroup_android_menuCategory -> MenuGroup_android_menuCategory
    int MenuGroup_android_orderInCategory -> MenuGroup_android_orderInCategory
    int MenuGroup_android_visible -> MenuGroup_android_visible
    int[] MenuItem -> MenuItem
    int MenuItem_android_actionLayout -> MenuItem_android_actionLayout
    int MenuItem_android_actionProviderClass -> MenuItem_android_actionProviderClass
    int MenuItem_android_actionViewClass -> MenuItem_android_actionViewClass
    int MenuItem_android_alphabeticShortcut -> MenuItem_android_alphabeticShortcut
    int MenuItem_android_checkable -> MenuItem_android_checkable
    int MenuItem_android_checked -> MenuItem_android_checked
    int MenuItem_android_enabled -> MenuItem_android_enabled
    int MenuItem_android_icon -> MenuItem_android_icon
    int MenuItem_android_id -> MenuItem_android_id
    int MenuItem_android_menuCategory -> MenuItem_android_menuCategory
    int MenuItem_android_numericShortcut -> MenuItem_android_numericShortcut
    int MenuItem_android_onClick -> MenuItem_android_onClick
    int MenuItem_android_orderInCategory -> MenuItem_android_orderInCategory
    int MenuItem_android_showAsAction -> MenuItem_android_showAsAction
    int MenuItem_android_title -> MenuItem_android_title
    int MenuItem_android_titleCondensed -> MenuItem_android_titleCondensed
    int MenuItem_android_visible -> MenuItem_android_visible
    int[] MenuView -> MenuView
    int MenuView_android_headerBackground -> MenuView_android_headerBackground
    int MenuView_android_horizontalDivider -> MenuView_android_horizontalDivider
    int MenuView_android_itemBackground -> MenuView_android_itemBackground
    int MenuView_android_itemIconDisabledAlpha -> MenuView_android_itemIconDisabledAlpha
    int MenuView_android_itemTextAppearance -> MenuView_android_itemTextAppearance
    int MenuView_android_preserveIconSpacing -> MenuView_android_preserveIconSpacing
    int MenuView_android_verticalDivider -> MenuView_android_verticalDivider
    int MenuView_android_windowAnimationStyle -> MenuView_android_windowAnimationStyle
    int[] NumberPicker -> NumberPicker
    int NumberPicker_android_fadingEdgeLength -> NumberPicker_android_fadingEdgeLength
    int NumberPicker_android_layout -> NumberPicker_android_layout
    int NumberPicker_android_maxHeight -> NumberPicker_android_maxHeight
    int NumberPicker_android_maxWidth -> NumberPicker_android_maxWidth
    int NumberPicker_android_minHeight -> NumberPicker_android_minHeight
    int NumberPicker_android_minWidth -> NumberPicker_android_minWidth
    int NumberPicker_android_orientation -> NumberPicker_android_orientation
    int NumberPicker_flingable -> NumberPicker_flingable
    int NumberPicker_selectionDivider -> NumberPicker_selectionDivider
    int NumberPicker_selectionDividerHeight -> NumberPicker_selectionDividerHeight
    int NumberPicker_selectionDividersDistance -> NumberPicker_selectionDividersDistance
    int NumberPicker_solidColor -> NumberPicker_solidColor
    int NumberPicker_virtualButtonPressedDrawable -> NumberPicker_virtualButtonPressedDrawable
    int[] NumberPickerPreference -> NumberPickerPreference
    int NumberPickerPreference_max -> NumberPickerPreference_max
    int NumberPickerPreference_min -> NumberPickerPreference_min
    int NumberPickerPreference_wrapSelectorWheel -> NumberPickerPreference_wrapSelectorWheel
    int[] PopupWindow -> PopupWindow
    int PopupWindow_android_popupAnimationStyle -> PopupWindow_android_popupAnimationStyle
    int PopupWindow_android_popupBackground -> PopupWindow_android_popupBackground
    int[] Preference -> Preference
    int Preference_android_defaultValue -> Preference_android_defaultValue
    int Preference_android_dependency -> Preference_android_dependency
    int Preference_android_enabled -> Preference_android_enabled
    int Preference_android_fragment -> Preference_android_fragment
    int Preference_android_icon -> Preference_android_icon
    int Preference_android_id -> Preference_android_id
    int Preference_android_key -> Preference_android_key
    int Preference_android_layout -> Preference_android_layout
    int Preference_android_order -> Preference_android_order
    int Preference_android_persistent -> Preference_android_persistent
    int Preference_android_selectable -> Preference_android_selectable
    int Preference_android_shouldDisableView -> Preference_android_shouldDisableView
    int Preference_android_summary -> Preference_android_summary
    int Preference_android_title -> Preference_android_title
    int Preference_android_widgetLayout -> Preference_android_widgetLayout
    int Preference_dependency -> Preference_dependency
    int[] PreferenceFrameLayout -> PreferenceFrameLayout
    int PreferenceFrameLayout_android_paddingBottom -> PreferenceFrameLayout_android_paddingBottom
    int PreferenceFrameLayout_android_paddingLeft -> PreferenceFrameLayout_android_paddingLeft
    int PreferenceFrameLayout_android_paddingRight -> PreferenceFrameLayout_android_paddingRight
    int PreferenceFrameLayout_android_paddingTop -> PreferenceFrameLayout_android_paddingTop
    int[] PreferenceFrameLayout_Layout -> PreferenceFrameLayout_Layout
    int PreferenceFrameLayout_Layout_android_layout_removeBorders -> PreferenceFrameLayout_Layout_android_layout_removeBorders
    int[] PreferenceGroup -> PreferenceGroup
    int PreferenceGroup_android_orderingFromXml -> PreferenceGroup_android_orderingFromXml
    int[] PreferenceHeader -> PreferenceHeader
    int PreferenceHeader_android_breadCrumbShortTitle -> PreferenceHeader_android_breadCrumbShortTitle
    int PreferenceHeader_android_breadCrumbTitle -> PreferenceHeader_android_breadCrumbTitle
    int PreferenceHeader_android_fragment -> PreferenceHeader_android_fragment
    int PreferenceHeader_android_icon -> PreferenceHeader_android_icon
    int PreferenceHeader_android_id -> PreferenceHeader_android_id
    int PreferenceHeader_android_summary -> PreferenceHeader_android_summary
    int PreferenceHeader_android_title -> PreferenceHeader_android_title
    int[] ProgressBar -> ProgressBar
    int ProgressBar_android_indeterminate -> ProgressBar_android_indeterminate
    int ProgressBar_android_indeterminateBehavior -> ProgressBar_android_indeterminateBehavior
    int ProgressBar_android_indeterminateDrawable -> ProgressBar_android_indeterminateDrawable
    int ProgressBar_android_indeterminateDuration -> ProgressBar_android_indeterminateDuration
    int ProgressBar_android_indeterminateOnly -> ProgressBar_android_indeterminateOnly
    int ProgressBar_android_interpolator -> ProgressBar_android_interpolator
    int ProgressBar_android_max -> ProgressBar_android_max
    int ProgressBar_android_maxHeight -> ProgressBar_android_maxHeight
    int ProgressBar_android_maxWidth -> ProgressBar_android_maxWidth
    int ProgressBar_android_minHeight -> ProgressBar_android_minHeight
    int ProgressBar_android_minWidth -> ProgressBar_android_minWidth
    int ProgressBar_android_progress -> ProgressBar_android_progress
    int ProgressBar_android_progressDrawable -> ProgressBar_android_progressDrawable
    int ProgressBar_android_secondaryProgress -> ProgressBar_android_secondaryProgress
    int[] RefreshActionItem -> RefreshActionItem
    int RefreshActionItem_badgeBackgroundColor -> RefreshActionItem_badgeBackgroundColor
    int RefreshActionItem_badgePosition -> RefreshActionItem_badgePosition
    int RefreshActionItem_badgeTextStyle -> RefreshActionItem_badgeTextStyle
    int RefreshActionItem_progressIndicatorBackgroundColor -> RefreshActionItem_progressIndicatorBackgroundColor
    int RefreshActionItem_progressIndicatorForegroundColor -> RefreshActionItem_progressIndicatorForegroundColor
    int RefreshActionItem_progressIndicatorType -> RefreshActionItem_progressIndicatorType
    int RefreshActionItem_refreshActionItemBackground -> RefreshActionItem_refreshActionItemBackground
    int RefreshActionItem_refreshActionItemIcon -> RefreshActionItem_refreshActionItemIcon
    int[] RingtonePreference -> RingtonePreference
    int RingtonePreference_android_ringtoneType -> RingtonePreference_android_ringtoneType
    int RingtonePreference_android_showDefault -> RingtonePreference_android_showDefault
    int RingtonePreference_android_showSilent -> RingtonePreference_android_showSilent
    int[] RotateDrawable -> RotateDrawable
    int RotateDrawable_android_drawable -> RotateDrawable_android_drawable
    int RotateDrawable_android_fromDegrees -> RotateDrawable_android_fromDegrees
    int RotateDrawable_android_pivotX -> RotateDrawable_android_pivotX
    int RotateDrawable_android_pivotY -> RotateDrawable_android_pivotY
    int RotateDrawable_android_toDegrees -> RotateDrawable_android_toDegrees
    int RotateDrawable_android_visible -> RotateDrawable_android_visible
    int[] SearchView -> SearchView
    int SearchView_android_imeOptions -> SearchView_android_imeOptions
    int SearchView_android_inputType -> SearchView_android_inputType
    int SearchView_android_maxWidth -> SearchView_android_maxWidth
    int SearchView_iconifiedByDefault -> SearchView_iconifiedByDefault
    int SearchView_queryHint -> SearchView_queryHint
    int[] SeekBar -> SeekBar
    int SeekBar_android_disabledAlpha -> SeekBar_android_disabledAlpha
    int SeekBar_android_thumb -> SeekBar_android_thumb
    int SeekBar_android_thumbOffset -> SeekBar_android_thumbOffset
    int[] SeekBarPreference -> SeekBarPreference
    int SeekBarPreference_android_max -> SeekBarPreference_android_max
    int[] Spinner -> Spinner
    int Spinner_android_dropDownSelector -> Spinner_android_dropDownSelector
    int Spinner_android_dropDownWidth -> Spinner_android_dropDownWidth
    int Spinner_android_gravity -> Spinner_android_gravity
    int Spinner_android_popupBackground -> Spinner_android_popupBackground
    int Spinner_android_prompt -> Spinner_android_prompt
    int Spinner_disableChildrenWhenDisabled -> Spinner_disableChildrenWhenDisabled
    int Spinner_dropDownHorizontalOffset -> Spinner_dropDownHorizontalOffset
    int Spinner_dropDownVerticalOffset -> Spinner_dropDownVerticalOffset
    int Spinner_popupPromptView -> Spinner_popupPromptView
    int Spinner_spinnerMode -> Spinner_spinnerMode
    int[] StateListDrawable -> StateListDrawable
    int StateListDrawable_android_constantSize -> StateListDrawable_android_constantSize
    int StateListDrawable_android_dither -> StateListDrawable_android_dither
    int StateListDrawable_android_enterFadeDuration -> StateListDrawable_android_enterFadeDuration
    int StateListDrawable_android_exitFadeDuration -> StateListDrawable_android_exitFadeDuration
    int StateListDrawable_android_variablePadding -> StateListDrawable_android_variablePadding
    int StateListDrawable_android_visible -> StateListDrawable_android_visible
    int[] Switch -> Switch
    int Switch_switchMinWidth -> Switch_switchMinWidth
    int Switch_switchPadding -> Switch_switchPadding
    int Switch_switchTextAppearance -> Switch_switchTextAppearance
    int Switch_textOff -> Switch_textOff
    int Switch_textOn -> Switch_textOn
    int Switch_thumb -> Switch_thumb
    int Switch_thumbTextPadding -> Switch_thumbTextPadding
    int Switch_toggleWhenClick -> Switch_toggleWhenClick
    int Switch_track -> Switch_track
    int[] SwitchPreference -> SwitchPreference
    int SwitchPreference_android_switchTextOff -> SwitchPreference_android_switchTextOff
    int SwitchPreference_android_switchTextOn -> SwitchPreference_android_switchTextOn
    int[] TextAppearance -> TextAppearance
    int TextAppearance_android_fontFamily -> TextAppearance_android_fontFamily
    int TextAppearance_android_textAllCaps -> TextAppearance_android_textAllCaps
    int TextAppearance_android_textColor -> TextAppearance_android_textColor
    int TextAppearance_android_textColorHighlight -> TextAppearance_android_textColorHighlight
    int TextAppearance_android_textColorHint -> TextAppearance_android_textColorHint
    int TextAppearance_android_textColorLink -> TextAppearance_android_textColorLink
    int TextAppearance_android_textSize -> TextAppearance_android_textSize
    int TextAppearance_android_textStyle -> TextAppearance_android_textStyle
    int TextAppearance_android_typeface -> TextAppearance_android_typeface
    int[] TextView -> TextView
    int TextView_android_textAppearance -> TextView_android_textAppearance
    int[] Theme -> Theme
    int Theme_actionDropDownStyle -> Theme_actionDropDownStyle
    int Theme_dropdownListPreferredItemHeight -> Theme_dropdownListPreferredItemHeight
    int Theme_listChoiceBackgroundIndicator -> Theme_listChoiceBackgroundIndicator
    int Theme_panelMenuListTheme -> Theme_panelMenuListTheme
    int Theme_panelMenuListWidth -> Theme_panelMenuListWidth
    int Theme_popupMenuStyle -> Theme_popupMenuStyle
    int[] TimePreference -> TimePreference
    int TimePreference_is24HourView -> TimePreference_is24HourView
    int[] TitlePageIndicator -> TitlePageIndicator
    int TitlePageIndicator_android_background -> TitlePageIndicator_android_background
    int TitlePageIndicator_android_textColor -> TitlePageIndicator_android_textColor
    int TitlePageIndicator_android_textSize -> TitlePageIndicator_android_textSize
    int TitlePageIndicator_clipPadding -> TitlePageIndicator_clipPadding
    int TitlePageIndicator_footerColor -> TitlePageIndicator_footerColor
    int TitlePageIndicator_footerIndicatorHeight -> TitlePageIndicator_footerIndicatorHeight
    int TitlePageIndicator_footerIndicatorStyle -> TitlePageIndicator_footerIndicatorStyle
    int TitlePageIndicator_footerIndicatorUnderlinePadding -> TitlePageIndicator_footerIndicatorUnderlinePadding
    int TitlePageIndicator_footerLineHeight -> TitlePageIndicator_footerLineHeight
    int TitlePageIndicator_footerPadding -> TitlePageIndicator_footerPadding
    int TitlePageIndicator_linePosition -> TitlePageIndicator_linePosition
    int TitlePageIndicator_selectedBold -> TitlePageIndicator_selectedBold
    int TitlePageIndicator_selectedColor -> TitlePageIndicator_selectedColor
    int TitlePageIndicator_titlePadding -> TitlePageIndicator_titlePadding
    int TitlePageIndicator_topPadding -> TitlePageIndicator_topPadding
    int[] TwoStatePreference -> TwoStatePreference
    int TwoStatePreference_android_disableDependentsState -> TwoStatePreference_android_disableDependentsState
    int TwoStatePreference_android_summaryOff -> TwoStatePreference_android_summaryOff
    int TwoStatePreference_android_summaryOn -> TwoStatePreference_android_summaryOn
    int[] TypefaceTextView -> TypefaceTextView
    int TypefaceTextView_customTypeface -> TypefaceTextView_customTypeface
    int[] UnderlinePageIndicator -> UnderlinePageIndicator
    int UnderlinePageIndicator_android_background -> UnderlinePageIndicator_android_background
    int UnderlinePageIndicator_fadeDelay -> UnderlinePageIndicator_fadeDelay
    int UnderlinePageIndicator_fadeLength -> UnderlinePageIndicator_fadeLength
    int UnderlinePageIndicator_fades -> UnderlinePageIndicator_fades
    int UnderlinePageIndicator_selectedColor -> UnderlinePageIndicator_selectedColor
    int[] View -> View
    int View_android_focusable -> View_android_focusable
    int View_paddingEnd -> View_paddingEnd
    int View_paddingStart -> View_paddingStart
    int[] ViewPagerIndicator -> ViewPagerIndicator
    int ViewPagerIndicator_vpiCirclePageIndicatorStyle -> ViewPagerIndicator_vpiCirclePageIndicatorStyle
    int ViewPagerIndicator_vpiIconPageIndicatorStyle -> ViewPagerIndicator_vpiIconPageIndicatorStyle
    int ViewPagerIndicator_vpiLinePageIndicatorStyle -> ViewPagerIndicator_vpiLinePageIndicatorStyle
    int ViewPagerIndicator_vpiTabPageIndicatorStyle -> ViewPagerIndicator_vpiTabPageIndicatorStyle
    int ViewPagerIndicator_vpiTitlePageIndicatorStyle -> ViewPagerIndicator_vpiTitlePageIndicatorStyle
    int ViewPagerIndicator_vpiUnderlinePageIndicatorStyle -> ViewPagerIndicator_vpiUnderlinePageIndicatorStyle
    int[] WindowSizes -> WindowSizes
    int WindowSizes_windowFixedHeightMajor -> WindowSizes_windowFixedHeightMajor
    int WindowSizes_windowFixedHeightMinor -> WindowSizes_windowFixedHeightMinor
    int WindowSizes_windowFixedWidthMajor -> WindowSizes_windowFixedWidthMajor
    int WindowSizes_windowFixedWidthMinor -> WindowSizes_windowFixedWidthMinor
    int WindowSizes_windowMinHeightMajor -> WindowSizes_windowMinHeightMajor
    int WindowSizes_windowMinHeightMinor -> WindowSizes_windowMinHeightMinor
    int WindowSizes_windowMinWidthMajor -> WindowSizes_windowMinWidthMajor
    int WindowSizes_windowMinWidthMinor -> WindowSizes_windowMinWidthMinor
com.inovance.ElevatorControl.activities.AboutActivity -> com.inovance.ElevatorControl.activities.AboutActivity:
    void onCreate(android.os.Bundle) -> onCreate
    void onResume() -> onResume
    void onPause() -> onPause
    boolean onOptionsItemSelected(android.view.MenuItem) -> onOptionsItemSelected
com.inovance.ElevatorControl.activities.BarcodeCaptureActivity -> com.inovance.ElevatorControl.activities.BarcodeCaptureActivity:
    android.hardware.Camera mCamera -> f
    com.inovance.ElevatorControl.views.zbar.CameraPreview mPreview -> g
    android.os.Handler autoFocusHandler -> h
    android.widget.TextView scanText -> a
    android.widget.Button scanButton -> b
    net.sourceforge.zbar.ImageScanner scanner -> c
    boolean barcodeScanned -> i
    boolean previewing -> j
    java.lang.Runnable doAutoFocus -> k
    android.hardware.Camera$PreviewCallback previewCb -> d
    android.hardware.Camera$AutoFocusCallback autoFocusCB -> e
    void onCreate(android.os.Bundle) -> onCreate
    void onPause() -> onPause
    android.hardware.Camera getCameraInstance() -> a
    void releaseCamera() -> b
    boolean access$000(com.inovance.ElevatorControl.activities.BarcodeCaptureActivity) -> a
    boolean access$002(com.inovance.ElevatorControl.activities.BarcodeCaptureActivity,boolean) -> a
    android.hardware.Camera access$100(com.inovance.ElevatorControl.activities.BarcodeCaptureActivity) -> b
    boolean access$202(com.inovance.ElevatorControl.activities.BarcodeCaptureActivity,boolean) -> b
    boolean access$200(com.inovance.ElevatorControl.activities.BarcodeCaptureActivity) -> c
    java.lang.Runnable access$300(com.inovance.ElevatorControl.activities.BarcodeCaptureActivity) -> d
    android.os.Handler access$400(com.inovance.ElevatorControl.activities.BarcodeCaptureActivity) -> e
com.inovance.ElevatorControl.activities.BarcodeCaptureActivity$1 -> com.inovance.ElevatorControl.activities.BarcodeCaptureActivity$1:
    com.inovance.ElevatorControl.activities.BarcodeCaptureActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.inovance.ElevatorControl.activities.BarcodeCaptureActivity$2 -> com.inovance.ElevatorControl.activities.BarcodeCaptureActivity$2:
    com.inovance.ElevatorControl.activities.BarcodeCaptureActivity this$0 -> a
    void run() -> run
com.inovance.ElevatorControl.activities.BarcodeCaptureActivity$3 -> com.inovance.ElevatorControl.activities.BarcodeCaptureActivity$3:
    com.inovance.ElevatorControl.activities.BarcodeCaptureActivity this$0 -> a
    void onPreviewFrame(byte[],android.hardware.Camera) -> onPreviewFrame
com.inovance.ElevatorControl.activities.BarcodeCaptureActivity$4 -> com.inovance.ElevatorControl.activities.BarcodeCaptureActivity$4:
    com.inovance.ElevatorControl.activities.BarcodeCaptureActivity this$0 -> a
    void onAutoFocus(boolean,android.hardware.Camera) -> onAutoFocus
com.inovance.ElevatorControl.activities.BluetoothAddressActivity -> com.inovance.ElevatorControl.activities.BluetoothAddressActivity:
    org.holoeverywhere.widget.TextView deviceName -> a
    org.holoeverywhere.widget.TextView deviceAddress -> b
    org.holoeverywhere.widget.LinearLayout connectedDeviceView -> c
    org.holoeverywhere.widget.TextView noConnectedDevice -> d
    void onCreate(android.os.Bundle) -> onCreate
    boolean onOptionsItemSelected(android.view.MenuItem) -> onOptionsItemSelected
    void onPause() -> onPause
    void updateConnectedDeviceInformation() -> a
com.inovance.ElevatorControl.activities.BluetoothAddressActivity$$ViewInjector -> com.inovance.ElevatorControl.activities.BluetoothAddressActivity$$ViewInjector:
    void inject(butterknife.Views$Finder,com.inovance.ElevatorControl.activities.BluetoothAddressActivity,java.lang.Object) -> inject
    void reset(com.inovance.ElevatorControl.activities.BluetoothAddressActivity) -> reset
com.inovance.ElevatorControl.activities.CheckAuthorizationActivity -> com.inovance.ElevatorControl.activities.CheckAuthorizationActivity:
    org.holoeverywhere.widget.ImageButton btnLogin -> a
    org.holoeverywhere.widget.ImageButton btnSignUp -> b
    org.holoeverywhere.widget.LinearLayout progressView -> c
    org.holoeverywhere.widget.TextView waitTextView -> d
    android.os.Handler mHandler -> f
    java.lang.Runnable runnable -> e
    void onCreate(android.os.Bundle) -> onCreate
    void onPause() -> onPause
    void onStop() -> onStop
    void buttonSignUpClick(android.view.View) -> buttonSignUpClick
    void btnLoginClick(android.view.View) -> btnLoginClick
    void initializeData() -> a
    android.os.Handler access$000(com.inovance.ElevatorControl.activities.CheckAuthorizationActivity) -> a
com.inovance.ElevatorControl.activities.CheckAuthorizationActivity$$ViewInjector -> com.inovance.ElevatorControl.activities.CheckAuthorizationActivity$$ViewInjector:
    void inject(butterknife.Views$Finder,com.inovance.ElevatorControl.activities.CheckAuthorizationActivity,java.lang.Object) -> inject
    void reset(com.inovance.ElevatorControl.activities.CheckAuthorizationActivity) -> reset
com.inovance.ElevatorControl.activities.CheckAuthorizationActivity$$ViewInjector$1 -> com.inovance.ElevatorControl.activities.CheckAuthorizationActivity$$ViewInjector$1:
    com.inovance.ElevatorControl.activities.CheckAuthorizationActivity val$target -> a
    void onClick(android.view.View) -> onClick
com.inovance.ElevatorControl.activities.CheckAuthorizationActivity$$ViewInjector$2 -> com.inovance.ElevatorControl.activities.CheckAuthorizationActivity$$ViewInjector$2:
    com.inovance.ElevatorControl.activities.CheckAuthorizationActivity val$target -> a
    void onClick(android.view.View) -> onClick
com.inovance.ElevatorControl.activities.CheckAuthorizationActivity$3 -> com.inovance.ElevatorControl.activities.CheckAuthorizationActivity$3:
    com.inovance.ElevatorControl.activities.CheckAuthorizationActivity this$0 -> a
    void handleMessage(android.os.Message) -> handleMessage
com.inovance.ElevatorControl.activities.CheckAuthorizationActivity$4 -> com.inovance.ElevatorControl.activities.CheckAuthorizationActivity$4:
    com.inovance.ElevatorControl.activities.CheckAuthorizationActivity this$0 -> a
    void run() -> run
com.inovance.ElevatorControl.activities.ChooseDeviceActivity -> com.inovance.ElevatorControl.activities.ChooseDeviceActivity:
    org.holoeverywhere.widget.ListView listView -> a
    android.view.View researchDevices -> b
    org.holoeverywhere.widget.ProgressBar progressBar -> c
    com.inovance.ElevatorControl.activities.ChooseDeviceActivity$SearchHandler searchHandler -> d
    com.inovance.ElevatorControl.activities.ChooseDeviceActivity$DeviceAdapter adapter -> e
    void onCreate(android.os.Bundle) -> onCreate
    void onPause() -> onPause
    void researchDevices() -> b
    void researchButtonClick() -> a
    com.inovance.ElevatorControl.activities.ChooseDeviceActivity$DeviceAdapter access$000(com.inovance.ElevatorControl.activities.ChooseDeviceActivity) -> a
    com.inovance.ElevatorControl.activities.ChooseDeviceActivity$DeviceAdapter access$002(com.inovance.ElevatorControl.activities.ChooseDeviceActivity,com.inovance.ElevatorControl.activities.ChooseDeviceActivity$DeviceAdapter) -> a
com.inovance.ElevatorControl.activities.ChooseDeviceActivity$$ViewInjector -> com.inovance.ElevatorControl.activities.ChooseDeviceActivity$$ViewInjector:
    void inject(butterknife.Views$Finder,com.inovance.ElevatorControl.activities.ChooseDeviceActivity,java.lang.Object) -> inject
    void reset(com.inovance.ElevatorControl.activities.ChooseDeviceActivity) -> reset
com.inovance.ElevatorControl.activities.ChooseDeviceActivity$$ViewInjector$1 -> com.inovance.ElevatorControl.activities.ChooseDeviceActivity$$ViewInjector$1:
    com.inovance.ElevatorControl.activities.ChooseDeviceActivity val$target -> a
    void onClick(android.view.View) -> onClick
com.inovance.ElevatorControl.activities.ChooseDeviceActivity$1 -> com.inovance.ElevatorControl.activities.ChooseDeviceActivity$1:
    com.inovance.ElevatorControl.activities.ChooseDeviceActivity this$0 -> a
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
com.inovance.ElevatorControl.activities.ChooseDeviceActivity$1$1 -> com.inovance.ElevatorControl.activities.ChooseDeviceActivity$1$1:
    java.lang.String val$devName -> a
    com.inovance.ElevatorControl.activities.ChooseDeviceActivity$1 this$1 -> b
    boolean connect(android.bluetooth.BluetoothDevice) -> a
com.inovance.ElevatorControl.activities.ChooseDeviceActivity$DeviceAdapter -> com.inovance.ElevatorControl.activities.ChooseDeviceActivity$DeviceAdapter:
    java.lang.String[] deviceLists -> b
    com.inovance.ElevatorControl.activities.ChooseDeviceActivity this$0 -> a
    int getCount() -> getCount
    java.lang.String getItem(int) -> a
    long getItemId(int) -> getItemId
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    java.lang.Object getItem(int) -> getItem
com.inovance.ElevatorControl.activities.ChooseDeviceActivity$DeviceAdapter$ViewHolder -> com.inovance.ElevatorControl.activities.ChooseDeviceActivity$DeviceAdapter$ViewHolder:
    org.holoeverywhere.widget.TextView deviceInfo -> a
    com.inovance.ElevatorControl.activities.ChooseDeviceActivity$DeviceAdapter this$1 -> b
com.inovance.ElevatorControl.activities.ChooseDeviceActivity$SearchHandler -> com.inovance.ElevatorControl.activities.ChooseDeviceActivity$SearchHandler:
    boolean $assertionsDisabled -> c
    com.inovance.ElevatorControl.activities.ChooseDeviceActivity this$0 -> d
    void onBeginPreparing(android.os.Message) -> a
    void onFoundDevice(android.os.Message) -> b
    void onKillBluetooth(android.os.Message) -> e
    void onPrepared(android.os.Message) -> f
    void onPrepError(android.os.Message) -> g
    void onTalkReceive(android.os.Message) -> j
    void onHandlerChanged(android.os.Message) -> l
com.inovance.ElevatorControl.activities.ConfigurationActivity -> com.inovance.ElevatorControl.activities.ConfigurationActivity:
    java.lang.String TAG -> f
    int pageIndex -> a
    com.inovance.ElevatorControl.handlers.ConfigurationHandler configurationHandler -> g
    com.bluetoothtool.BluetoothTalk[] communications -> h
    com.inovance.ElevatorControl.activities.ConfigurationActivity$GetXTerminalStatusHandler getXTerminalStatusHandler -> i
    com.inovance.ElevatorControl.activities.ConfigurationActivity$GetYTerminalStatusHandler getYTerminalStatusHandler -> j
    com.bluetoothtool.BluetoothTalk[] getXTerminalCommunications -> k
    com.bluetoothtool.BluetoothTalk[] getYTerminalCommunications -> l
    android.app.AlertDialog terminalDialog -> m
    org.holoeverywhere.widget.TextView waitTextView -> n
    org.holoeverywhere.widget.ListView terminalListView -> o
    java.lang.Runnable syncStatusTask -> p
    boolean isRunning -> q
    android.os.Handler syncHandler -> r
    boolean isSyncing -> b
    boolean isReadingTerminalStatus -> s
    android.support.v4.view.ViewPager pager -> c
    com.viewpagerindicator.TabPageIndicator indicator -> d
    com.inovance.ElevatorControl.adapters.ConfigurationAdapter mConfigurationAdapter -> e
    android.os.Handler handler -> t
    void onCreate(android.os.Bundle) -> onCreate
    void onResume() -> onResume
    void onPause() -> onPause
    void changePagerIndex(int) -> a
    void reSyncData() -> a
    void loadMonitorView() -> b
    void seeInputTerminalStatus(com.inovance.ElevatorControl.models.RealTimeMonitor) -> a
    void startGetXTerminalCommunications() -> c
    void seeOutputTerminalStatus(com.inovance.ElevatorControl.models.RealTimeMonitor) -> b
    void startGetYTerminalCommunications() -> d
    boolean access$000(com.inovance.ElevatorControl.activities.ConfigurationActivity) -> a
    boolean access$100(com.inovance.ElevatorControl.activities.ConfigurationActivity) -> b
    java.lang.Runnable access$200(com.inovance.ElevatorControl.activities.ConfigurationActivity) -> c
    android.os.Handler access$300(com.inovance.ElevatorControl.activities.ConfigurationActivity) -> d
    org.holoeverywhere.widget.TextView access$500(com.inovance.ElevatorControl.activities.ConfigurationActivity) -> e
    org.holoeverywhere.widget.ListView access$600(com.inovance.ElevatorControl.activities.ConfigurationActivity) -> f
    boolean access$102(com.inovance.ElevatorControl.activities.ConfigurationActivity,boolean) -> a
    void access$700(com.inovance.ElevatorControl.activities.ConfigurationActivity) -> g
    void access$800(com.inovance.ElevatorControl.activities.ConfigurationActivity) -> h
com.inovance.ElevatorControl.activities.ConfigurationActivity$$ViewInjector -> com.inovance.ElevatorControl.activities.ConfigurationActivity$$ViewInjector:
    void inject(butterknife.Views$Finder,com.inovance.ElevatorControl.activities.ConfigurationActivity,java.lang.Object) -> inject
    void reset(com.inovance.ElevatorControl.activities.ConfigurationActivity) -> reset
com.inovance.ElevatorControl.activities.ConfigurationActivity$1 -> com.inovance.ElevatorControl.activities.ConfigurationActivity$1:
    com.inovance.ElevatorControl.activities.ConfigurationActivity this$0 -> a
    void onPageScrollStateChanged(int) -> onPageScrollStateChanged
    void onPageScrolled(int,float,int) -> onPageScrolled
    void onPageSelected(int) -> onPageSelected
com.inovance.ElevatorControl.activities.ConfigurationActivity$1$1 -> com.inovance.ElevatorControl.activities.ConfigurationActivity$1$1:
    com.inovance.ElevatorControl.activities.ConfigurationActivity$1 this$1 -> a
    void run() -> run
com.inovance.ElevatorControl.activities.ConfigurationActivity$2 -> com.inovance.ElevatorControl.activities.ConfigurationActivity$2:
    com.inovance.ElevatorControl.activities.ConfigurationActivity this$0 -> a
    void run() -> run
com.inovance.ElevatorControl.activities.ConfigurationActivity$3 -> com.inovance.ElevatorControl.activities.ConfigurationActivity$3:
    java.lang.String val$code -> a
    com.inovance.ElevatorControl.models.RealTimeMonitor val$monitor -> b
    com.inovance.ElevatorControl.activities.ConfigurationActivity this$0 -> c
    void beforeSend() -> a
    void afterSend() -> b
    void afterReceive() -> c
    java.lang.Object onParse() -> d
com.inovance.ElevatorControl.activities.ConfigurationActivity$4 -> com.inovance.ElevatorControl.activities.ConfigurationActivity$4:
    com.inovance.ElevatorControl.models.ParameterSettings val$firstItem -> a
    java.lang.String val$lengthHex -> b
    int val$commandLength -> c
    int val$startPosition -> d
    java.util.List val$terminalList -> e
    com.inovance.ElevatorControl.activities.ConfigurationActivity this$0 -> f
    void beforeSend() -> a
    void afterSend() -> b
    void afterReceive() -> c
    java.lang.Object onParse() -> d
com.inovance.ElevatorControl.activities.ConfigurationActivity$5 -> com.inovance.ElevatorControl.activities.ConfigurationActivity$5:
    com.inovance.ElevatorControl.models.ParameterSettings val$firstItem -> a
    int val$length -> b
    int val$position -> c
    java.util.List val$terminalList -> d
    com.inovance.ElevatorControl.activities.ConfigurationActivity this$0 -> e
    void beforeSend() -> a
    void afterSend() -> b
    void afterReceive() -> c
    java.lang.Object onParse() -> d
com.inovance.ElevatorControl.activities.ConfigurationActivity$6 -> com.inovance.ElevatorControl.activities.ConfigurationActivity$6:
    com.inovance.ElevatorControl.activities.ConfigurationActivity this$0 -> a
    void handleMessage(android.os.Message) -> handleMessage
com.inovance.ElevatorControl.activities.ConfigurationActivity$GetXTerminalStatusHandler -> com.inovance.ElevatorControl.activities.ConfigurationActivity$GetXTerminalStatusHandler:
    int sendCount -> c
    int receiveCount -> f
    com.inovance.ElevatorControl.models.RealTimeMonitor monitor -> d
    java.util.List holderList -> g
    com.inovance.ElevatorControl.activities.ConfigurationActivity this$0 -> e
    void onMultiTalkBegin(android.os.Message) -> m
    void onMultiTalkEnd(android.os.Message) -> n
    void onTalkReceive(android.os.Message) -> j
    void onTalkError(android.os.Message) -> k
com.inovance.ElevatorControl.activities.ConfigurationActivity$GetYTerminalStatusHandler -> com.inovance.ElevatorControl.activities.ConfigurationActivity$GetYTerminalStatusHandler:
    int sendCount -> e
    int receiveCount -> f
    com.inovance.ElevatorControl.models.RealTimeMonitor monitor -> c
    java.util.List holderList -> g
    com.inovance.ElevatorControl.activities.ConfigurationActivity this$0 -> d
    void onMultiTalkBegin(android.os.Message) -> m
    void onMultiTalkEnd(android.os.Message) -> n
    void onTalkReceive(android.os.Message) -> j
    void onTalkError(android.os.Message) -> k
    int access$402(com.inovance.ElevatorControl.activities.ConfigurationActivity$GetYTerminalStatusHandler,int) -> a
com.inovance.ElevatorControl.activities.FirmwareManageActivity -> com.inovance.ElevatorControl.activities.FirmwareManageActivity:
    java.lang.String TAG -> d
    android.support.v4.view.ViewPager pager -> a
    com.viewpagerindicator.TabPageIndicator indicator -> b
    android.view.View firmwareMetaView -> e
    android.view.View burnView -> f
    org.holoeverywhere.widget.TextView firmwareMetaTextView -> g
    org.holoeverywhere.widget.TextView burningMessageTextView -> h
    org.holoeverywhere.widget.ProgressBar burningProgressBar -> i
    org.holoeverywhere.widget.Button dlgButton -> j
    com.inovance.ElevatorControl.adapters.FirmwareManageAdapter mFirmwareManageAdapter -> k
    int pageIndex -> c
    void onCreate(android.os.Bundle) -> onCreate
    void onResume() -> onResume
    void changePagerIndex(int) -> a
    void onClickFirmwareBurnItemMoreOption(android.view.View,int,com.inovance.ElevatorControl.models.Firmware) -> a
    com.inovance.ElevatorControl.adapters.FirmwareManageAdapter access$000(com.inovance.ElevatorControl.activities.FirmwareManageActivity) -> a
    android.view.View access$102(com.inovance.ElevatorControl.activities.FirmwareManageActivity,android.view.View) -> a
    android.view.View access$202(com.inovance.ElevatorControl.activities.FirmwareManageActivity,android.view.View) -> b
    org.holoeverywhere.widget.TextView access$302(com.inovance.ElevatorControl.activities.FirmwareManageActivity,org.holoeverywhere.widget.TextView) -> a
    org.holoeverywhere.widget.TextView access$402(com.inovance.ElevatorControl.activities.FirmwareManageActivity,org.holoeverywhere.widget.TextView) -> b
    org.holoeverywhere.widget.ProgressBar access$502(com.inovance.ElevatorControl.activities.FirmwareManageActivity,org.holoeverywhere.widget.ProgressBar) -> a
    org.holoeverywhere.widget.ProgressBar access$500(com.inovance.ElevatorControl.activities.FirmwareManageActivity) -> b
    org.holoeverywhere.widget.TextView access$300(com.inovance.ElevatorControl.activities.FirmwareManageActivity) -> c
    org.holoeverywhere.widget.Button access$702(com.inovance.ElevatorControl.activities.FirmwareManageActivity,org.holoeverywhere.widget.Button) -> a
    org.holoeverywhere.widget.Button access$700(com.inovance.ElevatorControl.activities.FirmwareManageActivity) -> d
    android.view.View access$100(com.inovance.ElevatorControl.activities.FirmwareManageActivity) -> e
    android.view.View access$200(com.inovance.ElevatorControl.activities.FirmwareManageActivity) -> f
    org.holoeverywhere.widget.TextView access$400(com.inovance.ElevatorControl.activities.FirmwareManageActivity) -> g
com.inovance.ElevatorControl.activities.FirmwareManageActivity$$ViewInjector -> com.inovance.ElevatorControl.activities.FirmwareManageActivity$$ViewInjector:
    void inject(butterknife.Views$Finder,com.inovance.ElevatorControl.activities.FirmwareManageActivity,java.lang.Object) -> inject
    void reset(com.inovance.ElevatorControl.activities.FirmwareManageActivity) -> reset
com.inovance.ElevatorControl.activities.FirmwareManageActivity$1 -> com.inovance.ElevatorControl.activities.FirmwareManageActivity$1:
    com.inovance.ElevatorControl.activities.FirmwareManageActivity this$0 -> a
    void onPageScrolled(int,float,int) -> onPageScrolled
    void onPageSelected(int) -> onPageSelected
    void onPageScrollStateChanged(int) -> onPageScrollStateChanged
com.inovance.ElevatorControl.activities.FirmwareManageActivity$2 -> com.inovance.ElevatorControl.activities.FirmwareManageActivity$2:
    com.inovance.ElevatorControl.activities.FirmwareManageActivity this$0 -> a
    boolean onMenuItemClick(android.view.MenuItem) -> a
com.inovance.ElevatorControl.activities.FirmwareManageActivity$2$1 -> com.inovance.ElevatorControl.activities.FirmwareManageActivity$2$1:
    org.holoeverywhere.app.AlertDialog val$dialog -> a
    com.inovance.ElevatorControl.activities.FirmwareManageActivity$2 this$1 -> b
    void onClick(android.view.View) -> onClick
com.inovance.ElevatorControl.activities.FirmwareManageActivity$2$1$1 -> com.inovance.ElevatorControl.activities.FirmwareManageActivity$2$1$1:
    com.inovance.ElevatorControl.activities.FirmwareManageActivity$2$1 this$2 -> a
    void onClick(android.view.View) -> onClick
com.inovance.ElevatorControl.activities.FirmwareManageActivity$BurnHandler -> com.inovance.ElevatorControl.activities.FirmwareManageActivity$BurnHandler:
    com.inovance.ElevatorControl.activities.FirmwareManageActivity this$0 -> a
    void ProgramInfo(android.os.Message) -> a
com.inovance.ElevatorControl.activities.HelpSystemActivity -> com.inovance.ElevatorControl.activities.HelpSystemActivity:
    org.holoeverywhere.widget.ListView systemSettingListView -> a
    org.holoeverywhere.widget.ListView otherSettingListView -> b
    void onCreate(android.os.Bundle) -> onCreate
com.inovance.ElevatorControl.activities.HelpSystemActivity$$ViewInjector -> com.inovance.ElevatorControl.activities.HelpSystemActivity$$ViewInjector:
    void inject(butterknife.Views$Finder,com.inovance.ElevatorControl.activities.HelpSystemActivity,java.lang.Object) -> inject
    void reset(com.inovance.ElevatorControl.activities.HelpSystemActivity) -> reset
com.inovance.ElevatorControl.activities.HelpSystemActivity$1 -> com.inovance.ElevatorControl.activities.HelpSystemActivity$1:
    com.inovance.ElevatorControl.activities.HelpSystemActivity this$0 -> a
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
com.inovance.ElevatorControl.activities.HelpSystemActivity$2 -> com.inovance.ElevatorControl.activities.HelpSystemActivity$2:
    com.inovance.ElevatorControl.activities.HelpSystemActivity this$0 -> a
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
com.inovance.ElevatorControl.activities.HelpSystemActivity$SettingListAdapter -> com.inovance.ElevatorControl.activities.HelpSystemActivity$SettingListAdapter:
    java.lang.String[] settingArray -> b
    com.inovance.ElevatorControl.activities.HelpSystemActivity this$0 -> a
    int getCount() -> getCount
    java.lang.String getItem(int) -> a
    long getItemId(int) -> getItemId
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    java.lang.Object getItem(int) -> getItem
com.inovance.ElevatorControl.activities.HelpSystemActivity$SettingListAdapter$ViewHolder -> com.inovance.ElevatorControl.activities.HelpSystemActivity$SettingListAdapter$ViewHolder:
    org.holoeverywhere.widget.TextView settingTitle -> a
    com.inovance.ElevatorControl.activities.HelpSystemActivity$SettingListAdapter this$1 -> b
com.inovance.ElevatorControl.activities.HomeActivity -> com.inovance.ElevatorControl.activities.HomeActivity:
    java.lang.String TAG -> g
    org.holoeverywhere.widget.ListView mListView -> a
    com.inovance.ElevatorControl.views.DoorAnimationView doorAnimationView -> b
    org.holoeverywhere.widget.TextView runningSpeedTextView -> c
    org.holoeverywhere.widget.TextView systemStatusTextView -> d
    org.holoeverywhere.widget.TextView lockStatusTextView -> e
    org.holoeverywhere.widget.TextView errorStatusTextView -> f
    com.bluetoothtool.BluetoothTalk[] communications -> h
    com.inovance.ElevatorControl.activities.HomeActivity$SyncStatusHandler mSyncStatusHandler -> i
    java.util.List monitorLists -> j
    java.lang.String[] elevatorBoxStatus -> k
    java.lang.String[] systemStatus -> l
    com.inovance.ElevatorControl.adapters.ShortcutListViewAdapter adapter -> m
    android.os.Handler handler -> n
    java.lang.Runnable syncTask -> o
    boolean running -> p
    java.util.List shortcutList -> q
    void onCreate(android.os.Bundle) -> onCreate
    void readMonitorStateCode() -> d
    void onResume() -> onResume
    void onPause() -> onPause
    void reSyncData() -> a
    void loopSyncElevatorStatusTask() -> b
    void syncElevatorStatus() -> e
    void setListViewDataSource() -> c
    boolean access$000(com.inovance.ElevatorControl.activities.HomeActivity) -> a
    void access$100(com.inovance.ElevatorControl.activities.HomeActivity) -> b
    android.os.Handler access$200(com.inovance.ElevatorControl.activities.HomeActivity) -> c
    java.util.List access$300(com.inovance.ElevatorControl.activities.HomeActivity) -> d
    java.util.List access$400(com.inovance.ElevatorControl.activities.HomeActivity) -> e
    java.lang.String[] access$500(com.inovance.ElevatorControl.activities.HomeActivity) -> f
    java.lang.String[] access$600(com.inovance.ElevatorControl.activities.HomeActivity) -> g
    java.lang.String[] access$502(com.inovance.ElevatorControl.activities.HomeActivity,java.lang.String[]) -> a
    java.lang.String[] access$602(com.inovance.ElevatorControl.activities.HomeActivity,java.lang.String[]) -> b
com.inovance.ElevatorControl.activities.HomeActivity$$ViewInjector -> com.inovance.ElevatorControl.activities.HomeActivity$$ViewInjector:
    void inject(butterknife.Views$Finder,com.inovance.ElevatorControl.activities.HomeActivity,java.lang.Object) -> inject
    void reset(com.inovance.ElevatorControl.activities.HomeActivity) -> reset
com.inovance.ElevatorControl.activities.HomeActivity$1 -> com.inovance.ElevatorControl.activities.HomeActivity$1:
    com.inovance.ElevatorControl.activities.HomeActivity this$0 -> a
    void run() -> run
com.inovance.ElevatorControl.activities.HomeActivity$2 -> com.inovance.ElevatorControl.activities.HomeActivity$2:
    com.inovance.ElevatorControl.activities.HomeActivity this$0 -> a
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
com.inovance.ElevatorControl.activities.HomeActivity$3 -> com.inovance.ElevatorControl.activities.HomeActivity$3:
    int val$i -> a
    com.inovance.ElevatorControl.activities.HomeActivity this$0 -> b
    void beforeSend() -> a
    void afterSend() -> b
    void afterReceive() -> c
    java.lang.Object onParse() -> d
com.inovance.ElevatorControl.activities.HomeActivity$SyncStatusHandler -> com.inovance.ElevatorControl.activities.HomeActivity$SyncStatusHandler:
    int sendCount -> c
    int receiveCount -> d
    java.util.List receivedMonitorList -> f
    com.inovance.ElevatorControl.activities.HomeActivity this$0 -> e
    void onMultiTalkBegin(android.os.Message) -> m
    void onMultiTalkEnd(android.os.Message) -> n
    void onTalkReceive(android.os.Message) -> j
com.inovance.ElevatorControl.activities.InstantChatActivity -> com.inovance.ElevatorControl.activities.InstantChatActivity:
    void onCreate(android.os.Bundle) -> onCreate
com.inovance.ElevatorControl.activities.MoveInsideActivity -> com.inovance.ElevatorControl.activities.MoveInsideActivity:
    java.lang.String TAG -> c
    java.util.List realTimeMonitors -> d
    com.inovance.ElevatorControl.views.viewpager.VerticalViewPager viewPager -> a
    com.inovance.ElevatorControl.views.TypefaceTextView currentFloorTextView -> b
    com.inovance.ElevatorControl.activities.MoveInsideActivity$MoveInsideHandler mMoveInsideHandler -> e
    com.inovance.ElevatorControl.activities.MoveInsideActivity$FloorHandler floorHandler -> f
    com.inovance.ElevatorControl.activities.MoveInsideActivity$SyncMoveInsideInfoHandler mSyncMoveInsideInfoHandler -> g
    com.bluetoothtool.BluetoothTalk[] communications -> h
    java.lang.Runnable syncTask -> i
    boolean running -> j
    android.os.Handler syncHandler -> k
    boolean isWritingData -> l
    boolean isWriteSuccessful -> m
    boolean isSyncing -> n
    com.inovance.ElevatorControl.adapters.MoveSidePagerAdapter moveSidePagerAdapter -> o
    com.bluetoothtool.BluetoothTalk[] getMoveInsideInfoCommunications -> p
    boolean hasGetFloors -> q
    android.os.Handler errorHandler -> r
    void onCreate(android.os.Bundle) -> onCreate
    void createGetMoveInsideInfoCommunications() -> c
    void syncMoveInsideInfoStatus() -> d
    void onResume() -> onResume
    void onPause() -> onPause
    void onStop() -> onStop
    void onDestroy() -> onDestroy
    boolean onOptionsItemSelected(android.view.MenuItem) -> onOptionsItemSelected
    void createGetFloorsCommunication() -> e
    void openDoorButtonClick() -> a
    void closeDoorButtonClick() -> b
    void moveInsideCallFloor(int) -> a
    java.lang.String[] getCallCode(int) -> b
    void loadDataAndRenderView() -> h
    com.inovance.ElevatorControl.adapters.MoveSidePagerAdapter access$000(com.inovance.ElevatorControl.activities.MoveInsideActivity) -> a
    boolean access$100(com.inovance.ElevatorControl.activities.MoveInsideActivity) -> b
    boolean access$200(com.inovance.ElevatorControl.activities.MoveInsideActivity) -> c
    boolean access$300(com.inovance.ElevatorControl.activities.MoveInsideActivity) -> d
    void access$400(com.inovance.ElevatorControl.activities.MoveInsideActivity) -> e
    void access$500(com.inovance.ElevatorControl.activities.MoveInsideActivity) -> f
    android.os.Handler access$600(com.inovance.ElevatorControl.activities.MoveInsideActivity) -> g
    com.inovance.ElevatorControl.adapters.MoveSidePagerAdapter access$002(com.inovance.ElevatorControl.activities.MoveInsideActivity,com.inovance.ElevatorControl.adapters.MoveSidePagerAdapter) -> a
    boolean access$702(com.inovance.ElevatorControl.activities.MoveInsideActivity,boolean) -> a
    boolean access$302(com.inovance.ElevatorControl.activities.MoveInsideActivity,boolean) -> b
    boolean access$802(com.inovance.ElevatorControl.activities.MoveInsideActivity,boolean) -> c
    boolean access$800(com.inovance.ElevatorControl.activities.MoveInsideActivity) -> h
    void access$900(com.inovance.ElevatorControl.activities.MoveInsideActivity,int) -> a
    void access$1000(com.inovance.ElevatorControl.activities.MoveInsideActivity) -> i
    boolean access$202(com.inovance.ElevatorControl.activities.MoveInsideActivity,boolean) -> d
com.inovance.ElevatorControl.activities.MoveInsideActivity$$ViewInjector -> com.inovance.ElevatorControl.activities.MoveInsideActivity$$ViewInjector:
    void inject(butterknife.Views$Finder,com.inovance.ElevatorControl.activities.MoveInsideActivity,java.lang.Object) -> inject
    void reset(com.inovance.ElevatorControl.activities.MoveInsideActivity) -> reset
com.inovance.ElevatorControl.activities.MoveInsideActivity$$ViewInjector$1 -> com.inovance.ElevatorControl.activities.MoveInsideActivity$$ViewInjector$1:
    com.inovance.ElevatorControl.activities.MoveInsideActivity val$target -> a
    void onClick(android.view.View) -> onClick
com.inovance.ElevatorControl.activities.MoveInsideActivity$$ViewInjector$2 -> com.inovance.ElevatorControl.activities.MoveInsideActivity$$ViewInjector$2:
    com.inovance.ElevatorControl.activities.MoveInsideActivity val$target -> a
    void onClick(android.view.View) -> onClick
com.inovance.ElevatorControl.activities.MoveInsideActivity$1 -> com.inovance.ElevatorControl.activities.MoveInsideActivity$1:
    com.inovance.ElevatorControl.activities.MoveInsideActivity this$0 -> a
    void onPageScrolled(int,float,int) -> a
    void onPageSelected(int) -> a
    void onPageScrollStateChanged(int) -> b
com.inovance.ElevatorControl.activities.MoveInsideActivity$2 -> com.inovance.ElevatorControl.activities.MoveInsideActivity$2:
    com.inovance.ElevatorControl.activities.MoveInsideActivity this$0 -> a
    void run() -> run
com.inovance.ElevatorControl.activities.MoveInsideActivity$3 -> com.inovance.ElevatorControl.activities.MoveInsideActivity$3:
    java.lang.String val$sendCode -> a
    int val$index -> b
    com.inovance.ElevatorControl.models.RealTimeMonitor val$monitor01 -> c
    java.util.List val$monitorLists -> d
    com.inovance.ElevatorControl.activities.MoveInsideActivity this$0 -> e
    void beforeSend() -> a
    void afterSend() -> b
    void afterReceive() -> c
    java.lang.Object onParse() -> d
com.inovance.ElevatorControl.activities.MoveInsideActivity$4 -> com.inovance.ElevatorControl.activities.MoveInsideActivity$4:
    java.lang.String val$code -> a
    com.inovance.ElevatorControl.activities.MoveInsideActivity this$0 -> b
    void beforeSend() -> a
    void afterSend() -> b
    void afterReceive() -> c
    java.lang.Object onParse() -> d
com.inovance.ElevatorControl.activities.MoveInsideActivity$5 -> com.inovance.ElevatorControl.activities.MoveInsideActivity$5:
    com.inovance.ElevatorControl.activities.MoveInsideActivity this$0 -> a
    void beforeSend() -> a
    void afterSend() -> b
    void afterReceive() -> c
    java.lang.Object onParse() -> d
com.inovance.ElevatorControl.activities.MoveInsideActivity$6 -> com.inovance.ElevatorControl.activities.MoveInsideActivity$6:
    com.inovance.ElevatorControl.activities.MoveInsideActivity this$0 -> a
    void beforeSend() -> a
    void afterSend() -> b
    void afterReceive() -> c
    java.lang.Object onParse() -> d
com.inovance.ElevatorControl.activities.MoveInsideActivity$7 -> com.inovance.ElevatorControl.activities.MoveInsideActivity$7:
    java.lang.String[] val$codeArray -> a
    com.inovance.ElevatorControl.activities.MoveInsideActivity this$0 -> b
    void beforeSend() -> a
    void afterSend() -> b
    void afterReceive() -> c
    java.lang.Object onParse() -> d
com.inovance.ElevatorControl.activities.MoveInsideActivity$8 -> com.inovance.ElevatorControl.activities.MoveInsideActivity$8:
    com.inovance.ElevatorControl.activities.MoveInsideActivity this$0 -> a
    void handleMessage(android.os.Message) -> handleMessage
com.inovance.ElevatorControl.activities.MoveInsideActivity$FloorHandler -> com.inovance.ElevatorControl.activities.MoveInsideActivity$FloorHandler:
    java.lang.String writeCode -> c
    com.inovance.ElevatorControl.activities.MoveInsideActivity this$0 -> d
    void onMultiTalkBegin(android.os.Message) -> m
    void onMultiTalkEnd(android.os.Message) -> n
    void onTalkReceive(android.os.Message) -> j
com.inovance.ElevatorControl.activities.MoveInsideActivity$MoveInsideHandler -> com.inovance.ElevatorControl.activities.MoveInsideActivity$MoveInsideHandler:
    com.inovance.ElevatorControl.activities.MoveInsideActivity this$0 -> c
    void onMultiTalkBegin(android.os.Message) -> m
    void onMultiTalkEnd(android.os.Message) -> n
    void onTalkReceive(android.os.Message) -> j
com.inovance.ElevatorControl.activities.MoveInsideActivity$MoveInsideHandler$1 -> com.inovance.ElevatorControl.activities.MoveInsideActivity$MoveInsideHandler$1:
    com.inovance.ElevatorControl.activities.MoveInsideActivity$MoveInsideHandler this$1 -> a
    void onSelect(int) -> a
com.inovance.ElevatorControl.activities.MoveInsideActivity$MoveInsideHandler$1$1 -> com.inovance.ElevatorControl.activities.MoveInsideActivity$MoveInsideHandler$1$1:
    int val$calledFloor -> a
    com.inovance.ElevatorControl.activities.MoveInsideActivity$MoveInsideHandler$1 this$2 -> b
    void onTick(long) -> onTick
    void onFinish() -> onFinish
com.inovance.ElevatorControl.activities.MoveInsideActivity$SyncMoveInsideInfoHandler -> com.inovance.ElevatorControl.activities.MoveInsideActivity$SyncMoveInsideInfoHandler:
    int sendCount -> c
    int receiveCount -> e
    java.util.List holderList -> f
    com.inovance.ElevatorControl.activities.MoveInsideActivity this$0 -> d
    void onMultiTalkBegin(android.os.Message) -> m
    void onMultiTalkEnd(android.os.Message) -> n
    void onTalkReceive(android.os.Message) -> j
    void onTalkError(android.os.Message) -> k
com.inovance.ElevatorControl.activities.MoveOutsideActivity -> com.inovance.ElevatorControl.activities.MoveOutsideActivity:
    java.lang.String TAG -> e
    com.inovance.ElevatorControl.views.viewpager.VerticalViewPager viewPager -> a
    com.inovance.ElevatorControl.views.TypefaceTextView currentFloorTextView -> b
    org.holoeverywhere.widget.ImageButton upButton -> c
    org.holoeverywhere.widget.ImageButton downButton -> d
    java.util.List realTimeMonitors -> f
    com.inovance.ElevatorControl.activities.MoveOutsideActivity$MoveOutsideHandler mMoveOutsideHandler -> g
    com.bluetoothtool.BluetoothTalk[] getFloorsCommunications -> h
    boolean hasGetFloors -> i
    int selectedFloor -> j
    com.inovance.ElevatorControl.activities.MoveOutsideActivity$SyncMoveOutsideInfoHandler mSyncMoveOutsideInfoHandler -> k
    java.lang.Runnable syncTask -> l
    boolean running -> m
    android.os.Handler syncHandler -> n
    com.inovance.ElevatorControl.activities.MoveOutsideActivity$FloorHandler floorHandler -> o
    boolean isWritingData -> p
    boolean isWriteSuccessful -> q
    boolean isSyncing -> r
    java.lang.String[] CallCode -> s
    com.inovance.ElevatorControl.adapters.MoveSidePagerAdapter moveSidePagerAdapter -> t
    com.bluetoothtool.BluetoothTalk[] getMoveOutsideInfoCommunications -> u
    android.os.Handler errorHandler -> v
    void onCreate(android.os.Bundle) -> onCreate
    void onResume() -> onResume
    void createGetMoveOutsideInfoCommunications() -> b
    void syncMoveOutsideInfoStatus() -> c
    void onPause() -> onPause
    void onStop() -> onStop
    void onDestroy() -> onDestroy
    boolean onOptionsItemSelected(android.view.MenuItem) -> onOptionsItemSelected
    void OnUpButtonClick(android.view.View) -> a
    void OnDownButtonClick(android.view.View) -> b
    void createGetFloorsCommunication() -> d
    void loadDataAndRenderView() -> e
    void moveOutsideCallFloor(int,boolean) -> a
    java.lang.String[] getCallCode(int,boolean) -> b
    com.inovance.ElevatorControl.adapters.MoveSidePagerAdapter access$000(com.inovance.ElevatorControl.activities.MoveOutsideActivity) -> a
    boolean access$100(com.inovance.ElevatorControl.activities.MoveOutsideActivity) -> b
    boolean access$200(com.inovance.ElevatorControl.activities.MoveOutsideActivity) -> c
    boolean access$300(com.inovance.ElevatorControl.activities.MoveOutsideActivity) -> d
    void access$400(com.inovance.ElevatorControl.activities.MoveOutsideActivity) -> e
    void access$500(com.inovance.ElevatorControl.activities.MoveOutsideActivity) -> f
    android.os.Handler access$600(com.inovance.ElevatorControl.activities.MoveOutsideActivity) -> g
    boolean access$700(com.inovance.ElevatorControl.activities.MoveOutsideActivity) -> h
    int access$800(com.inovance.ElevatorControl.activities.MoveOutsideActivity) -> i
    void access$900(com.inovance.ElevatorControl.activities.MoveOutsideActivity,int,boolean) -> a
    boolean access$302(com.inovance.ElevatorControl.activities.MoveOutsideActivity,boolean) -> a
    boolean access$702(com.inovance.ElevatorControl.activities.MoveOutsideActivity,boolean) -> b
    com.inovance.ElevatorControl.adapters.MoveSidePagerAdapter access$002(com.inovance.ElevatorControl.activities.MoveOutsideActivity,com.inovance.ElevatorControl.adapters.MoveSidePagerAdapter) -> a
    int access$802(com.inovance.ElevatorControl.activities.MoveOutsideActivity,int) -> a
    void access$1200(com.inovance.ElevatorControl.activities.MoveOutsideActivity) -> j
    boolean access$202(com.inovance.ElevatorControl.activities.MoveOutsideActivity,boolean) -> c
    java.lang.String[] access$1300() -> a
    boolean access$1402(com.inovance.ElevatorControl.activities.MoveOutsideActivity,boolean) -> d
com.inovance.ElevatorControl.activities.MoveOutsideActivity$$ViewInjector -> com.inovance.ElevatorControl.activities.MoveOutsideActivity$$ViewInjector:
    void inject(butterknife.Views$Finder,com.inovance.ElevatorControl.activities.MoveOutsideActivity,java.lang.Object) -> inject
    void reset(com.inovance.ElevatorControl.activities.MoveOutsideActivity) -> reset
com.inovance.ElevatorControl.activities.MoveOutsideActivity$$ViewInjector$1 -> com.inovance.ElevatorControl.activities.MoveOutsideActivity$$ViewInjector$1:
    com.inovance.ElevatorControl.activities.MoveOutsideActivity val$target -> a
    void onClick(android.view.View) -> onClick
com.inovance.ElevatorControl.activities.MoveOutsideActivity$$ViewInjector$2 -> com.inovance.ElevatorControl.activities.MoveOutsideActivity$$ViewInjector$2:
    com.inovance.ElevatorControl.activities.MoveOutsideActivity val$target -> a
    void onClick(android.view.View) -> onClick
com.inovance.ElevatorControl.activities.MoveOutsideActivity$1 -> com.inovance.ElevatorControl.activities.MoveOutsideActivity$1:
    com.inovance.ElevatorControl.activities.MoveOutsideActivity this$0 -> a
    void onPageScrolled(int,float,int) -> a
    void onPageSelected(int) -> a
    void onPageScrollStateChanged(int) -> b
com.inovance.ElevatorControl.activities.MoveOutsideActivity$2 -> com.inovance.ElevatorControl.activities.MoveOutsideActivity$2:
    com.inovance.ElevatorControl.activities.MoveOutsideActivity this$0 -> a
    void run() -> run
com.inovance.ElevatorControl.activities.MoveOutsideActivity$3 -> com.inovance.ElevatorControl.activities.MoveOutsideActivity$3:
    java.lang.String val$sendCode -> a
    int val$index -> b
    com.inovance.ElevatorControl.models.RealTimeMonitor val$monitor01 -> c
    java.util.List val$monitorLists -> d
    com.inovance.ElevatorControl.activities.MoveOutsideActivity this$0 -> e
    void beforeSend() -> a
    void afterSend() -> b
    void afterReceive() -> c
    java.lang.Object onParse() -> d
com.inovance.ElevatorControl.activities.MoveOutsideActivity$4 -> com.inovance.ElevatorControl.activities.MoveOutsideActivity$4:
    com.inovance.ElevatorControl.activities.MoveOutsideActivity this$0 -> a
    void onTick(long) -> onTick
    void onFinish() -> onFinish
com.inovance.ElevatorControl.activities.MoveOutsideActivity$5 -> com.inovance.ElevatorControl.activities.MoveOutsideActivity$5:
    com.inovance.ElevatorControl.activities.MoveOutsideActivity this$0 -> a
    void onTick(long) -> onTick
    void onFinish() -> onFinish
com.inovance.ElevatorControl.activities.MoveOutsideActivity$6 -> com.inovance.ElevatorControl.activities.MoveOutsideActivity$6:
    java.lang.String val$code -> a
    com.inovance.ElevatorControl.activities.MoveOutsideActivity this$0 -> b
    void beforeSend() -> a
    void afterSend() -> b
    void afterReceive() -> c
    java.lang.Object onParse() -> d
com.inovance.ElevatorControl.activities.MoveOutsideActivity$7 -> com.inovance.ElevatorControl.activities.MoveOutsideActivity$7:
    java.lang.String[] val$codeArray -> a
    com.inovance.ElevatorControl.activities.MoveOutsideActivity this$0 -> b
    void beforeSend() -> a
    void afterSend() -> b
    void afterReceive() -> c
    java.lang.Object onParse() -> d
com.inovance.ElevatorControl.activities.MoveOutsideActivity$8 -> com.inovance.ElevatorControl.activities.MoveOutsideActivity$8:
    com.inovance.ElevatorControl.activities.MoveOutsideActivity this$0 -> a
    void handleMessage(android.os.Message) -> handleMessage
com.inovance.ElevatorControl.activities.MoveOutsideActivity$FloorHandler -> com.inovance.ElevatorControl.activities.MoveOutsideActivity$FloorHandler:
    java.lang.String writeCode -> c
    com.inovance.ElevatorControl.activities.MoveOutsideActivity this$0 -> d
    void onMultiTalkBegin(android.os.Message) -> m
    void onMultiTalkEnd(android.os.Message) -> n
    void onTalkReceive(android.os.Message) -> j
com.inovance.ElevatorControl.activities.MoveOutsideActivity$MoveOutsideHandler -> com.inovance.ElevatorControl.activities.MoveOutsideActivity$MoveOutsideHandler:
    int topFloor -> d
    int bottomFloor -> e
    com.inovance.ElevatorControl.activities.MoveOutsideActivity this$0 -> c
    void onMultiTalkBegin(android.os.Message) -> m
    void onMultiTalkEnd(android.os.Message) -> n
    void onTalkReceive(android.os.Message) -> j
    int access$1000(com.inovance.ElevatorControl.activities.MoveOutsideActivity$MoveOutsideHandler) -> a
    int access$1100(com.inovance.ElevatorControl.activities.MoveOutsideActivity$MoveOutsideHandler) -> b
com.inovance.ElevatorControl.activities.MoveOutsideActivity$MoveOutsideHandler$1 -> com.inovance.ElevatorControl.activities.MoveOutsideActivity$MoveOutsideHandler$1:
    com.inovance.ElevatorControl.activities.MoveOutsideActivity$MoveOutsideHandler this$1 -> a
    void onSelect(int) -> a
com.inovance.ElevatorControl.activities.MoveOutsideActivity$SyncMoveOutsideInfoHandler -> com.inovance.ElevatorControl.activities.MoveOutsideActivity$SyncMoveOutsideInfoHandler:
    int sendCount -> c
    int receiveCount -> e
    java.util.List holderList -> f
    com.inovance.ElevatorControl.activities.MoveOutsideActivity this$0 -> d
    void onMultiTalkBegin(android.os.Message) -> m
    void onMultiTalkEnd(android.os.Message) -> n
    void onTalkReceive(android.os.Message) -> j
com.inovance.ElevatorControl.activities.NavigationTabActivity -> com.inovance.ElevatorControl.activities.NavigationTabActivity:
    java.lang.String TAG -> g
    com.inovance.ElevatorControl.handlers.SearchBluetoothHandler searchBluetoothHandler -> h
    boolean hasGetDeviceTypeAndNumber -> a
    com.inovance.ElevatorControl.activities.NavigationTabActivity$GetDeviceTypeAndNumberHandler getDeviceTypeAndNumberHandler -> i
    com.bluetoothtool.BluetoothTalk[] getDeviceTypeAndNumberCommunications -> j
    java.lang.Runnable getDeviceTypeNumberTask -> k
    boolean running -> l
    org.holoeverywhere.widget.TextView searchDeviceTipsView -> b
    com.inovance.ElevatorControl.views.customspinner.NoDefaultSpinner deviceListSpinner -> c
    android.view.View researchDevicesButton -> d
    android.widget.ImageView refreshButtonIcon -> e
    android.widget.ProgressBar refreshButtonProgress -> f
    void onCreate(android.os.Bundle) -> onCreate
    void onResume() -> onResume
    void startGetDeviceTypeAndNumberTask() -> a
    void showRefreshButtonProgress(boolean) -> a
    void onPause() -> onPause
    void initTabs() -> c
    void switchTab(int,int) -> a
    boolean dispatchKeyEvent(android.view.KeyEvent) -> dispatchKeyEvent
    void updateSpinnerDropdownItem(java.util.List) -> a
    void getDeviceTypeAndNumber() -> d
    void startHomeActivityStatusSyncTask() -> b
    boolean access$000(com.inovance.ElevatorControl.activities.NavigationTabActivity) -> a
    void access$100(com.inovance.ElevatorControl.activities.NavigationTabActivity) -> b
    java.lang.Runnable access$200(com.inovance.ElevatorControl.activities.NavigationTabActivity) -> c
    com.inovance.ElevatorControl.activities.NavigationTabActivity$GetDeviceTypeAndNumberHandler access$300(com.inovance.ElevatorControl.activities.NavigationTabActivity) -> d
    com.inovance.ElevatorControl.handlers.SearchBluetoothHandler access$400(com.inovance.ElevatorControl.activities.NavigationTabActivity) -> e
com.inovance.ElevatorControl.activities.NavigationTabActivity$$ViewInjector -> com.inovance.ElevatorControl.activities.NavigationTabActivity$$ViewInjector:
    void inject(butterknife.Views$Finder,com.inovance.ElevatorControl.activities.NavigationTabActivity,java.lang.Object) -> inject
    void reset(com.inovance.ElevatorControl.activities.NavigationTabActivity) -> reset
com.inovance.ElevatorControl.activities.NavigationTabActivity$1 -> com.inovance.ElevatorControl.activities.NavigationTabActivity$1:
    com.inovance.ElevatorControl.activities.NavigationTabActivity this$0 -> a
    void run() -> run
com.inovance.ElevatorControl.activities.NavigationTabActivity$2 -> com.inovance.ElevatorControl.activities.NavigationTabActivity$2:
    com.inovance.ElevatorControl.activities.NavigationTabActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.inovance.ElevatorControl.activities.NavigationTabActivity$3 -> com.inovance.ElevatorControl.activities.NavigationTabActivity$3:
    int val$tabIndex -> a
    int val$pagerIndex -> b
    com.inovance.ElevatorControl.activities.NavigationTabActivity this$0 -> c
    void onTabChanged(java.lang.String) -> onTabChanged
com.inovance.ElevatorControl.activities.NavigationTabActivity$3$1 -> com.inovance.ElevatorControl.activities.NavigationTabActivity$3$1:
    com.inovance.ElevatorControl.activities.TroubleAnalyzeActivity val$troubleAnalyzeActivity -> a
    com.inovance.ElevatorControl.activities.NavigationTabActivity$3 this$1 -> b
    void run() -> run
com.inovance.ElevatorControl.activities.NavigationTabActivity$3$2 -> com.inovance.ElevatorControl.activities.NavigationTabActivity$3$2:
    com.inovance.ElevatorControl.activities.ConfigurationActivity val$configurationActivity -> a
    com.inovance.ElevatorControl.activities.NavigationTabActivity$3 this$1 -> b
    void run() -> run
com.inovance.ElevatorControl.activities.NavigationTabActivity$3$3 -> com.inovance.ElevatorControl.activities.NavigationTabActivity$3$3:
    com.inovance.ElevatorControl.activities.FirmwareManageActivity val$firmwareManageActivity -> a
    com.inovance.ElevatorControl.activities.NavigationTabActivity$3 this$1 -> b
    void run() -> run
com.inovance.ElevatorControl.activities.NavigationTabActivity$4 -> com.inovance.ElevatorControl.activities.NavigationTabActivity$4:
    java.util.List val$concatenateDevices -> a
    com.inovance.ElevatorControl.activities.NavigationTabActivity this$0 -> b
    void onItemSelected(android.widget.AdapterView,android.view.View,int,long) -> onItemSelected
    void onNothingSelected(android.widget.AdapterView) -> onNothingSelected
com.inovance.ElevatorControl.activities.NavigationTabActivity$4$1 -> com.inovance.ElevatorControl.activities.NavigationTabActivity$4$1:
    android.bluetooth.BluetoothDevice val$device -> a
    com.inovance.ElevatorControl.activities.NavigationTabActivity$4 this$1 -> b
    boolean connect(android.bluetooth.BluetoothDevice) -> a
com.inovance.ElevatorControl.activities.NavigationTabActivity$5 -> com.inovance.ElevatorControl.activities.NavigationTabActivity$5:
    int val$index -> a
    com.inovance.ElevatorControl.activities.NavigationTabActivity this$0 -> b
    void beforeSend() -> a
    void afterSend() -> b
    void afterReceive() -> c
    java.lang.Object onParse() -> d
com.inovance.ElevatorControl.activities.NavigationTabActivity$GetDeviceTypeAndNumberHandler -> com.inovance.ElevatorControl.activities.NavigationTabActivity$GetDeviceTypeAndNumberHandler:
    int sendCount -> c
    int receiveCount -> e
    java.util.List responseStringList -> f
    com.inovance.ElevatorControl.activities.NavigationTabActivity this$0 -> d
    void onMultiTalkBegin(android.os.Message) -> m
    void onMultiTalkEnd(android.os.Message) -> n
    void onTalkReceive(android.os.Message) -> j
    void onTalkError(android.os.Message) -> k
com.inovance.ElevatorControl.activities.NavigationTabActivity$GetDeviceTypeAndNumberHandler$1 -> com.inovance.ElevatorControl.activities.NavigationTabActivity$GetDeviceTypeAndNumberHandler$1:
    com.inovance.ElevatorControl.activities.NavigationTabActivity$GetDeviceTypeAndNumberHandler this$1 -> a
    void onClick(android.content.DialogInterface,int) -> onClick
com.inovance.ElevatorControl.activities.NavigationTabActivity$GetDeviceTypeAndNumberHandler$2 -> com.inovance.ElevatorControl.activities.NavigationTabActivity$GetDeviceTypeAndNumberHandler$2:
    com.inovance.ElevatorControl.activities.NavigationTabActivity$GetDeviceTypeAndNumberHandler this$1 -> a
    void onClick(android.content.DialogInterface,int) -> onClick
com.inovance.ElevatorControl.activities.NavigationTabActivity$GetDeviceTypeAndNumberHandler$3 -> com.inovance.ElevatorControl.activities.NavigationTabActivity$GetDeviceTypeAndNumberHandler$3:
    com.inovance.ElevatorControl.activities.NavigationTabActivity$GetDeviceTypeAndNumberHandler this$1 -> a
    void onClick(android.content.DialogInterface,int) -> onClick
com.inovance.ElevatorControl.activities.ParameterDetailActivity -> com.inovance.ElevatorControl.activities.ParameterDetailActivity:
    java.lang.String TAG -> g
    com.inovance.ElevatorControl.activities.ParameterDetailActivity$UpdateHandler updateHandler -> h
    android.app.AlertDialog detailDialog -> i
    java.util.List settingsList -> a
    com.inovance.ElevatorControl.handlers.ParameterDetailHandler parameterDetailHandler -> j
    com.mobsandgeeks.adapters.InstantAdapter instantAdapter -> b
    com.bluetoothtool.BluetoothTalk[] communications -> k
    boolean syncingParameter -> c
    com.inovance.ElevatorControl.activities.ParameterDetailActivity$GetValueScopeHandler getValueScopeHandler -> l
    android.widget.Button cancelButton -> m
    android.widget.Button confirmButton -> n
    org.holoeverywhere.widget.TextView waitTextView -> o
    org.holoeverywhere.widget.TextView descriptionTextView -> p
    org.holoeverywhere.widget.LinearLayout pickerContainer -> q
    org.holoeverywhere.widget.LinearLayout pickerView -> r
    boolean isWriteSuccessful -> s
    java.util.List numberPickerList -> t
    int dotIndex -> u
    long maxValueLong -> v
    long minValueLong -> w
    com.manuelpeinado.refreshactionitem.RefreshActionItem mRefreshActionItem -> d
    boolean hasGetElevatorStatus -> x
    com.inovance.ElevatorControl.activities.ParameterDetailActivity$GetElevatorStatusHandler getElevatorStatusHandler -> y
    com.bluetoothtool.BluetoothTalk[] getElevatorStatusCommunication -> z
    android.app.AlertDialog getElevatorStatusDialog -> A
    java.lang.String writeErrorString -> B
    org.holoeverywhere.widget.ListView parameterDetailListView -> e
    boolean $assertionsDisabled -> f
    void onCreate(android.os.Bundle) -> onCreate
    void initListViewData() -> b
    void bindListViewItemClickListener() -> c
    void getElevatorStatus(int,com.inovance.ElevatorControl.models.ParameterSettings) -> a
    void createPickerDialog(int,com.inovance.ElevatorControl.models.ParameterSettings) -> b
    void createNumberPickerAndBindListener(com.inovance.ElevatorControl.models.ParameterSettings) -> a
    void onClickListViewWithIndex(int) -> a
    java.util.List getCodeStringArray(com.inovance.ElevatorControl.models.ParameterSettings) -> b
    void createGetValueScopeCommunications(java.util.List,int,com.inovance.ElevatorControl.models.ParameterSettings) -> a
    void onResume() -> onResume
    void startSetNewValueCommunications(int,java.lang.String) -> a
    void onPause() -> onPause
    void startCombinationCommunications() -> a
    boolean onCreateOptionsMenu(android.view.Menu) -> onCreateOptionsMenu
    boolean onOptionsItemSelected(android.view.MenuItem) -> onOptionsItemSelected
    void onRefreshButtonClick(com.manuelpeinado.refreshactionitem.RefreshActionItem) -> a
    void access$000(com.inovance.ElevatorControl.activities.ParameterDetailActivity,int,com.inovance.ElevatorControl.models.ParameterSettings) -> a
    void access$100(com.inovance.ElevatorControl.activities.ParameterDetailActivity,int) -> a
    android.app.AlertDialog access$202(com.inovance.ElevatorControl.activities.ParameterDetailActivity,android.app.AlertDialog) -> a
    android.app.AlertDialog access$200(com.inovance.ElevatorControl.activities.ParameterDetailActivity) -> a
    boolean access$302(com.inovance.ElevatorControl.activities.ParameterDetailActivity,boolean) -> a
    boolean access$300(com.inovance.ElevatorControl.activities.ParameterDetailActivity) -> b
    void access$400(com.inovance.ElevatorControl.activities.ParameterDetailActivity,int,com.inovance.ElevatorControl.models.ParameterSettings) -> b
    org.holoeverywhere.widget.LinearLayout access$500(com.inovance.ElevatorControl.activities.ParameterDetailActivity) -> c
    java.util.List access$600(com.inovance.ElevatorControl.activities.ParameterDetailActivity) -> d
    int access$700(com.inovance.ElevatorControl.activities.ParameterDetailActivity) -> e
    long access$800(com.inovance.ElevatorControl.activities.ParameterDetailActivity) -> f
    long access$900(com.inovance.ElevatorControl.activities.ParameterDetailActivity) -> g
    void access$1000(com.inovance.ElevatorControl.activities.ParameterDetailActivity,int,java.lang.String) -> a
    android.app.AlertDialog access$1100(com.inovance.ElevatorControl.activities.ParameterDetailActivity) -> h
    boolean access$1300(com.inovance.ElevatorControl.activities.ParameterDetailActivity) -> i
    com.inovance.ElevatorControl.activities.ParameterDetailActivity$UpdateHandler access$1400(com.inovance.ElevatorControl.activities.ParameterDetailActivity) -> j
    boolean access$1302(com.inovance.ElevatorControl.activities.ParameterDetailActivity,boolean) -> b
    java.lang.String access$1500(com.inovance.ElevatorControl.activities.ParameterDetailActivity) -> k
    java.lang.String access$1502(com.inovance.ElevatorControl.activities.ParameterDetailActivity,java.lang.String) -> a
    void access$1600(com.inovance.ElevatorControl.activities.ParameterDetailActivity,com.inovance.ElevatorControl.models.ParameterSettings) -> a
    java.util.List access$1700(com.inovance.ElevatorControl.activities.ParameterDetailActivity,com.inovance.ElevatorControl.models.ParameterSettings) -> b
    void access$1800(com.inovance.ElevatorControl.activities.ParameterDetailActivity,java.util.List,int,com.inovance.ElevatorControl.models.ParameterSettings) -> a
com.inovance.ElevatorControl.activities.ParameterDetailActivity$$ViewInjector -> com.inovance.ElevatorControl.activities.ParameterDetailActivity$$ViewInjector:
    void inject(butterknife.Views$Finder,com.inovance.ElevatorControl.activities.ParameterDetailActivity,java.lang.Object) -> inject
    void reset(com.inovance.ElevatorControl.activities.ParameterDetailActivity) -> reset
com.inovance.ElevatorControl.activities.ParameterDetailActivity$1 -> com.inovance.ElevatorControl.activities.ParameterDetailActivity$1:
    com.inovance.ElevatorControl.activities.ParameterDetailActivity this$0 -> a
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
com.inovance.ElevatorControl.activities.ParameterDetailActivity$1$1 -> com.inovance.ElevatorControl.activities.ParameterDetailActivity$1$1:
    int val$index -> a
    com.inovance.ElevatorControl.models.ParameterSettings val$settings -> b
    com.inovance.ElevatorControl.activities.ParameterDetailActivity$1 this$1 -> c
    void onTick(long) -> onTick
    void onFinish() -> onFinish
com.inovance.ElevatorControl.activities.ParameterDetailActivity$10 -> com.inovance.ElevatorControl.activities.ParameterDetailActivity$10:
    int val$position -> a
    java.lang.String val$userValue -> b
    com.bluetoothtool.BluetoothTalk[] val$communications -> c
    com.inovance.ElevatorControl.activities.ParameterDetailActivity this$0 -> d
    void onTick(long) -> onTick
    void onFinish() -> onFinish
com.inovance.ElevatorControl.activities.ParameterDetailActivity$11 -> com.inovance.ElevatorControl.activities.ParameterDetailActivity$11:
    com.inovance.ElevatorControl.models.ParameterSettings val$firstItem -> a
    int val$length -> b
    int val$position -> c
    com.inovance.ElevatorControl.activities.ParameterDetailActivity this$0 -> d
    void beforeSend() -> a
    void afterSend() -> b
    void afterReceive() -> c
    java.lang.Object onParse() -> d
com.inovance.ElevatorControl.activities.ParameterDetailActivity$2 -> com.inovance.ElevatorControl.activities.ParameterDetailActivity$2:
    com.inovance.ElevatorControl.models.RealTimeMonitor val$monitor -> a
    com.inovance.ElevatorControl.activities.ParameterDetailActivity this$0 -> b
    void beforeSend() -> a
    void afterSend() -> b
    void afterReceive() -> c
    java.lang.Object onParse() -> d
com.inovance.ElevatorControl.activities.ParameterDetailActivity$3 -> com.inovance.ElevatorControl.activities.ParameterDetailActivity$3:
    com.inovance.ElevatorControl.models.ParameterSettings val$settings -> a
    int val$index -> b
    com.inovance.ElevatorControl.activities.ParameterDetailActivity this$0 -> c
    void onClick(android.view.View) -> onClick
com.inovance.ElevatorControl.activities.ParameterDetailActivity$4 -> com.inovance.ElevatorControl.activities.ParameterDetailActivity$4:
    com.inovance.ElevatorControl.activities.ParameterDetailActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.inovance.ElevatorControl.activities.ParameterDetailActivity$5 -> com.inovance.ElevatorControl.activities.ParameterDetailActivity$5:
    com.inovance.ElevatorControl.activities.ParameterDetailActivity this$0 -> a
    void onClick(android.content.DialogInterface,int) -> onClick
com.inovance.ElevatorControl.activities.ParameterDetailActivity$6 -> com.inovance.ElevatorControl.activities.ParameterDetailActivity$6:
    com.inovance.ElevatorControl.activities.ParameterDetailActivity this$0 -> a
    void onClick(android.content.DialogInterface,int) -> onClick
com.inovance.ElevatorControl.activities.ParameterDetailActivity$7 -> com.inovance.ElevatorControl.activities.ParameterDetailActivity$7:
    com.inovance.ElevatorControl.models.ParameterSettings val$settings -> a
    int val$index -> b
    com.inovance.ElevatorControl.activities.ParameterDetailActivity this$0 -> c
    void onClick(android.view.View) -> onClick
com.inovance.ElevatorControl.activities.ParameterDetailActivity$8 -> com.inovance.ElevatorControl.activities.ParameterDetailActivity$8:
    java.lang.String val$code -> a
    com.inovance.ElevatorControl.models.ParameterSettings val$settings -> b
    com.inovance.ElevatorControl.activities.ParameterDetailActivity this$0 -> c
    void beforeSend() -> a
    void afterSend() -> b
    void afterReceive() -> c
    java.lang.Object onParse() -> d
com.inovance.ElevatorControl.activities.ParameterDetailActivity$9 -> com.inovance.ElevatorControl.activities.ParameterDetailActivity$9:
    com.inovance.ElevatorControl.models.ParameterSettings val$settings -> a
    java.lang.String val$userValue -> b
    com.inovance.ElevatorControl.activities.ParameterDetailActivity this$0 -> c
    void beforeSend() -> a
    void afterSend() -> b
    void afterReceive() -> c
    java.lang.Object onParse() -> d
com.inovance.ElevatorControl.activities.ParameterDetailActivity$GetElevatorStatusHandler -> com.inovance.ElevatorControl.activities.ParameterDetailActivity$GetElevatorStatusHandler:
    int index -> c
    com.inovance.ElevatorControl.models.ParameterSettings settings -> d
    com.inovance.ElevatorControl.activities.ParameterDetailActivity this$0 -> e
    void onMultiTalkBegin(android.os.Message) -> m
    void onMultiTalkEnd(android.os.Message) -> n
    void onTalkReceive(android.os.Message) -> j
    void onTalkError(android.os.Message) -> k
com.inovance.ElevatorControl.activities.ParameterDetailActivity$GetValueScopeHandler -> com.inovance.ElevatorControl.activities.ParameterDetailActivity$GetValueScopeHandler:
    java.util.List stringList -> e
    int count -> c
    int index -> f
    com.inovance.ElevatorControl.activities.ParameterDetailActivity this$0 -> d
    void onMultiTalkBegin(android.os.Message) -> m
    void onMultiTalkEnd(android.os.Message) -> n
    void onTalkReceive(android.os.Message) -> j
    void onTalkError(android.os.Message) -> k
    int access$1202(com.inovance.ElevatorControl.activities.ParameterDetailActivity$GetValueScopeHandler,int) -> a
com.inovance.ElevatorControl.activities.ParameterDetailActivity$UpdateHandler -> com.inovance.ElevatorControl.activities.ParameterDetailActivity$UpdateHandler:
    int index -> c
    java.lang.String writeCode -> d
    com.inovance.ElevatorControl.activities.ParameterDetailActivity this$0 -> e
    void onMultiTalkBegin(android.os.Message) -> m
    void onMultiTalkEnd(android.os.Message) -> n
    void onTalkReceive(android.os.Message) -> j
com.inovance.ElevatorControl.activities.ParameterDownloadActivity -> com.inovance.ElevatorControl.activities.ParameterDownloadActivity:
    java.lang.String TAG -> a
    com.inovance.ElevatorControl.activities.ParameterDownloadActivity$DownloadParameterHandler downloadParameterHandler -> b
    android.view.View progressView -> c
    org.holoeverywhere.widget.ProgressBar downloadProgressBar -> d
    org.holoeverywhere.widget.TextView totalTextView -> e
    org.holoeverywhere.widget.TextView currentTextView -> f
    org.holoeverywhere.widget.EditText fileNameEditText -> g
    java.util.List communicationsList -> h
    org.holoeverywhere.app.AlertDialog downloadDialog -> i
    android.widget.Button confirmButton -> j
    android.widget.Button cancelButton -> k
    java.util.List parameterGroupLists -> l
    void onCreate(android.os.Bundle) -> onCreate
    void onResume() -> onResume
    void onPause() -> onPause
    boolean onOptionsItemSelected(android.view.MenuItem) -> onOptionsItemSelected
    void onDownloadButtonClick() -> a
    void saveProfileToLocal(java.lang.String) -> a
    com.bluetoothtool.BluetoothTalk[] createCommunications(java.util.List) -> a
    void startCommunication(int) -> a
    android.widget.Button access$000(com.inovance.ElevatorControl.activities.ParameterDownloadActivity) -> a
    org.holoeverywhere.widget.EditText access$100(com.inovance.ElevatorControl.activities.ParameterDownloadActivity) -> b
    void access$200(com.inovance.ElevatorControl.activities.ParameterDownloadActivity,java.lang.String) -> a
    org.holoeverywhere.app.AlertDialog access$300(com.inovance.ElevatorControl.activities.ParameterDownloadActivity) -> c
    java.util.List access$500(com.inovance.ElevatorControl.activities.ParameterDownloadActivity) -> d
    org.holoeverywhere.widget.ProgressBar access$600(com.inovance.ElevatorControl.activities.ParameterDownloadActivity) -> e
    org.holoeverywhere.widget.TextView access$700(com.inovance.ElevatorControl.activities.ParameterDownloadActivity) -> f
    java.util.List access$800(com.inovance.ElevatorControl.activities.ParameterDownloadActivity) -> g
    void access$900(com.inovance.ElevatorControl.activities.ParameterDownloadActivity,int) -> a
com.inovance.ElevatorControl.activities.ParameterDownloadActivity$$ViewInjector -> com.inovance.ElevatorControl.activities.ParameterDownloadActivity$$ViewInjector:
    void inject(butterknife.Views$Finder,com.inovance.ElevatorControl.activities.ParameterDownloadActivity,java.lang.Object) -> inject
    void reset(com.inovance.ElevatorControl.activities.ParameterDownloadActivity) -> reset
com.inovance.ElevatorControl.activities.ParameterDownloadActivity$$ViewInjector$1 -> com.inovance.ElevatorControl.activities.ParameterDownloadActivity$$ViewInjector$1:
    com.inovance.ElevatorControl.activities.ParameterDownloadActivity val$target -> a
    void onClick(android.view.View) -> onClick
com.inovance.ElevatorControl.activities.ParameterDownloadActivity$1 -> com.inovance.ElevatorControl.activities.ParameterDownloadActivity$1:
    com.inovance.ElevatorControl.activities.ParameterDownloadActivity this$0 -> a
    void beforeTextChanged(java.lang.CharSequence,int,int,int) -> beforeTextChanged
    void onTextChanged(java.lang.CharSequence,int,int,int) -> onTextChanged
    void afterTextChanged(android.text.Editable) -> afterTextChanged
com.inovance.ElevatorControl.activities.ParameterDownloadActivity$2 -> com.inovance.ElevatorControl.activities.ParameterDownloadActivity$2:
    com.inovance.ElevatorControl.activities.ParameterDownloadActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.inovance.ElevatorControl.activities.ParameterDownloadActivity$3 -> com.inovance.ElevatorControl.activities.ParameterDownloadActivity$3:
    com.inovance.ElevatorControl.activities.ParameterDownloadActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.inovance.ElevatorControl.activities.ParameterDownloadActivity$4 -> com.inovance.ElevatorControl.activities.ParameterDownloadActivity$4:
    com.inovance.ElevatorControl.models.ParameterSettings val$firstItem -> a
    int val$length -> b
    java.util.List val$list -> c
    int val$position -> d
    com.inovance.ElevatorControl.activities.ParameterDownloadActivity this$0 -> e
    void beforeSend() -> a
    void afterSend() -> b
    void afterReceive() -> c
    java.lang.Object onParse() -> d
com.inovance.ElevatorControl.activities.ParameterDownloadActivity$DownloadParameterHandler -> com.inovance.ElevatorControl.activities.ParameterDownloadActivity$DownloadParameterHandler:
    int index -> d
    int receiveCount -> e
    java.util.List tempParameterSettingsList -> f
    com.inovance.ElevatorControl.activities.ParameterDownloadActivity this$0 -> c
    void onMultiTalkBegin(android.os.Message) -> m
    void onMultiTalkEnd(android.os.Message) -> n
    void onTalkReceive(android.os.Message) -> j
    int access$402(com.inovance.ElevatorControl.activities.ParameterDownloadActivity$DownloadParameterHandler,int) -> a
com.inovance.ElevatorControl.activities.ParameterUploadActivity -> com.inovance.ElevatorControl.activities.ParameterUploadActivity:
    java.lang.String TAG -> b
    org.holoeverywhere.widget.ListView listView -> a
    com.inovance.ElevatorControl.activities.ParameterUploadActivity$LocalProfileAdapter adapter -> c
    java.util.List communicationsList -> d
    java.util.List parameterSettingsList -> e
    com.inovance.ElevatorControl.activities.ParameterUploadActivity$UploadParameterHandler uploadParameterHandler -> f
    java.util.List profileList -> g
    android.app.AlertDialog uploadDialog -> h
    org.holoeverywhere.widget.TextView uploadTipsTextView -> i
    org.holoeverywhere.widget.ProgressBar uploadProgressBar -> j
    android.widget.ScrollView tipsView -> k
    org.holoeverywhere.widget.Button dialogButton -> l
    void onCreate(android.os.Bundle) -> onCreate
    void onPause() -> onPause
    boolean onOptionsItemSelected(android.view.MenuItem) -> onOptionsItemSelected
    void getProfileList() -> a
    void onUploadButtonClick(int) -> a
    void generateCommunicationsList(org.json.JSONArray) -> a
    void startCommunication(int) -> b
    void handleParameterUploadComplete(java.util.List,java.util.List) -> a
    void access$100(com.inovance.ElevatorControl.activities.ParameterUploadActivity,int) -> a
    java.util.List access$200(com.inovance.ElevatorControl.activities.ParameterUploadActivity) -> a
    java.util.List access$300(com.inovance.ElevatorControl.activities.ParameterUploadActivity) -> b
    org.holoeverywhere.widget.ProgressBar access$400(com.inovance.ElevatorControl.activities.ParameterUploadActivity) -> c
    void access$500(com.inovance.ElevatorControl.activities.ParameterUploadActivity,java.util.List,java.util.List) -> a
    void access$600(com.inovance.ElevatorControl.activities.ParameterUploadActivity,int) -> b
com.inovance.ElevatorControl.activities.ParameterUploadActivity$$ViewInjector -> com.inovance.ElevatorControl.activities.ParameterUploadActivity$$ViewInjector:
    void inject(butterknife.Views$Finder,com.inovance.ElevatorControl.activities.ParameterUploadActivity,java.lang.Object) -> inject
    void reset(com.inovance.ElevatorControl.activities.ParameterUploadActivity) -> reset
com.inovance.ElevatorControl.activities.ParameterUploadActivity$1 -> com.inovance.ElevatorControl.activities.ParameterUploadActivity$1:
    com.inovance.ElevatorControl.activities.ParameterUploadActivity this$0 -> a
    void onClick(android.content.DialogInterface,int) -> onClick
com.inovance.ElevatorControl.activities.ParameterUploadActivity$2 -> com.inovance.ElevatorControl.activities.ParameterUploadActivity$2:
    com.inovance.ElevatorControl.models.ParameterSettings val$item -> a
    com.inovance.ElevatorControl.activities.ParameterUploadActivity this$0 -> b
    void beforeSend() -> a
    void afterSend() -> b
    void afterReceive() -> c
    java.lang.Object onParse() -> d
com.inovance.ElevatorControl.activities.ParameterUploadActivity$LocalProfileAdapter -> com.inovance.ElevatorControl.activities.ParameterUploadActivity$LocalProfileAdapter:
    java.util.List profileLists -> b
    com.inovance.ElevatorControl.activities.ParameterUploadActivity this$0 -> a
    int getCount() -> getCount
    com.inovance.ElevatorControl.models.Profile getItem(int) -> a
    long getItemId(int) -> getItemId
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    java.lang.Object getItem(int) -> getItem
com.inovance.ElevatorControl.activities.ParameterUploadActivity$LocalProfileAdapter$1 -> com.inovance.ElevatorControl.activities.ParameterUploadActivity$LocalProfileAdapter$1:
    com.inovance.ElevatorControl.models.Profile val$profile -> a
    com.inovance.ElevatorControl.activities.ParameterUploadActivity$LocalProfileAdapter this$1 -> b
    void onClick(android.view.View) -> onClick
com.inovance.ElevatorControl.activities.ParameterUploadActivity$LocalProfileAdapter$2 -> com.inovance.ElevatorControl.activities.ParameterUploadActivity$LocalProfileAdapter$2:
    int val$index -> a
    com.inovance.ElevatorControl.activities.ParameterUploadActivity$LocalProfileAdapter this$1 -> b
    void onClick(android.view.View) -> onClick
com.inovance.ElevatorControl.activities.ParameterUploadActivity$LocalProfileAdapter$2$1 -> com.inovance.ElevatorControl.activities.ParameterUploadActivity$LocalProfileAdapter$2$1:
    com.inovance.ElevatorControl.activities.ParameterUploadActivity$LocalProfileAdapter$2 this$2 -> a
    void onClick(android.content.DialogInterface,int) -> onClick
com.inovance.ElevatorControl.activities.ParameterUploadActivity$LocalProfileAdapter$ViewHolder -> com.inovance.ElevatorControl.activities.ParameterUploadActivity$LocalProfileAdapter$ViewHolder:
    org.holoeverywhere.widget.TextView profileName -> a
    org.holoeverywhere.widget.TextView createDate -> b
    org.holoeverywhere.widget.Button viewButton -> c
    org.holoeverywhere.widget.Button uploadButton -> d
    com.inovance.ElevatorControl.activities.ParameterUploadActivity$LocalProfileAdapter this$1 -> e
com.inovance.ElevatorControl.activities.ParameterUploadActivity$UploadParameterHandler -> com.inovance.ElevatorControl.activities.ParameterUploadActivity$UploadParameterHandler:
    int index -> c
    int receiveCount -> e
    com.inovance.ElevatorControl.activities.ParameterUploadActivity this$0 -> d
    void onMultiTalkBegin(android.os.Message) -> m
    void onMultiTalkEnd(android.os.Message) -> n
    void onTalkReceive(android.os.Message) -> j
com.inovance.ElevatorControl.activities.ParameterViewerActivity -> com.inovance.ElevatorControl.activities.ParameterViewerActivity:
    org.holoeverywhere.widget.ExpandableListView expandableListView -> a
    java.util.List groupList -> b
    android.os.Handler handler -> c
    void onCreate(android.os.Bundle) -> onCreate
    void readFileAndParseJSONString(java.lang.String) -> a
    void onResume() -> onResume
    void onPause() -> onPause
    boolean onOptionsItemSelected(android.view.MenuItem) -> onOptionsItemSelected
    java.util.List access$002(com.inovance.ElevatorControl.activities.ParameterViewerActivity,java.util.List) -> a
    android.os.Handler access$300(com.inovance.ElevatorControl.activities.ParameterViewerActivity) -> a
    java.util.List access$000(com.inovance.ElevatorControl.activities.ParameterViewerActivity) -> b
com.inovance.ElevatorControl.activities.ParameterViewerActivity$$ViewInjector -> com.inovance.ElevatorControl.activities.ParameterViewerActivity$$ViewInjector:
    void inject(butterknife.Views$Finder,com.inovance.ElevatorControl.activities.ParameterViewerActivity,java.lang.Object) -> inject
    void reset(com.inovance.ElevatorControl.activities.ParameterViewerActivity) -> reset
com.inovance.ElevatorControl.activities.ParameterViewerActivity$1 -> com.inovance.ElevatorControl.activities.ParameterViewerActivity$1:
    com.inovance.ElevatorControl.activities.ParameterViewerActivity this$0 -> a
    void handleMessage(android.os.Message) -> handleMessage
com.inovance.ElevatorControl.activities.ParameterViewerActivity$2 -> com.inovance.ElevatorControl.activities.ParameterViewerActivity$2:
    java.lang.String val$fileName -> a
    com.inovance.ElevatorControl.activities.ParameterViewerActivity this$0 -> b
    void run() -> run
com.inovance.ElevatorControl.activities.ParameterViewerActivity$ExpandableAdapter -> com.inovance.ElevatorControl.activities.ParameterViewerActivity$ExpandableAdapter:
    com.inovance.ElevatorControl.activities.ParameterViewerActivity this$0 -> a
    int getGroupCount() -> getGroupCount
    int getChildrenCount(int) -> getChildrenCount
    com.inovance.ElevatorControl.models.ParameterGroupSettings getGroup(int) -> a
    com.inovance.ElevatorControl.models.ParameterSettings getChild(int,int) -> a
    long getGroupId(int) -> getGroupId
    long getChildId(int,int) -> getChildId
    boolean hasStableIds() -> hasStableIds
    android.view.View getGroupView(int,boolean,android.view.View,android.view.ViewGroup) -> getGroupView
    android.view.View getChildView(int,int,boolean,android.view.View,android.view.ViewGroup) -> getChildView
    boolean isChildSelectable(int,int) -> isChildSelectable
    java.lang.Object getChild(int,int) -> getChild
    java.lang.Object getGroup(int) -> getGroup
com.inovance.ElevatorControl.activities.ParameterViewerActivity$ExpandableAdapter$ChildViewHolder -> com.inovance.ElevatorControl.activities.ParameterViewerActivity$ExpandableAdapter$ChildViewHolder:
    org.holoeverywhere.widget.TextView title -> a
    org.holoeverywhere.widget.TextView value -> b
    com.inovance.ElevatorControl.activities.ParameterViewerActivity$ExpandableAdapter this$1 -> c
com.inovance.ElevatorControl.activities.ParameterViewerActivity$ExpandableAdapter$GroupViewHolder -> com.inovance.ElevatorControl.activities.ParameterViewerActivity$ExpandableAdapter$GroupViewHolder:
    org.holoeverywhere.widget.TextView title -> a
    android.widget.ImageView indicator -> b
    com.inovance.ElevatorControl.activities.ParameterViewerActivity$ExpandableAdapter this$1 -> c
com.inovance.ElevatorControl.activities.ParameterViewerActivity$ListHolder -> com.inovance.ElevatorControl.activities.ParameterViewerActivity$ListHolder:
    java.util.List settingsList -> b
    com.inovance.ElevatorControl.activities.ParameterViewerActivity this$0 -> a
    java.util.List getSettingsList() -> a
    void setSettingsList(java.util.List) -> a
com.inovance.ElevatorControl.activities.RegisterUserActivity -> com.inovance.ElevatorControl.activities.RegisterUserActivity:
    org.holoeverywhere.widget.EditText userName -> a
    org.holoeverywhere.widget.EditText company -> b
    org.holoeverywhere.widget.EditText cellPhone -> c
    org.holoeverywhere.widget.EditText telPhone -> d
    org.holoeverywhere.widget.EditText email -> e
    org.holoeverywhere.widget.LinearLayout submitButton -> f
    org.holoeverywhere.widget.ProgressBar submitProgress -> g
    org.holoeverywhere.widget.TextView submitTextView -> h
    org.holoeverywhere.widget.TextView errorTextView -> i
    void onCreate(android.os.Bundle) -> onCreate
    void onResume() -> onResume
    void onPause() -> onPause
    void onStop() -> onStop
    void submitRegisterRequest() -> a
    boolean onOptionsItemSelected(android.view.MenuItem) -> onOptionsItemSelected
    void access$000(com.inovance.ElevatorControl.activities.RegisterUserActivity) -> a
com.inovance.ElevatorControl.activities.RegisterUserActivity$$ViewInjector -> com.inovance.ElevatorControl.activities.RegisterUserActivity$$ViewInjector:
    void inject(butterknife.Views$Finder,com.inovance.ElevatorControl.activities.RegisterUserActivity,java.lang.Object) -> inject
    void reset(com.inovance.ElevatorControl.activities.RegisterUserActivity) -> reset
com.inovance.ElevatorControl.activities.RegisterUserActivity$1 -> com.inovance.ElevatorControl.activities.RegisterUserActivity$1:
    com.inovance.ElevatorControl.activities.RegisterUserActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.inovance.ElevatorControl.activities.RegisterUserActivity$2 -> com.inovance.ElevatorControl.activities.RegisterUserActivity$2:
    com.inovance.ElevatorControl.activities.RegisterUserActivity this$0 -> a
    void onResult(java.lang.String,java.lang.String) -> a
com.inovance.ElevatorControl.activities.RegisterUserActivity$3 -> com.inovance.ElevatorControl.activities.RegisterUserActivity$3:
    com.inovance.ElevatorControl.activities.RegisterUserActivity this$0 -> a
    void onFailure(int,java.lang.Throwable) -> a
com.inovance.ElevatorControl.activities.RemoteHelpActivity -> com.inovance.ElevatorControl.activities.RemoteHelpActivity:
    org.jivesoftware.smack.XMPPConnection connection -> b
    org.holoeverywhere.widget.LinearLayout loginView -> a
    android.os.Handler handler -> c
    void onCreate(android.os.Bundle) -> onCreate
    void onPause() -> onPause
    boolean onOptionsItemSelected(android.view.MenuItem) -> onOptionsItemSelected
    org.jivesoftware.smack.XMPPConnection access$002(com.inovance.ElevatorControl.activities.RemoteHelpActivity,org.jivesoftware.smack.XMPPConnection) -> a
    org.jivesoftware.smack.XMPPConnection access$000(com.inovance.ElevatorControl.activities.RemoteHelpActivity) -> a
    android.os.Handler access$100(com.inovance.ElevatorControl.activities.RemoteHelpActivity) -> b
com.inovance.ElevatorControl.activities.RemoteHelpActivity$$ViewInjector -> com.inovance.ElevatorControl.activities.RemoteHelpActivity$$ViewInjector:
    void inject(butterknife.Views$Finder,com.inovance.ElevatorControl.activities.RemoteHelpActivity,java.lang.Object) -> inject
    void reset(com.inovance.ElevatorControl.activities.RemoteHelpActivity) -> reset
com.inovance.ElevatorControl.activities.RemoteHelpActivity$1 -> com.inovance.ElevatorControl.activities.RemoteHelpActivity$1:
    com.inovance.ElevatorControl.activities.RemoteHelpActivity this$0 -> a
    void handleMessage(android.os.Message) -> handleMessage
com.inovance.ElevatorControl.activities.RemoteHelpActivity$XMPPThread -> com.inovance.ElevatorControl.activities.RemoteHelpActivity$XMPPThread:
    com.inovance.ElevatorControl.activities.RemoteHelpActivity this$0 -> a
    void run() -> run
com.inovance.ElevatorControl.activities.ScanBarcodeActivity -> com.inovance.ElevatorControl.activities.ScanBarcodeActivity:
    android.widget.Button startScanButton -> a
    android.widget.EditText scanResultEditText -> b
    void onCreate(android.os.Bundle) -> onCreate
    void onPause() -> onPause
    void startScanButtonClick(android.view.View) -> startScanButtonClick
    boolean onOptionsItemSelected(android.view.MenuItem) -> onOptionsItemSelected
com.inovance.ElevatorControl.activities.ScanBarcodeActivity$$ViewInjector -> com.inovance.ElevatorControl.activities.ScanBarcodeActivity$$ViewInjector:
    void inject(butterknife.Views$Finder,com.inovance.ElevatorControl.activities.ScanBarcodeActivity,java.lang.Object) -> inject
    void reset(com.inovance.ElevatorControl.activities.ScanBarcodeActivity) -> reset
com.inovance.ElevatorControl.activities.ScanBarcodeActivity$$ViewInjector$1 -> com.inovance.ElevatorControl.activities.ScanBarcodeActivity$$ViewInjector$1:
    com.inovance.ElevatorControl.activities.ScanBarcodeActivity val$target -> a
    void onClick(android.view.View) -> onClick
com.inovance.ElevatorControl.activities.SelectDeviceTypeActivity -> com.inovance.ElevatorControl.activities.SelectDeviceTypeActivity:
    org.holoeverywhere.widget.ProgressBar progressBar -> a
    org.holoeverywhere.widget.ListView listView -> b
    org.holoeverywhere.widget.LinearLayout deviceView -> c
    java.util.List deviceList -> d
    void onCreate(android.os.Bundle) -> onCreate
    void onPause() -> onPause
    void getDeviceList() -> a
    boolean onOptionsItemSelected(android.view.MenuItem) -> onOptionsItemSelected
    java.util.List access$002(com.inovance.ElevatorControl.activities.SelectDeviceTypeActivity,java.util.List) -> a
    java.util.List access$000(com.inovance.ElevatorControl.activities.SelectDeviceTypeActivity) -> a
com.inovance.ElevatorControl.activities.SelectDeviceTypeActivity$$ViewInjector -> com.inovance.ElevatorControl.activities.SelectDeviceTypeActivity$$ViewInjector:
    void inject(butterknife.Views$Finder,com.inovance.ElevatorControl.activities.SelectDeviceTypeActivity,java.lang.Object) -> inject
    void reset(com.inovance.ElevatorControl.activities.SelectDeviceTypeActivity) -> reset
com.inovance.ElevatorControl.activities.SelectDeviceTypeActivity$1 -> com.inovance.ElevatorControl.activities.SelectDeviceTypeActivity$1:
    com.inovance.ElevatorControl.activities.SelectDeviceTypeActivity this$0 -> a
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
com.inovance.ElevatorControl.activities.SelectDeviceTypeActivity$2 -> com.inovance.ElevatorControl.activities.SelectDeviceTypeActivity$2:
    com.inovance.ElevatorControl.activities.SelectDeviceTypeActivity this$0 -> a
    void onResult(java.lang.String,java.lang.String) -> a
com.inovance.ElevatorControl.activities.SelectDeviceTypeActivity$3 -> com.inovance.ElevatorControl.activities.SelectDeviceTypeActivity$3:
    com.inovance.ElevatorControl.activities.SelectDeviceTypeActivity this$0 -> a
    void onFailure(int,java.lang.Throwable) -> a
com.inovance.ElevatorControl.activities.ShortcutSettingActivity -> com.inovance.ElevatorControl.activities.ShortcutSettingActivity:
    org.holoeverywhere.widget.ListView listView -> a
    boolean isDialogShown -> b
    java.util.List shortcutList -> c
    java.lang.String[] troubleAnalyzeTabArray -> d
    java.lang.String[] configurationTabArray -> e
    java.lang.String[] firmwareManageTabArray -> f
    com.inovance.ElevatorControl.adapters.ShortcutListViewAdapter listViewAdapter -> g
    void onCreate(android.os.Bundle) -> onCreate
    void onResume() -> onResume
    void onPause() -> onPause
    boolean onCreateOptionsMenu(android.view.Menu) -> onCreateOptionsMenu
    boolean onOptionsItemSelected(android.view.MenuItem) -> onOptionsItemSelected
    void showDeleteItemConfirmDialog(int) -> a
    void showAddShortcutDialog(boolean,int) -> a
    void access$000(com.inovance.ElevatorControl.activities.ShortcutSettingActivity,boolean,int) -> a
    void access$100(com.inovance.ElevatorControl.activities.ShortcutSettingActivity,int) -> a
    java.util.List access$200(com.inovance.ElevatorControl.activities.ShortcutSettingActivity) -> a
    com.inovance.ElevatorControl.adapters.ShortcutListViewAdapter access$300(com.inovance.ElevatorControl.activities.ShortcutSettingActivity) -> b
    java.lang.String[] access$400(com.inovance.ElevatorControl.activities.ShortcutSettingActivity) -> c
    java.lang.String[] access$500(com.inovance.ElevatorControl.activities.ShortcutSettingActivity) -> d
    boolean access$602(com.inovance.ElevatorControl.activities.ShortcutSettingActivity,boolean) -> a
com.inovance.ElevatorControl.activities.ShortcutSettingActivity$$ViewInjector -> com.inovance.ElevatorControl.activities.ShortcutSettingActivity$$ViewInjector:
    void inject(butterknife.Views$Finder,com.inovance.ElevatorControl.activities.ShortcutSettingActivity,java.lang.Object) -> inject
    void reset(com.inovance.ElevatorControl.activities.ShortcutSettingActivity) -> reset
com.inovance.ElevatorControl.activities.ShortcutSettingActivity$1 -> com.inovance.ElevatorControl.activities.ShortcutSettingActivity$1:
    com.inovance.ElevatorControl.activities.ShortcutSettingActivity this$0 -> a
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
com.inovance.ElevatorControl.activities.ShortcutSettingActivity$1$1 -> com.inovance.ElevatorControl.activities.ShortcutSettingActivity$1$1:
    int val$index -> a
    com.inovance.ElevatorControl.activities.ShortcutSettingActivity$1 this$1 -> b
    void onClick(android.content.DialogInterface,int) -> onClick
com.inovance.ElevatorControl.activities.ShortcutSettingActivity$2 -> com.inovance.ElevatorControl.activities.ShortcutSettingActivity$2:
    int val$index -> a
    com.inovance.ElevatorControl.activities.ShortcutSettingActivity this$0 -> b
    void onClick(android.content.DialogInterface,int) -> onClick
com.inovance.ElevatorControl.activities.ShortcutSettingActivity$3 -> com.inovance.ElevatorControl.activities.ShortcutSettingActivity$3:
    boolean val$edit -> a
    int val$index -> b
    org.holoeverywhere.widget.EditText val$shortcutName -> c
    org.holoeverywhere.widget.Spinner val$actionSpinner -> d
    com.inovance.ElevatorControl.activities.ShortcutSettingActivity this$0 -> e
    void onClick(android.content.DialogInterface,int) -> onClick
com.inovance.ElevatorControl.activities.TroubleAnalyzeActivity -> com.inovance.ElevatorControl.activities.TroubleAnalyzeActivity:
    java.lang.String TAG -> e
    android.support.v4.view.ViewPager pager -> a
    com.viewpagerindicator.TabPageIndicator indicator -> b
    com.inovance.ElevatorControl.handlers.CurrentErrorHandler currentErrorHandler -> f
    com.inovance.ElevatorControl.handlers.HistoryErrorHandler historyErrorHandler -> g
    com.bluetoothtool.BluetoothTalk[] currentCommunications -> h
    com.bluetoothtool.BluetoothTalk[] historyCommunications -> c
    com.inovance.ElevatorControl.activities.TroubleAnalyzeActivity$FCGroupHandler fcGroupHandler -> i
    int pageIndex -> d
    android.os.Handler handler -> j
    void onCreate(android.os.Bundle) -> onCreate
    void onResume() -> onResume
    void changePagerIndex(int) -> a
    void reSyncData() -> a
    void viewCurrentSystemStatus() -> b
    void createGetFCGroupValueCommunications() -> c
    void loadCurrentTroubleView() -> d
    void loadHistoryTroubleView() -> e
    com.inovance.ElevatorControl.handlers.HistoryErrorHandler access$000(com.inovance.ElevatorControl.activities.TroubleAnalyzeActivity) -> a
com.inovance.ElevatorControl.activities.TroubleAnalyzeActivity$$ViewInjector -> com.inovance.ElevatorControl.activities.TroubleAnalyzeActivity$$ViewInjector:
    void inject(butterknife.Views$Finder,com.inovance.ElevatorControl.activities.TroubleAnalyzeActivity,java.lang.Object) -> inject
    void reset(com.inovance.ElevatorControl.activities.TroubleAnalyzeActivity) -> reset
com.inovance.ElevatorControl.activities.TroubleAnalyzeActivity$1 -> com.inovance.ElevatorControl.activities.TroubleAnalyzeActivity$1:
    com.inovance.ElevatorControl.activities.TroubleAnalyzeActivity this$0 -> a
    void onPageScrollStateChanged(int) -> onPageScrollStateChanged
    void onPageScrolled(int,float,int) -> onPageScrolled
    void onPageSelected(int) -> onPageSelected
com.inovance.ElevatorControl.activities.TroubleAnalyzeActivity$1$1 -> com.inovance.ElevatorControl.activities.TroubleAnalyzeActivity$1$1:
    com.inovance.ElevatorControl.activities.TroubleAnalyzeActivity$1 this$1 -> a
    void run() -> run
com.inovance.ElevatorControl.activities.TroubleAnalyzeActivity$2 -> com.inovance.ElevatorControl.activities.TroubleAnalyzeActivity$2:
    com.inovance.ElevatorControl.models.ParameterSettings val$firstItem -> a
    int val$length -> b
    int val$position -> c
    java.util.List val$settingsList -> d
    com.inovance.ElevatorControl.activities.TroubleAnalyzeActivity this$0 -> e
    void beforeSend() -> a
    void afterSend() -> b
    void afterReceive() -> c
    java.lang.Object onParse() -> d
com.inovance.ElevatorControl.activities.TroubleAnalyzeActivity$3 -> com.inovance.ElevatorControl.activities.TroubleAnalyzeActivity$3:
    com.inovance.ElevatorControl.activities.TroubleAnalyzeActivity this$0 -> a
    void beforeSend() -> a
    void afterSend() -> b
    void afterReceive() -> c
    java.lang.Object onParse() -> d
com.inovance.ElevatorControl.activities.TroubleAnalyzeActivity$4 -> com.inovance.ElevatorControl.activities.TroubleAnalyzeActivity$4:
    com.inovance.ElevatorControl.activities.TroubleAnalyzeActivity this$0 -> a
    void handleMessage(android.os.Message) -> handleMessage
com.inovance.ElevatorControl.activities.TroubleAnalyzeActivity$FCGroupHandler -> com.inovance.ElevatorControl.activities.TroubleAnalyzeActivity$FCGroupHandler:
    int sendCount -> c
    int receiveCount -> f
    java.util.List tempList -> d
    com.inovance.ElevatorControl.activities.TroubleAnalyzeActivity this$0 -> e
    void onMultiTalkBegin(android.os.Message) -> m
    void onMultiTalkEnd(android.os.Message) -> n
    void onTalkReceive(android.os.Message) -> j
    void onTalkError(android.os.Message) -> k
com.inovance.ElevatorControl.activities.ViewErrorStatusActivity -> com.inovance.ElevatorControl.activities.ViewErrorStatusActivity:
    org.holoeverywhere.widget.ListView listView -> a
    java.lang.String[] filters -> c
    com.inovance.ElevatorControl.activities.ViewErrorStatusActivity$ErrorStatusHandler errorStatusHandler -> d
    com.bluetoothtool.BluetoothTalk[] communications -> e
    com.mobsandgeeks.adapters.InstantAdapter instantAdapter -> b
    java.util.List settingsList -> f
    void onCreate(android.os.Bundle) -> onCreate
    boolean onOptionsItemSelected(android.view.MenuItem) -> onOptionsItemSelected
    void onPause() -> onPause
    void createCommunication() -> c
    void startCommunication() -> a
    java.util.List access$000(com.inovance.ElevatorControl.activities.ViewErrorStatusActivity) -> a
    java.lang.String[] access$100() -> b
com.inovance.ElevatorControl.activities.ViewErrorStatusActivity$$ViewInjector -> com.inovance.ElevatorControl.activities.ViewErrorStatusActivity$$ViewInjector:
    void inject(butterknife.Views$Finder,com.inovance.ElevatorControl.activities.ViewErrorStatusActivity,java.lang.Object) -> inject
    void reset(com.inovance.ElevatorControl.activities.ViewErrorStatusActivity) -> reset
com.inovance.ElevatorControl.activities.ViewErrorStatusActivity$1 -> com.inovance.ElevatorControl.activities.ViewErrorStatusActivity$1:
    com.inovance.ElevatorControl.models.ParameterSettings val$firstItem -> a
    int val$length -> b
    int val$position -> c
    com.inovance.ElevatorControl.activities.ViewErrorStatusActivity this$0 -> d
    void beforeSend() -> a
    void afterSend() -> b
    void afterReceive() -> c
    java.lang.Object onParse() -> d
com.inovance.ElevatorControl.activities.ViewErrorStatusActivity$ErrorStatusHandler -> com.inovance.ElevatorControl.activities.ViewErrorStatusActivity$ErrorStatusHandler:
    int sendCount -> c
    int receiveCount -> d
    java.util.List tempList -> e
    com.inovance.ElevatorControl.activities.ViewErrorStatusActivity this$0 -> f
    void onMultiTalkBegin(android.os.Message) -> m
    void onMultiTalkEnd(android.os.Message) -> n
    void onTalkReceive(android.os.Message) -> j
    void onTalkError(android.os.Message) -> k
com.inovance.ElevatorControl.adapters.CheckedListViewAdapter -> com.inovance.ElevatorControl.adapters.CheckedListViewAdapter:
    java.lang.String[] checkList -> a
    android.app.Activity activity -> b
    int checkedIndex -> c
    void setCheckedIndex(int) -> a
    int getCount() -> getCount
    java.lang.String getItem(int) -> b
    long getItemId(int) -> getItemId
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    java.lang.Object getItem(int) -> getItem
com.inovance.ElevatorControl.adapters.CheckedListViewAdapter$1 -> com.inovance.ElevatorControl.adapters.CheckedListViewAdapter$1:
com.inovance.ElevatorControl.adapters.CheckedListViewAdapter$ViewHolder -> com.inovance.ElevatorControl.adapters.CheckedListViewAdapter$ViewHolder:
    org.holoeverywhere.widget.TextView checkedTextView -> a
    android.widget.ImageView checkedMarkView -> b
    com.inovance.ElevatorControl.adapters.CheckedListViewAdapter this$0 -> c
com.inovance.ElevatorControl.adapters.ConfigurationAdapter -> com.inovance.ElevatorControl.adapters.ConfigurationAdapter:
    android.support.v4.app.FragmentActivity fragmentActivity -> a
    java.util.List mFragments -> b
    java.lang.String[] titleArray -> c
    com.inovance.ElevatorControl.views.fragments.ConfigurationFragment getItem(int) -> a
    java.lang.CharSequence getPageTitle(int) -> getPageTitle
    int getCount() -> getCount
    java.lang.String[] getTabTextArray() -> a
    android.support.v4.app.Fragment getItem(int) -> getItem
com.inovance.ElevatorControl.adapters.DialogSwitchListViewAdapter -> com.inovance.ElevatorControl.adapters.DialogSwitchListViewAdapter:
    java.util.List itemList -> a
    android.app.Activity baseActivity -> b
    java.util.List getItemList() -> a
    int getCount() -> getCount
    com.inovance.ElevatorControl.models.ParameterStatusItem getItem(int) -> a
    long getItemId(int) -> getItemId
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    java.lang.Object getItem(int) -> getItem
com.inovance.ElevatorControl.adapters.DialogSwitchListViewAdapter$1 -> com.inovance.ElevatorControl.adapters.DialogSwitchListViewAdapter$1:
    com.inovance.ElevatorControl.models.ParameterStatusItem val$item -> a
    com.inovance.ElevatorControl.adapters.DialogSwitchListViewAdapter this$0 -> b
    void onCheckedChanged(android.widget.CompoundButton,boolean) -> onCheckedChanged
com.inovance.ElevatorControl.adapters.DialogSwitchListViewAdapter$ViewHolder -> com.inovance.ElevatorControl.adapters.DialogSwitchListViewAdapter$ViewHolder:
    org.holoeverywhere.widget.TextView statusName -> a
    org.holoeverywhere.widget.Switch statusSwitch -> b
    com.inovance.ElevatorControl.adapters.DialogSwitchListViewAdapter this$0 -> c
com.inovance.ElevatorControl.adapters.FirmwareBurnAdapter -> com.inovance.ElevatorControl.adapters.FirmwareBurnAdapter:
    com.inovance.ElevatorControl.activities.FirmwareManageActivity baseActivity -> a
    java.util.List firmwareLists -> b
    int getCount() -> getCount
    com.inovance.ElevatorControl.models.Firmware getItem(int) -> a
    long getItemId(int) -> getItemId
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    java.lang.Object getItem(int) -> getItem
    com.inovance.ElevatorControl.activities.FirmwareManageActivity access$100(com.inovance.ElevatorControl.adapters.FirmwareBurnAdapter) -> a
com.inovance.ElevatorControl.adapters.FirmwareBurnAdapter$1 -> com.inovance.ElevatorControl.adapters.FirmwareBurnAdapter$1:
    int val$index -> a
    com.inovance.ElevatorControl.models.Firmware val$firmware -> b
    com.inovance.ElevatorControl.adapters.FirmwareBurnAdapter this$0 -> c
    void onClick(android.view.View) -> onClick
com.inovance.ElevatorControl.adapters.FirmwareBurnAdapter$ViewHolder -> com.inovance.ElevatorControl.adapters.FirmwareBurnAdapter$ViewHolder:
    org.holoeverywhere.widget.TextView firmwareVersion -> a
    org.holoeverywhere.widget.TextView updateDate -> b
    org.holoeverywhere.widget.TextView expireDate -> c
    org.holoeverywhere.widget.TextView residueTime -> d
    org.holoeverywhere.widget.ImageButton moreOption -> e
    com.inovance.ElevatorControl.adapters.FirmwareBurnAdapter this$0 -> f
com.inovance.ElevatorControl.adapters.FirmwareDownloadAdapter -> com.inovance.ElevatorControl.adapters.FirmwareDownloadAdapter:
    java.util.List firmwareLists -> a
    android.content.Context mContext -> b
    com.inovance.ElevatorControl.adapters.FirmwareDownloadAdapter$onDownloadButtonClickListener clickListener -> c
    void setOnDownloadButtonClickListener(com.inovance.ElevatorControl.adapters.FirmwareDownloadAdapter$onDownloadButtonClickListener) -> a
    int getCount() -> getCount
    com.inovance.ElevatorControl.models.Firmware getItem(int) -> a
    long getItemId(int) -> getItemId
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    java.lang.Object getItem(int) -> getItem
    com.inovance.ElevatorControl.adapters.FirmwareDownloadAdapter$onDownloadButtonClickListener access$100(com.inovance.ElevatorControl.adapters.FirmwareDownloadAdapter) -> a
com.inovance.ElevatorControl.adapters.FirmwareDownloadAdapter$1 -> com.inovance.ElevatorControl.adapters.FirmwareDownloadAdapter$1:
    int val$index -> a
    com.inovance.ElevatorControl.models.Firmware val$firmware -> b
    com.inovance.ElevatorControl.adapters.FirmwareDownloadAdapter this$0 -> c
    void onClick(android.view.View) -> onClick
com.inovance.ElevatorControl.adapters.FirmwareDownloadAdapter$ViewHolder -> com.inovance.ElevatorControl.adapters.FirmwareDownloadAdapter$ViewHolder:
    org.holoeverywhere.widget.TextView approveDate -> a
    android.view.View downloadButton -> b
    com.inovance.ElevatorControl.adapters.FirmwareDownloadAdapter this$0 -> c
com.inovance.ElevatorControl.adapters.FirmwareDownloadAdapter$onDownloadButtonClickListener -> com.inovance.ElevatorControl.adapters.FirmwareDownloadAdapter$onDownloadButtonClickListener:
    void onClick(int,com.inovance.ElevatorControl.models.Firmware) -> a
com.inovance.ElevatorControl.adapters.FirmwareManageAdapter -> com.inovance.ElevatorControl.adapters.FirmwareManageAdapter:
    android.support.v4.app.FragmentActivity fragmentActivity -> a
    java.util.List mFragments -> b
    java.lang.String[] titleArray -> c
    com.inovance.ElevatorControl.views.fragments.FirmwareManageFragment getItem(int) -> a
    java.lang.CharSequence getPageTitle(int) -> getPageTitle
    int getCount() -> getCount
    java.lang.String[] getTabTextArray() -> a
    android.support.v4.app.Fragment getItem(int) -> getItem
com.inovance.ElevatorControl.adapters.MoveSidePagerAdapter -> com.inovance.ElevatorControl.adapters.MoveSidePagerAdapter:
    int PER_PAGER_SIZE -> b
    int[] floorsArray -> c
    org.holoeverywhere.app.Activity baseActivity -> d
    int contentViewHeight -> e
    int selectIndex -> f
    boolean firstRender -> g
    int currentPager -> a
    java.util.List gridViewAdapterList -> h
    com.inovance.ElevatorControl.adapters.MoveSidePagerAdapter$onSelectFloorListener selectListener -> i
    void setOnSelectFloorListener(com.inovance.ElevatorControl.adapters.MoveSidePagerAdapter$onSelectFloorListener) -> a
    void updateCurrentCalledFloor(java.util.List) -> a
    boolean isViewFromObject(android.view.View,java.lang.Object) -> a
    int getCount() -> a
    java.lang.Object instantiateItem(android.view.ViewGroup,int) -> a
    void destroyItem(android.view.ViewGroup,int,java.lang.Object) -> a
    int[] getFloors(int) -> c
    void getContentViewHeight() -> c
    int getPixelFromDimension(int) -> d
    int access$002(com.inovance.ElevatorControl.adapters.MoveSidePagerAdapter,int) -> a
    boolean access$102(com.inovance.ElevatorControl.adapters.MoveSidePagerAdapter,boolean) -> a
    com.inovance.ElevatorControl.adapters.MoveSidePagerAdapter$onSelectFloorListener access$200(com.inovance.ElevatorControl.adapters.MoveSidePagerAdapter) -> a
    int[] access$300(com.inovance.ElevatorControl.adapters.MoveSidePagerAdapter,int) -> b
    org.holoeverywhere.app.Activity access$400(com.inovance.ElevatorControl.adapters.MoveSidePagerAdapter) -> b
    int access$500(com.inovance.ElevatorControl.adapters.MoveSidePagerAdapter) -> c
    int access$000(com.inovance.ElevatorControl.adapters.MoveSidePagerAdapter) -> d
    boolean access$100(com.inovance.ElevatorControl.adapters.MoveSidePagerAdapter) -> e
com.inovance.ElevatorControl.adapters.MoveSidePagerAdapter$1 -> com.inovance.ElevatorControl.adapters.MoveSidePagerAdapter$1:
    com.inovance.ElevatorControl.adapters.MoveSidePagerAdapter$MoveSideGridViewAdapter val$adapter -> a
    com.inovance.ElevatorControl.adapters.MoveSidePagerAdapter this$0 -> b
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
com.inovance.ElevatorControl.adapters.MoveSidePagerAdapter$MoveSideGridViewAdapter -> com.inovance.ElevatorControl.adapters.MoveSidePagerAdapter$MoveSideGridViewAdapter:
    int[] calledFloors -> a
    int[] floors -> c
    com.inovance.ElevatorControl.adapters.MoveSidePagerAdapter this$0 -> b
    int getCount() -> getCount
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
com.inovance.ElevatorControl.adapters.MoveSidePagerAdapter$MoveSideGridViewAdapter$ViewHolder -> com.inovance.ElevatorControl.adapters.MoveSidePagerAdapter$MoveSideGridViewAdapter$ViewHolder:
    com.inovance.ElevatorControl.views.TypefaceTextView floorTextView -> a
    com.inovance.ElevatorControl.adapters.MoveSidePagerAdapter$MoveSideGridViewAdapter this$1 -> b
com.inovance.ElevatorControl.adapters.MoveSidePagerAdapter$onSelectFloorListener -> com.inovance.ElevatorControl.adapters.MoveSidePagerAdapter$onSelectFloorListener:
    void onSelect(int) -> a
com.inovance.ElevatorControl.adapters.ParameterStatusAdapter -> com.inovance.ElevatorControl.adapters.ParameterStatusAdapter:
    android.app.Activity activity -> a
    java.util.List statusItemList -> b
    java.lang.String[] statusTextArray -> c
    int getCount() -> getCount
    com.inovance.ElevatorControl.models.ParameterStatusItem getItem(int) -> a
    long getItemId(int) -> getItemId
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    java.lang.Object getItem(int) -> getItem
com.inovance.ElevatorControl.adapters.ParameterStatusAdapter$1 -> com.inovance.ElevatorControl.adapters.ParameterStatusAdapter$1:
com.inovance.ElevatorControl.adapters.ParameterStatusAdapter$ViewHolder -> com.inovance.ElevatorControl.adapters.ParameterStatusAdapter$ViewHolder:
    org.holoeverywhere.widget.TextView name -> a
    org.holoeverywhere.widget.TextView status -> b
    com.inovance.ElevatorControl.adapters.ParameterStatusAdapter this$0 -> c
com.inovance.ElevatorControl.adapters.ShortcutListViewAdapter -> com.inovance.ElevatorControl.adapters.ShortcutListViewAdapter:
    java.util.List shortcutList -> a
    org.holoeverywhere.app.Activity baseActivity -> b
    void setShortcutList(java.util.List) -> a
    int getCount() -> getCount
    com.inovance.ElevatorControl.models.Shortcut getItem(int) -> a
    long getItemId(int) -> getItemId
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    java.lang.Object getItem(int) -> getItem
com.inovance.ElevatorControl.adapters.ShortcutListViewAdapter$1 -> com.inovance.ElevatorControl.adapters.ShortcutListViewAdapter$1:
com.inovance.ElevatorControl.adapters.ShortcutListViewAdapter$ViewHolder -> com.inovance.ElevatorControl.adapters.ShortcutListViewAdapter$ViewHolder:
    org.holoeverywhere.widget.TextView mShortcutName -> a
    com.inovance.ElevatorControl.adapters.ShortcutListViewAdapter this$0 -> b
com.inovance.ElevatorControl.adapters.TroubleAnalyzeAdapter -> com.inovance.ElevatorControl.adapters.TroubleAnalyzeAdapter:
    android.support.v4.app.FragmentActivity fragmentActivity -> a
    java.util.List mFragments -> b
    java.lang.String[] titleArray -> c
    android.support.v4.app.Fragment getItem(int) -> getItem
    java.lang.CharSequence getPageTitle(int) -> getPageTitle
    int getCount() -> getCount
    void setFragmentActivity(android.support.v4.app.FragmentActivity) -> a
    java.lang.String[] getTabTextArray() -> a
com.inovance.ElevatorControl.cache.LruCacheTool -> com.inovance.ElevatorControl.cache.LruCacheTool:
    com.inovance.ElevatorControl.cache.SimpleDiskCache diskCache -> a
    com.inovance.ElevatorControl.cache.LruCacheTool ourInstance -> b
    com.inovance.ElevatorControl.cache.LruCacheTool getInstance() -> a
    void initCache(android.content.Context) -> a
com.inovance.ElevatorControl.cache.SimpleDiskCache -> com.inovance.ElevatorControl.cache.SimpleDiskCache:
    java.util.List usedDirs -> a
    com.jakewharton.disklrucache.DiskLruCache diskLruCache -> b
    com.inovance.ElevatorControl.cache.SimpleDiskCache open(java.io.File,int,long) -> a
com.inovance.ElevatorControl.config.ApplicationConfig -> com.inovance.ElevatorControl.config.ApplicationConfig:
    java.lang.String[] deviceType -> a
    int[] modifyType -> b
    java.lang.String[] stateFilters -> c
    java.lang.String[] normalFilters -> d
    java.lang.String[] outputFilters -> e
    java.lang.String[] inputFilters -> f
    java.lang.String[] moveInsideInfoName -> g
    java.lang.String[] moveOutsideInfoName -> h
    int[] DEFAULT_FLOORS -> i
    java.lang.String[] moveInsideName -> j
    java.lang.String[] moveOutsideName -> k
    java.lang.String[] MOVE_SIDE_CODE -> l
    java.lang.String[] ERROR_CODE_ARRAY -> m
    java.lang.String[] ERROR_NAME_ARRAY -> n
    int[] DESCRIPTION_TYPE -> o
com.inovance.ElevatorControl.daos.ErrorHelpDao -> com.inovance.ElevatorControl.daos.ErrorHelpDao:
    com.inovance.ElevatorControl.models.ErrorHelp findByDisplay(android.content.Context,java.lang.String) -> a
com.inovance.ElevatorControl.daos.FirmwareDao -> com.inovance.ElevatorControl.daos.FirmwareDao:
    void saveItem(android.content.Context,com.inovance.ElevatorControl.models.Firmware) -> a
com.inovance.ElevatorControl.daos.ParameterGroupSettingsDao -> com.inovance.ElevatorControl.daos.ParameterGroupSettingsDao:
    java.util.List findAll(android.content.Context) -> a
    com.inovance.ElevatorControl.models.ParameterGroupSettings findById(android.content.Context,int) -> a
com.inovance.ElevatorControl.daos.ParameterSettingsDao -> com.inovance.ElevatorControl.daos.ParameterSettingsDao:
    java.util.List findByNames(android.content.Context,java.lang.String[]) -> a
    java.util.List findByType(android.content.Context,int) -> a
com.inovance.ElevatorControl.daos.RealTimeMonitorDao -> com.inovance.ElevatorControl.daos.RealTimeMonitorDao:
    java.lang.String TAG -> a
    java.util.List findByType(android.content.Context,java.lang.String) -> a
    java.util.List findByNames(android.content.Context,java.lang.String[]) -> a
com.inovance.ElevatorControl.daos.RestoreFactoryDao -> com.inovance.ElevatorControl.daos.RestoreFactoryDao:
    boolean dbEmpty(android.content.Context) -> a
    void dbInit(android.content.Context) -> b
    void restoreFactoryParameterGroupSettings(android.content.Context) -> c
    void restoreFactoryRealTimeMonitor(android.content.Context) -> d
    void restoreFactoryErrorHelp(android.content.Context) -> e
com.inovance.ElevatorControl.daos.ShortcutDao -> com.inovance.ElevatorControl.daos.ShortcutDao:
    java.util.List findAll(android.content.Context) -> a
    void saveItem(android.content.Context,com.inovance.ElevatorControl.models.Shortcut) -> a
    void deleteItem(android.content.Context,com.inovance.ElevatorControl.models.Shortcut) -> b
    void updateItem(android.content.Context,com.inovance.ElevatorControl.models.Shortcut) -> c
com.inovance.ElevatorControl.handlers.ConfigurationHandler -> com.inovance.ElevatorControl.handlers.ConfigurationHandler:
    int sendCount -> c
    int receiveCount -> d
    java.util.List monitorList -> e
    void onMultiTalkBegin(android.os.Message) -> m
    void onMultiTalkEnd(android.os.Message) -> n
    void onTalkReceive(android.os.Message) -> j
    void onTalkError(android.os.Message) -> k
com.inovance.ElevatorControl.handlers.CurrentErrorHandler -> com.inovance.ElevatorControl.handlers.CurrentErrorHandler:
    com.inovance.ElevatorControl.models.ErrorHelp errorHelp -> d
    int sendCount -> c
    int receiveCount -> e
    void onMultiTalkBegin(android.os.Message) -> m
    void onMultiTalkEnd(android.os.Message) -> n
    void onTalkReceive(android.os.Message) -> j
    void onTalkError(android.os.Message) -> k
    android.app.Activity access$000(com.inovance.ElevatorControl.handlers.CurrentErrorHandler) -> a
com.inovance.ElevatorControl.handlers.CurrentErrorHandler$1 -> com.inovance.ElevatorControl.handlers.CurrentErrorHandler$1:
    com.inovance.ElevatorControl.handlers.CurrentErrorHandler this$0 -> a
    void onClick(android.view.View) -> onClick
com.inovance.ElevatorControl.handlers.HistoryErrorHandler -> com.inovance.ElevatorControl.handlers.HistoryErrorHandler:
    java.util.List errorList -> e
    int sendCount -> c
    int receiveCount -> d
    void onMultiTalkBegin(android.os.Message) -> m
    void onMultiTalkEnd(android.os.Message) -> n
    void onTalkReceive(android.os.Message) -> j
    void onTalkError(android.os.Message) -> k
    java.util.List access$000(com.inovance.ElevatorControl.handlers.HistoryErrorHandler) -> a
    android.app.Activity access$100(com.inovance.ElevatorControl.handlers.HistoryErrorHandler) -> b
    android.app.Activity access$300(com.inovance.ElevatorControl.handlers.HistoryErrorHandler) -> c
com.inovance.ElevatorControl.handlers.HistoryErrorHandler$1 -> com.inovance.ElevatorControl.handlers.HistoryErrorHandler$1:
    com.inovance.ElevatorControl.handlers.HistoryErrorHandler this$0 -> a
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
com.inovance.ElevatorControl.handlers.HistoryErrorHandler$HistoryAdapter -> com.inovance.ElevatorControl.handlers.HistoryErrorHandler$HistoryAdapter:
    com.inovance.ElevatorControl.handlers.HistoryErrorHandler this$0 -> a
    int getCount() -> getCount
    com.inovance.ElevatorControl.models.HistoryError getItem(int) -> a
    long getItemId(int) -> getItemId
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    java.lang.Object getItem(int) -> getItem
com.inovance.ElevatorControl.handlers.HistoryErrorHandler$HistoryAdapter$ViewHolder -> com.inovance.ElevatorControl.handlers.HistoryErrorHandler$HistoryAdapter$ViewHolder:
    org.holoeverywhere.widget.TextView errorCode -> a
    org.holoeverywhere.widget.TextView errorFloor -> b
    org.holoeverywhere.widget.TextView errorDate -> c
    com.inovance.ElevatorControl.handlers.HistoryErrorHandler$HistoryAdapter this$1 -> d
com.inovance.ElevatorControl.handlers.ParameterDetailHandler -> com.inovance.ElevatorControl.handlers.ParameterDetailHandler:
    int sendCount -> c
    int receiveCount -> d
    java.util.List tempList -> e
    void onMultiTalkBegin(android.os.Message) -> m
    void onMultiTalkEnd(android.os.Message) -> n
    void onTalkReceive(android.os.Message) -> j
    void onTalkError(android.os.Message) -> k
com.inovance.ElevatorControl.handlers.SearchBluetoothHandler -> com.inovance.ElevatorControl.handlers.SearchBluetoothHandler:
    java.lang.String TAG -> c
    com.inovance.ElevatorControl.activities.NavigationTabActivity mNavigationTabActivity -> d
    void onBeginPreparing(android.os.Message) -> a
    void onFoundDevice(android.os.Message) -> b
    void onKillBluetooth(android.os.Message) -> e
    void onPrepared(android.os.Message) -> f
    void onPrepError(android.os.Message) -> g
    void onDiscoveryFinished(android.os.Message) -> o
com.inovance.ElevatorControl.models.ErrorHelp -> com.inovance.ElevatorControl.models.ErrorHelp:
    java.lang.String display -> a
    java.lang.String name -> b
    java.lang.String productId -> c
    java.lang.String reason -> d
    java.lang.String childIda -> e
    java.lang.String childIdb -> f
    java.lang.String solution -> g
    java.lang.String level -> h
    boolean Valid -> i
    java.util.Date lastTime -> j
    void setValid(boolean) -> a
    void setLastTime(java.util.Date) -> a
    java.lang.String getDisplay() -> a
    void setDisplay(java.lang.String) -> a
    java.lang.String getName() -> b
    void setName(java.lang.String) -> b
    void setProductId(java.lang.String) -> c
    java.lang.String getReason() -> c
    void setReason(java.lang.String) -> d
    void setChildIda(java.lang.String) -> e
    void setChildIdb(java.lang.String) -> f
    java.lang.String getSolution() -> d
    void setSolution(java.lang.String) -> g
    java.lang.String getLevel() -> e
    void setLevel(java.lang.String) -> h
com.inovance.ElevatorControl.models.Firmware -> com.inovance.ElevatorControl.models.Firmware:
    int ID -> a
    java.lang.String bluetoothAddress -> b
    java.lang.String deviceID -> c
    boolean isSpecialDevice -> d
    java.lang.String remark -> e
    boolean isApproved -> f
    java.lang.String createDate -> g
    java.lang.String approveDate -> h
    java.lang.String approveRemark -> i
    java.lang.String fileURL -> j
    java.lang.String downloadDate -> k
    java.lang.String totalBurnTimes -> l
    int getID() -> a
    java.lang.String getApproveDate() -> b
com.inovance.ElevatorControl.models.GeneralDevice -> com.inovance.ElevatorControl.models.GeneralDevice:
    int ID -> a
    java.lang.String name -> b
    java.lang.String number -> c
    java.lang.String description -> d
    int getID() -> a
com.inovance.ElevatorControl.models.HistoryError -> com.inovance.ElevatorControl.models.HistoryError:
    java.lang.String TAG -> a
    java.lang.String errorCode -> b
    java.lang.String errorFloor -> c
    java.lang.String errorDateTime -> d
    boolean noError -> e
    java.lang.String getErrorCode() -> a
    java.lang.String getErrorFloor() -> b
    java.lang.String getErrorDateTime() -> c
    void setData(byte[]) -> a
    boolean isNoError() -> d
com.inovance.ElevatorControl.models.MoveInsideOutside -> com.inovance.ElevatorControl.models.MoveInsideOutside:
    java.lang.String name -> a
    java.util.List getInsideOutLists(android.content.Context) -> a
    void setName(java.lang.String) -> a
com.inovance.ElevatorControl.models.ObjectListHolder -> com.inovance.ElevatorControl.models.ObjectListHolder:
    java.util.List realTimeMonitorList -> a
    java.util.List parameterSettingsList -> b
    java.util.List getParameterSettingsList() -> a
    void setParameterSettingsList(java.util.List) -> a
    java.util.List getRealTimeMonitorList() -> b
    void setRealTimeMonitorList(java.util.List) -> b
com.inovance.ElevatorControl.models.ParameterDuplicate -> com.inovance.ElevatorControl.models.ParameterDuplicate:
    java.lang.String name -> a
    java.util.List getParamDuplicateLists(android.content.Context) -> a
    void setName(java.lang.String) -> a
com.inovance.ElevatorControl.models.ParameterGroupSettings -> com.inovance.ElevatorControl.models.ParameterGroupSettings:
    int Id -> a
    java.lang.String groupText -> b
    java.lang.String groupId -> c
    boolean Valid -> d
    java.util.Date lasttime -> e
    java.util.List settingsList -> f
    net.tsz.afinal.db.sqlite.OneToManyLazyLoader parametersettings -> g
    int getId() -> a
    java.lang.String getGroupId() -> b
    void setGroupId(java.lang.String) -> a
    void setValid(boolean) -> a
    void setLasttime(java.util.Date) -> a
    net.tsz.afinal.db.sqlite.OneToManyLazyLoader getParametersettings() -> c
    java.lang.String getGroupText() -> d
    void setGroupText(java.lang.String) -> b
    java.util.List getSettingsList() -> e
    void setSettingsList(java.util.List) -> a
com.inovance.ElevatorControl.models.ParameterSettings -> com.inovance.ElevatorControl.models.ParameterSettings:
    java.lang.String code -> a
    java.lang.String name -> b
    java.lang.String productId -> c
    java.lang.String description -> d
    java.lang.String childId -> e
    java.lang.String scope -> f
    java.lang.String defaultValue -> g
    java.lang.String scale -> h
    java.lang.String unit -> i
    java.lang.String type -> j
    java.lang.String tempScope -> k
    java.lang.String JSONDescription -> l
    java.lang.String userValue -> m
    java.lang.String hexValueString -> n
    int descriptiontype -> o
    java.lang.String mode -> p
    byte[] received -> q
    java.lang.String finalValue -> r
    int writeErrorCode -> s
    boolean elevatorRunning -> t
    com.inovance.ElevatorControl.models.ParameterGroupSettings parametergroupsettings -> u
    int ParseDescriptionToType(java.lang.String) -> a
    java.lang.String getCode() -> a
    java.lang.String getCodeText() -> b
    void setCode(java.lang.String) -> b
    java.lang.String getName() -> c
    void setName(java.lang.String) -> c
    java.lang.String getProductId() -> d
    void setProductId(java.lang.String) -> d
    java.lang.String getDescription() -> e
    void setDescription(java.lang.String) -> e
    java.lang.String getChildId() -> f
    void setChildId(java.lang.String) -> f
    java.lang.String getScope() -> g
    void setScope(java.lang.String) -> g
    java.lang.String getTempScope() -> h
    void setTempScope(java.lang.String) -> h
    java.lang.String getDefaultValue() -> i
    void setDefaultValue(java.lang.String) -> i
    java.lang.String getUserValue() -> j
    void setUserValue(java.lang.String) -> j
    java.lang.String getHexValueString() -> k
    void setHexValueString(java.lang.String) -> k
    java.lang.String getScale() -> l
    void setScale(java.lang.String) -> l
    java.lang.String getUnit() -> m
    void setUnit(java.lang.String) -> m
    java.lang.String getType() -> n
    void setType(java.lang.String) -> n
    java.lang.String getMode() -> o
    void setMode(java.lang.String) -> o
    void setParametergroupsettings(com.inovance.ElevatorControl.models.ParameterGroupSettings) -> a
    int getDescriptiontype() -> p
    void setDescriptiontype(int) -> a
    java.lang.Object clone() -> clone
    byte[] getReceived() -> q
    void setReceived(byte[]) -> a
    java.lang.String getFinalValue() -> r
    void setFinalValue(java.lang.String) -> p
    int getWriteErrorCode() -> s
    void setWriteErrorCode(int) -> b
    java.lang.String GenerateJSONDescription(java.lang.String) -> q
    java.lang.String getJSONDescription() -> t
    void setJSONDescription(java.lang.String) -> r
    boolean isElevatorRunning() -> u
    void setElevatorRunning(boolean) -> a
com.inovance.ElevatorControl.models.ParameterStatusItem -> com.inovance.ElevatorControl.models.ParameterStatusItem:
    java.lang.String id -> a
    java.lang.String name -> b
    boolean status -> c
    java.lang.String statusString -> d
    boolean canEdit -> e
    java.lang.String getId() -> a
    void setId(java.lang.String) -> a
    java.lang.String getName() -> b
    void setName(java.lang.String) -> b
    boolean getStatus() -> c
    void setStatus(boolean) -> a
    java.lang.String getStatusString() -> d
    void setStatusString(java.lang.String) -> c
    boolean getEditStatus() -> e
    void setCanEdit(boolean) -> b
com.inovance.ElevatorControl.models.Profile -> com.inovance.ElevatorControl.models.Profile:
    java.lang.String version -> a
    java.lang.String updateDate -> b
    java.lang.String fileName -> c
    java.lang.String getFileName() -> a
    void setFileName(java.lang.String) -> a
    void setVersion(java.lang.String) -> b
    java.lang.String getUpdateDate() -> b
    void setUpdateDate(java.lang.String) -> c
com.inovance.ElevatorControl.models.RealTimeMonitor -> com.inovance.ElevatorControl.models.RealTimeMonitor:
    java.lang.String code -> a
    java.lang.String name -> b
    java.lang.String productId -> c
    java.lang.String description -> d
    java.lang.String childId -> e
    java.lang.String scope -> f
    java.lang.String scale -> g
    java.lang.String unit -> h
    java.lang.String type -> i
    boolean showBit -> j
    byte[] combineBytes -> k
    int descriptionType -> l
    java.lang.String JSONDescription -> m
    boolean isValid -> n
    java.util.Date lastTime -> o
    byte[] received -> p
    int ParseDescriptionToType(java.lang.String) -> a
    java.lang.String getCode() -> a
    java.lang.String getCodeText() -> b
    void setCode(java.lang.String) -> b
    java.lang.String getName() -> c
    void setName(java.lang.String) -> c
    void setProductId(java.lang.String) -> d
    java.lang.String getDescription() -> d
    void setDescription(java.lang.String) -> e
    void setChildId(java.lang.String) -> f
    void setScope(java.lang.String) -> g
    java.lang.String getScale() -> e
    void setScale(java.lang.String) -> h
    java.lang.String getUnit() -> f
    void setUnit(java.lang.String) -> i
    void setType(java.lang.String) -> j
    void setLastTime(java.util.Date) -> a
    void setValid(boolean) -> a
    boolean isShowBit() -> g
    void setShowBit(boolean) -> b
    int getDescriptionType() -> h
    void setDescriptionType(int) -> a
    byte[] getReceived() -> i
    void setReceived(byte[]) -> a
    java.lang.String GenerateJSONDescription(java.lang.String) -> k
    java.lang.String getJSONDescription() -> j
    void setJSONDescription(java.lang.String) -> l
    byte[] getCombineBytes() -> k
    void setCombineBytes(byte[]) -> b
    java.lang.Object clone() -> clone
com.inovance.ElevatorControl.models.Shortcut -> com.inovance.ElevatorControl.models.Shortcut:
    java.lang.String name -> a
    java.lang.String command -> b
    java.lang.String getName() -> a
    void setName(java.lang.String) -> a
    java.lang.String getCommand() -> b
    void setCommand(java.lang.String) -> b
com.inovance.ElevatorControl.models.SpecialDevice -> com.inovance.ElevatorControl.models.SpecialDevice:
    int ID -> a
    java.lang.String name -> b
    java.lang.String displayName -> c
    java.lang.String number -> d
    int vendorID -> e
    java.lang.String description -> f
    java.lang.String getNumber() -> a
com.inovance.ElevatorControl.models.User -> com.inovance.ElevatorControl.models.User:
    java.lang.String name -> a
    java.lang.String company -> b
    java.lang.String cellPhone -> c
    java.lang.String telephone -> d
    java.lang.String email -> e
    java.lang.String bluetoothAddress -> f
    java.lang.String getName() -> a
    void setName(java.lang.String) -> a
    java.lang.String getCompany() -> b
    void setCompany(java.lang.String) -> b
    java.lang.String getCellPhone() -> c
    void setCellPhone(java.lang.String) -> c
    java.lang.String getTelephone() -> d
    void setTelephone(java.lang.String) -> d
    java.lang.String getEmail() -> e
    void setEmail(java.lang.String) -> e
    java.lang.String getBluetoothAddress() -> f
    void setBluetoothAddress(java.lang.String) -> f
com.inovance.ElevatorControl.models.Vendor -> com.inovance.ElevatorControl.models.Vendor:
    java.lang.String serialNumber -> a
    java.lang.String name -> b
    java.lang.String getSerialNumber() -> a
    void setSerialNumber(java.lang.String) -> a
    java.lang.String getName() -> b
    void setName(java.lang.String) -> b
com.inovance.ElevatorControl.utils.AssetUtils -> com.inovance.ElevatorControl.utils.AssetUtils:
    java.lang.String readDefaultFunCode(android.content.Context,java.lang.String) -> a
com.inovance.ElevatorControl.utils.GenerateJSON -> com.inovance.ElevatorControl.utils.GenerateJSON:
    com.inovance.ElevatorControl.utils.GenerateJSON ourInstance -> a
    com.inovance.ElevatorControl.utils.GenerateJSON getInstance() -> a
    java.lang.String generateProfileJSON(java.util.List) -> a
com.inovance.ElevatorControl.utils.ParseSerialsUtils -> com.inovance.ElevatorControl.utils.ParseSerialsUtils:
    java.lang.String TAG -> a
    java.lang.String getValueTextFromRealTimeMonitor(com.inovance.ElevatorControl.models.RealTimeMonitor) -> a
    java.lang.String getValueTextFromParameterSetting(com.inovance.ElevatorControl.models.ParameterSettings) -> a
    java.lang.String getCalculatedCode(com.inovance.ElevatorControl.models.ParameterSettings) -> b
    int getIntFromBytes(byte[]) -> a
    int getIntValueFromBytesInSection(byte[],int[]) -> a
    java.lang.String getErrorCode(byte[]) -> b
    int getElevatorBoxStatusCode(com.inovance.ElevatorControl.models.RealTimeMonitor) -> b
    int getSystemStatusCode(com.inovance.ElevatorControl.models.RealTimeMonitor) -> c
    boolean isInteger(java.lang.String) -> a
    byte[] concatenateByteArrays(byte[],byte[]) -> a
    java.lang.String reverseString(java.lang.String) -> b
com.inovance.ElevatorControl.views.DoorAnimationView -> com.inovance.ElevatorControl.views.DoorAnimationView:
    java.lang.String TAG -> b
    android.view.View leftDoor -> c
    android.view.View rightDoor -> d
    com.inovance.ElevatorControl.views.TypefaceTextView currentFloor -> e
    android.widget.ImageView currentDirection -> f
    int DOOR_OPEN -> g
    int DOOR_CLOSE -> h
    int doorStatus -> i
    boolean animating -> a
    void onMeasure(int,int) -> onMeasure
    void setCurrentFloor(int) -> setCurrentFloor
    void setCurrentDirection(int) -> setCurrentDirection
    void openDoor() -> a
    void closeDoor() -> b
    void setStatus(boolean) -> setStatus
    int access$002(com.inovance.ElevatorControl.views.DoorAnimationView,int) -> a
    int access$100(com.inovance.ElevatorControl.views.DoorAnimationView) -> a
    int access$200(com.inovance.ElevatorControl.views.DoorAnimationView) -> b
com.inovance.ElevatorControl.views.DoorAnimationView$1 -> com.inovance.ElevatorControl.views.DoorAnimationView$1:
    com.inovance.ElevatorControl.views.DoorAnimationView this$0 -> a
    void onAnimationStart(android.view.animation.Animation) -> onAnimationStart
    void onAnimationEnd(android.view.animation.Animation) -> onAnimationEnd
    void onAnimationRepeat(android.view.animation.Animation) -> onAnimationRepeat
com.inovance.ElevatorControl.views.DoorAnimationView$2 -> com.inovance.ElevatorControl.views.DoorAnimationView$2:
    com.inovance.ElevatorControl.views.DoorAnimationView this$0 -> a
    void onAnimationStart(android.view.animation.Animation) -> onAnimationStart
    void onAnimationEnd(android.view.animation.Animation) -> onAnimationEnd
    void onAnimationRepeat(android.view.animation.Animation) -> onAnimationRepeat
com.inovance.ElevatorControl.views.DoorAnimationView$3 -> com.inovance.ElevatorControl.views.DoorAnimationView$3:
    com.inovance.ElevatorControl.views.DoorAnimationView this$0 -> a
    void onAnimationStart(android.view.animation.Animation) -> onAnimationStart
    void onAnimationEnd(android.view.animation.Animation) -> onAnimationEnd
    void onAnimationRepeat(android.view.animation.Animation) -> onAnimationRepeat
com.inovance.ElevatorControl.views.DoorAnimationView$4 -> com.inovance.ElevatorControl.views.DoorAnimationView$4:
    com.inovance.ElevatorControl.views.DoorAnimationView this$0 -> a
    void onAnimationStart(android.view.animation.Animation) -> onAnimationStart
    void onAnimationEnd(android.view.animation.Animation) -> onAnimationEnd
    void onAnimationRepeat(android.view.animation.Animation) -> onAnimationRepeat
com.inovance.ElevatorControl.views.TintedImageButton -> com.inovance.ElevatorControl.views.TintedImageButton:
    void drawableStateChanged() -> drawableStateChanged
com.inovance.ElevatorControl.views.TypefaceTextView -> com.inovance.ElevatorControl.views.TypefaceTextView:
    java.util.Map mTypefaces -> a
com.inovance.ElevatorControl.views.customspinner.HCustomSpinner -> com.inovance.ElevatorControl.views.customspinner.HCustomSpinner:
    android.widget.PopupWindow popup -> a
    com.inovance.ElevatorControl.views.customspinner.HCustomSpinner topButton -> c
    com.inovance.ElevatorControl.views.customspinner.HCustomSpinner$CornerListView mListView -> b
    com.inovance.ElevatorControl.views.customspinner.HCustomSpinner$ArrowView arrow -> d
    com.inovance.ElevatorControl.views.customspinner.HCustomSpinner$OnItemSelectedListener changListener -> e
    android.content.Context mContext -> f
    com.inovance.ElevatorControl.views.customspinner.HDropListener onPopup -> g
    void initView(android.content.Context) -> b
    void initPopupWindow(android.content.Context) -> a
    void dismiss() -> a
    void setTopText(android.widget.ListAdapter) -> setTopText
    java.lang.String getSelectedText() -> getSelectedText
    void setSelectedText(java.lang.String) -> setSelectedText
    void setAdapter(android.widget.ListAdapter) -> setAdapter
    void setOnItemSelectedListener(com.inovance.ElevatorControl.views.customspinner.HCustomSpinner$OnItemSelectedListener) -> setOnItemSelectedListener
    com.inovance.ElevatorControl.views.customspinner.HDropListener getOnPopup() -> getOnPopup
    void setOnPopup(com.inovance.ElevatorControl.views.customspinner.HDropListener) -> setOnPopup
    com.inovance.ElevatorControl.views.customspinner.HDropListener access$000(com.inovance.ElevatorControl.views.customspinner.HCustomSpinner) -> a
    com.inovance.ElevatorControl.views.customspinner.HCustomSpinner access$100(com.inovance.ElevatorControl.views.customspinner.HCustomSpinner) -> b
    com.inovance.ElevatorControl.views.customspinner.HCustomSpinner$OnItemSelectedListener access$200(com.inovance.ElevatorControl.views.customspinner.HCustomSpinner) -> c
com.inovance.ElevatorControl.views.customspinner.HCustomSpinner$1 -> com.inovance.ElevatorControl.views.customspinner.HCustomSpinner$1:
    android.content.Context val$c -> a
    com.inovance.ElevatorControl.views.customspinner.HCustomSpinner this$0 -> b
    void onClick(android.view.View) -> onClick
com.inovance.ElevatorControl.views.customspinner.HCustomSpinner$2 -> com.inovance.ElevatorControl.views.customspinner.HCustomSpinner$2:
    com.inovance.ElevatorControl.views.customspinner.HCustomSpinner this$0 -> a
    boolean onLongClick(android.view.View) -> onLongClick
com.inovance.ElevatorControl.views.customspinner.HCustomSpinner$3 -> com.inovance.ElevatorControl.views.customspinner.HCustomSpinner$3:
    com.inovance.ElevatorControl.views.customspinner.HCustomSpinner this$0 -> a
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
com.inovance.ElevatorControl.views.customspinner.HCustomSpinner$ArrowView -> com.inovance.ElevatorControl.views.customspinner.HCustomSpinner$ArrowView:
    int width -> c
    int height -> d
    android.graphics.drawable.ShapeDrawable shape -> a
    com.inovance.ElevatorControl.views.customspinner.HCustomSpinner this$0 -> b
    void setColor(int) -> setColor
    android.graphics.drawable.Drawable getDrawable() -> getDrawable
com.inovance.ElevatorControl.views.customspinner.HCustomSpinner$CornerListView -> com.inovance.ElevatorControl.views.customspinner.HCustomSpinner$CornerListView:
    com.inovance.ElevatorControl.views.customspinner.HCustomSpinner this$0 -> a
    boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
com.inovance.ElevatorControl.views.customspinner.HCustomSpinner$OnItemSelectedListener -> com.inovance.ElevatorControl.views.customspinner.HCustomSpinner$OnItemSelectedListener:
    void onItemSelected(android.widget.AdapterView,android.view.View,int,long) -> a
com.inovance.ElevatorControl.views.customspinner.HDropListener -> com.inovance.ElevatorControl.views.customspinner.HDropListener:
    void onPopup() -> a
    void onRefresh() -> b
com.inovance.ElevatorControl.views.customspinner.NoDefaultSpinner -> com.inovance.ElevatorControl.views.customspinner.NoDefaultSpinner:
    int spinnerItemLayoutID -> a
    void setSpinnerItemLayout(int) -> setSpinnerItemLayout
    void setAdapter(android.widget.SpinnerAdapter) -> setAdapter
    android.widget.SpinnerAdapter newProxy(android.widget.SpinnerAdapter) -> a
    void setAdapter(android.widget.Adapter) -> setAdapter
    int access$000(com.inovance.ElevatorControl.views.customspinner.NoDefaultSpinner) -> a
com.inovance.ElevatorControl.views.customspinner.NoDefaultSpinner$SpinnerAdapterProxy -> com.inovance.ElevatorControl.views.customspinner.NoDefaultSpinner$SpinnerAdapterProxy:
    android.widget.SpinnerAdapter obj -> a
    java.lang.reflect.Method getView -> b
    com.inovance.ElevatorControl.views.customspinner.NoDefaultSpinner this$0 -> c
    java.lang.Object invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object[]) -> invoke
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> a
com.inovance.ElevatorControl.views.dialogs.CustomDialog -> com.inovance.ElevatorControl.views.dialogs.CustomDialog:
    boolean $assertionsDisabled -> a
    android.app.AlertDialog$Builder terminalDetailDialog(android.app.Activity,com.inovance.ElevatorControl.models.RealTimeMonitor) -> a
    android.app.AlertDialog$Builder parameterDetailDialog(android.app.Activity,com.inovance.ElevatorControl.models.ParameterSettings) -> a
    android.app.AlertDialog$Builder exitDialog(android.app.Activity) -> a
    android.app.AlertDialog$Builder historyErrorDialog(com.inovance.ElevatorControl.models.HistoryError,android.app.Activity) -> a
com.inovance.ElevatorControl.views.dialogs.CustomDialog$1 -> com.inovance.ElevatorControl.views.dialogs.CustomDialog$1:
    org.holoeverywhere.widget.ListView val$listView -> a
    com.inovance.ElevatorControl.adapters.CheckedListViewAdapter val$adapter -> b
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
com.inovance.ElevatorControl.views.dialogs.CustomDialog$2 -> com.inovance.ElevatorControl.views.dialogs.CustomDialog$2:
    android.app.Activity val$activity -> a
    void onClick(android.content.DialogInterface,int) -> onClick
com.inovance.ElevatorControl.views.dialogs.CustomDialog$3 -> com.inovance.ElevatorControl.views.dialogs.CustomDialog$3:
    void onClick(android.content.DialogInterface,int) -> onClick
com.inovance.ElevatorControl.views.fragments.ConfigurationFragment -> com.inovance.ElevatorControl.views.fragments.ConfigurationFragment:
    java.lang.String TAG -> b
    int tabIndex -> c
    int layoutId -> d
    android.content.Context context -> e
    com.mobsandgeeks.adapters.InstantAdapter monitorInstantAdapter -> a
    java.util.List monitorList -> f
    org.holoeverywhere.widget.ListView monitorListView -> g
    boolean hasBindListListener -> h
    com.inovance.ElevatorControl.views.fragments.ConfigurationFragment newInstance(int,android.content.Context) -> a
    void onResume() -> onResume
    void onCreate(android.os.Bundle) -> onCreate
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    void loadMonitorView() -> a
    void syncMonitorViewData(java.util.List) -> a
    void loadSettingView() -> b
    void loadDebugView() -> c
    void loadDuplicateView() -> d
    java.util.List access$000(com.inovance.ElevatorControl.views.fragments.ConfigurationFragment) -> a
com.inovance.ElevatorControl.views.fragments.ConfigurationFragment$1 -> com.inovance.ElevatorControl.views.fragments.ConfigurationFragment$1:
    com.inovance.ElevatorControl.views.fragments.ConfigurationFragment this$0 -> a
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
com.inovance.ElevatorControl.views.fragments.ConfigurationFragment$2 -> com.inovance.ElevatorControl.views.fragments.ConfigurationFragment$2:
    java.util.List val$settingsList -> a
    com.inovance.ElevatorControl.views.fragments.ConfigurationFragment this$0 -> b
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
com.inovance.ElevatorControl.views.fragments.ConfigurationFragment$3 -> com.inovance.ElevatorControl.views.fragments.ConfigurationFragment$3:
    com.inovance.ElevatorControl.views.fragments.ConfigurationFragment this$0 -> a
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
com.inovance.ElevatorControl.views.fragments.ConfigurationFragment$4 -> com.inovance.ElevatorControl.views.fragments.ConfigurationFragment$4:
    com.inovance.ElevatorControl.views.fragments.ConfigurationFragment this$0 -> a
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
com.inovance.ElevatorControl.views.fragments.ConfigurationFragment$4$1 -> com.inovance.ElevatorControl.views.fragments.ConfigurationFragment$4$1:
    com.inovance.ElevatorControl.views.fragments.ConfigurationFragment$4 this$1 -> a
    void onClick(android.content.DialogInterface,int) -> onClick
com.inovance.ElevatorControl.views.fragments.ConfigurationFragment$4$1$1 -> com.inovance.ElevatorControl.views.fragments.ConfigurationFragment$4$1$1:
    com.inovance.ElevatorControl.views.fragments.ConfigurationFragment$4$1 this$2 -> a
    void beforeSend() -> a
    void afterSend() -> b
    void afterReceive() -> c
    java.lang.Object onParse() -> d
com.inovance.ElevatorControl.views.fragments.FirmwareManageFragment -> com.inovance.ElevatorControl.views.fragments.FirmwareManageFragment:
    java.lang.String TAG -> a
    int tabIndex -> b
    int layoutId -> c
    android.content.Context context -> d
    org.holoeverywhere.widget.AutoCompleteTextView vendorSelectView -> e
    org.holoeverywhere.widget.TextView generalApply -> f
    org.holoeverywhere.widget.TextView specialApply -> g
    org.holoeverywhere.widget.LinearLayout vendorView -> h
    org.holoeverywhere.widget.Spinner deviceSelectView -> i
    org.holoeverywhere.widget.EditText remarkEditText -> j
    android.view.View submitView -> k
    android.view.View progressView -> l
    android.view.View submitTextView -> m
    java.util.List vendorList -> n
    java.util.List generalDeviceList -> o
    java.util.List specialDeviceList -> p
    org.holoeverywhere.widget.LinearLayout downloadListLoadView -> q
    org.holoeverywhere.widget.ListView firmwareDownloadListView -> r
    android.app.AlertDialog downloadDialog -> s
    com.inovance.ElevatorControl.models.Firmware firmware -> t
    com.inovance.ElevatorControl.views.fragments.FirmwareManageFragment newInstance(int,android.content.Context) -> a
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    void onResume() -> onResume
    void loadFirmwareApplyView() -> a
    void loadFirmwareDownloadView() -> b
    void loadFirmwareBurnView() -> c
    void downloadFirmware(com.inovance.ElevatorControl.models.Firmware) -> a
    void onResult(java.lang.String,java.lang.String) -> a
    void onFailure(int,java.lang.Throwable) -> a
    boolean createDirIfNotExists(java.lang.String) -> a
    java.util.List access$000(com.inovance.ElevatorControl.views.fragments.FirmwareManageFragment) -> a
    android.view.View access$100(com.inovance.ElevatorControl.views.fragments.FirmwareManageFragment) -> b
    org.holoeverywhere.widget.TextView access$200(com.inovance.ElevatorControl.views.fragments.FirmwareManageFragment) -> c
    org.holoeverywhere.widget.TextView access$300(com.inovance.ElevatorControl.views.fragments.FirmwareManageFragment) -> d
    org.holoeverywhere.widget.LinearLayout access$400(com.inovance.ElevatorControl.views.fragments.FirmwareManageFragment) -> e
    org.holoeverywhere.widget.Spinner access$500(com.inovance.ElevatorControl.views.fragments.FirmwareManageFragment) -> f
    java.util.List access$600(com.inovance.ElevatorControl.views.fragments.FirmwareManageFragment) -> g
    org.holoeverywhere.widget.EditText access$700(com.inovance.ElevatorControl.views.fragments.FirmwareManageFragment) -> h
    android.view.View access$800(com.inovance.ElevatorControl.views.fragments.FirmwareManageFragment) -> i
    android.view.View access$900(com.inovance.ElevatorControl.views.fragments.FirmwareManageFragment) -> j
    java.util.List access$1000(com.inovance.ElevatorControl.views.fragments.FirmwareManageFragment) -> k
    void access$1100(com.inovance.ElevatorControl.views.fragments.FirmwareManageFragment,com.inovance.ElevatorControl.models.Firmware) -> a
com.inovance.ElevatorControl.views.fragments.FirmwareManageFragment$1 -> com.inovance.ElevatorControl.views.fragments.FirmwareManageFragment$1:
    com.inovance.ElevatorControl.views.fragments.FirmwareManageFragment this$0 -> a
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
com.inovance.ElevatorControl.views.fragments.FirmwareManageFragment$2 -> com.inovance.ElevatorControl.views.fragments.FirmwareManageFragment$2:
    com.inovance.ElevatorControl.views.fragments.FirmwareManageFragment this$0 -> a
    void onClick(android.view.View) -> onClick
com.inovance.ElevatorControl.views.fragments.FirmwareManageFragment$3 -> com.inovance.ElevatorControl.views.fragments.FirmwareManageFragment$3:
    com.inovance.ElevatorControl.views.fragments.FirmwareManageFragment this$0 -> a
    void onClick(android.view.View) -> onClick
com.inovance.ElevatorControl.views.fragments.FirmwareManageFragment$4 -> com.inovance.ElevatorControl.views.fragments.FirmwareManageFragment$4:
    com.inovance.ElevatorControl.views.fragments.FirmwareManageFragment this$0 -> a
    void onClick(android.view.View) -> onClick
com.inovance.ElevatorControl.views.fragments.FirmwareManageFragment$5 -> com.inovance.ElevatorControl.views.fragments.FirmwareManageFragment$5:
    com.inovance.ElevatorControl.views.fragments.FirmwareManageFragment this$0 -> a
    void onClick(int,com.inovance.ElevatorControl.models.Firmware) -> a
com.inovance.ElevatorControl.views.fragments.TroubleAnalyzeFragment -> com.inovance.ElevatorControl.views.fragments.TroubleAnalyzeFragment:
    java.lang.String TAG -> a
    int tabIndex -> b
    int layoutId -> c
    android.content.Context context -> d
    com.inovance.ElevatorControl.views.fragments.TroubleAnalyzeFragment newInstance(int,android.content.Context) -> a
    void onResume() -> onResume
    void loadSearchTroubleView() -> a
    boolean isNumeric(java.lang.String) -> a
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
com.inovance.ElevatorControl.views.fragments.TroubleAnalyzeFragment$1 -> com.inovance.ElevatorControl.views.fragments.TroubleAnalyzeFragment$1:
    android.widget.EditText val$searchEditText -> a
    android.widget.TextView val$errorCode -> b
    android.widget.TextView val$level -> c
    android.widget.TextView val$name -> d
    android.widget.TextView val$reason -> e
    android.widget.TextView val$solution -> f
    android.view.View val$contentContainer -> g
    com.inovance.ElevatorControl.views.fragments.TroubleAnalyzeFragment this$0 -> h
    boolean onEditorAction(android.widget.TextView,int,android.view.KeyEvent) -> onEditorAction
com.inovance.ElevatorControl.views.viewpager.ExtendedWebView -> com.inovance.ElevatorControl.views.viewpager.ExtendedWebView:
    boolean canScrollVertical(int) -> a
com.inovance.ElevatorControl.views.viewpager.PagerAdapter -> com.inovance.ElevatorControl.views.viewpager.PagerAdapter:
    android.database.DataSetObservable mObservable -> a
    int getCount() -> a
    void startUpdate(android.view.ViewGroup) -> a
    java.lang.Object instantiateItem(android.view.ViewGroup,int) -> a
    void destroyItem(android.view.ViewGroup,int,java.lang.Object) -> a
    void setPrimaryItem(android.view.ViewGroup,int,java.lang.Object) -> b
    void finishUpdate(android.view.ViewGroup) -> b
    void startUpdate(android.view.View) -> a
    java.lang.Object instantiateItem(android.view.View,int) -> a
    void destroyItem(android.view.View,int,java.lang.Object) -> a
    void setPrimaryItem(android.view.View,int,java.lang.Object) -> b
    void finishUpdate(android.view.View) -> b
    boolean isViewFromObject(android.view.View,java.lang.Object) -> a
    android.os.Parcelable saveState() -> b
    void restoreState(android.os.Parcelable,java.lang.ClassLoader) -> a
    int getItemPosition(java.lang.Object) -> a
    void registerDataSetObserver(android.database.DataSetObserver) -> a
    void unregisterDataSetObserver(android.database.DataSetObserver) -> b
    float getPageWidth(int) -> a
    float getPageHeight(int) -> b
com.inovance.ElevatorControl.views.viewpager.VerticalViewPager -> com.inovance.ElevatorControl.views.viewpager.VerticalViewPager:
    int[] LAYOUT_ATTRS -> a
    java.util.Comparator COMPARATOR -> b
    android.view.animation.Interpolator sInterpolator -> c
    java.util.ArrayList mItems -> d
    com.inovance.ElevatorControl.views.viewpager.VerticalViewPager$ItemInfo mTempItem -> e
    android.graphics.Rect mTempRect -> f
    com.inovance.ElevatorControl.views.viewpager.PagerAdapter mAdapter -> g
    int mCurItem -> h
    int mRestoredCurItem -> i
    android.os.Parcelable mRestoredAdapterState -> j
    java.lang.ClassLoader mRestoredClassLoader -> k
    android.widget.Scroller mScroller -> l
    com.inovance.ElevatorControl.views.viewpager.VerticalViewPager$PagerObserver mObserver -> m
    int mPageMargin -> n
    android.graphics.drawable.Drawable mMarginDrawable -> o
    int mLeftPageBounds -> p
    int mRightPageBounds -> q
    float mFirstOffset -> r
    float mLastOffset -> s
    int mChildWidthMeasureSpec -> t
    boolean mInLayout -> u
    boolean mScrollingCacheEnabled -> v
    boolean mPopulatePending -> w
    int mOffscreenPageLimit -> x
    boolean mIsBeingDragged -> y
    boolean mIsUnableToDrag -> z
    int mDefaultGutterSize -> A
    int mGutterSize -> B
    int mTouchSlop -> C
    float mInitialMotionX -> D
    float mInitialMotionY -> E
    float mLastMotionX -> F
    float mLastMotionY -> G
    int mActivePointerId -> H
    android.view.VelocityTracker mVelocityTracker -> I
    int mMinimumVelocity -> J
    int mMaximumVelocity -> K
    int mFlingDistance -> L
    int mCloseEnough -> M
    int mSeenPositionMin -> N
    int mSeenPositionMax -> O
    boolean mFakeDragging -> P
    android.support.v4.widget.EdgeEffectCompat mTopEdge -> Q
    android.support.v4.widget.EdgeEffectCompat mBottomEdge -> R
    boolean mFirstLayout -> S
    boolean mCalledSuper -> T
    int mDecorChildCount -> U
    com.inovance.ElevatorControl.views.viewpager.VerticalViewPager$OnPageChangeListener mOnPageChangeListener -> V
    com.inovance.ElevatorControl.views.viewpager.VerticalViewPager$OnPageChangeListener mInternalPageChangeListener -> W
    com.inovance.ElevatorControl.views.viewpager.VerticalViewPager$OnAdapterChangeListener mAdapterChangeListener -> Z
    com.inovance.ElevatorControl.views.viewpager.VerticalViewPager$PageTransformer mPageTransformer -> aa
    java.lang.reflect.Method mSetChildrenDrawingOrderEnabled -> ab
    int mDrawingOrder -> ac
    java.util.ArrayList mDrawingOrderedChildren -> ad
    com.inovance.ElevatorControl.views.viewpager.VerticalViewPager$ViewPositionComparator sPositionComparator -> ae
    java.lang.Runnable mEndScrollRunnable -> af
    int mScrollState -> ag
    void initViewPager() -> a
    void onDetachedFromWindow() -> onDetachedFromWindow
    void setScrollState(int) -> setScrollState
    void setAdapter(com.inovance.ElevatorControl.views.viewpager.PagerAdapter) -> setAdapter
    void removeNonDecorViews() -> g
    com.inovance.ElevatorControl.views.viewpager.PagerAdapter getAdapter() -> getAdapter
    void setOnAdapterChangeListener(com.inovance.ElevatorControl.views.viewpager.VerticalViewPager$OnAdapterChangeListener) -> setOnAdapterChangeListener
    void setCurrentItem(int) -> setCurrentItem
    void setCurrentItem(int,boolean) -> a
    int getCurrentItem() -> getCurrentItem
    void setCurrentItemInternal(int,boolean,boolean) -> a
    void setCurrentItemInternal(int,boolean,boolean,int) -> a
    void scrollToItem(int,boolean,int,boolean) -> a
    void setOnPageChangeListener(com.inovance.ElevatorControl.views.viewpager.VerticalViewPager$OnPageChangeListener) -> setOnPageChangeListener
    void setChildrenDrawingOrderEnabledCompat(boolean) -> setChildrenDrawingOrderEnabledCompat
    int getChildDrawingOrder(int,int) -> getChildDrawingOrder
    int getOffscreenPageLimit() -> getOffscreenPageLimit
    void setOffscreenPageLimit(int) -> setOffscreenPageLimit
    void setPageMargin(int) -> setPageMargin
    int getPageMargin() -> getPageMargin
    void setPageMarginDrawable(android.graphics.drawable.Drawable) -> setPageMarginDrawable
    void setPageMarginDrawable(int) -> setPageMarginDrawable
    boolean verifyDrawable(android.graphics.drawable.Drawable) -> verifyDrawable
    void drawableStateChanged() -> drawableStateChanged
    float distanceInfluenceForSnapDuration(float) -> a
    void smoothScrollTo(int,int,int) -> a
    com.inovance.ElevatorControl.views.viewpager.VerticalViewPager$ItemInfo addNewItem(int,int) -> a
    void dataSetChanged() -> b
    void populate() -> c
    void populate(int) -> a
    void calculatePageOffsets(com.inovance.ElevatorControl.views.viewpager.VerticalViewPager$ItemInfo,int,com.inovance.ElevatorControl.views.viewpager.VerticalViewPager$ItemInfo) -> a
    android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    void addView(android.view.View,int,android.view.ViewGroup$LayoutParams) -> addView
    com.inovance.ElevatorControl.views.viewpager.VerticalViewPager$ItemInfo infoForChild(android.view.View) -> a
    com.inovance.ElevatorControl.views.viewpager.VerticalViewPager$ItemInfo infoForAnyChild(android.view.View) -> b
    com.inovance.ElevatorControl.views.viewpager.VerticalViewPager$ItemInfo infoForPosition(int) -> b
    void onAttachedToWindow() -> onAttachedToWindow
    void onMeasure(int,int) -> onMeasure
    void onSizeChanged(int,int,int,int) -> onSizeChanged
    void recomputeScrollPosition(int,int,int,int) -> a
    void onLayout(boolean,int,int,int,int) -> onLayout
    void computeScroll() -> computeScroll
    boolean pageScrolled(int) -> d
    void onPageScrolled(int,float,int) -> a
    void completeScroll(boolean) -> a
    boolean isGutterDrag(float,float) -> a
    void enableLayers(boolean) -> b
    boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    boolean performDrag(float) -> b
    com.inovance.ElevatorControl.views.viewpager.VerticalViewPager$ItemInfo infoForCurrentScrollPosition() -> h
    int determineTargetPage(int,float,int,int) -> a
    void draw(android.graphics.Canvas) -> draw
    void onDraw(android.graphics.Canvas) -> onDraw
    void onSecondaryPointerUp(android.view.MotionEvent) -> a
    void endDrag() -> i
    void setScrollingCacheEnabled(boolean) -> setScrollingCacheEnabled
    boolean canScroll(android.view.View,boolean,int,int,int) -> a
    boolean dispatchKeyEvent(android.view.KeyEvent) -> dispatchKeyEvent
    boolean executeKeyEvent(android.view.KeyEvent) -> a
    boolean arrowScroll(int) -> c
    android.graphics.Rect getChildRectInPagerCoordinates(android.graphics.Rect,android.view.View) -> a
    boolean pageUp() -> d
    boolean pageDown() -> e
    void addFocusables(java.util.ArrayList,int,int) -> addFocusables
    void addTouchables(java.util.ArrayList) -> addTouchables
    boolean onRequestFocusInDescendants(int,android.graphics.Rect) -> onRequestFocusInDescendants
    boolean dispatchPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    android.view.ViewGroup$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    boolean checkLayoutParams(android.view.ViewGroup$LayoutParams) -> checkLayoutParams
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    void access$000(com.inovance.ElevatorControl.views.viewpager.VerticalViewPager,int) -> a
    com.inovance.ElevatorControl.views.viewpager.PagerAdapter access$200(com.inovance.ElevatorControl.views.viewpager.VerticalViewPager) -> a
    int access$300(com.inovance.ElevatorControl.views.viewpager.VerticalViewPager) -> b
    int[] access$400() -> f
com.inovance.ElevatorControl.views.viewpager.VerticalViewPager$1 -> com.inovance.ElevatorControl.views.viewpager.VerticalViewPager$1:
    int compare(com.inovance.ElevatorControl.views.viewpager.VerticalViewPager$ItemInfo,com.inovance.ElevatorControl.views.viewpager.VerticalViewPager$ItemInfo) -> a
    int compare(java.lang.Object,java.lang.Object) -> compare
com.inovance.ElevatorControl.views.viewpager.VerticalViewPager$2 -> com.inovance.ElevatorControl.views.viewpager.VerticalViewPager$2:
    float getInterpolation(float) -> getInterpolation
com.inovance.ElevatorControl.views.viewpager.VerticalViewPager$3 -> com.inovance.ElevatorControl.views.viewpager.VerticalViewPager$3:
    com.inovance.ElevatorControl.views.viewpager.VerticalViewPager this$0 -> a
    void run() -> run
com.inovance.ElevatorControl.views.viewpager.VerticalViewPager$Decor -> com.inovance.ElevatorControl.views.viewpager.VerticalViewPager$Decor:
com.inovance.ElevatorControl.views.viewpager.VerticalViewPager$ItemInfo -> com.inovance.ElevatorControl.views.viewpager.VerticalViewPager$ItemInfo:
    java.lang.Object object -> a
    int position -> b
    boolean scrolling -> c
    float widthFactor -> d
    float heightFactor -> e
    float offset -> f
com.inovance.ElevatorControl.views.viewpager.VerticalViewPager$LayoutParams -> com.inovance.ElevatorControl.views.viewpager.VerticalViewPager$LayoutParams:
    boolean isDecor -> a
    int gravity -> b
    float widthFactor -> c
    float heightFactor -> d
    boolean needsMeasure -> e
    int position -> f
    int childIndex -> g
com.inovance.ElevatorControl.views.viewpager.VerticalViewPager$MyAccessibilityDelegate -> com.inovance.ElevatorControl.views.viewpager.VerticalViewPager$MyAccessibilityDelegate:
    com.inovance.ElevatorControl.views.viewpager.VerticalViewPager this$0 -> a
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
    boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> performAccessibilityAction
com.inovance.ElevatorControl.views.viewpager.VerticalViewPager$OnAdapterChangeListener -> com.inovance.ElevatorControl.views.viewpager.VerticalViewPager$OnAdapterChangeListener:
    void onAdapterChanged(com.inovance.ElevatorControl.views.viewpager.PagerAdapter,com.inovance.ElevatorControl.views.viewpager.PagerAdapter) -> a
com.inovance.ElevatorControl.views.viewpager.VerticalViewPager$OnPageChangeListener -> com.inovance.ElevatorControl.views.viewpager.VerticalViewPager$OnPageChangeListener:
    void onPageScrolled(int,float,int) -> a
    void onPageSelected(int) -> a
    void onPageScrollStateChanged(int) -> b
com.inovance.ElevatorControl.views.viewpager.VerticalViewPager$PageTransformer -> com.inovance.ElevatorControl.views.viewpager.VerticalViewPager$PageTransformer:
    void transformPage(android.view.View,float) -> a
com.inovance.ElevatorControl.views.viewpager.VerticalViewPager$PagerObserver -> com.inovance.ElevatorControl.views.viewpager.VerticalViewPager$PagerObserver:
    com.inovance.ElevatorControl.views.viewpager.VerticalViewPager this$0 -> a
    void onChanged() -> onChanged
    void onInvalidated() -> onInvalidated
com.inovance.ElevatorControl.views.viewpager.VerticalViewPager$SavedState -> com.inovance.ElevatorControl.views.viewpager.VerticalViewPager$SavedState:
    int position -> a
    android.os.Parcelable adapterState -> b
    java.lang.ClassLoader loader -> c
    android.os.Parcelable$Creator CREATOR -> CREATOR
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    java.lang.String toString() -> toString
com.inovance.ElevatorControl.views.viewpager.VerticalViewPager$SavedState$1 -> com.inovance.ElevatorControl.views.viewpager.VerticalViewPager$SavedState$1:
    com.inovance.ElevatorControl.views.viewpager.VerticalViewPager$SavedState createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> a
    com.inovance.ElevatorControl.views.viewpager.VerticalViewPager$SavedState[] newArray(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
com.inovance.ElevatorControl.views.viewpager.VerticalViewPager$ViewPositionComparator -> com.inovance.ElevatorControl.views.viewpager.VerticalViewPager$ViewPositionComparator:
    int compare(android.view.View,android.view.View) -> a
    int compare(java.lang.Object,java.lang.Object) -> compare
com.inovance.ElevatorControl.views.zbar.CameraPreview -> com.inovance.ElevatorControl.views.zbar.CameraPreview:
    android.view.SurfaceHolder mHolder -> a
    android.hardware.Camera mCamera -> b
    android.hardware.Camera$PreviewCallback previewCallback -> c
    android.hardware.Camera$AutoFocusCallback autoFocusCallback -> d
    void surfaceCreated(android.view.SurfaceHolder) -> surfaceCreated
    void surfaceDestroyed(android.view.SurfaceHolder) -> surfaceDestroyed
    void surfaceChanged(android.view.SurfaceHolder,int,int,int) -> surfaceChanged
com.inovance.ElevatorControl.web.WebApi -> com.inovance.ElevatorControl.web.WebApi:
    com.inovance.ElevatorControl.web.WebApi ourInstance -> a
    com.loopj.android.http.AsyncHttpClient client -> b
    com.inovance.ElevatorControl.web.WebApi$onRequestFailureListener onFailureListener -> c
    com.inovance.ElevatorControl.web.WebApi$onGetResultListener onResultListener -> d
    void setOnResultListener(com.inovance.ElevatorControl.web.WebApi$onGetResultListener) -> a
    void setOnFailureListener(com.inovance.ElevatorControl.web.WebApi$onRequestFailureListener) -> a
    void removeListener() -> a
    com.inovance.ElevatorControl.web.WebApi getInstance() -> b
    void registerUser(android.content.Context,com.inovance.ElevatorControl.models.User) -> a
    void getDeviceList(android.content.Context) -> a
    void getVendorList(android.content.Context) -> b
    void getDeviceListByVendorIDS(android.content.Context,java.lang.String) -> a
    void applyFirmware(android.content.Context,java.lang.String,java.lang.String,java.lang.String) -> a
    void getAllFirmwareNotDownload(android.content.Context,java.lang.String) -> b
    void deleteFileFromServer(android.content.Context,int) -> a
    void downloadFirmwareFromServer(android.content.Context,int) -> b
    void startGetRequest(android.content.Context,java.lang.String,java.lang.String) -> a
    java.lang.String getResponseString(byte[],java.lang.String) -> a
    boolean isNetworkAvailable(android.content.Context) -> c
    void alertUserNetworkNotAvailable(android.content.Context) -> d
    com.inovance.ElevatorControl.web.WebApi$onGetResultListener access$100(com.inovance.ElevatorControl.web.WebApi) -> a
    java.lang.String access$200(com.inovance.ElevatorControl.web.WebApi,byte[],java.lang.String) -> a
    com.inovance.ElevatorControl.web.WebApi$onRequestFailureListener access$300(com.inovance.ElevatorControl.web.WebApi) -> b
com.inovance.ElevatorControl.web.WebApi$1 -> com.inovance.ElevatorControl.web.WebApi$1:
    com.inovance.ElevatorControl.web.WebApi this$0 -> a
    void onSuccess(int,org.apache.http.Header[],byte[]) -> a
com.inovance.ElevatorControl.web.WebApi$3 -> com.inovance.ElevatorControl.web.WebApi$3:
    com.inovance.ElevatorControl.web.WebApi this$0 -> a
    void onSuccess(int,org.apache.http.Header[],byte[]) -> a
com.inovance.ElevatorControl.web.WebApi$4 -> com.inovance.ElevatorControl.web.WebApi$4:
    com.inovance.ElevatorControl.web.WebApi this$0 -> a
    void onSuccess(int,org.apache.http.Header[],byte[]) -> a
com.inovance.ElevatorControl.web.WebApi$5 -> com.inovance.ElevatorControl.web.WebApi$5:
    com.inovance.ElevatorControl.web.WebApi this$0 -> a
    void onSuccess(int,org.apache.http.Header[],byte[]) -> a
com.inovance.ElevatorControl.web.WebApi$6 -> com.inovance.ElevatorControl.web.WebApi$6:
    java.lang.String val$tag -> a
    com.inovance.ElevatorControl.web.WebApi this$0 -> b
    void onSuccess(int,org.apache.http.Header[],byte[]) -> a
com.inovance.ElevatorControl.web.WebApi$ResponseHandler -> com.inovance.ElevatorControl.web.WebApi$ResponseHandler:
    com.inovance.ElevatorControl.web.WebApi this$0 -> c
    void onFailure(int,org.apache.http.Header[],byte[],java.lang.Throwable) -> a
com.inovance.ElevatorControl.web.WebApi$onGetResultListener -> com.inovance.ElevatorControl.web.WebApi$onGetResultListener:
    void onResult(java.lang.String,java.lang.String) -> a
com.inovance.ElevatorControl.web.WebApi$onRequestFailureListener -> com.inovance.ElevatorControl.web.WebApi$onRequestFailureListener:
    void onFailure(int,java.lang.Throwable) -> a
com.inovance.elevatorprogram.ARMProgram -> com.inovance.elevatorprogram.ARMProgram:
    boolean m_bAlarm -> d
    boolean CoreProgram(com.inovance.elevatorprogram.SysPara) -> a
    boolean BootLoader(com.inovance.elevatorprogram.SysPara) -> b
    boolean Program(com.inovance.elevatorprogram.SysPara) -> c
    boolean TryUpgradeMode(com.inovance.elevatorprogram.SysPara,java.lang.String) -> a
    boolean JumpIntoBoot(com.inovance.elevatorprogram.SysPara) -> d
    boolean BootCmds(com.inovance.elevatorprogram.SysPara) -> e
    boolean SendIap(com.inovance.elevatorprogram.SysPara) -> f
    int CharToInt(byte,byte,byte,byte) -> a
    boolean SendSBL(com.inovance.elevatorprogram.SysPara) -> g
    boolean ReadSeq(com.inovance.elevatorprogram.SysPara,byte[]) -> a
    boolean SendSeq(com.inovance.elevatorprogram.SysPara,byte[]) -> b
    boolean SendApp(com.inovance.elevatorprogram.SysPara) -> h
    boolean Goto_Boot(com.inovance.elevatorprogram.SysPara) -> i
    boolean Goto_NoBoot(com.inovance.elevatorprogram.SysPara) -> j
    boolean Run(com.inovance.elevatorprogram.SysPara,com.inovance.elevatorprogram.ParamPass) -> a
com.inovance.elevatorprogram.BaseProgram -> com.inovance.elevatorprogram.BaseProgram:
    boolean m_bBootLoader -> a
    boolean m_bBusy -> b
    java.lang.String m_sMsg -> c
    boolean CoreProgram(com.inovance.elevatorprogram.SysPara) -> a
com.inovance.elevatorprogram.CRC32 -> com.inovance.elevatorprogram.CRC32:
    long[] crc_table -> a
    void InitCRC32Table() -> a
    long GetCRC32(byte[],long) -> a
com.inovance.elevatorprogram.CipherBinFile -> com.inovance.elevatorprogram.CipherBinFile:
    byte[] m_buffBin -> a
    int ReadBinFile(java.io.FileInputStream) -> a
    boolean CheckFile(byte[]) -> a
    int CharToInt(byte,byte,byte,byte) -> a
    int GetFBLSize() -> a
    int GetSBLSize() -> b
    int GetTBLSize() -> c
    int GetAppSize() -> d
    int GetStartAddress() -> e
    int GetPLine() -> f
    java.lang.String GetPLineName() -> g
    int GetPType() -> h
    java.lang.String GetPTypeName() -> i
    int GetIC() -> j
    int GetRand() -> k
    int GetCRC32() -> l
    int GetSize() -> m
    int GetHost() -> n
    boolean IsBootEncrypt() -> o
    void GetFBL(java.util.Vector) -> a
    void GetSBL(java.util.Vector) -> b
    void GetTBL(java.util.Vector) -> c
    void GetApp(java.util.Vector) -> d
    java.lang.String byteToString(int,int) -> a
    java.lang.String unicodeToString(java.lang.String) -> a
    boolean IsEmpty() -> p
com.inovance.elevatorprogram.DSPProgram -> com.inovance.elevatorprogram.DSPProgram:
    int mBLVer -> d
    boolean CoreProgram(com.inovance.elevatorprogram.SysPara) -> a
    boolean BootLoader(com.inovance.elevatorprogram.SysPara) -> b
    boolean Program(com.inovance.elevatorprogram.SysPara) -> c
    boolean TryUpgradeMode(com.inovance.elevatorprogram.SysPara,java.lang.String) -> a
    boolean JumpIntoBoot(com.inovance.elevatorprogram.SysPara) -> d
    boolean BootCmds(com.inovance.elevatorprogram.SysPara) -> e
    boolean SendIapTest(com.inovance.elevatorprogram.SysPara,java.util.Vector) -> a
    boolean ReceiveCmd(com.inovance.elevatorprogram.SysPara) -> f
    boolean SendSBL(com.inovance.elevatorprogram.SysPara) -> g
    boolean SendOtp(com.inovance.elevatorprogram.SysPara) -> h
    void ConvertOtp(java.util.Vector,java.util.Vector) -> a
    int CharToInt(byte,byte,byte,byte) -> a
    boolean SendApp(com.inovance.elevatorprogram.SysPara) -> i
    int DSPSuccessJumpAddr(com.inovance.elevatorprogram.SysPara) -> j
    int DSPErrJumpAddr(com.inovance.elevatorprogram.SysPara) -> k
    int ReadData(com.inovance.protocol.BluetoothService,byte[],int) -> a
com.inovance.elevatorprogram.DataBlock -> com.inovance.elevatorprogram.DataBlock:
    int uLen -> a
    int uAddr -> b
    java.util.Vector vData -> c
com.inovance.elevatorprogram.IProgram -> com.inovance.elevatorprogram.IProgram:
    com.inovance.elevatorprogram.SysPara mSysParam -> a
    com.inovance.elevatorprogram.DSPProgram gs_dsp -> b
    com.inovance.elevatorprogram.ARMProgram gs_arm -> c
    com.inovance.elevatorprogram.BaseProgram gs_pProg -> d
    com.inovance.elevatorprogram.IProgram$BurnThread mBurnThread -> e
    com.inovance.elevatorprogram.IProgram ourInstance -> f
    com.inovance.elevatorprogram.IProgram getInstance() -> a
    void SetProgramPara(android.bluetooth.BluetoothSocket,java.io.FileInputStream,android.os.Handler) -> a
    java.lang.String GetBinFileInfo() -> b
    java.lang.String GetHostInfo(int,int) -> a
    void StartProgram() -> c
    void InitProgram() -> d
com.inovance.elevatorprogram.IProgram$BurnThread -> com.inovance.elevatorprogram.IProgram$BurnThread:
    com.inovance.elevatorprogram.BaseProgram threadProg -> b
    com.inovance.elevatorprogram.SysPara threadSysParam -> c
    com.inovance.elevatorprogram.IProgram this$0 -> a
    void run() -> run
com.inovance.elevatorprogram.MsgHandler -> com.inovance.elevatorprogram.MsgHandler:
    void handleMessage(android.os.Message) -> handleMessage
    void ProgramInfo(android.os.Message) -> a
com.inovance.elevatorprogram.ParamPass -> com.inovance.elevatorprogram.ParamPass:
    byte uByteRet -> a
    int uAppPLine -> b
    int uAppPType -> c
    int uAppIC -> d
    boolean bBurn -> e
    int uState -> f
    int uVer -> g
com.inovance.elevatorprogram.SysPara -> com.inovance.elevatorprogram.SysPara:
    android.os.Handler hWnd -> a
    byte uStation -> b
    boolean bRun -> c
    boolean bMaster -> d
    com.inovance.protocol.BluetoothService BtCom -> e
    com.inovance.protocol.Protocol protocol -> f
    com.inovance.elevatorprogram.CipherBinFile bin -> g
com.inovance.protocol.AppCmd -> com.inovance.protocol.AppCmd:
    int m_dwErrCode -> a
    boolean GetMachineState(com.inovance.protocol.BluetoothService,byte,java.lang.Integer) -> a
    boolean SafeGuard(com.inovance.protocol.BluetoothService,byte,java.lang.Integer) -> b
    boolean GetBootLoaderVersion(com.inovance.protocol.BluetoothService,byte,java.lang.Integer) -> c
    boolean JumpToBoot(com.inovance.protocol.BluetoothService,byte,java.lang.Integer) -> d
    boolean GetAppID(com.inovance.protocol.BluetoothService,byte,com.inovance.elevatorprogram.ParamPass) -> a
    int GetCrc16(byte[],int) -> a
    int GetErrorCode() -> a
    boolean Cmd_0x45(com.inovance.protocol.BluetoothService,byte,int,int,byte[],int) -> a
    void Wait(com.inovance.protocol.BluetoothService,int,int) -> a
com.inovance.protocol.BluetoothService -> com.inovance.protocol.BluetoothService:
    android.bluetooth.BluetoothSocket mmSocket -> a
    com.inovance.protocol.BluetoothService$ReadDataThread mReadThread -> b
    java.nio.ByteBuffer mByteBuffer -> c
    com.inovance.protocol.BluetoothService ourInstance -> d
    com.inovance.protocol.BluetoothService getInstance() -> a
    void SetBluetoothSocket(android.bluetooth.BluetoothSocket) -> a
    void StartReadDataService() -> c
    boolean write(byte[]) -> a
    int read(byte[]) -> b
    int QueryBuffer() -> b
    java.nio.ByteBuffer access$000(com.inovance.protocol.BluetoothService) -> a
com.inovance.protocol.BluetoothService$ReadDataThread -> com.inovance.protocol.BluetoothService$ReadDataThread:
    android.bluetooth.BluetoothSocket mmSocket -> b
    java.io.InputStream mmInStream -> c
    java.io.OutputStream mmOutStream -> d
    com.inovance.protocol.BluetoothService this$0 -> a
    void run() -> run
    java.lang.String bytesToHexStringTwo(byte[],int) -> a
    void write(byte[]) -> a
com.inovance.protocol.CRC16 -> com.inovance.protocol.CRC16:
    int[] crc16_ccitt_table -> a
    int GetCrc16(byte[],int) -> a
com.inovance.protocol.Protocol -> com.inovance.protocol.Protocol:
    com.inovance.protocol.AppCmd m_ModbusApp -> a
    int m_dwErrCode -> b
    int GetErrorCode() -> a
    boolean Ping(com.inovance.protocol.BluetoothService,com.inovance.elevatorprogram.ParamPass) -> a
    boolean GetMachineState(com.inovance.protocol.BluetoothService,byte,java.lang.Integer) -> a
    boolean SafeGuard(com.inovance.protocol.BluetoothService,byte,java.lang.Integer) -> b
    boolean GetBootLoaderVersion(com.inovance.protocol.BluetoothService,byte,java.lang.Integer) -> c
    boolean JumpToBoot(com.inovance.protocol.BluetoothService,byte,java.lang.Integer) -> d
    boolean SetHost(com.inovance.protocol.BluetoothService,byte,int) -> a
    boolean InBootCmd(com.inovance.protocol.BluetoothService,byte) -> d
    boolean InBoot(com.inovance.protocol.BluetoothService,byte,int) -> b
    boolean GetAppID(com.inovance.protocol.BluetoothService,byte,com.inovance.elevatorprogram.ParamPass) -> a
    boolean GetBootID(com.inovance.protocol.BluetoothService,byte,com.inovance.elevatorprogram.ParamPass) -> b
    boolean SendStartAddr(com.inovance.protocol.BluetoothService,byte,int) -> c
    boolean SendBinSize(com.inovance.protocol.BluetoothService,byte,int) -> d
    boolean Erase(com.inovance.protocol.BluetoothService,byte) -> a
    boolean SendRandomCode(com.inovance.protocol.BluetoothService,byte,int) -> e
    boolean SendBinCRC32(com.inovance.protocol.BluetoothService,byte,int) -> f
    boolean Start(com.inovance.protocol.BluetoothService,byte,int,com.inovance.elevatorprogram.ParamPass) -> a
    boolean Otp(com.inovance.protocol.BluetoothService,byte) -> b
    boolean GetSN(com.inovance.protocol.BluetoothService,byte,byte[]) -> a
    boolean SendFrame(com.inovance.protocol.BluetoothService,byte,byte[],int,int) -> a
    int GetCrc16(byte[],int) -> a
    boolean BootCmd(com.inovance.protocol.BluetoothService,byte,byte,byte[],int,byte[],int) -> a
    boolean DataFrameCmd(com.inovance.protocol.BluetoothService,byte,byte,byte[],int,int) -> a
    boolean WriteMemory(com.inovance.protocol.BluetoothService,int,int,byte[]) -> a
    boolean WriteMemoryFirst(com.inovance.protocol.BluetoothService,int,boolean,int,byte[]) -> a
    boolean Go(com.inovance.protocol.BluetoothService,int) -> a
    byte CheckSum(byte[],int) -> b
    boolean GetAck(com.inovance.protocol.BluetoothService) -> a
    boolean GetAckFirst(com.inovance.protocol.BluetoothService,boolean,java.lang.Integer) -> a
    boolean RemoveProtection(com.inovance.protocol.BluetoothService) -> b
    void Wait(com.inovance.protocol.BluetoothService,int,int) -> a
    boolean ChangStation(com.inovance.protocol.BluetoothService,byte) -> c
    int ReadData(com.inovance.protocol.BluetoothService,byte[],int) -> a
com.jakewharton.disklrucache.DiskLruCache -> com.jakewharton.disklrucache.DiskLruCache:
    java.util.regex.Pattern LEGAL_KEY_PATTERN -> a
    java.io.File directory -> c
    java.io.File journalFile -> d
    java.io.File journalFileTmp -> e
    java.io.File journalFileBackup -> f
    int appVersion -> g
    long maxSize -> h
    int valueCount -> i
    long size -> j
    java.io.Writer journalWriter -> k
    java.util.LinkedHashMap lruEntries -> l
    int redundantOpCount -> m
    long nextSequenceNumber -> n
    java.util.concurrent.ThreadPoolExecutor executorService -> b
    java.util.concurrent.Callable cleanupCallable -> o
    java.io.OutputStream NULL_OUTPUT_STREAM -> p
    com.jakewharton.disklrucache.DiskLruCache open(java.io.File,int,int,long) -> a
    void readJournal() -> b
    void readJournalLine(java.lang.String) -> b
    void processJournal() -> c
    void rebuildJournal() -> d
    void deleteIfExists(java.io.File) -> a
    void renameTo(java.io.File,java.io.File,boolean) -> a
    void completeEdit(com.jakewharton.disklrucache.DiskLruCache$Editor,boolean) -> a
    boolean journalRebuildRequired() -> e
    boolean remove(java.lang.String) -> a
    void checkNotClosed() -> f
    void close() -> close
    void trimToSize() -> g
    void delete() -> a
    void validateKey(java.lang.String) -> c
    java.io.Writer access$000(com.jakewharton.disklrucache.DiskLruCache) -> a
    void access$100(com.jakewharton.disklrucache.DiskLruCache) -> b
    boolean access$200(com.jakewharton.disklrucache.DiskLruCache) -> c
    void access$300(com.jakewharton.disklrucache.DiskLruCache) -> d
    int access$402(com.jakewharton.disklrucache.DiskLruCache,int) -> a
    int access$1800(com.jakewharton.disklrucache.DiskLruCache) -> e
    java.io.File access$1900(com.jakewharton.disklrucache.DiskLruCache) -> f
    void access$2200(com.jakewharton.disklrucache.DiskLruCache,com.jakewharton.disklrucache.DiskLruCache$Editor,boolean) -> a
com.jakewharton.disklrucache.DiskLruCache$1 -> com.jakewharton.disklrucache.DiskLruCache$1:
    com.jakewharton.disklrucache.DiskLruCache this$0 -> a
    java.lang.Void call() -> a
    java.lang.Object call() -> call
com.jakewharton.disklrucache.DiskLruCache$2 -> com.jakewharton.disklrucache.DiskLruCache$2:
    void write(int) -> write
com.jakewharton.disklrucache.DiskLruCache$Editor -> com.jakewharton.disklrucache.DiskLruCache$Editor:
    com.jakewharton.disklrucache.DiskLruCache$Entry entry -> b
    boolean[] written -> c
    com.jakewharton.disklrucache.DiskLruCache this$0 -> a
    void abort() -> a
    com.jakewharton.disklrucache.DiskLruCache$Entry access$1400(com.jakewharton.disklrucache.DiskLruCache$Editor) -> a
    boolean[] access$1500(com.jakewharton.disklrucache.DiskLruCache$Editor) -> b
com.jakewharton.disklrucache.DiskLruCache$Entry -> com.jakewharton.disklrucache.DiskLruCache$Entry:
    java.lang.String key -> b
    long[] lengths -> c
    boolean readable -> d
    com.jakewharton.disklrucache.DiskLruCache$Editor currentEditor -> e
    long sequenceNumber -> f
    com.jakewharton.disklrucache.DiskLruCache this$0 -> a
    java.lang.String getLengths() -> a
    void setLengths(java.lang.String[]) -> a
    java.io.IOException invalidLengths(java.lang.String[]) -> b
    java.io.File getCleanFile(int) -> a
    java.io.File getDirtyFile(int) -> b
    boolean access$602(com.jakewharton.disklrucache.DiskLruCache$Entry,boolean) -> a
    com.jakewharton.disklrucache.DiskLruCache$Editor access$702(com.jakewharton.disklrucache.DiskLruCache$Entry,com.jakewharton.disklrucache.DiskLruCache$Editor) -> a
    void access$800(com.jakewharton.disklrucache.DiskLruCache$Entry,java.lang.String[]) -> a
    com.jakewharton.disklrucache.DiskLruCache$Editor access$700(com.jakewharton.disklrucache.DiskLruCache$Entry) -> a
    long[] access$1000(com.jakewharton.disklrucache.DiskLruCache$Entry) -> b
    java.lang.String access$1100(com.jakewharton.disklrucache.DiskLruCache$Entry) -> c
    boolean access$600(com.jakewharton.disklrucache.DiskLruCache$Entry) -> d
    long access$1202(com.jakewharton.disklrucache.DiskLruCache$Entry,long) -> a
com.jakewharton.disklrucache.StrictLineReader -> com.jakewharton.disklrucache.StrictLineReader:
    java.io.InputStream in -> a
    java.nio.charset.Charset charset -> b
    byte[] buf -> c
    int pos -> d
    int end -> e
    void close() -> close
    java.lang.String readLine() -> a
    void fillBuf() -> b
    java.nio.charset.Charset access$000(com.jakewharton.disklrucache.StrictLineReader) -> a
com.jakewharton.disklrucache.StrictLineReader$1 -> com.jakewharton.disklrucache.StrictLineReader$1:
    com.jakewharton.disklrucache.StrictLineReader this$0 -> a
    java.lang.String toString() -> toString
com.jakewharton.disklrucache.Util -> com.jakewharton.disklrucache.Util:
    java.nio.charset.Charset US_ASCII -> a
    java.nio.charset.Charset UTF_8 -> b
    void deleteContents(java.io.File) -> a
    void closeQuietly(java.io.Closeable) -> a
com.kio.bluetooth.R -> com.kio.bluetooth.R:
com.kio.bluetooth.R$array -> com.kio.bluetooth.R$array:
    int array_ports -> array_ports
com.kio.bluetooth.R$string -> com.kio.bluetooth.R$string:
    int app_name -> app_name
    int cancel_bond -> cancel_bond
    int failed_bond -> failed_bond
    int failed_connect -> failed_connect
    int no_selected -> no_selected
    int success_connect -> success_connect
com.loopj.android.http.AsyncHttpClient -> com.loopj.android.http.AsyncHttpClient:
    int maxConnections -> a
    int timeout -> b
    org.apache.http.impl.client.DefaultHttpClient httpClient -> c
    org.apache.http.protocol.HttpContext httpContext -> d
    java.util.concurrent.ThreadPoolExecutor threadPool -> e
    java.util.Map requestMap -> f
    java.util.Map clientHeaderMap -> g
    boolean isUrlEncodingEnabled -> h
    org.apache.http.conn.scheme.SchemeRegistry getDefaultSchemeRegistry(boolean,int,int) -> a
    com.loopj.android.http.RequestHandle get(java.lang.String,com.loopj.android.http.ResponseHandlerInterface) -> a
    com.loopj.android.http.RequestHandle get(android.content.Context,java.lang.String,com.loopj.android.http.RequestParams,com.loopj.android.http.ResponseHandlerInterface) -> a
    com.loopj.android.http.RequestHandle post(android.content.Context,java.lang.String,org.apache.http.HttpEntity,java.lang.String,com.loopj.android.http.ResponseHandlerInterface) -> a
    com.loopj.android.http.RequestHandle sendRequest(org.apache.http.impl.client.DefaultHttpClient,org.apache.http.protocol.HttpContext,org.apache.http.client.methods.HttpUriRequest,java.lang.String,com.loopj.android.http.ResponseHandlerInterface,android.content.Context) -> a
    java.lang.String getUrlWithQueryString(boolean,java.lang.String,com.loopj.android.http.RequestParams) -> a
    org.apache.http.client.methods.HttpEntityEnclosingRequestBase addEntityToRequestBase(org.apache.http.client.methods.HttpEntityEnclosingRequestBase,org.apache.http.HttpEntity) -> a
    java.util.Map access$000(com.loopj.android.http.AsyncHttpClient) -> a
com.loopj.android.http.AsyncHttpClient$1 -> com.loopj.android.http.AsyncHttpClient$1:
    com.loopj.android.http.AsyncHttpClient this$0 -> a
    void process(org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext) -> process
com.loopj.android.http.AsyncHttpClient$2 -> com.loopj.android.http.AsyncHttpClient$2:
    com.loopj.android.http.AsyncHttpClient this$0 -> a
    void process(org.apache.http.HttpResponse,org.apache.http.protocol.HttpContext) -> process
com.loopj.android.http.AsyncHttpClient$InflatingEntity -> com.loopj.android.http.AsyncHttpClient$InflatingEntity:
    java.io.InputStream getContent() -> getContent
    long getContentLength() -> getContentLength
com.loopj.android.http.AsyncHttpRequest -> com.loopj.android.http.AsyncHttpRequest:
    org.apache.http.impl.client.AbstractHttpClient client -> a
    org.apache.http.protocol.HttpContext context -> b
    org.apache.http.client.methods.HttpUriRequest request -> c
    com.loopj.android.http.ResponseHandlerInterface responseHandler -> d
    int executionCount -> e
    void run() -> run
    void makeRequest() -> a
    void makeRequestWithRetries() -> b
com.loopj.android.http.AsyncHttpResponseHandler -> com.loopj.android.http.AsyncHttpResponseHandler:
    android.os.Handler handler -> a
    java.lang.String responseCharset -> b
    java.lang.Boolean useSynchronousMode -> c
    java.net.URI requestURI -> d
    org.apache.http.Header[] requestHeaders -> e
    void setRequestURI(java.net.URI) -> a
    void setRequestHeaders(org.apache.http.Header[]) -> a
    boolean getUseSynchronousMode() -> a
    java.lang.String getCharset() -> b
    void onProgress(int,int) -> a
    void onStart() -> c
    void onFinish() -> d
    void onSuccess(java.lang.String) -> a
    void onSuccess(int,org.apache.http.Header[],java.lang.String) -> a
    void onSuccess(int,java.lang.String) -> a
    void onSuccess(int,org.apache.http.Header[],byte[]) -> a
    void onFailure(java.lang.Throwable) -> a
    void onFailure(java.lang.Throwable,java.lang.String) -> a
    void onFailure(int,java.lang.Throwable,java.lang.String) -> a
    void onFailure(int,org.apache.http.Header[],java.lang.Throwable,java.lang.String) -> a
    void onFailure(int,org.apache.http.Header[],byte[],java.lang.Throwable) -> a
    void onRetry() -> e
    void sendProgressMessage(int,int) -> b
    void sendSuccessMessage(int,org.apache.http.Header[],byte[]) -> b
    void sendFailureMessage(int,org.apache.http.Header[],byte[],java.lang.Throwable) -> b
    void sendStartMessage() -> f
    void sendFinishMessage() -> g
    void sendRetryMessage() -> h
    void handleMessage(android.os.Message) -> a
    void sendMessage(android.os.Message) -> b
    android.os.Message obtainMessage(int,java.lang.Object) -> a
    void sendResponseMessage(org.apache.http.HttpResponse) -> a
    byte[] getResponseData(org.apache.http.HttpEntity) -> a
com.loopj.android.http.AsyncHttpResponseHandler$ResponderHandler -> com.loopj.android.http.AsyncHttpResponseHandler$ResponderHandler:
    java.lang.ref.WeakReference mResponder -> a
    void handleMessage(android.os.Message) -> handleMessage
com.loopj.android.http.MySSLSocketFactory -> com.loopj.android.http.MySSLSocketFactory:
    javax.net.ssl.SSLContext sslContext -> a
    java.net.Socket createSocket(java.net.Socket,java.lang.String,int,boolean) -> createSocket
    java.net.Socket createSocket() -> createSocket
    java.security.KeyStore getKeystore() -> a
    org.apache.http.conn.ssl.SSLSocketFactory getFixedSocketFactory() -> b
com.loopj.android.http.MySSLSocketFactory$1 -> com.loopj.android.http.MySSLSocketFactory$1:
    com.loopj.android.http.MySSLSocketFactory this$0 -> a
    java.security.cert.X509Certificate[] getAcceptedIssuers() -> getAcceptedIssuers
    void checkClientTrusted(java.security.cert.X509Certificate[],java.lang.String) -> checkClientTrusted
    void checkServerTrusted(java.security.cert.X509Certificate[],java.lang.String) -> checkServerTrusted
com.loopj.android.http.RequestHandle -> com.loopj.android.http.RequestHandle:
    java.util.concurrent.Future request -> a
com.loopj.android.http.RequestParams -> com.loopj.android.http.RequestParams:
    java.util.concurrent.ConcurrentHashMap urlParams -> a
    java.util.concurrent.ConcurrentHashMap streamParams -> b
    java.util.concurrent.ConcurrentHashMap fileParams -> c
    java.util.concurrent.ConcurrentHashMap urlParamsWithObjects -> d
    java.lang.String toString() -> toString
    java.util.List getParamsList() -> a
    java.util.List getParamsList(java.lang.String,java.lang.Object) -> a
    java.lang.String getParamString() -> b
com.loopj.android.http.ResponseHandlerInterface -> com.loopj.android.http.ResponseHandlerInterface:
    void sendResponseMessage(org.apache.http.HttpResponse) -> a
    void sendStartMessage() -> f
    void sendFinishMessage() -> g
    void sendFailureMessage(int,org.apache.http.Header[],byte[],java.lang.Throwable) -> b
    void sendRetryMessage() -> h
    void setRequestURI(java.net.URI) -> a
    void setRequestHeaders(org.apache.http.Header[]) -> a
com.loopj.android.http.RetryHandler -> com.loopj.android.http.RetryHandler:
    java.util.HashSet exceptionWhitelist -> a
    java.util.HashSet exceptionBlacklist -> b
    int maxRetries -> c
    int retrySleepTimeMS -> d
    boolean retryRequest(java.io.IOException,int,org.apache.http.protocol.HttpContext) -> retryRequest
    boolean isInList(java.util.HashSet,java.lang.Throwable) -> a
com.manuelpeinado.refreshactionitem.ProgressIndicator -> com.manuelpeinado.refreshactionitem.ProgressIndicator:
    android.graphics.RectF mRect -> a
    android.graphics.RectF mRectInner -> b
    android.graphics.Paint mPaintForeground -> c
    android.graphics.Paint mPaintBackground -> d
    android.graphics.Paint mPaintErase -> e
    android.graphics.Xfermode PORTER_DUFF_CLEAR -> f
    int mColorForeground -> g
    int mColorBackground -> h
    float mValue -> i
    boolean mPieStyle -> j
    float mPadding -> k
    android.graphics.Bitmap mBitmap -> l
    void setPieStyle(boolean) -> a
    void onDraw(android.graphics.Canvas) -> onDraw
    void onSizeChanged(int,int,int,int) -> onSizeChanged
    void setBackgroundColor(int) -> setBackgroundColor
    void setValue(float) -> a
    void updateBitmap() -> a
com.manuelpeinado.refreshactionitem.ProgressIndicatorType -> com.manuelpeinado.refreshactionitem.ProgressIndicatorType:
    com.manuelpeinado.refreshactionitem.ProgressIndicatorType WHEEL -> a
    com.manuelpeinado.refreshactionitem.ProgressIndicatorType PIE -> b
    com.manuelpeinado.refreshactionitem.ProgressIndicatorType INDETERMINATE -> c
    com.manuelpeinado.refreshactionitem.ProgressIndicatorType[] $VALUES -> d
    com.manuelpeinado.refreshactionitem.ProgressIndicatorType[] values() -> values
    com.manuelpeinado.refreshactionitem.ProgressIndicatorType valueOf(java.lang.String) -> valueOf
com.manuelpeinado.refreshactionitem.R -> com.manuelpeinado.refreshactionitem.R:
com.manuelpeinado.refreshactionitem.R$dimen -> com.manuelpeinado.refreshactionitem.R$dimen:
    int rai__action_bar_default_height -> rai__action_bar_default_height
    int rai__action_bar_icon_vertical_padding -> rai__action_bar_icon_vertical_padding
com.manuelpeinado.refreshactionitem.RefreshActionItem -> com.manuelpeinado.refreshactionitem.RefreshActionItem:
    android.widget.ImageView mRefreshButton -> a
    android.widget.ProgressBar mProgressIndicatorIndeterminate -> b
    com.manuelpeinado.refreshactionitem.ProgressIndicator mProgressIndicator -> c
    com.manuelpeinado.refreshactionitem.RefreshActionItem$RefreshActionListener mRefreshButtonListener -> d
    com.readystatesoftware.viewbadger.BadgeView mBadge -> e
    boolean mShowingBadge -> f
    android.view.MenuItem mMenuItem -> g
    boolean mShowingProgress -> h
    int mMax -> i
    int mProgress -> j
    com.manuelpeinado.refreshactionitem.ProgressIndicatorType mProgressIndicatorType -> k
    void setRefreshActionListener(com.manuelpeinado.refreshactionitem.RefreshActionItem$RefreshActionListener) -> setRefreshActionListener
    void setMenuItem(android.view.MenuItem) -> setMenuItem
    boolean isBadgeVisible() -> a
    void updateChildrenVisibility() -> b
    int getMax() -> getMax
    void showProgress(boolean) -> a
    void setProgress(int) -> setProgress
    void updateProgressIndicatorValue() -> c
    void setMax(int) -> setMax
    void setProgressIndicatorType(com.manuelpeinado.refreshactionitem.ProgressIndicatorType) -> setProgressIndicatorType
    com.manuelpeinado.refreshactionitem.ProgressIndicatorType getProgressIndicatorType() -> getProgressIndicatorType
    void onClick(android.view.View) -> onClick
    boolean onLongClick(android.view.View) -> onLongClick
com.manuelpeinado.refreshactionitem.RefreshActionItem$RefreshActionListener -> com.manuelpeinado.refreshactionitem.RefreshActionItem$RefreshActionListener:
    void onRefreshButtonClick(com.manuelpeinado.refreshactionitem.RefreshActionItem) -> a
com.mobsandgeeks.adapters.InstantAdapter -> com.mobsandgeeks.adapters.InstantAdapter:
    android.content.Context mContext -> a
    com.mobsandgeeks.adapters.InstantAdapterCore mInstantAdapterCore -> b
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
com.mobsandgeeks.adapters.InstantAdapterCore -> com.mobsandgeeks.adapters.InstantAdapterCore:
    java.lang.String LOG_TAG -> a
    android.content.Context mContext -> b
    android.widget.ListAdapter mAdapter -> c
    int mLayoutResourceId -> d
    android.view.LayoutInflater mLayoutInflater -> e
    java.lang.Class mDataType -> f
    java.util.Set mAnnotatedViewIds -> g
    android.util.SparseArray mViewHandlers -> h
    android.util.SparseArray mViewIdsAndMetaCache -> i
    android.util.SparseArray mDateFormatCache -> j
    android.util.SparseArray mFormatStringCache -> k
    void bindToView(android.view.ViewGroup,android.view.View,java.lang.Object,int) -> a
    android.view.View createNewView(android.content.Context,android.view.ViewGroup) -> a
    void findAnnotatedMethods() -> a
    void findAnnotatedMethods(java.lang.Class) -> a
    boolean isInstantAnnotation(java.lang.annotation.Annotation) -> a
    void assertMethodIsPublic(java.lang.reflect.Method) -> a
    void assertNoParamsOrSingleContextParam(java.lang.reflect.Method) -> b
    void assertNonVoidReturnType(java.lang.reflect.Method) -> c
    void updateAnnotatedViews(android.util.SparseArray,android.view.View,java.lang.Object,int) -> a
    java.lang.Object invokeReflectedMethod(java.lang.reflect.Method,java.lang.Object) -> a
    void updateTextView(com.mobsandgeeks.adapters.InstantAdapterCore$Holder,java.lang.Object) -> a
    java.lang.String applyDatePattern(int,com.mobsandgeeks.adapters.InstantText,java.lang.Object) -> a
    java.lang.String applyFormatString(int,com.mobsandgeeks.adapters.InstantText,java.lang.String,java.lang.Object) -> a
    void executeViewHandlers(android.util.SparseArray,android.view.View,android.view.View,java.lang.Object,int) -> a
com.mobsandgeeks.adapters.InstantAdapterCore$Holder -> com.mobsandgeeks.adapters.InstantAdapterCore$Holder:
    android.view.View view -> a
    com.mobsandgeeks.adapters.InstantAdapterCore$Meta meta -> b
com.mobsandgeeks.adapters.InstantAdapterCore$Meta -> com.mobsandgeeks.adapters.InstantAdapterCore$Meta:
    java.lang.annotation.Annotation annotation -> a
    java.lang.reflect.Method method -> b
com.mobsandgeeks.adapters.InstantText -> com.mobsandgeeks.adapters.InstantText:
    int viewId() -> a
    int datePatternResId() -> b
    java.lang.String datePattern() -> c
    int formatStringResId() -> d
    java.lang.String formatString() -> e
    boolean isHtml() -> f
com.mobsandgeeks.adapters.ViewHandler -> com.mobsandgeeks.adapters.ViewHandler:
    void handleView(android.widget.ListAdapter,android.view.View,android.view.View,java.lang.Object,int) -> a
com.nineoldandroids.animation.Animator -> com.nineoldandroids.animation.Animator:
    java.util.ArrayList mListeners -> a
    com.nineoldandroids.animation.Animator clone() -> a
    java.lang.Object clone() -> clone
com.nineoldandroids.animation.FloatEvaluator -> com.nineoldandroids.animation.FloatEvaluator:
com.nineoldandroids.animation.FloatKeyframeSet -> com.nineoldandroids.animation.FloatKeyframeSet:
    boolean firstTime -> f
    com.nineoldandroids.animation.FloatKeyframeSet clone() -> a
    com.nineoldandroids.animation.KeyframeSet clone() -> b
    java.lang.Object clone() -> clone
com.nineoldandroids.animation.IntEvaluator -> com.nineoldandroids.animation.IntEvaluator:
com.nineoldandroids.animation.IntKeyframeSet -> com.nineoldandroids.animation.IntKeyframeSet:
    boolean firstTime -> f
    com.nineoldandroids.animation.IntKeyframeSet clone() -> a
    com.nineoldandroids.animation.KeyframeSet clone() -> b
    java.lang.Object clone() -> clone
com.nineoldandroids.animation.Keyframe -> com.nineoldandroids.animation.Keyframe:
    float mFraction -> a
    java.lang.Class mValueType -> b
    android.view.animation.Interpolator mInterpolator -> d
    boolean mHasValue -> c
    com.nineoldandroids.animation.Keyframe ofFloat(float,float) -> a
    java.lang.Object getValue() -> a
    float getFraction() -> b
    android.view.animation.Interpolator getInterpolator() -> c
    void setInterpolator(android.view.animation.Interpolator) -> a
    java.lang.Class getType() -> d
    com.nineoldandroids.animation.Keyframe clone() -> e
    java.lang.Object clone() -> clone
com.nineoldandroids.animation.Keyframe$FloatKeyframe -> com.nineoldandroids.animation.Keyframe$FloatKeyframe:
    float mValue -> d
    java.lang.Object getValue() -> a
    com.nineoldandroids.animation.Keyframe$FloatKeyframe clone() -> f
    com.nineoldandroids.animation.Keyframe clone() -> e
    java.lang.Object clone() -> clone
com.nineoldandroids.animation.Keyframe$IntKeyframe -> com.nineoldandroids.animation.Keyframe$IntKeyframe:
    int mValue -> d
    java.lang.Object getValue() -> a
    com.nineoldandroids.animation.Keyframe$IntKeyframe clone() -> f
    com.nineoldandroids.animation.Keyframe clone() -> e
    java.lang.Object clone() -> clone
com.nineoldandroids.animation.KeyframeSet -> com.nineoldandroids.animation.KeyframeSet:
    int mNumKeyframes -> a
    com.nineoldandroids.animation.Keyframe mFirstKeyframe -> b
    com.nineoldandroids.animation.Keyframe mLastKeyframe -> c
    android.view.animation.Interpolator mInterpolator -> d
    java.util.ArrayList mKeyframes -> e
    com.nineoldandroids.animation.KeyframeSet ofKeyframe(com.nineoldandroids.animation.Keyframe[]) -> a
    com.nineoldandroids.animation.KeyframeSet clone() -> b
    java.lang.String toString() -> toString
    java.lang.Object clone() -> clone
com.nineoldandroids.animation.ObjectAnimator -> com.nineoldandroids.animation.ObjectAnimator:
    java.util.Map PROXY_PROPERTIES -> g
    java.lang.Object mTarget -> h
    com.nineoldandroids.animation.ObjectAnimator ofPropertyValuesHolder(java.lang.Object,com.nineoldandroids.animation.PropertyValuesHolder[]) -> a
    com.nineoldandroids.animation.ObjectAnimator setDuration(long) -> a
    com.nineoldandroids.animation.ObjectAnimator clone() -> b
    java.lang.String toString() -> toString
    com.nineoldandroids.animation.ValueAnimator clone() -> c
    com.nineoldandroids.animation.ValueAnimator setDuration(long) -> b
    com.nineoldandroids.animation.Animator clone() -> a
    java.lang.Object clone() -> clone
com.nineoldandroids.animation.PreHoneycombCompat -> com.nineoldandroids.animation.PreHoneycombCompat:
    com.nineoldandroids.util.Property ALPHA -> a
    com.nineoldandroids.util.Property PIVOT_X -> b
    com.nineoldandroids.util.Property PIVOT_Y -> c
    com.nineoldandroids.util.Property TRANSLATION_X -> d
    com.nineoldandroids.util.Property TRANSLATION_Y -> e
    com.nineoldandroids.util.Property ROTATION -> f
    com.nineoldandroids.util.Property ROTATION_X -> g
    com.nineoldandroids.util.Property ROTATION_Y -> h
    com.nineoldandroids.util.Property SCALE_X -> i
    com.nineoldandroids.util.Property SCALE_Y -> j
    com.nineoldandroids.util.Property SCROLL_X -> k
    com.nineoldandroids.util.Property SCROLL_Y -> l
    com.nineoldandroids.util.Property X -> m
    com.nineoldandroids.util.Property Y -> n
com.nineoldandroids.animation.PreHoneycombCompat$1 -> com.nineoldandroids.animation.PreHoneycombCompat$1:
com.nineoldandroids.animation.PreHoneycombCompat$10 -> com.nineoldandroids.animation.PreHoneycombCompat$10:
com.nineoldandroids.animation.PreHoneycombCompat$11 -> com.nineoldandroids.animation.PreHoneycombCompat$11:
com.nineoldandroids.animation.PreHoneycombCompat$12 -> com.nineoldandroids.animation.PreHoneycombCompat$12:
com.nineoldandroids.animation.PreHoneycombCompat$13 -> com.nineoldandroids.animation.PreHoneycombCompat$13:
com.nineoldandroids.animation.PreHoneycombCompat$14 -> com.nineoldandroids.animation.PreHoneycombCompat$14:
com.nineoldandroids.animation.PreHoneycombCompat$2 -> com.nineoldandroids.animation.PreHoneycombCompat$2:
com.nineoldandroids.animation.PreHoneycombCompat$3 -> com.nineoldandroids.animation.PreHoneycombCompat$3:
com.nineoldandroids.animation.PreHoneycombCompat$4 -> com.nineoldandroids.animation.PreHoneycombCompat$4:
com.nineoldandroids.animation.PreHoneycombCompat$5 -> com.nineoldandroids.animation.PreHoneycombCompat$5:
com.nineoldandroids.animation.PreHoneycombCompat$6 -> com.nineoldandroids.animation.PreHoneycombCompat$6:
com.nineoldandroids.animation.PreHoneycombCompat$7 -> com.nineoldandroids.animation.PreHoneycombCompat$7:
com.nineoldandroids.animation.PreHoneycombCompat$8 -> com.nineoldandroids.animation.PreHoneycombCompat$8:
com.nineoldandroids.animation.PreHoneycombCompat$9 -> com.nineoldandroids.animation.PreHoneycombCompat$9:
com.nineoldandroids.animation.PropertyValuesHolder -> com.nineoldandroids.animation.PropertyValuesHolder:
    java.lang.String mPropertyName -> a
    com.nineoldandroids.util.Property mProperty -> b
    java.lang.reflect.Method mSetter -> c
    java.lang.reflect.Method mGetter -> h
    java.lang.Class mValueType -> d
    com.nineoldandroids.animation.KeyframeSet mKeyframeSet -> e
    com.nineoldandroids.animation.TypeEvaluator sIntEvaluator -> i
    com.nineoldandroids.animation.TypeEvaluator sFloatEvaluator -> j
    java.lang.Class[] FLOAT_VARIANTS -> k
    java.lang.Class[] INTEGER_VARIANTS -> l
    java.lang.Class[] DOUBLE_VARIANTS -> m
    java.util.HashMap sSetterPropertyMap -> n
    java.util.HashMap sGetterPropertyMap -> o
    java.util.concurrent.locks.ReentrantReadWriteLock mPropertyMapLock -> f
    java.lang.Object[] mTmpValueArray -> g
    com.nineoldandroids.animation.TypeEvaluator mEvaluator -> p
    com.nineoldandroids.animation.PropertyValuesHolder ofKeyframe(java.lang.String,com.nineoldandroids.animation.Keyframe[]) -> a
    com.nineoldandroids.animation.PropertyValuesHolder clone() -> a
    java.lang.String getPropertyName() -> b
    java.lang.String toString() -> toString
    java.lang.Object clone() -> clone
com.nineoldandroids.animation.PropertyValuesHolder$1 -> com.nineoldandroids.animation.PropertyValuesHolder$1:
com.nineoldandroids.animation.PropertyValuesHolder$FloatPropertyValuesHolder -> com.nineoldandroids.animation.PropertyValuesHolder$FloatPropertyValuesHolder:
    com.nineoldandroids.animation.FloatKeyframeSet mFloatKeyframeSet -> h
    com.nineoldandroids.animation.PropertyValuesHolder$FloatPropertyValuesHolder clone() -> c
    com.nineoldandroids.animation.PropertyValuesHolder clone() -> a
    java.lang.Object clone() -> clone
com.nineoldandroids.animation.PropertyValuesHolder$IntPropertyValuesHolder -> com.nineoldandroids.animation.PropertyValuesHolder$IntPropertyValuesHolder:
    com.nineoldandroids.animation.IntKeyframeSet mIntKeyframeSet -> h
    com.nineoldandroids.animation.PropertyValuesHolder$IntPropertyValuesHolder clone() -> c
    com.nineoldandroids.animation.PropertyValuesHolder clone() -> a
    java.lang.Object clone() -> clone
com.nineoldandroids.animation.TypeEvaluator -> com.nineoldandroids.animation.TypeEvaluator:
com.nineoldandroids.animation.ValueAnimator -> com.nineoldandroids.animation.ValueAnimator:
    long mSeekTime -> b
    java.lang.ThreadLocal sAnimationHandler -> g
    java.lang.ThreadLocal sAnimations -> h
    java.lang.ThreadLocal sPendingAnimations -> i
    java.lang.ThreadLocal sDelayedAnims -> j
    java.lang.ThreadLocal sEndingAnims -> k
    java.lang.ThreadLocal sReadyAnims -> l
    android.view.animation.Interpolator sDefaultInterpolator -> m
    com.nineoldandroids.animation.TypeEvaluator sIntEvaluator -> n
    com.nineoldandroids.animation.TypeEvaluator sFloatEvaluator -> o
    boolean mPlayingBackwards -> p
    int mCurrentIteration -> q
    float mCurrentFraction -> r
    boolean mStartedDelay -> s
    int mPlayingState -> c
    boolean mRunning -> t
    boolean mStarted -> u
    boolean mInitialized -> d
    long mDuration -> v
    long mStartDelay -> w
    long sFrameDelay -> x
    int mRepeatCount -> y
    int mRepeatMode -> z
    android.view.animation.Interpolator mInterpolator -> A
    java.util.ArrayList mUpdateListeners -> B
    com.nineoldandroids.animation.PropertyValuesHolder[] mValues -> e
    java.util.HashMap mValuesMap -> f
    void setValues(com.nineoldandroids.animation.PropertyValuesHolder[]) -> a
    com.nineoldandroids.animation.ValueAnimator setDuration(long) -> b
    void addUpdateListener(com.nineoldandroids.animation.ValueAnimator$AnimatorUpdateListener) -> a
    com.nineoldandroids.animation.ValueAnimator clone() -> c
    java.lang.String toString() -> toString
    com.nineoldandroids.animation.Animator clone() -> a
    java.lang.Object clone() -> clone
com.nineoldandroids.animation.ValueAnimator$1 -> com.nineoldandroids.animation.ValueAnimator$1:
    java.util.ArrayList initialValue() -> a
    java.lang.Object initialValue() -> initialValue
com.nineoldandroids.animation.ValueAnimator$2 -> com.nineoldandroids.animation.ValueAnimator$2:
    java.util.ArrayList initialValue() -> a
    java.lang.Object initialValue() -> initialValue
com.nineoldandroids.animation.ValueAnimator$3 -> com.nineoldandroids.animation.ValueAnimator$3:
    java.util.ArrayList initialValue() -> a
    java.lang.Object initialValue() -> initialValue
com.nineoldandroids.animation.ValueAnimator$4 -> com.nineoldandroids.animation.ValueAnimator$4:
    java.util.ArrayList initialValue() -> a
    java.lang.Object initialValue() -> initialValue
com.nineoldandroids.animation.ValueAnimator$5 -> com.nineoldandroids.animation.ValueAnimator$5:
    java.util.ArrayList initialValue() -> a
    java.lang.Object initialValue() -> initialValue
com.nineoldandroids.animation.ValueAnimator$AnimatorUpdateListener -> com.nineoldandroids.animation.ValueAnimator$AnimatorUpdateListener:
com.nineoldandroids.util.FloatProperty -> com.nineoldandroids.util.FloatProperty:
com.nineoldandroids.util.IntProperty -> com.nineoldandroids.util.IntProperty:
com.nineoldandroids.util.Property -> com.nineoldandroids.util.Property:
    java.lang.String mName -> a
    java.lang.Class mType -> b
com.nineoldandroids.view.animation.AnimatorProxy -> com.nineoldandroids.view.animation.AnimatorProxy:
    boolean NEEDS_PROXY -> a
    java.util.WeakHashMap PROXIES -> b
    java.lang.ref.WeakReference mView -> c
    android.graphics.Camera mCamera -> d
    boolean mHasPivot -> e
    float mAlpha -> f
    float mPivotX -> g
    float mPivotY -> h
    float mRotationX -> i
    float mRotationY -> j
    float mRotationZ -> k
    float mScaleX -> l
    float mScaleY -> m
    float mTranslationX -> n
    float mTranslationY -> o
    android.graphics.RectF mBefore -> p
    android.graphics.RectF mAfter -> q
    android.graphics.Matrix mTempMatrix -> r
    com.nineoldandroids.view.animation.AnimatorProxy wrap(android.view.View) -> a
    float getAlpha() -> a
    void setAlpha(float) -> a
    float getRotation() -> b
    void setRotation(float) -> b
    void prepareForUpdate() -> c
    void invalidateAfterUpdate() -> d
    void computeRect(android.graphics.RectF,android.view.View) -> a
    void transformMatrix(android.graphics.Matrix,android.view.View) -> a
    void applyTransformation(float,android.view.animation.Transformation) -> applyTransformation
com.novell.sasl.client.DigestChallenge -> com.novell.sasl.client.DigestChallenge:
    java.util.ArrayList m_realms -> a
    java.lang.String m_nonce -> b
    int m_qop -> c
    boolean m_staleFlag -> d
    int m_maxBuf -> e
    java.lang.String m_characterSet -> f
    java.lang.String m_algorithm -> g
    int m_cipherOptions -> h
    void checkSemantics(com.novell.sasl.client.DirectiveList) -> a
    void handleNonce(com.novell.sasl.client.ParsedDirective) -> a
    void handleRealm(com.novell.sasl.client.ParsedDirective) -> b
    void handleQop(com.novell.sasl.client.ParsedDirective) -> c
    void handleMaxbuf(com.novell.sasl.client.ParsedDirective) -> d
    void handleCharset(com.novell.sasl.client.ParsedDirective) -> e
    void handleAlgorithm(com.novell.sasl.client.ParsedDirective) -> f
    void handleCipher(com.novell.sasl.client.ParsedDirective) -> g
    void handleStale(com.novell.sasl.client.ParsedDirective) -> h
    java.util.ArrayList getRealms() -> a
    java.lang.String getNonce() -> b
    int getQop() -> c
    java.lang.String getAlgorithm() -> d
com.novell.sasl.client.DigestMD5SaslClient -> com.novell.sasl.client.DigestMD5SaslClient:
    java.lang.String m_authorizationId -> a
    java.lang.String m_protocol -> b
    java.lang.String m_serverName -> c
    java.util.Map m_props -> d
    org.apache.harmony.javax.security.auth.callback.CallbackHandler m_cbh -> e
    int m_state -> f
    java.lang.String m_qopValue -> g
    char[] m_HA1 -> h
    java.lang.String m_digestURI -> i
    com.novell.sasl.client.DigestChallenge m_dc -> j
    java.lang.String m_clientNonce -> k
    java.lang.String m_realm -> l
    java.lang.String m_name -> m
    org.apache.harmony.javax.security.sasl.SaslClient getClient(java.lang.String,java.lang.String,java.lang.String,java.util.Map,org.apache.harmony.javax.security.auth.callback.CallbackHandler) -> a
    boolean hasInitialResponse() -> a
    byte[] evaluateChallenge(byte[]) -> a
    char[] convertToHex(byte[]) -> b
    char[] DigestCalcHA1(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> a
    char[] DigestCalcResponse(char[],java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,boolean) -> a
    java.lang.String createDigestResponse(byte[]) -> d
    boolean checkServerResponseAuth(byte[]) -> c
    char getHexChar(byte) -> a
    java.lang.String getClientNonce() -> b
com.novell.sasl.client.DirectiveList -> com.novell.sasl.client.DirectiveList:
    int m_curPos -> a
    int m_errorPos -> b
    java.lang.String m_directives -> c
    int m_state -> d
    java.util.ArrayList m_directiveList -> e
    int m_scanStart -> f
    void parseDirectives() -> a
    boolean isValidTokenChar(char) -> a
    boolean isWhiteSpace(char) -> b
    void addDirective(java.lang.String,boolean) -> a
    java.util.Iterator getIterator() -> b
com.novell.sasl.client.ExternalSaslClient -> com.novell.sasl.client.ExternalSaslClient:
    java.lang.String m_authorizationId -> a
    java.lang.String m_protocol -> b
    java.lang.String m_serverName -> c
    java.util.Map m_props -> d
    org.apache.harmony.javax.security.auth.callback.CallbackHandler m_cbh -> e
    int m_state -> f
    org.apache.harmony.javax.security.sasl.SaslClient getClient(java.lang.String,java.lang.String,java.lang.String,java.util.Map,org.apache.harmony.javax.security.auth.callback.CallbackHandler) -> a
    boolean hasInitialResponse() -> a
    byte[] evaluateChallenge(byte[]) -> a
com.novell.sasl.client.ParsedDirective -> com.novell.sasl.client.ParsedDirective:
    int m_valueType -> a
    java.lang.String m_name -> b
    java.lang.String m_value -> c
    java.lang.String getValue() -> a
    java.lang.String getName() -> b
com.novell.sasl.client.ResponseAuth -> com.novell.sasl.client.ResponseAuth:
    java.lang.String m_responseValue -> a
    void checkSemantics(com.novell.sasl.client.DirectiveList) -> a
    java.lang.String getResponseValue() -> a
com.novell.sasl.client.TokenParser -> com.novell.sasl.client.TokenParser:
    int m_curPos -> a
    int m_scanStart -> b
    int m_state -> c
    java.lang.String m_tokens -> d
    java.lang.String parseToken() -> a
    boolean isValidTokenChar(char) -> a
    boolean isWhiteSpace(char) -> b
com.readystatesoftware.viewbadger.BadgeView -> com.readystatesoftware.viewbadger.BadgeView:
    int DEFAULT_BADGE_COLOR -> a
    android.view.animation.Animation fadeIn -> b
    android.view.animation.Animation fadeOut -> c
    android.view.View target -> d
    int badgePosition -> e
    int badgeMarginH -> f
    int badgeMarginV -> g
    int badgeColor -> h
    boolean isShown -> i
    android.graphics.drawable.ShapeDrawable badgeBg -> j
    void show(boolean) -> a
    void hide(boolean) -> b
    void show(boolean,android.view.animation.Animation) -> a
    void hide(boolean,android.view.animation.Animation) -> b
    android.graphics.drawable.ShapeDrawable getDefaultBackground() -> getDefaultBackground
    void applyLayoutParams() -> a
    android.view.View getTarget() -> getTarget
    boolean isShown() -> isShown
    int getBadgePosition() -> getBadgePosition
    void setBadgePosition(int) -> setBadgePosition
    int getHorizontalBadgeMargin() -> getHorizontalBadgeMargin
    int getVerticalBadgeMargin() -> getVerticalBadgeMargin
    void setBadgeMargin(int) -> setBadgeMargin
    int getBadgeBackgroundColor() -> getBadgeBackgroundColor
    void setBadgeBackgroundColor(int) -> setBadgeBackgroundColor
    int dipToPixels(int) -> a
com.viewpagerindicator.CirclePageIndicator -> com.viewpagerindicator.CirclePageIndicator:
    float mRadius -> a
    android.graphics.Paint mPaintPageFill -> b
    android.graphics.Paint mPaintStroke -> c
    android.graphics.Paint mPaintFill -> d
    android.support.v4.view.ViewPager mViewPager -> e
    android.support.v4.view.ViewPager$OnPageChangeListener mListener -> f
    int mCurrentPage -> g
    int mSnapPage -> h
    float mPageOffset -> i
    int mScrollState -> j
    int mOrientation -> k
    boolean mCentered -> l
    boolean mSnap -> m
    int mTouchSlop -> n
    float mLastMotionX -> o
    int mActivePointerId -> p
    boolean mIsDragging -> q
    void setCentered(boolean) -> setCentered
    void setPageColor(int) -> setPageColor
    int getPageColor() -> getPageColor
    void setFillColor(int) -> setFillColor
    int getFillColor() -> getFillColor
    void setOrientation(int) -> setOrientation
    int getOrientation() -> getOrientation
    void setStrokeColor(int) -> setStrokeColor
    int getStrokeColor() -> getStrokeColor
    void setStrokeWidth(float) -> setStrokeWidth
    float getStrokeWidth() -> getStrokeWidth
    void setRadius(float) -> setRadius
    float getRadius() -> getRadius
    void setSnap(boolean) -> setSnap
    void onDraw(android.graphics.Canvas) -> onDraw
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void setViewPager(android.support.v4.view.ViewPager) -> setViewPager
    void setCurrentItem(int) -> setCurrentItem
    void onPageScrollStateChanged(int) -> onPageScrollStateChanged
    void onPageScrolled(int,float,int) -> onPageScrolled
    void onPageSelected(int) -> onPageSelected
    void setOnPageChangeListener(android.support.v4.view.ViewPager$OnPageChangeListener) -> setOnPageChangeListener
    void onMeasure(int,int) -> onMeasure
    int measureLong(int) -> a
    int measureShort(int) -> b
    void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
com.viewpagerindicator.CirclePageIndicator$1 -> com.viewpagerindicator.CirclePageIndicator$1:
com.viewpagerindicator.CirclePageIndicator$SavedState -> com.viewpagerindicator.CirclePageIndicator$SavedState:
    int currentPage -> a
    android.os.Parcelable$Creator CREATOR -> CREATOR
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.viewpagerindicator.CirclePageIndicator$SavedState$1 -> com.viewpagerindicator.CirclePageIndicator$SavedState$1:
    com.viewpagerindicator.CirclePageIndicator$SavedState createFromParcel(android.os.Parcel) -> a
    com.viewpagerindicator.CirclePageIndicator$SavedState[] newArray(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.viewpagerindicator.IconPagerAdapter -> com.viewpagerindicator.IconPagerAdapter:
    int getIconResId(int) -> a
com.viewpagerindicator.IcsLinearLayout -> com.viewpagerindicator.IcsLinearLayout:
    int[] LL -> a
    android.graphics.drawable.Drawable mDivider -> b
    int mDividerWidth -> c
    int mDividerHeight -> d
    int mShowDividers -> e
    int mDividerPadding -> f
    void setDividerDrawable(android.graphics.drawable.Drawable) -> setDividerDrawable
    void measureChildWithMargins(android.view.View,int,int,int,int) -> measureChildWithMargins
    void onDraw(android.graphics.Canvas) -> onDraw
    void drawDividersVertical(android.graphics.Canvas) -> a
    void drawDividersHorizontal(android.graphics.Canvas) -> b
    void drawHorizontalDivider(android.graphics.Canvas,int) -> a
    void drawVerticalDivider(android.graphics.Canvas,int) -> b
    boolean hasDividerBeforeChildAt(int) -> a
com.viewpagerindicator.LinePageIndicator -> com.viewpagerindicator.LinePageIndicator:
    android.graphics.Paint mPaintUnselected -> a
    android.graphics.Paint mPaintSelected -> b
    android.support.v4.view.ViewPager mViewPager -> c
    android.support.v4.view.ViewPager$OnPageChangeListener mListener -> d
    int mCurrentPage -> e
    boolean mCentered -> f
    float mLineWidth -> g
    float mGapWidth -> h
    int mTouchSlop -> i
    float mLastMotionX -> j
    int mActivePointerId -> k
    boolean mIsDragging -> l
    void setCentered(boolean) -> setCentered
    void setUnselectedColor(int) -> setUnselectedColor
    int getUnselectedColor() -> getUnselectedColor
    void setSelectedColor(int) -> setSelectedColor
    int getSelectedColor() -> getSelectedColor
    void setLineWidth(float) -> setLineWidth
    float getLineWidth() -> getLineWidth
    void setStrokeWidth(float) -> setStrokeWidth
    float getStrokeWidth() -> getStrokeWidth
    void setGapWidth(float) -> setGapWidth
    float getGapWidth() -> getGapWidth
    void onDraw(android.graphics.Canvas) -> onDraw
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void setViewPager(android.support.v4.view.ViewPager) -> setViewPager
    void setCurrentItem(int) -> setCurrentItem
    void onPageScrollStateChanged(int) -> onPageScrollStateChanged
    void onPageScrolled(int,float,int) -> onPageScrolled
    void onPageSelected(int) -> onPageSelected
    void setOnPageChangeListener(android.support.v4.view.ViewPager$OnPageChangeListener) -> setOnPageChangeListener
    void onMeasure(int,int) -> onMeasure
    int measureWidth(int) -> a
    int measureHeight(int) -> b
    void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
com.viewpagerindicator.LinePageIndicator$1 -> com.viewpagerindicator.LinePageIndicator$1:
com.viewpagerindicator.LinePageIndicator$SavedState -> com.viewpagerindicator.LinePageIndicator$SavedState:
    int currentPage -> a
    android.os.Parcelable$Creator CREATOR -> CREATOR
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.viewpagerindicator.LinePageIndicator$SavedState$1 -> com.viewpagerindicator.LinePageIndicator$SavedState$1:
    com.viewpagerindicator.LinePageIndicator$SavedState createFromParcel(android.os.Parcel) -> a
    com.viewpagerindicator.LinePageIndicator$SavedState[] newArray(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.viewpagerindicator.PageIndicator -> com.viewpagerindicator.PageIndicator:
com.viewpagerindicator.R -> com.viewpagerindicator.R:
com.viewpagerindicator.R$attr -> com.viewpagerindicator.R$attr:
    int centered -> centered
    int clipPadding -> clipPadding
    int fadeDelay -> fadeDelay
    int fadeLength -> fadeLength
    int fades -> fades
    int fillColor -> fillColor
    int footerColor -> footerColor
    int footerIndicatorHeight -> footerIndicatorHeight
    int footerIndicatorStyle -> footerIndicatorStyle
    int footerIndicatorUnderlinePadding -> footerIndicatorUnderlinePadding
    int footerLineHeight -> footerLineHeight
    int footerPadding -> footerPadding
    int gapWidth -> gapWidth
    int linePosition -> linePosition
    int lineWidth -> lineWidth
    int pageColor -> pageColor
    int radius -> radius
    int selectedBold -> selectedBold
    int selectedColor -> selectedColor
    int snap -> snap
    int strokeColor -> strokeColor
    int strokeWidth -> strokeWidth
    int titlePadding -> titlePadding
    int topPadding -> topPadding
    int unselectedColor -> unselectedColor
    int vpiCirclePageIndicatorStyle -> vpiCirclePageIndicatorStyle
    int vpiIconPageIndicatorStyle -> vpiIconPageIndicatorStyle
    int vpiLinePageIndicatorStyle -> vpiLinePageIndicatorStyle
    int vpiTabPageIndicatorStyle -> vpiTabPageIndicatorStyle
    int vpiTitlePageIndicatorStyle -> vpiTitlePageIndicatorStyle
    int vpiUnderlinePageIndicatorStyle -> vpiUnderlinePageIndicatorStyle
com.viewpagerindicator.TabPageIndicator -> com.viewpagerindicator.TabPageIndicator:
    java.lang.CharSequence EMPTY_TITLE -> a
    java.lang.Runnable mTabSelector -> b
    android.view.View$OnClickListener mTabClickListener -> c
    com.viewpagerindicator.IcsLinearLayout mTabLayout -> d
    android.support.v4.view.ViewPager mViewPager -> e
    android.support.v4.view.ViewPager$OnPageChangeListener mListener -> f
    int mMaxTabWidth -> g
    int mSelectedTabIndex -> h
    com.viewpagerindicator.TabPageIndicator$OnTabReselectedListener mTabReselectedListener -> i
    void setOnTabReselectedListener(com.viewpagerindicator.TabPageIndicator$OnTabReselectedListener) -> setOnTabReselectedListener
    void onMeasure(int,int) -> onMeasure
    void animateToTab(int) -> a
    void onAttachedToWindow() -> onAttachedToWindow
    void onDetachedFromWindow() -> onDetachedFromWindow
    void addTab(int,java.lang.CharSequence,int) -> a
    void onPageScrollStateChanged(int) -> onPageScrollStateChanged
    void onPageScrolled(int,float,int) -> onPageScrolled
    void onPageSelected(int) -> onPageSelected
    void setViewPager(android.support.v4.view.ViewPager) -> setViewPager
    void notifyDataSetChanged() -> a
    void setCurrentItem(int) -> setCurrentItem
    void setOnPageChangeListener(android.support.v4.view.ViewPager$OnPageChangeListener) -> setOnPageChangeListener
    android.support.v4.view.ViewPager access$000(com.viewpagerindicator.TabPageIndicator) -> a
    com.viewpagerindicator.TabPageIndicator$OnTabReselectedListener access$100(com.viewpagerindicator.TabPageIndicator) -> b
    java.lang.Runnable access$202(com.viewpagerindicator.TabPageIndicator,java.lang.Runnable) -> a
    int access$400(com.viewpagerindicator.TabPageIndicator) -> c
com.viewpagerindicator.TabPageIndicator$1 -> com.viewpagerindicator.TabPageIndicator$1:
    com.viewpagerindicator.TabPageIndicator this$0 -> a
    void onClick(android.view.View) -> onClick
com.viewpagerindicator.TabPageIndicator$2 -> com.viewpagerindicator.TabPageIndicator$2:
    android.view.View val$tabView -> a
    com.viewpagerindicator.TabPageIndicator this$0 -> b
    void run() -> run
com.viewpagerindicator.TabPageIndicator$OnTabReselectedListener -> com.viewpagerindicator.TabPageIndicator$OnTabReselectedListener:
    void onTabReselected(int) -> a
com.viewpagerindicator.TabPageIndicator$TabView -> com.viewpagerindicator.TabPageIndicator$TabView:
    int mIndex -> b
    com.viewpagerindicator.TabPageIndicator this$0 -> a
    void onMeasure(int,int) -> onMeasure
    int getIndex() -> a
    int access$302(com.viewpagerindicator.TabPageIndicator$TabView,int) -> a
com.viewpagerindicator.TitlePageIndicator -> com.viewpagerindicator.TitlePageIndicator:
    android.support.v4.view.ViewPager mViewPager -> a
    android.support.v4.view.ViewPager$OnPageChangeListener mListener -> b
    int mCurrentPage -> c
    float mPageOffset -> d
    int mScrollState -> e
    android.graphics.Paint mPaintText -> f
    boolean mBoldText -> g
    int mColorText -> h
    int mColorSelected -> i
    android.graphics.Path mPath -> j
    android.graphics.Rect mBounds -> k
    android.graphics.Paint mPaintFooterLine -> l
    com.viewpagerindicator.TitlePageIndicator$IndicatorStyle mFooterIndicatorStyle -> m
    com.viewpagerindicator.TitlePageIndicator$LinePosition mLinePosition -> n
    android.graphics.Paint mPaintFooterIndicator -> o
    float mFooterIndicatorHeight -> p
    float mFooterIndicatorUnderlinePadding -> q
    float mFooterPadding -> r
    float mTitlePadding -> s
    float mTopPadding -> t
    float mClipPadding -> u
    float mFooterLineHeight -> v
    int mTouchSlop -> w
    float mLastMotionX -> x
    int mActivePointerId -> y
    boolean mIsDragging -> z
    com.viewpagerindicator.TitlePageIndicator$OnCenterItemClickListener mCenterItemClickListener -> A
    int getFooterColor() -> getFooterColor
    void setFooterColor(int) -> setFooterColor
    float getFooterLineHeight() -> getFooterLineHeight
    void setFooterLineHeight(float) -> setFooterLineHeight
    float getFooterIndicatorHeight() -> getFooterIndicatorHeight
    void setFooterIndicatorHeight(float) -> setFooterIndicatorHeight
    float getFooterIndicatorPadding() -> getFooterIndicatorPadding
    void setFooterIndicatorPadding(float) -> setFooterIndicatorPadding
    com.viewpagerindicator.TitlePageIndicator$IndicatorStyle getFooterIndicatorStyle() -> getFooterIndicatorStyle
    void setFooterIndicatorStyle(com.viewpagerindicator.TitlePageIndicator$IndicatorStyle) -> setFooterIndicatorStyle
    com.viewpagerindicator.TitlePageIndicator$LinePosition getLinePosition() -> getLinePosition
    void setLinePosition(com.viewpagerindicator.TitlePageIndicator$LinePosition) -> setLinePosition
    int getSelectedColor() -> getSelectedColor
    void setSelectedColor(int) -> setSelectedColor
    void setSelectedBold(boolean) -> setSelectedBold
    int getTextColor() -> getTextColor
    void setTextColor(int) -> setTextColor
    float getTextSize() -> getTextSize
    void setTextSize(float) -> setTextSize
    float getTitlePadding() -> getTitlePadding
    void setTitlePadding(float) -> setTitlePadding
    float getTopPadding() -> getTopPadding
    void setTopPadding(float) -> setTopPadding
    float getClipPadding() -> getClipPadding
    void setClipPadding(float) -> setClipPadding
    void setTypeface(android.graphics.Typeface) -> setTypeface
    android.graphics.Typeface getTypeface() -> getTypeface
    void onDraw(android.graphics.Canvas) -> onDraw
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void clipViewOnTheRight(android.graphics.Rect,float,int) -> a
    void clipViewOnTheLeft(android.graphics.Rect,float,int) -> b
    java.util.ArrayList calculateAllBounds(android.graphics.Paint) -> a
    android.graphics.Rect calcBounds(int,android.graphics.Paint) -> a
    void setViewPager(android.support.v4.view.ViewPager) -> setViewPager
    void setOnCenterItemClickListener(com.viewpagerindicator.TitlePageIndicator$OnCenterItemClickListener) -> setOnCenterItemClickListener
    void setCurrentItem(int) -> setCurrentItem
    void onPageScrollStateChanged(int) -> onPageScrollStateChanged
    void onPageScrolled(int,float,int) -> onPageScrolled
    void onPageSelected(int) -> onPageSelected
    void setOnPageChangeListener(android.support.v4.view.ViewPager$OnPageChangeListener) -> setOnPageChangeListener
    void onMeasure(int,int) -> onMeasure
    void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    java.lang.CharSequence getTitle(int) -> a
com.viewpagerindicator.TitlePageIndicator$1 -> com.viewpagerindicator.TitlePageIndicator$1:
    int[] $SwitchMap$com$viewpagerindicator$TitlePageIndicator$IndicatorStyle -> a
com.viewpagerindicator.TitlePageIndicator$IndicatorStyle -> com.viewpagerindicator.TitlePageIndicator$IndicatorStyle:
    com.viewpagerindicator.TitlePageIndicator$IndicatorStyle None -> a
    com.viewpagerindicator.TitlePageIndicator$IndicatorStyle Triangle -> b
    com.viewpagerindicator.TitlePageIndicator$IndicatorStyle Underline -> c
    int value -> d
    com.viewpagerindicator.TitlePageIndicator$IndicatorStyle[] $VALUES -> e
    com.viewpagerindicator.TitlePageIndicator$IndicatorStyle[] values() -> values
    com.viewpagerindicator.TitlePageIndicator$IndicatorStyle valueOf(java.lang.String) -> valueOf
com.viewpagerindicator.TitlePageIndicator$LinePosition -> com.viewpagerindicator.TitlePageIndicator$LinePosition:
    com.viewpagerindicator.TitlePageIndicator$LinePosition Bottom -> a
    com.viewpagerindicator.TitlePageIndicator$LinePosition Top -> b
    int value -> c
    com.viewpagerindicator.TitlePageIndicator$LinePosition[] $VALUES -> d
    com.viewpagerindicator.TitlePageIndicator$LinePosition[] values() -> values
    com.viewpagerindicator.TitlePageIndicator$LinePosition valueOf(java.lang.String) -> valueOf
com.viewpagerindicator.TitlePageIndicator$OnCenterItemClickListener -> com.viewpagerindicator.TitlePageIndicator$OnCenterItemClickListener:
    void onCenterItemClick(int) -> a
com.viewpagerindicator.TitlePageIndicator$SavedState -> com.viewpagerindicator.TitlePageIndicator$SavedState:
    int currentPage -> a
    android.os.Parcelable$Creator CREATOR -> CREATOR
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.viewpagerindicator.TitlePageIndicator$SavedState$1 -> com.viewpagerindicator.TitlePageIndicator$SavedState$1:
    com.viewpagerindicator.TitlePageIndicator$SavedState createFromParcel(android.os.Parcel) -> a
    com.viewpagerindicator.TitlePageIndicator$SavedState[] newArray(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.viewpagerindicator.UnderlinePageIndicator -> com.viewpagerindicator.UnderlinePageIndicator:
    android.graphics.Paint mPaint -> a
    boolean mFades -> b
    int mFadeDelay -> c
    int mFadeLength -> d
    int mFadeBy -> e
    android.support.v4.view.ViewPager mViewPager -> f
    android.support.v4.view.ViewPager$OnPageChangeListener mListener -> g
    int mScrollState -> h
    int mCurrentPage -> i
    float mPositionOffset -> j
    int mTouchSlop -> k
    float mLastMotionX -> l
    int mActivePointerId -> m
    boolean mIsDragging -> n
    java.lang.Runnable mFadeRunnable -> o
    boolean getFades() -> getFades
    void setFades(boolean) -> setFades
    int getFadeDelay() -> getFadeDelay
    void setFadeDelay(int) -> setFadeDelay
    int getFadeLength() -> getFadeLength
    void setFadeLength(int) -> setFadeLength
    int getSelectedColor() -> getSelectedColor
    void setSelectedColor(int) -> setSelectedColor
    void onDraw(android.graphics.Canvas) -> onDraw
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void setViewPager(android.support.v4.view.ViewPager) -> setViewPager
    void setCurrentItem(int) -> setCurrentItem
    void onPageScrollStateChanged(int) -> onPageScrollStateChanged
    void onPageScrolled(int,float,int) -> onPageScrolled
    void onPageSelected(int) -> onPageSelected
    void setOnPageChangeListener(android.support.v4.view.ViewPager$OnPageChangeListener) -> setOnPageChangeListener
    void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    boolean access$000(com.viewpagerindicator.UnderlinePageIndicator) -> a
    android.graphics.Paint access$100(com.viewpagerindicator.UnderlinePageIndicator) -> b
    int access$200(com.viewpagerindicator.UnderlinePageIndicator) -> c
    java.lang.Runnable access$300(com.viewpagerindicator.UnderlinePageIndicator) -> d
com.viewpagerindicator.UnderlinePageIndicator$1 -> com.viewpagerindicator.UnderlinePageIndicator$1:
    com.viewpagerindicator.UnderlinePageIndicator this$0 -> a
    void run() -> run
com.viewpagerindicator.UnderlinePageIndicator$2 -> com.viewpagerindicator.UnderlinePageIndicator$2:
    com.viewpagerindicator.UnderlinePageIndicator this$0 -> a
    void run() -> run
com.viewpagerindicator.UnderlinePageIndicator$SavedState -> com.viewpagerindicator.UnderlinePageIndicator$SavedState:
    int currentPage -> a
    android.os.Parcelable$Creator CREATOR -> CREATOR
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.viewpagerindicator.UnderlinePageIndicator$SavedState$1 -> com.viewpagerindicator.UnderlinePageIndicator$SavedState$1:
    com.viewpagerindicator.UnderlinePageIndicator$SavedState createFromParcel(android.os.Parcel) -> a
    com.viewpagerindicator.UnderlinePageIndicator$SavedState[] newArray(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
de.measite.smack.AndroidDebugger -> de.measite.smack.AndroidDebugger:
    boolean printInterpreted -> a
    org.jivesoftware.smack.Connection connection -> b
    org.jivesoftware.smack.PacketListener listener -> c
    org.jivesoftware.smack.ConnectionListener connListener -> d
    java.io.Writer writer -> e
    java.io.Reader reader -> f
    org.jivesoftware.smack.util.ReaderListener readerListener -> g
    org.jivesoftware.smack.util.WriterListener writerListener -> h
    java.io.Reader newConnectionReader(java.io.Reader) -> a
    java.io.Writer newConnectionWriter(java.io.Writer) -> a
    void userHasLogged(java.lang.String) -> a
    java.io.Reader getReader() -> a
    java.io.Writer getWriter() -> b
    org.jivesoftware.smack.PacketListener getReaderListener() -> c
    org.jivesoftware.smack.PacketListener getWriterListener() -> d
de.measite.smack.Sasl -> de.measite.smack.Sasl:
    java.util.Enumeration getSaslClientFactories() -> a
    org.apache.harmony.javax.security.sasl.SaslClient createSaslClient(java.lang.String[],java.lang.String,java.lang.String,java.lang.String,java.util.Map,org.apache.harmony.javax.security.auth.callback.CallbackHandler) -> a
de.measite.smack.SaslClientFactory -> de.measite.smack.SaslClientFactory:
    org.apache.harmony.javax.security.sasl.SaslClient createSaslClient(java.lang.String[],java.lang.String,java.lang.String,java.lang.String,java.util.Map,org.apache.harmony.javax.security.auth.callback.CallbackHandler) -> a
    java.lang.String[] getMechanismNames(java.util.Map) -> a
net.sourceforge.zbar.Image -> net.sourceforge.zbar.Image:
    long peer -> a
    void init() -> init
    long create() -> create
    void finalize() -> finalize
    void destroy() -> a
    void destroy(long) -> destroy
    void setFormat(java.lang.String) -> setFormat
    void setSize(int,int) -> setSize
    void setData(byte[]) -> setData
net.sourceforge.zbar.ImageScanner -> net.sourceforge.zbar.ImageScanner:
    long peer -> a
    void init() -> init
    long create() -> create
    void finalize() -> finalize
    void destroy() -> a
    void destroy(long) -> destroy
    void setConfig(int,int,int) -> setConfig
    net.sourceforge.zbar.SymbolSet getResults() -> b
    long getResults(long) -> getResults
    int scanImage(net.sourceforge.zbar.Image) -> scanImage
net.sourceforge.zbar.Symbol -> net.sourceforge.zbar.Symbol:
    long peer -> a
    void init() -> init
    void finalize() -> finalize
    void destroy() -> a
    void destroy(long) -> destroy
    java.lang.String getData() -> getData
    long next() -> next
net.sourceforge.zbar.SymbolIterator -> net.sourceforge.zbar.SymbolIterator:
    net.sourceforge.zbar.Symbol current -> a
    boolean hasNext() -> hasNext
    net.sourceforge.zbar.Symbol next() -> a
    void remove() -> remove
    java.lang.Object next() -> next
net.sourceforge.zbar.SymbolSet -> net.sourceforge.zbar.SymbolSet:
    long peer -> a
    void init() -> init
    void finalize() -> finalize
    void destroy() -> a
    void destroy(long) -> destroy
    java.util.Iterator iterator() -> iterator
    int size() -> size
    long firstSymbol(long) -> firstSymbol
net.tsz.afinal.FinalDb -> net.tsz.afinal.FinalDb:
    java.util.HashMap daoMap -> a
    android.database.sqlite.SQLiteDatabase db -> b
    net.tsz.afinal.FinalDb$DaoConfig config -> c
    net.tsz.afinal.FinalDb getInstance(net.tsz.afinal.FinalDb$DaoConfig) -> b
    net.tsz.afinal.FinalDb create(android.content.Context,java.lang.String,boolean) -> a
    net.tsz.afinal.FinalDb create(net.tsz.afinal.FinalDb$DaoConfig) -> a
    void save(java.lang.Object) -> a
    boolean saveBindId(java.lang.Object) -> b
    void insertContentValues(java.util.List,android.content.ContentValues) -> a
    void update(java.lang.Object) -> c
    void delete(java.lang.Object) -> d
    void deleteAll(java.lang.Class) -> a
    void dropDb() -> a
    void exeSqlInfo(net.tsz.afinal.db.sqlite.SqlInfo) -> a
    java.lang.Object findById(java.lang.Object,java.lang.Class) -> a
    java.lang.Object loadManyToOne(net.tsz.afinal.db.sqlite.DbModel,java.lang.Object,java.lang.Class,java.lang.Class[]) -> a
    java.lang.Object loadOneToMany(java.lang.Object,java.lang.Class,java.lang.Class[]) -> a
    java.util.List findAll(java.lang.Class) -> b
    java.util.List findAllByWhere(java.lang.Class,java.lang.String) -> a
    java.util.List findAllBySql(java.lang.Class,java.lang.String) -> b
    void checkTableExist(java.lang.Class) -> c
    boolean tableIsExist(net.tsz.afinal.db.table.TableInfo) -> a
    void debugSql(java.lang.String) -> a
    android.database.sqlite.SQLiteDatabase createDbFileOnSDCard(java.lang.String,java.lang.String) -> a
net.tsz.afinal.FinalDb$DaoConfig -> net.tsz.afinal.FinalDb$DaoConfig:
    android.content.Context mContext -> a
    java.lang.String mDbName -> b
    int dbVersion -> c
    boolean debug -> d
    net.tsz.afinal.FinalDb$DbUpdateListener dbUpdateListener -> e
    java.lang.String targetDirectory -> f
    android.content.Context getContext() -> a
    void setContext(android.content.Context) -> a
    java.lang.String getDbName() -> b
    void setDbName(java.lang.String) -> a
    int getDbVersion() -> c
    boolean isDebug() -> d
    void setDebug(boolean) -> a
    net.tsz.afinal.FinalDb$DbUpdateListener getDbUpdateListener() -> e
    java.lang.String getTargetDirectory() -> f
net.tsz.afinal.FinalDb$DbUpdateListener -> net.tsz.afinal.FinalDb$DbUpdateListener:
    void onUpgrade(android.database.sqlite.SQLiteDatabase,int,int) -> a
net.tsz.afinal.FinalDb$SqliteDbHelper -> net.tsz.afinal.FinalDb$SqliteDbHelper:
    net.tsz.afinal.FinalDb$DbUpdateListener mDbUpdateListener -> b
    net.tsz.afinal.FinalDb this$0 -> a
    void onCreate(android.database.sqlite.SQLiteDatabase) -> onCreate
    void onUpgrade(android.database.sqlite.SQLiteDatabase,int,int) -> onUpgrade
net.tsz.afinal.annotation.sqlite.Id -> net.tsz.afinal.annotation.sqlite.Id:
    java.lang.String column() -> a
net.tsz.afinal.annotation.sqlite.ManyToOne -> net.tsz.afinal.annotation.sqlite.ManyToOne:
    java.lang.String column() -> a
net.tsz.afinal.annotation.sqlite.OneToMany -> net.tsz.afinal.annotation.sqlite.OneToMany:
    java.lang.String manyColumn() -> a
net.tsz.afinal.annotation.sqlite.Property -> net.tsz.afinal.annotation.sqlite.Property:
    java.lang.String column() -> a
    java.lang.String defaultValue() -> b
net.tsz.afinal.annotation.sqlite.Table -> net.tsz.afinal.annotation.sqlite.Table:
    java.lang.String name() -> a
net.tsz.afinal.annotation.sqlite.Transient -> net.tsz.afinal.annotation.sqlite.Transient:
net.tsz.afinal.db.sqlite.CursorUtils -> net.tsz.afinal.db.sqlite.CursorUtils:
    java.lang.Object getEntity(android.database.Cursor,java.lang.Class,net.tsz.afinal.FinalDb) -> a
net.tsz.afinal.db.sqlite.DbModel -> net.tsz.afinal.db.sqlite.DbModel:
    java.util.HashMap dataMap -> a
    java.lang.Object get(java.lang.String) -> a
net.tsz.afinal.db.sqlite.ManyToOneLazyLoader -> net.tsz.afinal.db.sqlite.ManyToOneLazyLoader:
    java.lang.Object manyEntity -> a
    java.lang.Class manyClazz -> b
    java.lang.Class oneClazz -> c
    net.tsz.afinal.FinalDb db -> d
    java.lang.Object fieldValue -> g
    java.lang.Object oneEntity -> e
    boolean hasLoaded -> f
    java.lang.Object get() -> a
    void set(java.lang.Object) -> a
    java.lang.Object getFieldValue() -> b
    void setFieldValue(java.lang.Object) -> b
net.tsz.afinal.db.sqlite.OneToManyLazyLoader -> net.tsz.afinal.db.sqlite.OneToManyLazyLoader:
    java.lang.Object ownerEntity -> a
    java.lang.Class ownerClazz -> b
    java.lang.Class listItemClazz -> c
    net.tsz.afinal.FinalDb db -> d
    java.util.List entities -> e
    java.util.List getList() -> a
    void setList(java.util.List) -> a
net.tsz.afinal.db.sqlite.SqlBuilder -> net.tsz.afinal.db.sqlite.SqlBuilder:
    net.tsz.afinal.db.sqlite.SqlInfo buildInsertSql(java.lang.Object) -> a
    java.util.List getSaveKeyValueListByEntity(java.lang.Object) -> b
    java.lang.String getDeleteSqlBytableName(java.lang.String) -> a
    net.tsz.afinal.db.sqlite.SqlInfo buildDeleteSql(java.lang.Object) -> c
    java.lang.String buildDeleteSql(java.lang.Class,java.lang.String) -> a
    java.lang.String getSelectSqlByTableName(java.lang.String) -> b
    net.tsz.afinal.db.sqlite.SqlInfo getSelectSqlAsSqlInfo(java.lang.Class,java.lang.Object) -> a
    java.lang.String getSelectSQL(java.lang.Class) -> a
    java.lang.String getSelectSQLByWhere(java.lang.Class,java.lang.String) -> b
    net.tsz.afinal.db.sqlite.SqlInfo getUpdateSqlAsSqlInfo(java.lang.Object) -> d
    java.lang.String getCreatTableSQL(java.lang.Class) -> b
    net.tsz.afinal.db.table.KeyValue property2KeyValue(net.tsz.afinal.db.table.Property,java.lang.Object) -> a
    net.tsz.afinal.db.table.KeyValue manyToOne2KeyValue(net.tsz.afinal.db.table.ManyToOne,java.lang.Object) -> a
net.tsz.afinal.db.sqlite.SqlInfo -> net.tsz.afinal.db.sqlite.SqlInfo:
    java.lang.String sql -> a
    java.util.LinkedList bindArgs -> b
    java.lang.String getSql() -> a
    void setSql(java.lang.String) -> a
    java.lang.Object[] getBindArgsAsArray() -> b
    java.lang.String[] getBindArgsAsStringArray() -> c
    void addValue(java.lang.Object) -> a
net.tsz.afinal.db.table.Id -> net.tsz.afinal.db.table.Id:
net.tsz.afinal.db.table.KeyValue -> net.tsz.afinal.db.table.KeyValue:
    java.lang.String key -> a
    java.lang.Object value -> b
    java.lang.String getKey() -> a
    java.lang.Object getValue() -> b
net.tsz.afinal.db.table.ManyToOne -> net.tsz.afinal.db.table.ManyToOne:
    java.lang.Class manyClass -> a
    java.lang.Class getManyClass() -> a
    void setManyClass(java.lang.Class) -> a
net.tsz.afinal.db.table.OneToMany -> net.tsz.afinal.db.table.OneToMany:
    java.lang.Class oneClass -> a
    java.lang.Class getOneClass() -> a
    void setOneClass(java.lang.Class) -> a
net.tsz.afinal.db.table.Property -> net.tsz.afinal.db.table.Property:
    java.lang.String fieldName -> a
    java.lang.String column -> b
    java.lang.String defaultValue -> c
    java.lang.Class dataType -> d
    java.lang.reflect.Field field -> e
    java.lang.reflect.Method get -> f
    java.lang.reflect.Method set -> g
    void setValue(java.lang.Object,java.lang.Object) -> a
    java.lang.Object getValue(java.lang.Object) -> a
    void setFieldName(java.lang.String) -> a
    java.lang.String getColumn() -> b
    void setColumn(java.lang.String) -> b
    java.lang.String getDefaultValue() -> c
    void setDefaultValue(java.lang.String) -> c
    java.lang.Class getDataType() -> d
    void setDataType(java.lang.Class) -> b
    void setGet(java.lang.reflect.Method) -> a
    void setSet(java.lang.reflect.Method) -> b
    void setField(java.lang.reflect.Field) -> a
net.tsz.afinal.db.table.TableInfo -> net.tsz.afinal.db.table.TableInfo:
    java.lang.String className -> d
    java.lang.String tableName -> e
    net.tsz.afinal.db.table.Id id -> f
    java.util.HashMap propertyMap -> a
    java.util.HashMap oneToManyMap -> b
    java.util.HashMap manyToOneMap -> c
    boolean checkDatabese -> g
    java.util.HashMap tableInfoMap -> h
    net.tsz.afinal.db.table.TableInfo get(java.lang.Class) -> a
    void setClassName(java.lang.String) -> a
    java.lang.String getTableName() -> a
    void setTableName(java.lang.String) -> b
    net.tsz.afinal.db.table.Id getId() -> b
    void setId(net.tsz.afinal.db.table.Id) -> a
    boolean isCheckDatabese() -> c
    void setCheckDatabese(boolean) -> a
net.tsz.afinal.exception.AfinalException -> net.tsz.afinal.exception.AfinalException:
net.tsz.afinal.exception.DbException -> net.tsz.afinal.exception.DbException:
net.tsz.afinal.utils.ClassUtils -> net.tsz.afinal.utils.ClassUtils:
    java.lang.String getTableName(java.lang.Class) -> a
    java.lang.reflect.Field getPrimaryKeyField(java.lang.Class) -> b
    java.lang.String getPrimaryKeyFieldName(java.lang.Class) -> c
    java.util.List getPropertyList(java.lang.Class) -> d
    java.util.List getManyToOneList(java.lang.Class) -> e
    java.util.List getOneToManyList(java.lang.Class) -> f
net.tsz.afinal.utils.FieldUtils -> net.tsz.afinal.utils.FieldUtils:
    java.text.SimpleDateFormat SDF -> a
    java.lang.reflect.Method getFieldGetMethod(java.lang.Class,java.lang.reflect.Field) -> a
    java.lang.reflect.Method getBooleanFieldGetMethod(java.lang.Class,java.lang.String) -> a
    java.lang.reflect.Method getBooleanFieldSetMethod(java.lang.Class,java.lang.reflect.Field) -> b
    boolean isISStart(java.lang.String) -> b
    java.lang.reflect.Method getFieldGetMethod(java.lang.Class,java.lang.String) -> b
    java.lang.reflect.Method getFieldSetMethod(java.lang.Class,java.lang.reflect.Field) -> c
    java.lang.String getColumnByField(java.lang.reflect.Field) -> a
    java.lang.String getPropertyDefaultValue(java.lang.reflect.Field) -> b
    boolean isTransient(java.lang.reflect.Field) -> c
    boolean isManyToOne(java.lang.reflect.Field) -> d
    boolean isOneToMany(java.lang.reflect.Field) -> e
    boolean isBaseDateType(java.lang.reflect.Field) -> f
    java.util.Date stringToDateTime(java.lang.String) -> a
org.apache.harmony.javax.security.auth.callback.Callback -> org.apache.harmony.javax.security.auth.callback.Callback:
org.apache.harmony.javax.security.auth.callback.CallbackHandler -> org.apache.harmony.javax.security.auth.callback.CallbackHandler:
    void handle(org.apache.harmony.javax.security.auth.callback.Callback[]) -> a
org.apache.harmony.javax.security.auth.callback.ChoiceCallback -> org.apache.harmony.javax.security.auth.callback.ChoiceCallback:
    int defaultChoice -> a
    java.lang.String prompt -> b
    boolean multipleSelectionsAllowed -> c
    java.lang.String[] choices -> d
    int[] selections -> e
    void setChoices(java.lang.String[]) -> a
    void setPrompt(java.lang.String) -> a
    void setDefaultChoice(int) -> a
    java.lang.String[] getChoices() -> a
    int[] getSelectedIndexes() -> b
org.apache.harmony.javax.security.auth.callback.NameCallback -> org.apache.harmony.javax.security.auth.callback.NameCallback:
    java.lang.String prompt -> a
    java.lang.String defaultName -> b
    java.lang.String inputName -> c
    void setPrompt(java.lang.String) -> b
    void setDefaultName(java.lang.String) -> c
    java.lang.String getDefaultName() -> a
    void setName(java.lang.String) -> a
    java.lang.String getName() -> b
org.apache.harmony.javax.security.auth.callback.PasswordCallback -> org.apache.harmony.javax.security.auth.callback.PasswordCallback:
    java.lang.String prompt -> b
    boolean echoOn -> a
    char[] inputPassword -> c
    void setPrompt(java.lang.String) -> a
    void setPassword(char[]) -> a
    char[] getPassword() -> a
    void clearPassword() -> b
org.apache.harmony.javax.security.auth.callback.TextInputCallback -> org.apache.harmony.javax.security.auth.callback.TextInputCallback:
    java.lang.String defaultText -> a
    java.lang.String prompt -> b
    java.lang.String inputText -> c
    void setPrompt(java.lang.String) -> b
    void setDefaultText(java.lang.String) -> c
    java.lang.String getText() -> a
    void setText(java.lang.String) -> a
org.apache.harmony.javax.security.auth.callback.UnsupportedCallbackException -> org.apache.harmony.javax.security.auth.callback.UnsupportedCallbackException:
    org.apache.harmony.javax.security.auth.callback.Callback callback -> a
org.apache.harmony.javax.security.sasl.RealmCallback -> org.apache.harmony.javax.security.sasl.RealmCallback:
org.apache.harmony.javax.security.sasl.RealmChoiceCallback -> org.apache.harmony.javax.security.sasl.RealmChoiceCallback:
org.apache.harmony.javax.security.sasl.SaslClient -> org.apache.harmony.javax.security.sasl.SaslClient:
    byte[] evaluateChallenge(byte[]) -> a
    boolean hasInitialResponse() -> a
org.apache.harmony.javax.security.sasl.SaslException -> org.apache.harmony.javax.security.sasl.SaslException:
    java.lang.Throwable _exception -> a
    java.lang.Throwable getCause() -> getCause
    java.lang.Throwable initCause(java.lang.Throwable) -> initCause
    java.lang.String toString() -> toString
org.apache.qpid.management.common.sasl.PlainSaslClient -> org.apache.qpid.management.common.sasl.PlainSaslClient:
    boolean completed -> a
    org.apache.harmony.javax.security.auth.callback.CallbackHandler cbh -> b
    java.lang.String authorizationID -> c
    java.lang.String authenticationID -> d
    byte[] password -> e
    byte SEPARATOR -> f
    byte[] evaluateChallenge(byte[]) -> a
    boolean hasInitialResponse() -> a
    void clearPassword() -> b
    void finalize() -> finalize
    java.lang.Object[] getUserInfo() -> c
org.holoeverywhere.FontLoader -> org.holoeverywhere.FontLoader:
    org.holoeverywhere.FontLoader$FontCollector ROBOTO -> a
    org.holoeverywhere.FontLoader$Font ROBOTO_BLACK -> b
    org.holoeverywhere.FontLoader$Font ROBOTO_BLACKITALIC -> c
    org.holoeverywhere.FontLoader$Font ROBOTO_BOLD -> d
    org.holoeverywhere.FontLoader$Font ROBOTO_BOLDCONDENSED -> e
    org.holoeverywhere.FontLoader$Font ROBOTO_BOLDCONDENSEDITALIC -> f
    org.holoeverywhere.FontLoader$Font ROBOTO_BOLDITALIC -> g
    org.holoeverywhere.FontLoader$Font ROBOTO_CONDENSED -> h
    org.holoeverywhere.FontLoader$Font ROBOTO_CONDENSEDITALIC -> i
    org.holoeverywhere.FontLoader$Font ROBOTO_ITALIC -> j
    org.holoeverywhere.FontLoader$Font ROBOTO_LIGHT -> k
    org.holoeverywhere.FontLoader$Font ROBOTO_LIGHTITALIC -> l
    org.holoeverywhere.FontLoader$Font ROBOTO_MEDIUM -> m
    org.holoeverywhere.FontLoader$Font ROBOTO_MEDIUMITALIC -> n
    org.holoeverywhere.FontLoader$Font ROBOTO_REGULAR -> o
    org.holoeverywhere.FontLoader$Font ROBOTO_THIN -> p
    org.holoeverywhere.FontLoader$Font ROBOTO_THINITALIC -> q
    int TEXT_STYLE_BLACK -> r
    int TEXT_STYLE_BOLD -> s
    int TEXT_STYLE_CONDENDSED -> t
    int TEXT_STYLE_ITALIC -> u
    int TEXT_STYLE_LIGHT -> v
    int TEXT_STYLE_MEDIUM -> w
    int TEXT_STYLE_NORMAL -> x
    int TEXT_STYLE_THIN -> y
    java.util.Map sFontStyleMapping -> z
    org.holoeverywhere.FontLoader$Font sDefaultFont -> A
    java.util.List sFontStyleKeys -> B
    int sNextTextStyleOffset -> C
    android.view.View apply(android.view.View,org.holoeverywhere.FontLoader$Font) -> a
    android.view.View applyDefaultFont(android.view.View) -> a
    void applyInternal(android.view.View,org.holoeverywhere.FontLoader$Font) -> b
    boolean equals(java.lang.Object,java.lang.Object) -> a
    java.lang.Object[] parseFontStyle(java.lang.String) -> a
    int registerTextStyle(java.lang.String) -> b
org.holoeverywhere.FontLoader$Font -> org.holoeverywhere.FontLoader$Font:
    android.content.Context mContext -> a
    java.lang.String mFontFamily -> b
    int mFontStyle -> c
    boolean mLockModifing -> d
    android.graphics.Typeface mTypeface -> e
    boolean mTypefaceLoaded -> f
    void assertContext() -> a
    void assertModifing() -> b
    org.holoeverywhere.FontLoader$Font clone() -> c
    android.content.Context getContext() -> d
    org.holoeverywhere.FontLoader$Font setFontFamily(java.lang.String) -> a
    org.holoeverywhere.FontLoader$Font setFontStyle(int) -> a
    android.graphics.Typeface getTypeface(java.lang.String,int) -> a
    android.graphics.Typeface loadTypeface() -> e
    void lock() -> f
    void resetTypeface() -> g
    java.lang.Object clone() -> clone
    android.content.Context access$002(org.holoeverywhere.FontLoader$Font,android.content.Context) -> a
    java.lang.String access$100(org.holoeverywhere.FontLoader$Font) -> a
    int access$200(org.holoeverywhere.FontLoader$Font) -> b
org.holoeverywhere.FontLoader$FontCollector -> org.holoeverywhere.FontLoader$FontCollector:
    java.util.List mFonts -> a
    boolean mAllowAnyFontFamily -> b
    org.holoeverywhere.FontLoader$Font mDefaultFont -> c
    org.holoeverywhere.FontLoader$Font mLastUsedFont -> d
    org.holoeverywhere.FontLoader$FontCollector allowAnyFontFamily() -> h
    org.holoeverywhere.FontLoader$FontCollector asDefaultFont() -> i
    org.holoeverywhere.FontLoader$FontCollector clone() -> j
    android.graphics.Typeface getTypeface(org.holoeverywhere.FontLoader$Font,java.lang.String,int) -> a
    org.holoeverywhere.FontLoader$Font findFont(java.lang.String,int) -> b
    android.graphics.Typeface getTypeface(java.lang.String,int) -> a
    org.holoeverywhere.FontLoader$FontCollector register(org.holoeverywhere.FontLoader$Font) -> c
    org.holoeverywhere.FontLoader$Font clone() -> c
    java.lang.Object clone() -> clone
org.holoeverywhere.FontLoader$FontStyleProvider -> org.holoeverywhere.FontLoader$FontStyleProvider:
    java.lang.String getFontFamily() -> getFontFamily
    int getFontStyle() -> getFontStyle
    void setFontStyle(java.lang.String,int) -> a
    void setTypeface(android.graphics.Typeface) -> setTypeface
org.holoeverywhere.FontLoader$RawFont -> org.holoeverywhere.FontLoader$RawFont:
    long sApplicationInstallDate -> a
    int mRawResourceId -> b
    org.holoeverywhere.FontLoader$RawFont clone() -> h
    android.graphics.Typeface loadTypeface() -> e
    android.graphics.Typeface loadRawTypeface() -> i
    android.graphics.Typeface loadTypeface(java.io.File,boolean) -> a
    android.graphics.Typeface tryToLoadRawTypeface(java.io.File) -> a
    void setRawResourceId(int) -> b
    org.holoeverywhere.FontLoader$Font clone() -> c
    java.lang.Object clone() -> clone
org.holoeverywhere.FontLoader$RawLazyFont -> org.holoeverywhere.FontLoader$RawLazyFont:
    java.lang.String mRawResourceName -> a
    org.holoeverywhere.FontLoader$RawLazyFont clone() -> j
    android.graphics.Typeface loadTypeface() -> e
    void setRawResourceId(android.content.Context) -> a
    org.holoeverywhere.FontLoader$RawFont clone() -> h
    org.holoeverywhere.FontLoader$Font clone() -> c
    java.lang.Object clone() -> clone
org.holoeverywhere.FontLoader$RobotoRawFont -> org.holoeverywhere.FontLoader$RobotoRawFont:
org.holoeverywhere.FontLoader$RobotoRawLazyFont -> org.holoeverywhere.FontLoader$RobotoRawLazyFont:
org.holoeverywhere.HoloEverywhere -> org.holoeverywhere.HoloEverywhere:
    java.lang.String PACKAGE -> a
    boolean ALWAYS_USE_PARENT_THEME -> b
    boolean DEBUG -> c
    boolean NAMED_PREFERENCES -> d
    org.holoeverywhere.HoloEverywhere$PreferenceImpl PREFERENCE_IMPL -> e
    boolean SAVE_MENU_INSTANCE_OVER_INVALIDATE -> f
org.holoeverywhere.HoloEverywhere$PreferenceImpl -> org.holoeverywhere.HoloEverywhere$PreferenceImpl:
    org.holoeverywhere.HoloEverywhere$PreferenceImpl JSON -> a
    org.holoeverywhere.HoloEverywhere$PreferenceImpl XML -> b
    org.holoeverywhere.HoloEverywhere$PreferenceImpl[] $VALUES -> c
    org.holoeverywhere.HoloEverywhere$PreferenceImpl[] values() -> values
    org.holoeverywhere.HoloEverywhere$PreferenceImpl valueOf(java.lang.String) -> valueOf
org.holoeverywhere.LayoutInflater -> org.holoeverywhere.LayoutInflater:
    java.util.HashMap sConstructorMap -> a
    java.lang.Class[] sConstructorSignature -> b
    java.util.Map sFinishInflateMethods -> c
    java.util.Map sInstances -> d
    java.util.List sPackages -> e
    java.util.Map sRemaps -> f
    org.holoeverywhere.util.SparseIntArray sLayoutRemap -> g
    org.holoeverywhere.LayoutInflater$OnInitInflaterListener sListener -> h
    org.holoeverywhere.app.Fragment mChildFragment -> i
    java.lang.Object[] mConstructorArgs -> j
    android.content.Context mContext -> k
    java.util.List mFactories -> l
    android.view.LayoutInflater$Filter mFilter -> m
    java.util.HashMap mFilterMap -> n
    android.support.v4.app.FragmentActivity mFragmentActivity -> o
    org.holoeverywhere.LayoutInflater mParentInflater -> p
    void asInternal(java.lang.Class) -> b
    org.holoeverywhere.LayoutInflater from(android.content.Context) -> a
    org.holoeverywhere.LayoutInflater from(android.content.Context,int) -> a
    android.view.View inflate(android.content.Context,int) -> b
    android.view.View inflate(android.content.Context,int,android.view.ViewGroup,boolean) -> a
    void register(java.lang.Class) -> a
    void register(java.lang.String,java.lang.String) -> a
    void registerPackage(java.lang.String) -> a
    java.lang.String resolveFullPackageName(java.lang.String) -> b
    void removeInstance(android.content.Context) -> b
    android.view.View _createView(java.lang.String,java.lang.String,android.util.AttributeSet) -> a
    void addFactory(org.holoeverywhere.LayoutInflater$Factory,int) -> a
    void checkFactoryOnNull(org.holoeverywhere.LayoutInflater$Factory) -> b
    org.holoeverywhere.LayoutInflater cloneInContext(android.content.Context) -> c
    android.view.View createViewFromTag(android.view.View,java.lang.String,android.util.AttributeSet) -> a
    void failNotAllowed(java.lang.String,java.lang.String,android.util.AttributeSet) -> b
    android.view.LayoutInflater$Filter getFilter() -> getFilter
    void setFilter(android.view.LayoutInflater$Filter) -> setFilter
    android.support.v4.app.FragmentActivity getFragmentActivity() -> a
    void setFragmentActivity(android.support.v4.app.FragmentActivity) -> a
    android.view.View inflate(int) -> a
    android.view.View inflate(int,android.view.ViewGroup) -> inflate
    android.view.View inflate(int,android.view.ViewGroup,boolean) -> inflate
    android.view.View inflate(org.xmlpull.v1.XmlPullParser,android.view.ViewGroup) -> inflate
    android.view.View inflate(org.xmlpull.v1.XmlPullParser,android.view.ViewGroup,boolean) -> inflate
    org.holoeverywhere.LayoutInflater obtainFragmentChildInflater(org.holoeverywhere.app.Fragment) -> a
    android.view.View onCreateView(android.view.View,java.lang.String,android.util.AttributeSet) -> onCreateView
    void parseInclude(org.xmlpull.v1.XmlPullParser,android.view.View,android.util.AttributeSet) -> a
    void parseRequestFocus(org.xmlpull.v1.XmlPullParser,android.view.View) -> a
    android.view.View prepareView(android.view.View) -> a
    void rInflate(org.xmlpull.v1.XmlPullParser,android.view.View,android.util.AttributeSet,boolean) -> a
    void setFactory(android.view.LayoutInflater$Factory) -> setFactory
    void setFactory(org.holoeverywhere.LayoutInflater$Factory) -> a
    void setFactory2(android.view.LayoutInflater$Factory2) -> setFactory2
    org.holoeverywhere.LayoutInflater setParent(android.view.LayoutInflater) -> a
    android.view.LayoutInflater cloneInContext(android.content.Context) -> cloneInContext
org.holoeverywhere.LayoutInflater$BlinkLayout -> org.holoeverywhere.LayoutInflater$BlinkLayout:
    android.os.Handler mHandler -> a
    boolean mBlink -> b
    boolean mBlinkState -> c
    void dispatchDraw(android.graphics.Canvas) -> dispatchDraw
    void makeBlink() -> a
    void onAttachedToWindow() -> onAttachedToWindow
    void onDetachedFromWindow() -> onDetachedFromWindow
    boolean access$000(org.holoeverywhere.LayoutInflater$BlinkLayout) -> a
    boolean access$102(org.holoeverywhere.LayoutInflater$BlinkLayout,boolean) -> a
    boolean access$100(org.holoeverywhere.LayoutInflater$BlinkLayout) -> b
    void access$200(org.holoeverywhere.LayoutInflater$BlinkLayout) -> c
org.holoeverywhere.LayoutInflater$BlinkLayout$1 -> org.holoeverywhere.LayoutInflater$BlinkLayout$1:
    org.holoeverywhere.LayoutInflater$BlinkLayout this$0 -> a
    boolean handleMessage(android.os.Message) -> handleMessage
org.holoeverywhere.LayoutInflater$Factory -> org.holoeverywhere.LayoutInflater$Factory:
    android.view.View onCreateView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet) -> a
org.holoeverywhere.LayoutInflater$Factory2Wrapper -> org.holoeverywhere.LayoutInflater$Factory2Wrapper:
    android.view.LayoutInflater$Factory2 mFactory -> a
    android.view.View onCreateView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet) -> a
org.holoeverywhere.LayoutInflater$FactoryWrapper -> org.holoeverywhere.LayoutInflater$FactoryWrapper:
    android.view.LayoutInflater$Factory mFactory -> a
    android.view.View onCreateView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet) -> a
org.holoeverywhere.LayoutInflater$LayoutInflaterCreator -> org.holoeverywhere.LayoutInflater$LayoutInflaterCreator:
    org.holoeverywhere.LayoutInflater createService(android.content.Context) -> a
    java.lang.Object createService(android.content.Context) -> b
org.holoeverywhere.LayoutInflater$OnInitInflaterListener -> org.holoeverywhere.LayoutInflater$OnInitInflaterListener:
    void onInitInflater(org.holoeverywhere.LayoutInflater) -> a
org.holoeverywhere.R -> org.holoeverywhere.R:
org.holoeverywhere.R$anim -> org.holoeverywhere.R$anim:
    int dialog_enter -> dialog_enter
    int dialog_exit -> dialog_exit
    int fade_in -> fade_in
    int fade_out -> fade_out
    int grow_fade_in -> grow_fade_in
    int grow_fade_in_center -> grow_fade_in_center
    int grow_fade_in_from_bottom -> grow_fade_in_from_bottom
    int shrink_fade_out -> shrink_fade_out
    int shrink_fade_out_center -> shrink_fade_out_center
    int shrink_fade_out_from_bottom -> shrink_fade_out_from_bottom
    int slide_in_bottom -> slide_in_bottom
    int slide_in_top -> slide_in_top
    int slide_out_bottom -> slide_out_bottom
    int slide_out_top -> slide_out_top
    int toast_enter -> toast_enter
    int toast_exit -> toast_exit
org.holoeverywhere.R$attr -> org.holoeverywhere.R$attr:
    int actionBarDivider -> actionBarDivider
    int actionBarItemBackground -> actionBarItemBackground
    int actionBarSize -> actionBarSize
    int actionBarSplitStyle -> actionBarSplitStyle
    int actionBarStyle -> actionBarStyle
    int actionBarTabBarStyle -> actionBarTabBarStyle
    int actionBarTabStyle -> actionBarTabStyle
    int actionBarTabTextStyle -> actionBarTabTextStyle
    int actionBarWidgetTheme -> actionBarWidgetTheme
    int actionButtonStyle -> actionButtonStyle
    int actionDropDownStyle -> actionDropDownStyle
    int actionMenuTextAppearance -> actionMenuTextAppearance
    int actionMenuTextColor -> actionMenuTextColor
    int actionModeBackground -> actionModeBackground
    int actionModeCloseButtonStyle -> actionModeCloseButtonStyle
    int actionModeCloseDrawable -> actionModeCloseDrawable
    int actionModeCopyDrawable -> actionModeCopyDrawable
    int actionModeCutDrawable -> actionModeCutDrawable
    int actionModeFindDrawable -> actionModeFindDrawable
    int actionModePasteDrawable -> actionModePasteDrawable
    int actionModePopupWindowStyle -> actionModePopupWindowStyle
    int actionModeSelectAllDrawable -> actionModeSelectAllDrawable
    int actionModeShareDrawable -> actionModeShareDrawable
    int actionModeSplitBackground -> actionModeSplitBackground
    int actionModeStyle -> actionModeStyle
    int actionModeWebSearchDrawable -> actionModeWebSearchDrawable
    int actionOverflowButtonStyle -> actionOverflowButtonStyle
    int activatedBackgroundIndicator -> activatedBackgroundIndicator
    int activityChooserViewStyle -> activityChooserViewStyle
    int alertDialogCenterButtons -> alertDialogCenterButtons
    int alertDialogStyle -> alertDialogStyle
    int alertDialogTheme -> alertDialogTheme
    int alertDialogTitleDividerColor -> alertDialogTitleDividerColor
    int autoCompleteTextViewStyle -> autoCompleteTextViewStyle
    int background -> background
    int backgroundSplit -> backgroundSplit
    int backgroundStacked -> backgroundStacked
    int borderlessButtonStyle -> borderlessButtonStyle
    int bottomBright -> bottomBright
    int bottomDark -> bottomDark
    int bottomMedium -> bottomMedium
    int buttonBarButtonStyle -> buttonBarButtonStyle
    int buttonBarStyle -> buttonBarStyle
    int centerBright -> centerBright
    int centerDark -> centerDark
    int centerMedium -> centerMedium
    int customNavigationLayout -> customNavigationLayout
    int dateCircleColor -> dateCircleColor
    int dateDayTextColor -> dateDayTextColor
    int dateMonthTitleColor -> dateMonthTitleColor
    int dateTimePickerActiveTextColor -> dateTimePickerActiveTextColor
    int dateTimePickerSelectedDateBackground -> dateTimePickerSelectedDateBackground
    int dateTimePickerStyle -> dateTimePickerStyle
    int dateTimePickerTextColor -> dateTimePickerTextColor
    int dateTodayColor -> dateTodayColor
    int dateYearSelectorColor -> dateYearSelectorColor
    int detailsElementBackground -> detailsElementBackground
    int dialogTheme -> dialogTheme
    int disableChildrenWhenDisabled -> disableChildrenWhenDisabled
    int displayOptions -> displayOptions
    int dividerHorizontal -> dividerHorizontal
    int dividerVertical -> dividerVertical
    int dropDownHorizontalOffset -> dropDownHorizontalOffset
    int dropDownListViewStyle -> dropDownListViewStyle
    int dropDownVerticalOffset -> dropDownVerticalOffset
    int dropdownListPreferredItemHeight -> dropdownListPreferredItemHeight
    int expandActivityOverflowButtonDrawable -> expandActivityOverflowButtonDrawable
    int fastScrollOverlayPosition -> fastScrollOverlayPosition
    int fastScrollPreviewBackgroundLeft -> fastScrollPreviewBackgroundLeft
    int fastScrollPreviewBackgroundRight -> fastScrollPreviewBackgroundRight
    int fastScrollTextColor -> fastScrollTextColor
    int fastScrollThumbDrawable -> fastScrollThumbDrawable
    int fastScrollTrackDrawable -> fastScrollTrackDrawable
    int flingable -> flingable
    int fullBright -> fullBright
    int fullDark -> fullDark
    int height -> height
    int holoTheme -> holoTheme
    int homeAsUpIndicator -> homeAsUpIndicator
    int homeLayout -> homeLayout
    int horizontalProgressLayout -> horizontalProgressLayout
    int icon -> icon
    int iconifiedByDefault -> iconifiedByDefault
    int indeterminateProgressStyle -> indeterminateProgressStyle
    int initialActivityCount -> initialActivityCount
    int isLightTheme -> isLightTheme
    int itemPadding -> itemPadding
    int layout -> layout
    int listChoiceBackgroundIndicator -> listChoiceBackgroundIndicator
    int listDividerAlertDialog -> listDividerAlertDialog
    int listItemLayout -> listItemLayout
    int listLayout -> listLayout
    int listPopupWindowStyle -> listPopupWindowStyle
    int listPreferredItemHeight -> listPreferredItemHeight
    int listPreferredItemHeightLarge -> listPreferredItemHeightLarge
    int listPreferredItemHeightSmall -> listPreferredItemHeightSmall
    int listPreferredItemPaddingLeft -> listPreferredItemPaddingLeft
    int listPreferredItemPaddingRight -> listPreferredItemPaddingRight
    int logo -> logo
    int multiChoiceItemLayout -> multiChoiceItemLayout
    int navigationMode -> navigationMode
    int numberPickerDownButtonStyle -> numberPickerDownButtonStyle
    int numberPickerInputTextStyle -> numberPickerInputTextStyle
    int numberPickerStyle -> numberPickerStyle
    int numberPickerUpButtonStyle -> numberPickerUpButtonStyle
    int paddingEnd -> paddingEnd
    int paddingStart -> paddingStart
    int panelMenuListTheme -> panelMenuListTheme
    int panelMenuListWidth -> panelMenuListWidth
    int popupMenuStyle -> popupMenuStyle
    int popupPromptView -> popupPromptView
    int popupWindowStyle -> popupWindowStyle
    int preferenceTheme -> preferenceTheme
    int progressBarPadding -> progressBarPadding
    int progressBarStyle -> progressBarStyle
    int progressLayout -> progressLayout
    int queryHint -> queryHint
    int searchDropdownBackground -> searchDropdownBackground
    int searchResultListItemHeight -> searchResultListItemHeight
    int searchViewAutoCompleteTextView -> searchViewAutoCompleteTextView
    int searchViewCloseIcon -> searchViewCloseIcon
    int searchViewEditQuery -> searchViewEditQuery
    int searchViewEditQueryBackground -> searchViewEditQueryBackground
    int searchViewGoIcon -> searchViewGoIcon
    int searchViewSearchIcon -> searchViewSearchIcon
    int searchViewTextField -> searchViewTextField
    int searchViewTextFieldRight -> searchViewTextFieldRight
    int searchViewVoiceIcon -> searchViewVoiceIcon
    int segmentedButtonStyle -> segmentedButtonStyle
    int selectableItemBackground -> selectableItemBackground
    int selectionDivider -> selectionDivider
    int selectionDividerHeight -> selectionDividerHeight
    int selectionDividersDistance -> selectionDividersDistance
    int singleChoiceItemLayout -> singleChoiceItemLayout
    int solidColor -> solidColor
    int spinnerDropDownItemStyle -> spinnerDropDownItemStyle
    int spinnerItemStyle -> spinnerItemStyle
    int spinnerMode -> spinnerMode
    int spinnerStyle -> spinnerStyle
    int subtitle -> subtitle
    int subtitleTextStyle -> subtitleTextStyle
    int switchMinWidth -> switchMinWidth
    int switchPadding -> switchPadding
    int switchStyle -> switchStyle
    int switchStyleOld -> switchStyleOld
    int switchTextAppearance -> switchTextAppearance
    int textAppearanceLargePopupMenu -> textAppearanceLargePopupMenu
    int textAppearanceListItem -> textAppearanceListItem
    int textAppearanceListItemSmall -> textAppearanceListItemSmall
    int textAppearanceSearchResultSubtitle -> textAppearanceSearchResultSubtitle
    int textAppearanceSearchResultTitle -> textAppearanceSearchResultTitle
    int textAppearanceSmallPopupMenu -> textAppearanceSmallPopupMenu
    int textColorAlertDialogListItem -> textColorAlertDialogListItem
    int textColorSearchUrl -> textColorSearchUrl
    int textOff -> textOff
    int textOn -> textOn
    int thumb -> thumb
    int thumbTextPadding -> thumbTextPadding
    int timeAmPmPicker -> timeAmPmPicker
    int timeAmPmPickerBackground -> timeAmPmPickerBackground
    int timeAmPmPickerTextColor -> timeAmPmPickerTextColor
    int timeCenterPointerColor -> timeCenterPointerColor
    int timeCenterPointerRadius -> timeCenterPointerRadius
    int timeCircleColor -> timeCircleColor
    int timePickerSelectorColor -> timePickerSelectorColor
    int timeRadialTextColor -> timeRadialTextColor
    int title -> title
    int titleTextStyle -> titleTextStyle
    int toastFrameBackground -> toastFrameBackground
    int toggleWhenClick -> toggleWhenClick
    int topBright -> topBright
    int topDark -> topDark
    int track -> track
    int virtualButtonPressedDrawable -> virtualButtonPressedDrawable
    int windowActionBar -> windowActionBar
    int windowActionBarOverlay -> windowActionBarOverlay
    int windowActionModeOverlay -> windowActionModeOverlay
    int windowAnimationStyle -> windowAnimationStyle
    int windowContentOverlay -> windowContentOverlay
    int windowFixedHeightMajor -> windowFixedHeightMajor
    int windowFixedHeightMinor -> windowFixedHeightMinor
    int windowFixedWidthMajor -> windowFixedWidthMajor
    int windowFixedWidthMinor -> windowFixedWidthMinor
    int windowMinHeightMajor -> windowMinHeightMajor
    int windowMinHeightMinor -> windowMinHeightMinor
    int windowMinWidthMajor -> windowMinWidthMajor
    int windowMinWidthMinor -> windowMinWidthMinor
    int windowNoTitle -> windowNoTitle
    int windowSplitActionBar -> windowSplitActionBar
org.holoeverywhere.R$bool -> org.holoeverywhere.R$bool:
    int abc_action_bar_embed_tabs_pre_jb -> abc_action_bar_embed_tabs_pre_jb
    int abc_action_bar_expanded_action_views_exclusive -> abc_action_bar_expanded_action_views_exclusive
    int abc_config_actionMenuItemAllCaps -> abc_config_actionMenuItemAllCaps
    int abc_config_allowActionMenuItemTextWithIcon -> abc_config_allowActionMenuItemTextWithIcon
    int abc_config_showMenuShortcutsWhenKeyboardPresent -> abc_config_showMenuShortcutsWhenKeyboardPresent
    int abc_split_action_bar_is_narrow -> abc_split_action_bar_is_narrow
org.holoeverywhere.R$dimen -> org.holoeverywhere.R$dimen:
    int abc_action_bar_default_height -> abc_action_bar_default_height
    int abc_action_bar_icon_vertical_padding -> abc_action_bar_icon_vertical_padding
    int abc_action_bar_stacked_max_height -> abc_action_bar_stacked_max_height
    int abc_action_bar_stacked_tab_max_width -> abc_action_bar_stacked_tab_max_width
    int abc_action_bar_subtitle_bottom_margin -> abc_action_bar_subtitle_bottom_margin
    int abc_action_bar_subtitle_text_size -> abc_action_bar_subtitle_text_size
    int abc_action_bar_subtitle_top_margin -> abc_action_bar_subtitle_top_margin
    int abc_action_bar_title_text_size -> abc_action_bar_title_text_size
    int abc_action_button_min_width -> abc_action_button_min_width
    int abc_config_prefDialogWidth -> abc_config_prefDialogWidth
    int abc_dropdownitem_icon_width -> abc_dropdownitem_icon_width
    int abc_dropdownitem_text_padding_left -> abc_dropdownitem_text_padding_left
    int abc_dropdownitem_text_padding_right -> abc_dropdownitem_text_padding_right
    int abc_panel_menu_list_width -> abc_panel_menu_list_width
    int abc_search_view_preferred_width -> abc_search_view_preferred_width
    int abc_search_view_text_min_width -> abc_search_view_text_min_width
    int alert_dialog_button_bar_height -> alert_dialog_button_bar_height
    int alert_dialog_title_height -> alert_dialog_title_height
    int config_prefDialogWidth -> config_prefDialogWidth
    int date_day_number_select_circle_radius -> date_day_number_select_circle_radius
    int date_day_number_size -> date_day_number_size
    int date_day_size -> date_day_size
    int date_month_day_label_text_size -> date_month_day_label_text_size
    int date_month_label_size -> date_month_label_size
    int date_month_list_item_header_height -> date_month_list_item_header_height
    int date_month_size -> date_month_size
    int date_picker_component_width -> date_picker_component_width
    int date_picker_view_animator_height -> date_picker_view_animator_height
    int date_selected_bottom_margin -> date_selected_bottom_margin
    int date_selected_left_margin -> date_selected_left_margin
    int date_selected_top_margin -> date_selected_top_margin
    int date_selected_width -> date_selected_width
    int date_time_picker_size -> date_time_picker_size
    int date_week_size -> date_week_size
    int date_year_size -> date_year_size
    int dialog_fixed_height_major -> dialog_fixed_height_major
    int dialog_fixed_height_minor -> dialog_fixed_height_minor
    int dialog_fixed_width_major -> dialog_fixed_width_major
    int dialog_fixed_width_minor -> dialog_fixed_width_minor
    int dialog_min_width_major -> dialog_min_width_major
    int dialog_min_width_minor -> dialog_min_width_minor
    int fastscroll_overlay_size -> fastscroll_overlay_size
    int fastscroll_thumb_height -> fastscroll_thumb_height
    int fastscroll_thumb_width -> fastscroll_thumb_width
    int month_select_circle_radius -> month_select_circle_radius
    int time_ampm_label_size -> time_ampm_label_size
    int time_label_size -> time_label_size
org.holoeverywhere.R$drawable -> org.holoeverywhere.R$drawable:
    int ab_background_textured_deepgray -> ab_background_textured_deepgray
    int ab_bottom_solid_deepgray -> ab_bottom_solid_deepgray
    int ab_solid_deepgray -> ab_solid_deepgray
    int ab_stacked_solid_deepgray -> ab_stacked_solid_deepgray
    int ab_texture_tile_deepgray -> ab_texture_tile_deepgray
    int ab_transparent_deepgray -> ab_transparent_deepgray
    int abc_ab_bottom_solid_dark_holo -> abc_ab_bottom_solid_dark_holo
    int abc_ab_bottom_solid_light_holo -> abc_ab_bottom_solid_light_holo
    int abc_ab_bottom_transparent_dark_holo -> abc_ab_bottom_transparent_dark_holo
    int abc_ab_bottom_transparent_light_holo -> abc_ab_bottom_transparent_light_holo
    int abc_ab_share_pack_holo_dark -> abc_ab_share_pack_holo_dark
    int abc_ab_share_pack_holo_light -> abc_ab_share_pack_holo_light
    int abc_ab_solid_dark_holo -> abc_ab_solid_dark_holo
    int abc_ab_solid_light_holo -> abc_ab_solid_light_holo
    int abc_ab_stacked_solid_dark_holo -> abc_ab_stacked_solid_dark_holo
    int abc_ab_stacked_solid_light_holo -> abc_ab_stacked_solid_light_holo
    int abc_ab_stacked_transparent_dark_holo -> abc_ab_stacked_transparent_dark_holo
    int abc_ab_stacked_transparent_light_holo -> abc_ab_stacked_transparent_light_holo
    int abc_ab_transparent_dark_holo -> abc_ab_transparent_dark_holo
    int abc_ab_transparent_light_holo -> abc_ab_transparent_light_holo
    int abc_cab_background_bottom_holo_dark -> abc_cab_background_bottom_holo_dark
    int abc_cab_background_bottom_holo_light -> abc_cab_background_bottom_holo_light
    int abc_cab_background_top_holo_dark -> abc_cab_background_top_holo_dark
    int abc_cab_background_top_holo_light -> abc_cab_background_top_holo_light
    int abc_ic_ab_back_holo_dark -> abc_ic_ab_back_holo_dark
    int abc_ic_ab_back_holo_light -> abc_ic_ab_back_holo_light
    int abc_ic_cab_done_holo_dark -> abc_ic_cab_done_holo_dark
    int abc_ic_cab_done_holo_light -> abc_ic_cab_done_holo_light
    int abc_ic_clear -> abc_ic_clear
    int abc_ic_clear_disabled -> abc_ic_clear_disabled
    int abc_ic_clear_holo_light -> abc_ic_clear_holo_light
    int abc_ic_clear_normal -> abc_ic_clear_normal
    int abc_ic_clear_search_api_disabled_holo_light -> abc_ic_clear_search_api_disabled_holo_light
    int abc_ic_clear_search_api_holo_light -> abc_ic_clear_search_api_holo_light
    int abc_ic_commit_search_api_holo_dark -> abc_ic_commit_search_api_holo_dark
    int abc_ic_commit_search_api_holo_light -> abc_ic_commit_search_api_holo_light
    int abc_ic_go -> abc_ic_go
    int abc_ic_go_search_api_holo_light -> abc_ic_go_search_api_holo_light
    int abc_ic_menu_moreoverflow_normal_holo_dark -> abc_ic_menu_moreoverflow_normal_holo_dark
    int abc_ic_menu_moreoverflow_normal_holo_light -> abc_ic_menu_moreoverflow_normal_holo_light
    int abc_ic_menu_share_holo_dark -> abc_ic_menu_share_holo_dark
    int abc_ic_menu_share_holo_light -> abc_ic_menu_share_holo_light
    int abc_ic_search -> abc_ic_search
    int abc_ic_search_api_holo_light -> abc_ic_search_api_holo_light
    int abc_ic_voice_search -> abc_ic_voice_search
    int abc_ic_voice_search_api_holo_light -> abc_ic_voice_search_api_holo_light
    int abc_item_background_holo_dark -> abc_item_background_holo_dark
    int abc_item_background_holo_light -> abc_item_background_holo_light
    int abc_list_divider_holo_dark -> abc_list_divider_holo_dark
    int abc_list_divider_holo_light -> abc_list_divider_holo_light
    int abc_list_focused_holo -> abc_list_focused_holo
    int abc_list_longpressed_holo -> abc_list_longpressed_holo
    int abc_list_pressed_holo_dark -> abc_list_pressed_holo_dark
    int abc_list_pressed_holo_light -> abc_list_pressed_holo_light
    int abc_list_selector_background_transition_holo_dark -> abc_list_selector_background_transition_holo_dark
    int abc_list_selector_background_transition_holo_light -> abc_list_selector_background_transition_holo_light
    int abc_list_selector_disabled_holo_dark -> abc_list_selector_disabled_holo_dark
    int abc_list_selector_disabled_holo_light -> abc_list_selector_disabled_holo_light
    int abc_list_selector_holo_dark -> abc_list_selector_holo_dark
    int abc_list_selector_holo_light -> abc_list_selector_holo_light
    int abc_menu_dropdown_panel_holo_dark -> abc_menu_dropdown_panel_holo_dark
    int abc_menu_dropdown_panel_holo_light -> abc_menu_dropdown_panel_holo_light
    int abc_menu_hardkey_panel_holo_dark -> abc_menu_hardkey_panel_holo_dark
    int abc_menu_hardkey_panel_holo_light -> abc_menu_hardkey_panel_holo_light
    int abc_search_dropdown_dark -> abc_search_dropdown_dark
    int abc_search_dropdown_light -> abc_search_dropdown_light
    int abc_spinner_ab_default_holo_dark -> abc_spinner_ab_default_holo_dark
    int abc_spinner_ab_default_holo_light -> abc_spinner_ab_default_holo_light
    int abc_spinner_ab_disabled_holo_dark -> abc_spinner_ab_disabled_holo_dark
    int abc_spinner_ab_disabled_holo_light -> abc_spinner_ab_disabled_holo_light
    int abc_spinner_ab_focused_holo_dark -> abc_spinner_ab_focused_holo_dark
    int abc_spinner_ab_focused_holo_light -> abc_spinner_ab_focused_holo_light
    int abc_spinner_ab_holo_dark -> abc_spinner_ab_holo_dark
    int abc_spinner_ab_holo_light -> abc_spinner_ab_holo_light
    int abc_spinner_ab_pressed_holo_dark -> abc_spinner_ab_pressed_holo_dark
    int abc_spinner_ab_pressed_holo_light -> abc_spinner_ab_pressed_holo_light
    int abc_tab_indicator_ab_holo -> abc_tab_indicator_ab_holo
    int abc_tab_selected_focused_holo -> abc_tab_selected_focused_holo
    int abc_tab_selected_holo -> abc_tab_selected_holo
    int abc_tab_selected_pressed_holo -> abc_tab_selected_pressed_holo
    int abc_tab_unselected_pressed_holo -> abc_tab_unselected_pressed_holo
    int abc_textfield_search_default_holo_dark -> abc_textfield_search_default_holo_dark
    int abc_textfield_search_default_holo_light -> abc_textfield_search_default_holo_light
    int abc_textfield_search_right_default_holo_dark -> abc_textfield_search_right_default_holo_dark
    int abc_textfield_search_right_default_holo_light -> abc_textfield_search_right_default_holo_light
    int abc_textfield_search_right_selected_holo_dark -> abc_textfield_search_right_selected_holo_dark
    int abc_textfield_search_right_selected_holo_light -> abc_textfield_search_right_selected_holo_light
    int abc_textfield_search_selected_holo_dark -> abc_textfield_search_selected_holo_dark
    int abc_textfield_search_selected_holo_light -> abc_textfield_search_selected_holo_light
    int abc_textfield_searchview_holo_dark -> abc_textfield_searchview_holo_dark
    int abc_textfield_searchview_holo_light -> abc_textfield_searchview_holo_light
    int abc_textfield_searchview_right_holo_dark -> abc_textfield_searchview_right_holo_dark
    int abc_textfield_searchview_right_holo_light -> abc_textfield_searchview_right_holo_light
    int activated_background_holo -> activated_background_holo
    int activity_picker_bg -> activity_picker_bg
    int activity_picker_bg_activated -> activity_picker_bg_activated
    int activity_picker_bg_focused -> activity_picker_bg_focused
    int background_cache_hint_selector_holo_dark -> background_cache_hint_selector_holo_dark
    int background_cache_hint_selector_holo_light -> background_cache_hint_selector_holo_light
    int background_holo_dark -> background_holo_dark
    int background_holo_light -> background_holo_light
    int btn_cab_done_deepgray -> btn_cab_done_deepgray
    int btn_cab_done_default_deepgray -> btn_cab_done_default_deepgray
    int btn_cab_done_focused_deepgray -> btn_cab_done_focused_deepgray
    int btn_cab_done_pressed_deepgray -> btn_cab_done_pressed_deepgray
    int btn_check_label_background -> btn_check_label_background
    int btn_check_off_disable_focused_holo_light -> btn_check_off_disable_focused_holo_light
    int btn_check_off_disable_holo_dark -> btn_check_off_disable_holo_dark
    int btn_check_off_disable_holo_light -> btn_check_off_disable_holo_light
    int btn_check_off_disabled_focused_holo_dark -> btn_check_off_disabled_focused_holo_dark
    int btn_check_off_disabled_focused_holo_light -> btn_check_off_disabled_focused_holo_light
    int btn_check_off_disabled_holo_dark -> btn_check_off_disabled_holo_dark
    int btn_check_off_disabled_holo_light -> btn_check_off_disabled_holo_light
    int btn_check_off_focused_holo_dark -> btn_check_off_focused_holo_dark
    int btn_check_off_focused_holo_light -> btn_check_off_focused_holo_light
    int btn_check_off_holo -> btn_check_off_holo
    int btn_check_off_holo_dark -> btn_check_off_holo_dark
    int btn_check_off_holo_light -> btn_check_off_holo_light
    int btn_check_off_normal_holo_dark -> btn_check_off_normal_holo_dark
    int btn_check_off_normal_holo_light -> btn_check_off_normal_holo_light
    int btn_check_off_pressed_holo_dark -> btn_check_off_pressed_holo_dark
    int btn_check_off_pressed_holo_light -> btn_check_off_pressed_holo_light
    int btn_check_on_disable_focused_holo_light -> btn_check_on_disable_focused_holo_light
    int btn_check_on_disable_holo_dark -> btn_check_on_disable_holo_dark
    int btn_check_on_disable_holo_light -> btn_check_on_disable_holo_light
    int btn_check_on_disabled_focused_holo_dark -> btn_check_on_disabled_focused_holo_dark
    int btn_check_on_disabled_focused_holo_light -> btn_check_on_disabled_focused_holo_light
    int btn_check_on_disabled_holo_dark -> btn_check_on_disabled_holo_dark
    int btn_check_on_disabled_holo_light -> btn_check_on_disabled_holo_light
    int btn_check_on_focused_holo_dark -> btn_check_on_focused_holo_dark
    int btn_check_on_focused_holo_light -> btn_check_on_focused_holo_light
    int btn_check_on_holo -> btn_check_on_holo
    int btn_check_on_holo_dark -> btn_check_on_holo_dark
    int btn_check_on_holo_light -> btn_check_on_holo_light
    int btn_check_on_pressed_holo_dark -> btn_check_on_pressed_holo_dark
    int btn_check_on_pressed_holo_light -> btn_check_on_pressed_holo_light
    int btn_checkbox_holo_dark -> btn_checkbox_holo_dark
    int btn_checkbox_holo_light -> btn_checkbox_holo_light
    int btn_default_disabled_focused_holo_dark -> btn_default_disabled_focused_holo_dark
    int btn_default_disabled_focused_holo_light -> btn_default_disabled_focused_holo_light
    int btn_default_disabled_holo_dark -> btn_default_disabled_holo_dark
    int btn_default_disabled_holo_light -> btn_default_disabled_holo_light
    int btn_default_focused_holo_dark -> btn_default_focused_holo_dark
    int btn_default_focused_holo_light -> btn_default_focused_holo_light
    int btn_default_holo_dark -> btn_default_holo_dark
    int btn_default_holo_light -> btn_default_holo_light
    int btn_default_normal_holo_dark -> btn_default_normal_holo_dark
    int btn_default_normal_holo_light -> btn_default_normal_holo_light
    int btn_default_pressed_holo_dark -> btn_default_pressed_holo_dark
    int btn_default_pressed_holo_light -> btn_default_pressed_holo_light
    int btn_group_disabled_holo_dark -> btn_group_disabled_holo_dark
    int btn_group_disabled_holo_light -> btn_group_disabled_holo_light
    int btn_group_focused_holo_dark -> btn_group_focused_holo_dark
    int btn_group_focused_holo_light -> btn_group_focused_holo_light
    int btn_group_holo_dark -> btn_group_holo_dark
    int btn_group_holo_light -> btn_group_holo_light
    int btn_group_normal_holo_dark -> btn_group_normal_holo_dark
    int btn_group_normal_holo_light -> btn_group_normal_holo_light
    int btn_group_pressed_holo_dark -> btn_group_pressed_holo_dark
    int btn_group_pressed_holo_light -> btn_group_pressed_holo_light
    int btn_radio_holo_dark -> btn_radio_holo_dark
    int btn_radio_holo_light -> btn_radio_holo_light
    int btn_radio_label_background -> btn_radio_label_background
    int btn_radio_off_disabled_focused_holo_dark -> btn_radio_off_disabled_focused_holo_dark
    int btn_radio_off_disabled_focused_holo_light -> btn_radio_off_disabled_focused_holo_light
    int btn_radio_off_disabled_holo_dark -> btn_radio_off_disabled_holo_dark
    int btn_radio_off_disabled_holo_light -> btn_radio_off_disabled_holo_light
    int btn_radio_off_focused_holo_dark -> btn_radio_off_focused_holo_dark
    int btn_radio_off_focused_holo_light -> btn_radio_off_focused_holo_light
    int btn_radio_off_holo -> btn_radio_off_holo
    int btn_radio_off_holo_dark -> btn_radio_off_holo_dark
    int btn_radio_off_holo_light -> btn_radio_off_holo_light
    int btn_radio_off_pressed_holo_dark -> btn_radio_off_pressed_holo_dark
    int btn_radio_off_pressed_holo_light -> btn_radio_off_pressed_holo_light
    int btn_radio_on_disabled_focused_holo_dark -> btn_radio_on_disabled_focused_holo_dark
    int btn_radio_on_disabled_focused_holo_light -> btn_radio_on_disabled_focused_holo_light
    int btn_radio_on_disabled_holo_dark -> btn_radio_on_disabled_holo_dark
    int btn_radio_on_disabled_holo_light -> btn_radio_on_disabled_holo_light
    int btn_radio_on_focused_holo_dark -> btn_radio_on_focused_holo_dark
    int btn_radio_on_focused_holo_light -> btn_radio_on_focused_holo_light
    int btn_radio_on_holo_dark -> btn_radio_on_holo_dark
    int btn_radio_on_holo_light -> btn_radio_on_holo_light
    int btn_radio_on_pressed_holo_dark -> btn_radio_on_pressed_holo_dark
    int btn_radio_on_pressed_holo_light -> btn_radio_on_pressed_holo_light
    int btn_rating_star_off_disabled_focused_holo_dark -> btn_rating_star_off_disabled_focused_holo_dark
    int btn_rating_star_off_disabled_focused_holo_light -> btn_rating_star_off_disabled_focused_holo_light
    int btn_rating_star_off_disabled_holo_dark -> btn_rating_star_off_disabled_holo_dark
    int btn_rating_star_off_disabled_holo_light -> btn_rating_star_off_disabled_holo_light
    int btn_rating_star_off_focused_holo_dark -> btn_rating_star_off_focused_holo_dark
    int btn_rating_star_off_focused_holo_light -> btn_rating_star_off_focused_holo_light
    int btn_rating_star_off_normal_holo_dark -> btn_rating_star_off_normal_holo_dark
    int btn_rating_star_off_normal_holo_light -> btn_rating_star_off_normal_holo_light
    int btn_rating_star_off_pressed_holo_dark -> btn_rating_star_off_pressed_holo_dark
    int btn_rating_star_off_pressed_holo_light -> btn_rating_star_off_pressed_holo_light
    int btn_rating_star_on_disabled_focused_holo_dark -> btn_rating_star_on_disabled_focused_holo_dark
    int btn_rating_star_on_disabled_focused_holo_light -> btn_rating_star_on_disabled_focused_holo_light
    int btn_rating_star_on_disabled_holo_dark -> btn_rating_star_on_disabled_holo_dark
    int btn_rating_star_on_disabled_holo_light -> btn_rating_star_on_disabled_holo_light
    int btn_rating_star_on_focused_holo_dark -> btn_rating_star_on_focused_holo_dark
    int btn_rating_star_on_focused_holo_light -> btn_rating_star_on_focused_holo_light
    int btn_rating_star_on_normal_holo_dark -> btn_rating_star_on_normal_holo_dark
    int btn_rating_star_on_normal_holo_light -> btn_rating_star_on_normal_holo_light
    int btn_rating_star_on_pressed_holo_dark -> btn_rating_star_on_pressed_holo_dark
    int btn_rating_star_on_pressed_holo_light -> btn_rating_star_on_pressed_holo_light
    int btn_toggle_holo_dark -> btn_toggle_holo_dark
    int btn_toggle_holo_light -> btn_toggle_holo_light
    int btn_toggle_off_disabled_focused_holo_dark -> btn_toggle_off_disabled_focused_holo_dark
    int btn_toggle_off_disabled_focused_holo_light -> btn_toggle_off_disabled_focused_holo_light
    int btn_toggle_off_disabled_holo_dark -> btn_toggle_off_disabled_holo_dark
    int btn_toggle_off_disabled_holo_light -> btn_toggle_off_disabled_holo_light
    int btn_toggle_off_focused_holo_dark -> btn_toggle_off_focused_holo_dark
    int btn_toggle_off_focused_holo_light -> btn_toggle_off_focused_holo_light
    int btn_toggle_off_normal_holo_dark -> btn_toggle_off_normal_holo_dark
    int btn_toggle_off_normal_holo_light -> btn_toggle_off_normal_holo_light
    int btn_toggle_off_pressed_holo_dark -> btn_toggle_off_pressed_holo_dark
    int btn_toggle_off_pressed_holo_light -> btn_toggle_off_pressed_holo_light
    int btn_toggle_on_disabled_focused_holo_dark -> btn_toggle_on_disabled_focused_holo_dark
    int btn_toggle_on_disabled_focused_holo_light -> btn_toggle_on_disabled_focused_holo_light
    int btn_toggle_on_disabled_holo_dark -> btn_toggle_on_disabled_holo_dark
    int btn_toggle_on_disabled_holo_light -> btn_toggle_on_disabled_holo_light
    int btn_toggle_on_focused_holo_dark -> btn_toggle_on_focused_holo_dark
    int btn_toggle_on_focused_holo_light -> btn_toggle_on_focused_holo_light
    int btn_toggle_on_normal_holo_dark -> btn_toggle_on_normal_holo_dark
    int btn_toggle_on_normal_holo_light -> btn_toggle_on_normal_holo_light
    int btn_toggle_on_pressed_holo_dark -> btn_toggle_on_pressed_holo_dark
    int btn_toggle_on_pressed_holo_light -> btn_toggle_on_pressed_holo_light
    int cab_background_bottom_deepgray -> cab_background_bottom_deepgray
    int cab_background_top_deepgray -> cab_background_top_deepgray
    int day_picker_week_view_dayline_holo -> day_picker_week_view_dayline_holo
    int dialog_bottom_holo_dark -> dialog_bottom_holo_dark
    int dialog_bottom_holo_light -> dialog_bottom_holo_light
    int dialog_divider_horizontal_holo_dark -> dialog_divider_horizontal_holo_dark
    int dialog_divider_horizontal_holo_light -> dialog_divider_horizontal_holo_light
    int dialog_full_holo_dark -> dialog_full_holo_dark
    int dialog_full_holo_light -> dialog_full_holo_light
    int dialog_middle_holo -> dialog_middle_holo
    int dialog_middle_holo_dark -> dialog_middle_holo_dark
    int dialog_middle_holo_light -> dialog_middle_holo_light
    int dialog_top_holo_dark -> dialog_top_holo_dark
    int dialog_top_holo_light -> dialog_top_holo_light
    int edit_text_holo_dark -> edit_text_holo_dark
    int edit_text_holo_light -> edit_text_holo_light
    int expander_close_holo_dark -> expander_close_holo_dark
    int expander_close_holo_light -> expander_close_holo_light
    int expander_group -> expander_group
    int expander_group_holo_dark -> expander_group_holo_dark
    int expander_group_holo_light -> expander_group_holo_light
    int expander_ic_maximized -> expander_ic_maximized
    int expander_ic_minimized -> expander_ic_minimized
    int expander_open_holo_dark -> expander_open_holo_dark
    int expander_open_holo_light -> expander_open_holo_light
    int fastscroll_label_left_holo_dark -> fastscroll_label_left_holo_dark
    int fastscroll_label_left_holo_light -> fastscroll_label_left_holo_light
    int fastscroll_label_right_holo_dark -> fastscroll_label_right_holo_dark
    int fastscroll_label_right_holo_light -> fastscroll_label_right_holo_light
    int fastscroll_thumb_default_holo -> fastscroll_thumb_default_holo
    int fastscroll_thumb_holo -> fastscroll_thumb_holo
    int fastscroll_thumb_pressed_holo -> fastscroll_thumb_pressed_holo
    int fastscroll_track_default_holo_dark -> fastscroll_track_default_holo_dark
    int fastscroll_track_default_holo_light -> fastscroll_track_default_holo_light
    int fastscroll_track_holo_dark -> fastscroll_track_holo_dark
    int fastscroll_track_holo_light -> fastscroll_track_holo_light
    int fastscroll_track_pressed_holo_dark -> fastscroll_track_pressed_holo_dark
    int fastscroll_track_pressed_holo_light -> fastscroll_track_pressed_holo_light
    int item_background_holo_dark -> item_background_holo_dark
    int item_background_holo_light -> item_background_holo_light
    int list_activated_holo -> list_activated_holo
    int list_divider_holo_dark -> list_divider_holo_dark
    int list_divider_holo_light -> list_divider_holo_light
    int list_focused_deepgray -> list_focused_deepgray
    int list_focused_holo -> list_focused_holo
    int list_longpressed_holo -> list_longpressed_holo
    int list_pressed_deepgray -> list_pressed_deepgray
    int list_pressed_holo_dark -> list_pressed_holo_dark
    int list_pressed_holo_light -> list_pressed_holo_light
    int list_section_divider_holo_dark -> list_section_divider_holo_dark
    int list_section_divider_holo_light -> list_section_divider_holo_light
    int list_selector_background_transition_holo_dark -> list_selector_background_transition_holo_dark
    int list_selector_background_transition_holo_light -> list_selector_background_transition_holo_light
    int list_selector_disabled_holo_dark -> list_selector_disabled_holo_dark
    int list_selector_disabled_holo_light -> list_selector_disabled_holo_light
    int list_selector_holo_dark -> list_selector_holo_dark
    int list_selector_holo_light -> list_selector_holo_light
    int menu_background_fill_parent_width_holo_dark -> menu_background_fill_parent_width_holo_dark
    int menu_background_fill_parent_width_holo_light -> menu_background_fill_parent_width_holo_light
    int menu_dropdown_panel_deepgray -> menu_dropdown_panel_deepgray
    int menu_dropdown_panel_holo_dark -> menu_dropdown_panel_holo_dark
    int menu_dropdown_panel_holo_light -> menu_dropdown_panel_holo_light
    int menu_hardkey_panel_holo_dark -> menu_hardkey_panel_holo_dark
    int menu_hardkey_panel_holo_light -> menu_hardkey_panel_holo_light
    int numberpicker_selection_divider -> numberpicker_selection_divider
    int old_switch_thumb_activated_holo_dark -> old_switch_thumb_activated_holo_dark
    int old_switch_thumb_activated_holo_light -> old_switch_thumb_activated_holo_light
    int old_switch_thumb_disabled_holo_dark -> old_switch_thumb_disabled_holo_dark
    int old_switch_thumb_disabled_holo_light -> old_switch_thumb_disabled_holo_light
    int old_switch_thumb_holo_dark -> old_switch_thumb_holo_dark
    int old_switch_thumb_holo_light -> old_switch_thumb_holo_light
    int old_switch_thumb_pressed_holo_dark -> old_switch_thumb_pressed_holo_dark
    int old_switch_thumb_pressed_holo_light -> old_switch_thumb_pressed_holo_light
    int overscroll_edge -> overscroll_edge
    int overscroll_glow -> overscroll_glow
    int panel_bg_holo_dark -> panel_bg_holo_dark
    int panel_bg_holo_light -> panel_bg_holo_light
    int progress_bg_deepgray -> progress_bg_deepgray
    int progress_bg_holo_dark -> progress_bg_holo_dark
    int progress_bg_holo_light -> progress_bg_holo_light
    int progress_horizontal_deepgray -> progress_horizontal_deepgray
    int progress_horizontal_holo_dark -> progress_horizontal_holo_dark
    int progress_horizontal_holo_light -> progress_horizontal_holo_light
    int progress_indeterminate_horizontal_holo -> progress_indeterminate_horizontal_holo
    int progress_large_holo -> progress_large_holo
    int progress_medium_holo -> progress_medium_holo
    int progress_primary_deepgray -> progress_primary_deepgray
    int progress_primary_holo_dark -> progress_primary_holo_dark
    int progress_primary_holo_light -> progress_primary_holo_light
    int progress_secondary_deepgray -> progress_secondary_deepgray
    int progress_secondary_holo_dark -> progress_secondary_holo_dark
    int progress_secondary_holo_light -> progress_secondary_holo_light
    int progress_small_holo -> progress_small_holo
    int progressbar_indeterminate_holo1 -> progressbar_indeterminate_holo1
    int progressbar_indeterminate_holo2 -> progressbar_indeterminate_holo2
    int progressbar_indeterminate_holo3 -> progressbar_indeterminate_holo3
    int progressbar_indeterminate_holo4 -> progressbar_indeterminate_holo4
    int progressbar_indeterminate_holo5 -> progressbar_indeterminate_holo5
    int progressbar_indeterminate_holo6 -> progressbar_indeterminate_holo6
    int progressbar_indeterminate_holo7 -> progressbar_indeterminate_holo7
    int progressbar_indeterminate_holo8 -> progressbar_indeterminate_holo8
    int rate_star_big_half_holo_dark -> rate_star_big_half_holo_dark
    int rate_star_big_half_holo_light -> rate_star_big_half_holo_light
    int rate_star_big_off_holo_dark -> rate_star_big_off_holo_dark
    int rate_star_big_off_holo_light -> rate_star_big_off_holo_light
    int rate_star_big_on_holo_dark -> rate_star_big_on_holo_dark
    int rate_star_big_on_holo_light -> rate_star_big_on_holo_light
    int rate_star_small_half_holo_dark -> rate_star_small_half_holo_dark
    int rate_star_small_half_holo_light -> rate_star_small_half_holo_light
    int rate_star_small_off_holo_dark -> rate_star_small_off_holo_dark
    int rate_star_small_off_holo_light -> rate_star_small_off_holo_light
    int rate_star_small_on_holo_dark -> rate_star_small_on_holo_dark
    int rate_star_small_on_holo_light -> rate_star_small_on_holo_light
    int ratingbar_full_empty_holo_dark -> ratingbar_full_empty_holo_dark
    int ratingbar_full_empty_holo_light -> ratingbar_full_empty_holo_light
    int ratingbar_full_filled_holo_dark -> ratingbar_full_filled_holo_dark
    int ratingbar_full_filled_holo_light -> ratingbar_full_filled_holo_light
    int ratingbar_full_holo_dark -> ratingbar_full_holo_dark
    int ratingbar_full_holo_light -> ratingbar_full_holo_light
    int ratingbar_holo_dark -> ratingbar_holo_dark
    int ratingbar_holo_light -> ratingbar_holo_light
    int ratingbar_small_holo_dark -> ratingbar_small_holo_dark
    int ratingbar_small_holo_light -> ratingbar_small_holo_light
    int scrollbar_handle_holo_dark -> scrollbar_handle_holo_dark
    int scrollbar_handle_holo_light -> scrollbar_handle_holo_light
    int scrubber_control_disabled_holo -> scrubber_control_disabled_holo
    int scrubber_control_focused_holo -> scrubber_control_focused_holo
    int scrubber_control_normal_holo -> scrubber_control_normal_holo
    int scrubber_control_pressed_holo -> scrubber_control_pressed_holo
    int scrubber_control_selector_holo -> scrubber_control_selector_holo
    int scrubber_primary_holo -> scrubber_primary_holo
    int scrubber_progress_horizontal_holo_dark -> scrubber_progress_horizontal_holo_dark
    int scrubber_progress_horizontal_holo_light -> scrubber_progress_horizontal_holo_light
    int scrubber_secondary_holo -> scrubber_secondary_holo
    int scrubber_track_holo_dark -> scrubber_track_holo_dark
    int scrubber_track_holo_light -> scrubber_track_holo_light
    int selectable_background_deepgray -> selectable_background_deepgray
    int spinner_16_inner_holo -> spinner_16_inner_holo
    int spinner_16_outer_holo -> spinner_16_outer_holo
    int spinner_20_inner_holo -> spinner_20_inner_holo
    int spinner_20_outer_holo -> spinner_20_outer_holo
    int spinner_48_inner_holo -> spinner_48_inner_holo
    int spinner_48_outer_holo -> spinner_48_outer_holo
    int spinner_76_inner_holo -> spinner_76_inner_holo
    int spinner_76_outer_holo -> spinner_76_outer_holo
    int spinner_ab_default_deepgray -> spinner_ab_default_deepgray
    int spinner_ab_disabled_deepgray -> spinner_ab_disabled_deepgray
    int spinner_ab_focused_deepgray -> spinner_ab_focused_deepgray
    int spinner_ab_pressed_deepgray -> spinner_ab_pressed_deepgray
    int spinner_background_ab_deepgray -> spinner_background_ab_deepgray
    int spinner_background_holo_dark -> spinner_background_holo_dark
    int spinner_background_holo_light -> spinner_background_holo_light
    int spinner_default_holo_dark -> spinner_default_holo_dark
    int spinner_default_holo_light -> spinner_default_holo_light
    int spinner_disabled_holo_dark -> spinner_disabled_holo_dark
    int spinner_disabled_holo_light -> spinner_disabled_holo_light
    int spinner_focused_holo_dark -> spinner_focused_holo_dark
    int spinner_focused_holo_light -> spinner_focused_holo_light
    int spinner_pressed_holo_dark -> spinner_pressed_holo_dark
    int spinner_pressed_holo_light -> spinner_pressed_holo_light
    int switch_bg_disabled_holo_dark -> switch_bg_disabled_holo_dark
    int switch_bg_disabled_holo_light -> switch_bg_disabled_holo_light
    int switch_bg_focused_holo_dark -> switch_bg_focused_holo_dark
    int switch_bg_focused_holo_light -> switch_bg_focused_holo_light
    int switch_bg_holo_dark -> switch_bg_holo_dark
    int switch_bg_holo_light -> switch_bg_holo_light
    int switch_inner_holo_dark -> switch_inner_holo_dark
    int switch_inner_holo_light -> switch_inner_holo_light
    int switch_old_inner_holo_dark -> switch_old_inner_holo_dark
    int switch_old_inner_holo_light -> switch_old_inner_holo_light
    int switch_thumb_activated_holo_dark -> switch_thumb_activated_holo_dark
    int switch_thumb_activated_holo_light -> switch_thumb_activated_holo_light
    int switch_thumb_disabled_holo_dark -> switch_thumb_disabled_holo_dark
    int switch_thumb_disabled_holo_light -> switch_thumb_disabled_holo_light
    int switch_thumb_holo_dark -> switch_thumb_holo_dark
    int switch_thumb_holo_light -> switch_thumb_holo_light
    int switch_thumb_pressed_holo_dark -> switch_thumb_pressed_holo_dark
    int switch_thumb_pressed_holo_light -> switch_thumb_pressed_holo_light
    int switch_track_holo_dark -> switch_track_holo_dark
    int switch_track_holo_light -> switch_track_holo_light
    int tab_indicator_ab_deepgray -> tab_indicator_ab_deepgray
    int tab_selected_deepgray -> tab_selected_deepgray
    int tab_selected_focused_deepgray -> tab_selected_focused_deepgray
    int tab_selected_pressed_deepgray -> tab_selected_pressed_deepgray
    int tab_unselected_deepgray -> tab_unselected_deepgray
    int tab_unselected_focused_deepgray -> tab_unselected_focused_deepgray
    int tab_unselected_pressed_deepgray -> tab_unselected_pressed_deepgray
    int textfield_activated_holo_dark -> textfield_activated_holo_dark
    int textfield_activated_holo_light -> textfield_activated_holo_light
    int textfield_bg_activated_holo_dark -> textfield_bg_activated_holo_dark
    int textfield_bg_default_holo_dark -> textfield_bg_default_holo_dark
    int textfield_bg_disabled_focused_holo_dark -> textfield_bg_disabled_focused_holo_dark
    int textfield_bg_disabled_holo_dark -> textfield_bg_disabled_holo_dark
    int textfield_bg_focused_holo_dark -> textfield_bg_focused_holo_dark
    int textfield_default_holo_dark -> textfield_default_holo_dark
    int textfield_default_holo_light -> textfield_default_holo_light
    int textfield_disabled_focused_holo_dark -> textfield_disabled_focused_holo_dark
    int textfield_disabled_focused_holo_light -> textfield_disabled_focused_holo_light
    int textfield_disabled_holo_dark -> textfield_disabled_holo_dark
    int textfield_disabled_holo_light -> textfield_disabled_holo_light
    int textfield_focused_holo_dark -> textfield_focused_holo_dark
    int textfield_focused_holo_light -> textfield_focused_holo_light
    int textfield_multiline_activated_holo_dark -> textfield_multiline_activated_holo_dark
    int textfield_multiline_activated_holo_light -> textfield_multiline_activated_holo_light
    int textfield_multiline_default_holo_dark -> textfield_multiline_default_holo_dark
    int textfield_multiline_default_holo_light -> textfield_multiline_default_holo_light
    int textfield_multiline_disabled_focused_holo_dark -> textfield_multiline_disabled_focused_holo_dark
    int textfield_multiline_disabled_focused_holo_light -> textfield_multiline_disabled_focused_holo_light
    int textfield_multiline_disabled_holo_dark -> textfield_multiline_disabled_holo_dark
    int textfield_multiline_disabled_holo_light -> textfield_multiline_disabled_holo_light
    int textfield_multiline_focused_holo_dark -> textfield_multiline_focused_holo_dark
    int textfield_multiline_focused_holo_light -> textfield_multiline_focused_holo_light
    int toast_frame -> toast_frame
    int transparent -> transparent
org.holoeverywhere.R$id -> org.holoeverywhere.R$id:
    int action_bar -> action_bar
    int action_bar_activity_content -> action_bar_activity_content
    int action_bar_container -> action_bar_container
    int action_bar_overlay_layout -> action_bar_overlay_layout
    int action_bar_root -> action_bar_root
    int action_bar_subtitle -> action_bar_subtitle
    int action_bar_title -> action_bar_title
    int action_context_bar -> action_context_bar
    int action_menu_divider -> action_menu_divider
    int action_menu_presenter -> action_menu_presenter
    int action_mode_bar -> action_mode_bar
    int action_mode_bar_stub -> action_mode_bar_stub
    int action_mode_close_button -> action_mode_close_button
    int activity_chooser_view_content -> activity_chooser_view_content
    int alertTitle -> alertTitle
    int ampm_label -> ampm_label
    int animator -> animator
    int atThumb -> atThumb
    int button1 -> button1
    int button2 -> button2
    int button3 -> button3
    int buttonPanel -> buttonPanel
    int buttonPanelTopDivivder -> buttonPanelTopDivivder
    int button_always -> button_always
    int button_bar -> button_bar
    int button_once -> button_once
    int checkbox -> checkbox
    int contentPanel -> contentPanel
    int custom -> custom
    int customPanel -> customPanel
    int dark -> dark
    int date_picker_day -> date_picker_day
    int date_picker_month -> date_picker_month
    int date_picker_month_and_day -> date_picker_month_and_day
    int date_picker_week -> date_picker_week
    int date_picker_year -> date_picker_year
    int day_picker_selected_date_layout -> day_picker_selected_date_layout
    int decrement -> decrement
    int default_activity_button -> default_activity_button
    int dialog -> dialog
    int disableHome -> disableHome
    int done -> done
    int done_button -> done_button
    int dropdown -> dropdown
    int edit -> edit
    int edit_query -> edit_query
    int empty -> empty
    int expand_activities_button -> expand_activities_button
    int expanded_menu -> expanded_menu
    int floating -> floating
    int fontLoaderFont -> fontLoaderFont
    int fontLoaderFontFamily -> fontLoaderFontFamily
    int fontLoaderFontStyle -> fontLoaderFontStyle
    int home -> home
    int homeAsUp -> homeAsUp
    int hour_space -> hour_space
    int hours -> hours
    int icon -> icon
    int image -> image
    int increment -> increment
    int internalEmpty -> internalEmpty
    int invalid -> invalid
    int leftSpacer -> leftSpacer
    int left_icon -> left_icon
    int light -> light
    int listContainer -> listContainer
    int listMode -> listMode
    int list_item -> list_item
    int message -> message
    int minutes -> minutes
    int minutes_space -> minutes_space
    int mixed -> mixed
    int month_text_view -> month_text_view
    int normal -> normal
    int numberpicker_input -> numberpicker_input
    int parentPanel -> parentPanel
    int preference -> preference
    int progress -> progress
    int progressContainer -> progressContainer
    int progress_circular -> progress_circular
    int progress_horizontal -> progress_horizontal
    int progress_number -> progress_number
    int progress_percent -> progress_percent
    int radio -> radio
    int resolver_grid -> resolver_grid
    int rightSpacer -> rightSpacer
    int right_container -> right_container
    int right_icon -> right_icon
    int scrollView -> scrollView
    int search_badge -> search_badge
    int search_bar -> search_bar
    int search_button -> search_button
    int search_close_btn -> search_close_btn
    int search_edit_frame -> search_edit_frame
    int search_go_btn -> search_go_btn
    int search_mag_icon -> search_mag_icon
    int search_plate -> search_plate
    int search_src_text -> search_src_text
    int search_voice_btn -> search_voice_btn
    int select_dialog_listview -> select_dialog_listview
    int separator -> separator
    int shortcut -> shortcut
    int showCustom -> showCustom
    int showHome -> showHome
    int showTitle -> showTitle
    int split_action_bar -> split_action_bar
    int submit_area -> submit_area
    int tabMode -> tabMode
    int tabSwipePager -> tabSwipePager
    int time_picker -> time_picker
    int time_picker_dialog -> time_picker_dialog
    int title -> title
    int titleDivider -> titleDivider
    int titleDividerTop -> titleDividerTop
    int title_container -> title_container
    int title_template -> title_template
    int topPanel -> topPanel
    int top_action_bar -> top_action_bar
    int typeface -> typeface
    int up -> up
    int useLogo -> useLogo
org.holoeverywhere.R$integer -> org.holoeverywhere.R$integer:
    int abc_max_action_buttons -> abc_max_action_buttons
    int config_activityDefaultDur -> config_activityDefaultDur
    int config_activityShortDur -> config_activityShortDur
    int config_longAnimTime -> config_longAnimTime
    int config_maxResolverActivityColumns -> config_maxResolverActivityColumns
    int config_mediumAnimTime -> config_mediumAnimTime
    int config_shortAnimTime -> config_shortAnimTime
    int date_year_view_num_columns -> date_year_view_num_columns
org.holoeverywhere.R$layout -> org.holoeverywhere.R$layout:
    int abc_action_bar_decor -> abc_action_bar_decor
    int abc_action_bar_decor_include -> abc_action_bar_decor_include
    int abc_action_bar_decor_overlay -> abc_action_bar_decor_overlay
    int abc_action_bar_home -> abc_action_bar_home
    int abc_action_bar_tab -> abc_action_bar_tab
    int abc_action_bar_tabbar -> abc_action_bar_tabbar
    int abc_action_bar_title_item -> abc_action_bar_title_item
    int abc_action_bar_view_list_nav_layout -> abc_action_bar_view_list_nav_layout
    int abc_action_menu_item_layout -> abc_action_menu_item_layout
    int abc_action_menu_layout -> abc_action_menu_layout
    int abc_action_mode_bar -> abc_action_mode_bar
    int abc_action_mode_close_item -> abc_action_mode_close_item
    int abc_activity_chooser_view -> abc_activity_chooser_view
    int abc_activity_chooser_view_list_item -> abc_activity_chooser_view_list_item
    int abc_expanded_menu_layout -> abc_expanded_menu_layout
    int abc_list_menu_item_checkbox -> abc_list_menu_item_checkbox
    int abc_list_menu_item_icon -> abc_list_menu_item_icon
    int abc_list_menu_item_layout -> abc_list_menu_item_layout
    int abc_list_menu_item_radio -> abc_list_menu_item_radio
    int abc_popup_menu_item_layout -> abc_popup_menu_item_layout
    int abc_screen -> abc_screen
    int abc_search_dropdown_item_icons_2line -> abc_search_dropdown_item_icons_2line
    int abc_search_view -> abc_search_view
    int alert_dialog_holo -> alert_dialog_holo
    int alert_dialog_progress_holo -> alert_dialog_progress_holo
    int date_picker_dialog -> date_picker_dialog
    int date_picker_done_button -> date_picker_done_button
    int date_picker_view_animator -> date_picker_view_animator
    int expandable_list_content -> expandable_list_content
    int expanded_menu_layout -> expanded_menu_layout
    int grid_content -> grid_content
    int list_content -> list_content
    int list_menu_item_checkbox -> list_menu_item_checkbox
    int list_menu_item_icon -> list_menu_item_icon
    int list_menu_item_layout -> list_menu_item_layout
    int list_menu_item_radio -> list_menu_item_radio
    int number_picker_with_selector_wheel -> number_picker_with_selector_wheel
    int progress_dialog_holo -> progress_dialog_holo
    int resolve_list_item -> resolve_list_item
    int resolver_grid -> resolver_grid
    int select_dialog_holo -> select_dialog_holo
    int select_dialog_item_holo -> select_dialog_item_holo
    int select_dialog_multichoice_holo -> select_dialog_multichoice_holo
    int select_dialog_singlechoice_holo -> select_dialog_singlechoice_holo
    int simple_dropdown_hint -> simple_dropdown_hint
    int simple_dropdown_item_1line -> simple_dropdown_item_1line
    int simple_list_item_1 -> simple_list_item_1
    int simple_list_item_2 -> simple_list_item_2
    int simple_list_item_2_single_choice -> simple_list_item_2_single_choice
    int simple_list_item_activated_1 -> simple_list_item_activated_1
    int simple_list_item_activated_2 -> simple_list_item_activated_2
    int simple_list_item_checked -> simple_list_item_checked
    int simple_list_item_multiple_choice -> simple_list_item_multiple_choice
    int simple_list_item_single_choice -> simple_list_item_single_choice
    int simple_spinner_dropdown_item -> simple_spinner_dropdown_item
    int simple_spinner_item -> simple_spinner_item
    int support_simple_spinner_dropdown_item -> support_simple_spinner_dropdown_item
    int tab_swipe -> tab_swipe
    int time_header_label -> time_header_label
    int time_picker_dialog -> time_picker_dialog
    int transient_notification -> transient_notification
    int year_label_text_view -> year_label_text_view
org.holoeverywhere.R$raw -> org.holoeverywhere.R$raw:
    int roboto_bold -> roboto_bold
    int roboto_bolditalic -> roboto_bolditalic
    int roboto_condensed -> roboto_condensed
    int roboto_italic -> roboto_italic
    int roboto_regular -> roboto_regular
org.holoeverywhere.R$string -> org.holoeverywhere.R$string:
    int abc_action_bar_home_description -> abc_action_bar_home_description
    int abc_action_bar_up_description -> abc_action_bar_up_description
    int abc_action_menu_overflow_description -> abc_action_menu_overflow_description
    int abc_action_mode_done -> abc_action_mode_done
    int abc_activity_chooser_view_see_all -> abc_activity_chooser_view_see_all
    int abc_activitychooserview_choose_application -> abc_activitychooserview_choose_application
    int abc_searchview_description_clear -> abc_searchview_description_clear
    int abc_searchview_description_query -> abc_searchview_description_query
    int abc_searchview_description_search -> abc_searchview_description_search
    int abc_searchview_description_submit -> abc_searchview_description_submit
    int abc_searchview_description_voice -> abc_searchview_description_voice
    int abc_shareactionprovider_share_with -> abc_shareactionprovider_share_with
    int abc_shareactionprovider_share_with_application -> abc_shareactionprovider_share_with_application
    int activity_resolver_use_always -> activity_resolver_use_always
    int activity_resolver_use_once -> activity_resolver_use_once
    int candidates_style -> candidates_style
    int capital_off -> capital_off
    int capital_on -> capital_on
    int chooseActivity -> chooseActivity
    int day_picker_description -> day_picker_description
    int deleted_key -> deleted_key
    int done_label -> done_label
    int hour_picker_description -> hour_picker_description
    int item_is_selected -> item_is_selected
    int loading -> loading
    int minute_picker_description -> minute_picker_description
    int noApplications -> noApplications
    int number_picker_decrement_button -> number_picker_decrement_button
    int number_picker_increment_button -> number_picker_increment_button
    int number_picker_increment_scroll_action -> number_picker_increment_scroll_action
    int number_picker_increment_scroll_mode -> number_picker_increment_scroll_mode
    int ringtone_default -> ringtone_default
    int ringtone_picker_title -> ringtone_picker_title
    int ringtone_silent -> ringtone_silent
    int select_day -> select_day
    int select_hours -> select_hours
    int select_minutes -> select_minutes
    int select_year -> select_year
    int time_ampm_circle_radius_multiplier -> time_ampm_circle_radius_multiplier
    int time_circle_radius_multiplier -> time_circle_radius_multiplier
    int time_circle_radius_multiplier_24HourMode -> time_circle_radius_multiplier_24HourMode
    int time_numbers_radius_multiplier_inner -> time_numbers_radius_multiplier_inner
    int time_numbers_radius_multiplier_outer -> time_numbers_radius_multiplier_outer
    int time_selection_radius_multiplier -> time_selection_radius_multiplier
    int time_text_size_multiplier_inner -> time_text_size_multiplier_inner
    int time_text_size_multiplier_outer -> time_text_size_multiplier_outer
    int time_time_numbers_radius_multiplier_normal -> time_time_numbers_radius_multiplier_normal
    int time_time_text_size_multiplier_normal -> time_time_text_size_multiplier_normal
    int whichApplication -> whichApplication
    int year_picker_description -> year_picker_description
org.holoeverywhere.R$style -> org.holoeverywhere.R$style:
    int ActionBarTabStyle_Deepgray -> ActionBarTabStyle_Deepgray
    int ActionBar_Solid_Deepgray -> ActionBar_Solid_Deepgray
    int ActionBar_Transparent_Deepgray -> ActionBar_Transparent_Deepgray
    int ActionButton_CloseMode_Deepgray -> ActionButton_CloseMode_Deepgray
    int AppBaseTheme -> AppBaseTheme
    int DropDownListView_Deepgray -> DropDownListView_Deepgray
    int DropDownNav_Deepgray -> DropDownNav_Deepgray
    int Holo -> Holo
    int Holo_AlertDialog -> Holo_AlertDialog
    int Holo_AlertDialog_Light -> Holo_AlertDialog_Light
    int Holo_Animation -> Holo_Animation
    int Holo_Animation_Dialog -> Holo_Animation_Dialog
    int Holo_Animation_DropDownDown -> Holo_Animation_DropDownDown
    int Holo_Animation_DropDownUp -> Holo_Animation_DropDownUp
    int Holo_Animation_PopupWindow -> Holo_Animation_PopupWindow
    int Holo_Animation_Toast -> Holo_Animation_Toast
    int Holo_AutoCompleteTextView -> Holo_AutoCompleteTextView
    int Holo_AutoCompleteTextView_Light -> Holo_AutoCompleteTextView_Light
    int Holo_Base_Theme -> Holo_Base_Theme
    int Holo_Base_Theme_Dialog -> Holo_Base_Theme_Dialog
    int Holo_Base_Theme_Dialog_Light -> Holo_Base_Theme_Dialog_Light
    int Holo_Base_Theme_Dialog_Light_NoFrame -> Holo_Base_Theme_Dialog_Light_NoFrame
    int Holo_Base_Theme_Dialog_NoFrame -> Holo_Base_Theme_Dialog_NoFrame
    int Holo_Base_Theme_Light -> Holo_Base_Theme_Light
    int Holo_Base_Theme_Light_DarkActionBar -> Holo_Base_Theme_Light_DarkActionBar
    int Holo_Button -> Holo_Button
    int Holo_ButtonBar -> Holo_ButtonBar
    int Holo_ButtonBar_AlertDialog -> Holo_ButtonBar_AlertDialog
    int Holo_Button_Borderless -> Holo_Button_Borderless
    int Holo_Button_Borderless_Light -> Holo_Button_Borderless_Light
    int Holo_Button_Borderless_Small -> Holo_Button_Borderless_Small
    int Holo_Button_Borderless_Small_Light -> Holo_Button_Borderless_Small_Light
    int Holo_Button_Light -> Holo_Button_Light
    int Holo_Button_Small -> Holo_Button_Small
    int Holo_Button_Small_Light -> Holo_Button_Small_Light
    int Holo_Button_Toggle -> Holo_Button_Toggle
    int Holo_Button_Toggle_Light -> Holo_Button_Toggle_Light
    int Holo_CompoundButton -> Holo_CompoundButton
    int Holo_CompoundButton_CheckBox -> Holo_CompoundButton_CheckBox
    int Holo_CompoundButton_CheckBox_Light -> Holo_CompoundButton_CheckBox_Light
    int Holo_CompoundButton_RadioButton -> Holo_CompoundButton_RadioButton
    int Holo_CompoundButton_RadioButton_Light -> Holo_CompoundButton_RadioButton_Light
    int Holo_DateTimePicker -> Holo_DateTimePicker
    int Holo_DateTimePicker_Light -> Holo_DateTimePicker_Light
    int Holo_DialogWindowTitle -> Holo_DialogWindowTitle
    int Holo_DialogWindowTitle_Light -> Holo_DialogWindowTitle_Light
    int Holo_DropDownItem -> Holo_DropDownItem
    int Holo_EditText -> Holo_EditText
    int Holo_EditText_Light -> Holo_EditText_Light
    int Holo_EditText_NumberPickerInputText -> Holo_EditText_NumberPickerInputText
    int Holo_ExpandableListView -> Holo_ExpandableListView
    int Holo_ExpandableListView_Light -> Holo_ExpandableListView_Light
    int Holo_GridView -> Holo_GridView
    int Holo_ImageButton -> Holo_ImageButton
    int Holo_ImageButton_Light -> Holo_ImageButton_Light
    int Holo_ListPopupWindow -> Holo_ListPopupWindow
    int Holo_ListPopupWindow_Light -> Holo_ListPopupWindow_Light
    int Holo_ListView -> Holo_ListView
    int Holo_ListView_Base -> Holo_ListView_Base
    int Holo_ListView_DropDown -> Holo_ListView_DropDown
    int Holo_ListView_DropDown_Light -> Holo_ListView_DropDown_Light
    int Holo_ListView_Light -> Holo_ListView_Light
    int Holo_NumberPicker -> Holo_NumberPicker
    int Holo_PopupWindow -> Holo_PopupWindow
    int Holo_PopupWindow_Light -> Holo_PopupWindow_Light
    int Holo_ProgressBar -> Holo_ProgressBar
    int Holo_ProgressBar_Horizontal -> Holo_ProgressBar_Horizontal
    int Holo_ProgressBar_Horizontal_Light -> Holo_ProgressBar_Horizontal_Light
    int Holo_ProgressBar_Large -> Holo_ProgressBar_Large
    int Holo_ProgressBar_Small -> Holo_ProgressBar_Small
    int Holo_RatingBar -> Holo_RatingBar
    int Holo_RatingBar_Indicator -> Holo_RatingBar_Indicator
    int Holo_RatingBar_Indicator_Light -> Holo_RatingBar_Indicator_Light
    int Holo_RatingBar_Light -> Holo_RatingBar_Light
    int Holo_RatingBar_Small -> Holo_RatingBar_Small
    int Holo_RatingBar_Small_Light -> Holo_RatingBar_Small_Light
    int Holo_SeekBar -> Holo_SeekBar
    int Holo_SeekBar_Light -> Holo_SeekBar_Light
    int Holo_SegmentedButton -> Holo_SegmentedButton
    int Holo_SegmentedButton_Light -> Holo_SegmentedButton_Light
    int Holo_Spinner -> Holo_Spinner
    int Holo_Spinner_Light -> Holo_Spinner_Light
    int Holo_Switch -> Holo_Switch
    int Holo_Switch_Light -> Holo_Switch_Light
    int Holo_Switch_Light_Old -> Holo_Switch_Light_Old
    int Holo_Switch_Old -> Holo_Switch_Old
    int Holo_Switch_TextAppearance -> Holo_Switch_TextAppearance
    int Holo_Switch_TextAppearance_Light -> Holo_Switch_TextAppearance_Light
    int Holo_TextAppearance -> Holo_TextAppearance
    int Holo_TextAppearance_DialogWindowTitle -> Holo_TextAppearance_DialogWindowTitle
    int Holo_TextAppearance_DialogWindowTitle_Light -> Holo_TextAppearance_DialogWindowTitle_Light
    int Holo_TextAppearance_DropDownItem -> Holo_TextAppearance_DropDownItem
    int Holo_TextAppearance_Inverse -> Holo_TextAppearance_Inverse
    int Holo_TextAppearance_Inverse_Light -> Holo_TextAppearance_Inverse_Light
    int Holo_TextAppearance_Large -> Holo_TextAppearance_Large
    int Holo_TextAppearance_Large_Inverse -> Holo_TextAppearance_Large_Inverse
    int Holo_TextAppearance_Large_Inverse_Light -> Holo_TextAppearance_Large_Inverse_Light
    int Holo_TextAppearance_Large_Light -> Holo_TextAppearance_Large_Light
    int Holo_TextAppearance_Light -> Holo_TextAppearance_Light
    int Holo_TextAppearance_Medium -> Holo_TextAppearance_Medium
    int Holo_TextAppearance_Medium_Inverse -> Holo_TextAppearance_Medium_Inverse
    int Holo_TextAppearance_Medium_Inverse_Light -> Holo_TextAppearance_Medium_Inverse_Light
    int Holo_TextAppearance_Medium_Light -> Holo_TextAppearance_Medium_Light
    int Holo_TextAppearance_PopupMenu -> Holo_TextAppearance_PopupMenu
    int Holo_TextAppearance_PopupMenu_Large -> Holo_TextAppearance_PopupMenu_Large
    int Holo_TextAppearance_PopupMenu_Light -> Holo_TextAppearance_PopupMenu_Light
    int Holo_TextAppearance_PopupMenu_Light_Large -> Holo_TextAppearance_PopupMenu_Light_Large
    int Holo_TextAppearance_PopupMenu_Light_Small -> Holo_TextAppearance_PopupMenu_Light_Small
    int Holo_TextAppearance_PopupMenu_Small -> Holo_TextAppearance_PopupMenu_Small
    int Holo_TextAppearance_Small -> Holo_TextAppearance_Small
    int Holo_TextAppearance_Small_Inverse -> Holo_TextAppearance_Small_Inverse
    int Holo_TextAppearance_Small_Inverse_Light -> Holo_TextAppearance_Small_Inverse_Light
    int Holo_TextAppearance_Small_Light -> Holo_TextAppearance_Small_Light
    int Holo_TextAppearance_TextView -> Holo_TextAppearance_TextView
    int Holo_TextAppearance_TextView_SpinnerItem -> Holo_TextAppearance_TextView_SpinnerItem
    int Holo_TextAppearance_TextView_SpinnerItem_Light -> Holo_TextAppearance_TextView_SpinnerItem_Light
    int Holo_TextAppearance_Toast -> Holo_TextAppearance_Toast
    int Holo_TextView -> Holo_TextView
    int Holo_TextView_ListSeparator -> Holo_TextView_ListSeparator
    int Holo_TextView_ListSeparator_Light -> Holo_TextView_ListSeparator_Light
    int Holo_TextView_SpinnerItem -> Holo_TextView_SpinnerItem
    int Holo_TextView_SpinnerItem_DropDown -> Holo_TextView_SpinnerItem_DropDown
    int Holo_TextView_SpinnerItem_DropDown_Light -> Holo_TextView_SpinnerItem_DropDown_Light
    int Holo_TextView_SpinnerItem_Light -> Holo_TextView_SpinnerItem_Light
    int Holo_Theme -> Holo_Theme
    int Holo_Theme_Dialog -> Holo_Theme_Dialog
    int Holo_Theme_DialogWhenLarge -> Holo_Theme_DialogWhenLarge
    int Holo_Theme_DialogWhenLarge_Light -> Holo_Theme_DialogWhenLarge_Light
    int Holo_Theme_DialogWhenLarge_Light_DarkActionBar -> Holo_Theme_DialogWhenLarge_Light_DarkActionBar
    int Holo_Theme_DialogWhenLarge_Light_DarkActionBar_NoActionBar -> Holo_Theme_DialogWhenLarge_Light_DarkActionBar_NoActionBar
    int Holo_Theme_DialogWhenLarge_Light_NoActionBar -> Holo_Theme_DialogWhenLarge_Light_NoActionBar
    int Holo_Theme_DialogWhenLarge_NoActionBar -> Holo_Theme_DialogWhenLarge_NoActionBar
    int Holo_Theme_Dialog_Alert -> Holo_Theme_Dialog_Alert
    int Holo_Theme_Dialog_Alert_Light -> Holo_Theme_Dialog_Alert_Light
    int Holo_Theme_Dialog_FixedSize -> Holo_Theme_Dialog_FixedSize
    int Holo_Theme_Dialog_Light -> Holo_Theme_Dialog_Light
    int Holo_Theme_Dialog_Light_FixedSize -> Holo_Theme_Dialog_Light_FixedSize
    int Holo_Theme_Dialog_Light_NoFrame -> Holo_Theme_Dialog_Light_NoFrame
    int Holo_Theme_Dialog_NoFrame -> Holo_Theme_Dialog_NoFrame
    int Holo_Theme_Fullscreen -> Holo_Theme_Fullscreen
    int Holo_Theme_Fullscreen_Wallpaper -> Holo_Theme_Fullscreen_Wallpaper
    int Holo_Theme_Light -> Holo_Theme_Light
    int Holo_Theme_Light_DarkActionBar -> Holo_Theme_Light_DarkActionBar
    int Holo_Theme_Light_DarkActionBar_Fullscreen -> Holo_Theme_Light_DarkActionBar_Fullscreen
    int Holo_Theme_Light_DarkActionBar_Fullscreen_Wallpaper -> Holo_Theme_Light_DarkActionBar_Fullscreen_Wallpaper
    int Holo_Theme_Light_DarkActionBar_NoActionBar -> Holo_Theme_Light_DarkActionBar_NoActionBar
    int Holo_Theme_Light_DarkActionBar_NoActionBar_Fullscreen -> Holo_Theme_Light_DarkActionBar_NoActionBar_Fullscreen
    int Holo_Theme_Light_DarkActionBar_NoActionBar_Fullscreen_Wallpaper -> Holo_Theme_Light_DarkActionBar_NoActionBar_Fullscreen_Wallpaper
    int Holo_Theme_Light_DarkActionBar_NoActionBar_Wallpaper -> Holo_Theme_Light_DarkActionBar_NoActionBar_Wallpaper
    int Holo_Theme_Light_DarkActionBar_Translucent -> Holo_Theme_Light_DarkActionBar_Translucent
    int Holo_Theme_Light_DarkActionBar_Wallpaper -> Holo_Theme_Light_DarkActionBar_Wallpaper
    int Holo_Theme_Light_Fullscreen -> Holo_Theme_Light_Fullscreen
    int Holo_Theme_Light_Fullscreen_Wallpaper -> Holo_Theme_Light_Fullscreen_Wallpaper
    int Holo_Theme_Light_NoActionBar -> Holo_Theme_Light_NoActionBar
    int Holo_Theme_Light_NoActionBar_Fullscreen -> Holo_Theme_Light_NoActionBar_Fullscreen
    int Holo_Theme_Light_NoActionBar_Fullscreen_Wallpaper -> Holo_Theme_Light_NoActionBar_Fullscreen_Wallpaper
    int Holo_Theme_Light_NoActionBar_Wallpaper -> Holo_Theme_Light_NoActionBar_Wallpaper
    int Holo_Theme_Light_Translucent -> Holo_Theme_Light_Translucent
    int Holo_Theme_Light_Wallpaper -> Holo_Theme_Light_Wallpaper
    int Holo_Theme_NoActionBar -> Holo_Theme_NoActionBar
    int Holo_Theme_NoActionBar_Fullscreen -> Holo_Theme_NoActionBar_Fullscreen
    int Holo_Theme_NoActionBar_Fullscreen_Wallpaper -> Holo_Theme_NoActionBar_Fullscreen_Wallpaper
    int Holo_Theme_NoActionBar_Wallpaper -> Holo_Theme_NoActionBar_Wallpaper
    int Holo_Theme_Toast -> Holo_Theme_Toast
    int Holo_Theme_Translucent -> Holo_Theme_Translucent
    int Holo_Theme_Wallpaper -> Holo_Theme_Wallpaper
    int PopupMenu_Deepgray -> PopupMenu_Deepgray
    int ProgressBar_Deepgray -> ProgressBar_Deepgray
    int TextAppearance_AppCompat_Base_CompactMenu_Dialog -> TextAppearance_AppCompat_Base_CompactMenu_Dialog
    int TextAppearance_AppCompat_Base_SearchResult -> TextAppearance_AppCompat_Base_SearchResult
    int TextAppearance_AppCompat_Base_SearchResult_Subtitle -> TextAppearance_AppCompat_Base_SearchResult_Subtitle
    int TextAppearance_AppCompat_Base_SearchResult_Title -> TextAppearance_AppCompat_Base_SearchResult_Title
    int TextAppearance_AppCompat_Base_Widget_PopupMenu_Large -> TextAppearance_AppCompat_Base_Widget_PopupMenu_Large
    int TextAppearance_AppCompat_Base_Widget_PopupMenu_Small -> TextAppearance_AppCompat_Base_Widget_PopupMenu_Small
    int TextAppearance_AppCompat_Light_Base_SearchResult -> TextAppearance_AppCompat_Light_Base_SearchResult
    int TextAppearance_AppCompat_Light_Base_SearchResult_Subtitle -> TextAppearance_AppCompat_Light_Base_SearchResult_Subtitle
    int TextAppearance_AppCompat_Light_Base_SearchResult_Title -> TextAppearance_AppCompat_Light_Base_SearchResult_Title
    int TextAppearance_AppCompat_Light_Base_Widget_PopupMenu_Large -> TextAppearance_AppCompat_Light_Base_Widget_PopupMenu_Large
    int TextAppearance_AppCompat_Light_Base_Widget_PopupMenu_Small -> TextAppearance_AppCompat_Light_Base_Widget_PopupMenu_Small
    int TextAppearance_AppCompat_Light_SearchResult_Subtitle -> TextAppearance_AppCompat_Light_SearchResult_Subtitle
    int TextAppearance_AppCompat_Light_SearchResult_Title -> TextAppearance_AppCompat_Light_SearchResult_Title
    int TextAppearance_AppCompat_Light_Widget_PopupMenu_Large -> TextAppearance_AppCompat_Light_Widget_PopupMenu_Large
    int TextAppearance_AppCompat_Light_Widget_PopupMenu_Small -> TextAppearance_AppCompat_Light_Widget_PopupMenu_Small
    int TextAppearance_AppCompat_SearchResult_Subtitle -> TextAppearance_AppCompat_SearchResult_Subtitle
    int TextAppearance_AppCompat_SearchResult_Title -> TextAppearance_AppCompat_SearchResult_Title
    int TextAppearance_AppCompat_Widget_ActionBar_Menu -> TextAppearance_AppCompat_Widget_ActionBar_Menu
    int TextAppearance_AppCompat_Widget_ActionBar_Subtitle -> TextAppearance_AppCompat_Widget_ActionBar_Subtitle
    int TextAppearance_AppCompat_Widget_ActionBar_Subtitle_Inverse -> TextAppearance_AppCompat_Widget_ActionBar_Subtitle_Inverse
    int TextAppearance_AppCompat_Widget_ActionBar_Title -> TextAppearance_AppCompat_Widget_ActionBar_Title
    int TextAppearance_AppCompat_Widget_ActionBar_Title_Inverse -> TextAppearance_AppCompat_Widget_ActionBar_Title_Inverse
    int TextAppearance_AppCompat_Widget_ActionMode_Subtitle -> TextAppearance_AppCompat_Widget_ActionMode_Subtitle
    int TextAppearance_AppCompat_Widget_ActionMode_Subtitle_Inverse -> TextAppearance_AppCompat_Widget_ActionMode_Subtitle_Inverse
    int TextAppearance_AppCompat_Widget_ActionMode_Title -> TextAppearance_AppCompat_Widget_ActionMode_Title
    int TextAppearance_AppCompat_Widget_ActionMode_Title_Inverse -> TextAppearance_AppCompat_Widget_ActionMode_Title_Inverse
    int TextAppearance_AppCompat_Widget_Base_ActionBar_Menu -> TextAppearance_AppCompat_Widget_Base_ActionBar_Menu
    int TextAppearance_AppCompat_Widget_Base_ActionBar_Subtitle -> TextAppearance_AppCompat_Widget_Base_ActionBar_Subtitle
    int TextAppearance_AppCompat_Widget_Base_ActionBar_Subtitle_Inverse -> TextAppearance_AppCompat_Widget_Base_ActionBar_Subtitle_Inverse
    int TextAppearance_AppCompat_Widget_Base_ActionBar_Title -> TextAppearance_AppCompat_Widget_Base_ActionBar_Title
    int TextAppearance_AppCompat_Widget_Base_ActionBar_Title_Inverse -> TextAppearance_AppCompat_Widget_Base_ActionBar_Title_Inverse
    int TextAppearance_AppCompat_Widget_Base_ActionMode_Subtitle -> TextAppearance_AppCompat_Widget_Base_ActionMode_Subtitle
    int TextAppearance_AppCompat_Widget_Base_ActionMode_Subtitle_Inverse -> TextAppearance_AppCompat_Widget_Base_ActionMode_Subtitle_Inverse
    int TextAppearance_AppCompat_Widget_Base_ActionMode_Title -> TextAppearance_AppCompat_Widget_Base_ActionMode_Title
    int TextAppearance_AppCompat_Widget_Base_ActionMode_Title_Inverse -> TextAppearance_AppCompat_Widget_Base_ActionMode_Title_Inverse
    int TextAppearance_AppCompat_Widget_Base_DropDownItem -> TextAppearance_AppCompat_Widget_Base_DropDownItem
    int TextAppearance_AppCompat_Widget_DropDownItem -> TextAppearance_AppCompat_Widget_DropDownItem
    int TextAppearance_AppCompat_Widget_PopupMenu_Large -> TextAppearance_AppCompat_Widget_PopupMenu_Large
    int TextAppearance_AppCompat_Widget_PopupMenu_Small -> TextAppearance_AppCompat_Widget_PopupMenu_Small
    int TextAppearance_Widget_AppCompat_Base_ExpandedMenu_Item -> TextAppearance_Widget_AppCompat_Base_ExpandedMenu_Item
    int TextAppearance_Widget_AppCompat_ExpandedMenu_Item -> TextAppearance_Widget_AppCompat_ExpandedMenu_Item
    int Theme_AppCompat -> Theme_AppCompat
    int Theme_AppCompat_Base_CompactMenu -> Theme_AppCompat_Base_CompactMenu
    int Theme_AppCompat_Base_CompactMenu_Dialog -> Theme_AppCompat_Base_CompactMenu_Dialog
    int Theme_AppCompat_CompactMenu -> Theme_AppCompat_CompactMenu
    int Theme_AppCompat_CompactMenu_Dialog -> Theme_AppCompat_CompactMenu_Dialog
    int Theme_AppCompat_Light -> Theme_AppCompat_Light
    int Theme_AppCompat_Light_DarkActionBar -> Theme_AppCompat_Light_DarkActionBar
    int Theme_Base -> Theme_Base
    int Theme_Base_AppCompat -> Theme_Base_AppCompat
    int Theme_Base_AppCompat_Light -> Theme_Base_AppCompat_Light
    int Theme_Base_AppCompat_Light_DarkActionBar -> Theme_Base_AppCompat_Light_DarkActionBar
    int Theme_Base_Light -> Theme_Base_Light
    int Theme_Deepgray -> Theme_Deepgray
    int Theme_Deepgray_Widget -> Theme_Deepgray_Widget
    int Widget_AppCompat_ActionBar -> Widget_AppCompat_ActionBar
    int Widget_AppCompat_ActionBar_Solid -> Widget_AppCompat_ActionBar_Solid
    int Widget_AppCompat_ActionBar_TabBar -> Widget_AppCompat_ActionBar_TabBar
    int Widget_AppCompat_ActionBar_TabText -> Widget_AppCompat_ActionBar_TabText
    int Widget_AppCompat_ActionBar_TabView -> Widget_AppCompat_ActionBar_TabView
    int Widget_AppCompat_ActionButton -> Widget_AppCompat_ActionButton
    int Widget_AppCompat_ActionButton_CloseMode -> Widget_AppCompat_ActionButton_CloseMode
    int Widget_AppCompat_ActionButton_Overflow -> Widget_AppCompat_ActionButton_Overflow
    int Widget_AppCompat_ActionMode -> Widget_AppCompat_ActionMode
    int Widget_AppCompat_ActivityChooserView -> Widget_AppCompat_ActivityChooserView
    int Widget_AppCompat_AutoCompleteTextView -> Widget_AppCompat_AutoCompleteTextView
    int Widget_AppCompat_Base_ActionBar -> Widget_AppCompat_Base_ActionBar
    int Widget_AppCompat_Base_ActionBar_Solid -> Widget_AppCompat_Base_ActionBar_Solid
    int Widget_AppCompat_Base_ActionBar_TabBar -> Widget_AppCompat_Base_ActionBar_TabBar
    int Widget_AppCompat_Base_ActionBar_TabText -> Widget_AppCompat_Base_ActionBar_TabText
    int Widget_AppCompat_Base_ActionBar_TabView -> Widget_AppCompat_Base_ActionBar_TabView
    int Widget_AppCompat_Base_ActionButton -> Widget_AppCompat_Base_ActionButton
    int Widget_AppCompat_Base_ActionButton_CloseMode -> Widget_AppCompat_Base_ActionButton_CloseMode
    int Widget_AppCompat_Base_ActionButton_Overflow -> Widget_AppCompat_Base_ActionButton_Overflow
    int Widget_AppCompat_Base_ActionMode -> Widget_AppCompat_Base_ActionMode
    int Widget_AppCompat_Base_ActivityChooserView -> Widget_AppCompat_Base_ActivityChooserView
    int Widget_AppCompat_Base_AutoCompleteTextView -> Widget_AppCompat_Base_AutoCompleteTextView
    int Widget_AppCompat_Base_DropDownItem_Spinner -> Widget_AppCompat_Base_DropDownItem_Spinner
    int Widget_AppCompat_Base_ListView_DropDown -> Widget_AppCompat_Base_ListView_DropDown
    int Widget_AppCompat_Base_ListView_Menu -> Widget_AppCompat_Base_ListView_Menu
    int Widget_AppCompat_Base_PopupMenu -> Widget_AppCompat_Base_PopupMenu
    int Widget_AppCompat_Base_ProgressBar -> Widget_AppCompat_Base_ProgressBar
    int Widget_AppCompat_Base_ProgressBar_Horizontal -> Widget_AppCompat_Base_ProgressBar_Horizontal
    int Widget_AppCompat_Base_Spinner -> Widget_AppCompat_Base_Spinner
    int Widget_AppCompat_DropDownItem_Spinner -> Widget_AppCompat_DropDownItem_Spinner
    int Widget_AppCompat_Light_ActionBar -> Widget_AppCompat_Light_ActionBar
    int Widget_AppCompat_Light_ActionBar_Solid -> Widget_AppCompat_Light_ActionBar_Solid
    int Widget_AppCompat_Light_ActionBar_Solid_Inverse -> Widget_AppCompat_Light_ActionBar_Solid_Inverse
    int Widget_AppCompat_Light_ActionBar_TabBar -> Widget_AppCompat_Light_ActionBar_TabBar
    int Widget_AppCompat_Light_ActionBar_TabBar_Inverse -> Widget_AppCompat_Light_ActionBar_TabBar_Inverse
    int Widget_AppCompat_Light_ActionBar_TabText -> Widget_AppCompat_Light_ActionBar_TabText
    int Widget_AppCompat_Light_ActionBar_TabText_Inverse -> Widget_AppCompat_Light_ActionBar_TabText_Inverse
    int Widget_AppCompat_Light_ActionBar_TabView -> Widget_AppCompat_Light_ActionBar_TabView
    int Widget_AppCompat_Light_ActionBar_TabView_Inverse -> Widget_AppCompat_Light_ActionBar_TabView_Inverse
    int Widget_AppCompat_Light_ActionButton -> Widget_AppCompat_Light_ActionButton
    int Widget_AppCompat_Light_ActionButton_CloseMode -> Widget_AppCompat_Light_ActionButton_CloseMode
    int Widget_AppCompat_Light_ActionButton_Overflow -> Widget_AppCompat_Light_ActionButton_Overflow
    int Widget_AppCompat_Light_ActionMode_Inverse -> Widget_AppCompat_Light_ActionMode_Inverse
    int Widget_AppCompat_Light_ActivityChooserView -> Widget_AppCompat_Light_ActivityChooserView
    int Widget_AppCompat_Light_AutoCompleteTextView -> Widget_AppCompat_Light_AutoCompleteTextView
    int Widget_AppCompat_Light_Base_ActionBar -> Widget_AppCompat_Light_Base_ActionBar
    int Widget_AppCompat_Light_Base_ActionBar_Solid -> Widget_AppCompat_Light_Base_ActionBar_Solid
    int Widget_AppCompat_Light_Base_ActionBar_Solid_Inverse -> Widget_AppCompat_Light_Base_ActionBar_Solid_Inverse
    int Widget_AppCompat_Light_Base_ActionBar_TabBar -> Widget_AppCompat_Light_Base_ActionBar_TabBar
    int Widget_AppCompat_Light_Base_ActionBar_TabBar_Inverse -> Widget_AppCompat_Light_Base_ActionBar_TabBar_Inverse
    int Widget_AppCompat_Light_Base_ActionBar_TabText -> Widget_AppCompat_Light_Base_ActionBar_TabText
    int Widget_AppCompat_Light_Base_ActionBar_TabText_Inverse -> Widget_AppCompat_Light_Base_ActionBar_TabText_Inverse
    int Widget_AppCompat_Light_Base_ActionBar_TabView -> Widget_AppCompat_Light_Base_ActionBar_TabView
    int Widget_AppCompat_Light_Base_ActionBar_TabView_Inverse -> Widget_AppCompat_Light_Base_ActionBar_TabView_Inverse
    int Widget_AppCompat_Light_Base_ActionButton -> Widget_AppCompat_Light_Base_ActionButton
    int Widget_AppCompat_Light_Base_ActionButton_CloseMode -> Widget_AppCompat_Light_Base_ActionButton_CloseMode
    int Widget_AppCompat_Light_Base_ActionButton_Overflow -> Widget_AppCompat_Light_Base_ActionButton_Overflow
    int Widget_AppCompat_Light_Base_ActionMode_Inverse -> Widget_AppCompat_Light_Base_ActionMode_Inverse
    int Widget_AppCompat_Light_Base_ActivityChooserView -> Widget_AppCompat_Light_Base_ActivityChooserView
    int Widget_AppCompat_Light_Base_AutoCompleteTextView -> Widget_AppCompat_Light_Base_AutoCompleteTextView
    int Widget_AppCompat_Light_Base_DropDownItem_Spinner -> Widget_AppCompat_Light_Base_DropDownItem_Spinner
    int Widget_AppCompat_Light_Base_ListView_DropDown -> Widget_AppCompat_Light_Base_ListView_DropDown
    int Widget_AppCompat_Light_Base_PopupMenu -> Widget_AppCompat_Light_Base_PopupMenu
    int Widget_AppCompat_Light_Base_Spinner -> Widget_AppCompat_Light_Base_Spinner
    int Widget_AppCompat_Light_DropDownItem_Spinner -> Widget_AppCompat_Light_DropDownItem_Spinner
    int Widget_AppCompat_Light_ListView_DropDown -> Widget_AppCompat_Light_ListView_DropDown
    int Widget_AppCompat_Light_PopupMenu -> Widget_AppCompat_Light_PopupMenu
    int Widget_AppCompat_Light_Spinner_DropDown_ActionBar -> Widget_AppCompat_Light_Spinner_DropDown_ActionBar
    int Widget_AppCompat_ListView_DropDown -> Widget_AppCompat_ListView_DropDown
    int Widget_AppCompat_ListView_Menu -> Widget_AppCompat_ListView_Menu
    int Widget_AppCompat_PopupMenu -> Widget_AppCompat_PopupMenu
    int Widget_AppCompat_ProgressBar -> Widget_AppCompat_ProgressBar
    int Widget_AppCompat_ProgressBar_Horizontal -> Widget_AppCompat_ProgressBar_Horizontal
    int Widget_AppCompat_Spinner_DropDown_ActionBar -> Widget_AppCompat_Spinner_DropDown_ActionBar
org.holoeverywhere.R$styleable -> org.holoeverywhere.R$styleable:
    int[] AbsListView -> AbsListView
    int AbsListView_android_choiceMode -> AbsListView_android_choiceMode
    int AbsListView_android_fastScrollAlwaysVisible -> AbsListView_android_fastScrollAlwaysVisible
    int AbsListView_android_fastScrollEnabled -> AbsListView_android_fastScrollEnabled
    int[] AbsSpinner -> AbsSpinner
    int AbsSpinner_android_entries -> AbsSpinner_android_entries
    int[] ActionBar -> ActionBar
    int[] ActionBarLayout -> ActionBarLayout
    int ActionBarLayout_android_layout_gravity -> ActionBarLayout_android_layout_gravity
    int[] ActionBarWindow -> ActionBarWindow
    int ActionBarWindow_windowActionBar -> ActionBarWindow_windowActionBar
    int ActionBarWindow_windowActionBarOverlay -> ActionBarWindow_windowActionBarOverlay
    int ActionBarWindow_windowSplitActionBar -> ActionBarWindow_windowSplitActionBar
    int ActionBar_background -> ActionBar_background
    int ActionBar_backgroundSplit -> ActionBar_backgroundSplit
    int ActionBar_backgroundStacked -> ActionBar_backgroundStacked
    int ActionBar_customNavigationLayout -> ActionBar_customNavigationLayout
    int ActionBar_displayOptions -> ActionBar_displayOptions
    int ActionBar_height -> ActionBar_height
    int ActionBar_homeLayout -> ActionBar_homeLayout
    int ActionBar_icon -> ActionBar_icon
    int ActionBar_indeterminateProgressStyle -> ActionBar_indeterminateProgressStyle
    int ActionBar_itemPadding -> ActionBar_itemPadding
    int ActionBar_logo -> ActionBar_logo
    int ActionBar_navigationMode -> ActionBar_navigationMode
    int ActionBar_progressBarPadding -> ActionBar_progressBarPadding
    int ActionBar_progressBarStyle -> ActionBar_progressBarStyle
    int ActionBar_subtitle -> ActionBar_subtitle
    int ActionBar_subtitleTextStyle -> ActionBar_subtitleTextStyle
    int ActionBar_title -> ActionBar_title
    int ActionBar_titleTextStyle -> ActionBar_titleTextStyle
    int[] ActionMenuItemView -> ActionMenuItemView
    int ActionMenuItemView_android_minWidth -> ActionMenuItemView_android_minWidth
    int[] ActionMenuView -> ActionMenuView
    int[] ActionMode -> ActionMode
    int ActionMode_background -> ActionMode_background
    int ActionMode_backgroundSplit -> ActionMode_backgroundSplit
    int ActionMode_height -> ActionMode_height
    int ActionMode_subtitleTextStyle -> ActionMode_subtitleTextStyle
    int ActionMode_titleTextStyle -> ActionMode_titleTextStyle
    int[] ActivityChooserView -> ActivityChooserView
    int ActivityChooserView_expandActivityOverflowButtonDrawable -> ActivityChooserView_expandActivityOverflowButtonDrawable
    int ActivityChooserView_initialActivityCount -> ActivityChooserView_initialActivityCount
    int[] AlertDialog -> AlertDialog
    int AlertDialog_android_gravity -> AlertDialog_android_gravity
    int AlertDialog_bottomBright -> AlertDialog_bottomBright
    int AlertDialog_bottomDark -> AlertDialog_bottomDark
    int AlertDialog_bottomMedium -> AlertDialog_bottomMedium
    int AlertDialog_centerBright -> AlertDialog_centerBright
    int AlertDialog_centerDark -> AlertDialog_centerDark
    int AlertDialog_centerMedium -> AlertDialog_centerMedium
    int AlertDialog_fullBright -> AlertDialog_fullBright
    int AlertDialog_fullDark -> AlertDialog_fullDark
    int AlertDialog_horizontalProgressLayout -> AlertDialog_horizontalProgressLayout
    int AlertDialog_layout -> AlertDialog_layout
    int AlertDialog_listItemLayout -> AlertDialog_listItemLayout
    int AlertDialog_listLayout -> AlertDialog_listLayout
    int AlertDialog_multiChoiceItemLayout -> AlertDialog_multiChoiceItemLayout
    int AlertDialog_progressLayout -> AlertDialog_progressLayout
    int AlertDialog_singleChoiceItemLayout -> AlertDialog_singleChoiceItemLayout
    int AlertDialog_topBright -> AlertDialog_topBright
    int AlertDialog_topDark -> AlertDialog_topDark
    int[] AutoCompleteTextView -> AutoCompleteTextView
    int AutoCompleteTextView_android_completionHint -> AutoCompleteTextView_android_completionHint
    int AutoCompleteTextView_android_completionHintView -> AutoCompleteTextView_android_completionHintView
    int AutoCompleteTextView_android_completionThreshold -> AutoCompleteTextView_android_completionThreshold
    int AutoCompleteTextView_android_dropDownAnchor -> AutoCompleteTextView_android_dropDownAnchor
    int AutoCompleteTextView_android_dropDownHeight -> AutoCompleteTextView_android_dropDownHeight
    int AutoCompleteTextView_android_dropDownSelector -> AutoCompleteTextView_android_dropDownSelector
    int AutoCompleteTextView_android_dropDownWidth -> AutoCompleteTextView_android_dropDownWidth
    int AutoCompleteTextView_android_entries -> AutoCompleteTextView_android_entries
    int AutoCompleteTextView_android_inputType -> AutoCompleteTextView_android_inputType
    int AutoCompleteTextView_dropDownHorizontalOffset -> AutoCompleteTextView_dropDownHorizontalOffset
    int AutoCompleteTextView_dropDownVerticalOffset -> AutoCompleteTextView_dropDownVerticalOffset
    int[] ColorDrawable -> ColorDrawable
    int ColorDrawable_android_color -> ColorDrawable_android_color
    int[] DateTimePicker -> DateTimePicker
    int DateTimePicker_dateCircleColor -> DateTimePicker_dateCircleColor
    int DateTimePicker_dateDayTextColor -> DateTimePicker_dateDayTextColor
    int DateTimePicker_dateMonthTitleColor -> DateTimePicker_dateMonthTitleColor
    int DateTimePicker_dateTodayColor -> DateTimePicker_dateTodayColor
    int DateTimePicker_dateYearSelectorColor -> DateTimePicker_dateYearSelectorColor
    int DateTimePicker_timeAmPmPicker -> DateTimePicker_timeAmPmPicker
    int DateTimePicker_timeAmPmPickerBackground -> DateTimePicker_timeAmPmPickerBackground
    int DateTimePicker_timeAmPmPickerTextColor -> DateTimePicker_timeAmPmPickerTextColor
    int DateTimePicker_timeCenterPointerColor -> DateTimePicker_timeCenterPointerColor
    int DateTimePicker_timeCenterPointerRadius -> DateTimePicker_timeCenterPointerRadius
    int DateTimePicker_timeCircleColor -> DateTimePicker_timeCircleColor
    int DateTimePicker_timePickerSelectorColor -> DateTimePicker_timePickerSelectorColor
    int DateTimePicker_timeRadialTextColor -> DateTimePicker_timeRadialTextColor
    int[] Divider -> Divider
    int Divider_android_orientation -> Divider_android_orientation
    int[] ExpandableListView -> ExpandableListView
    int ExpandableListView_android_childDivider -> ExpandableListView_android_childDivider
    int ExpandableListView_android_childIndicator -> ExpandableListView_android_childIndicator
    int ExpandableListView_android_childIndicatorLeft -> ExpandableListView_android_childIndicatorLeft
    int ExpandableListView_android_childIndicatorRight -> ExpandableListView_android_childIndicatorRight
    int ExpandableListView_android_groupIndicator -> ExpandableListView_android_groupIndicator
    int ExpandableListView_android_indicatorLeft -> ExpandableListView_android_indicatorLeft
    int ExpandableListView_android_indicatorRight -> ExpandableListView_android_indicatorRight
    int[] FastScroll -> FastScroll
    int FastScroll_fastScrollOverlayPosition -> FastScroll_fastScrollOverlayPosition
    int FastScroll_fastScrollPreviewBackgroundLeft -> FastScroll_fastScrollPreviewBackgroundLeft
    int FastScroll_fastScrollPreviewBackgroundRight -> FastScroll_fastScrollPreviewBackgroundRight
    int FastScroll_fastScrollTextColor -> FastScroll_fastScrollTextColor
    int FastScroll_fastScrollThumbDrawable -> FastScroll_fastScrollThumbDrawable
    int FastScroll_fastScrollTrackDrawable -> FastScroll_fastScrollTrackDrawable
    int[] IconMenuView -> IconMenuView
    int IconMenuView_android_maxItems -> IconMenuView_android_maxItems
    int IconMenuView_android_maxItemsPerRow -> IconMenuView_android_maxItemsPerRow
    int IconMenuView_android_maxRows -> IconMenuView_android_maxRows
    int IconMenuView_android_moreIcon -> IconMenuView_android_moreIcon
    int IconMenuView_android_rowHeight -> IconMenuView_android_rowHeight
    int[] LayerDrawable -> LayerDrawable
    int[] LayerDrawableItem -> LayerDrawableItem
    int LayerDrawableItem_android_bottom -> LayerDrawableItem_android_bottom
    int LayerDrawableItem_android_drawable -> LayerDrawableItem_android_drawable
    int LayerDrawableItem_android_id -> LayerDrawableItem_android_id
    int LayerDrawableItem_android_left -> LayerDrawableItem_android_left
    int LayerDrawableItem_android_right -> LayerDrawableItem_android_right
    int LayerDrawableItem_android_top -> LayerDrawableItem_android_top
    int LayerDrawable_android_opacity -> LayerDrawable_android_opacity
    int[] LinearLayout -> LinearLayout
    int LinearLayout_android_baselineAligned -> LinearLayout_android_baselineAligned
    int LinearLayout_android_baselineAlignedChildIndex -> LinearLayout_android_baselineAlignedChildIndex
    int LinearLayout_android_divider -> LinearLayout_android_divider
    int LinearLayout_android_dividerPadding -> LinearLayout_android_dividerPadding
    int LinearLayout_android_gravity -> LinearLayout_android_gravity
    int LinearLayout_android_measureWithLargestChild -> LinearLayout_android_measureWithLargestChild
    int LinearLayout_android_orientation -> LinearLayout_android_orientation
    int LinearLayout_android_showDividers -> LinearLayout_android_showDividers
    int LinearLayout_android_weightSum -> LinearLayout_android_weightSum
    int[] MenuGroup -> MenuGroup
    int MenuGroup_android_checkableBehavior -> MenuGroup_android_checkableBehavior
    int MenuGroup_android_enabled -> MenuGroup_android_enabled
    int MenuGroup_android_id -> MenuGroup_android_id
    int MenuGroup_android_menuCategory -> MenuGroup_android_menuCategory
    int MenuGroup_android_orderInCategory -> MenuGroup_android_orderInCategory
    int MenuGroup_android_visible -> MenuGroup_android_visible
    int[] MenuItem -> MenuItem
    int MenuItem_android_actionLayout -> MenuItem_android_actionLayout
    int MenuItem_android_actionProviderClass -> MenuItem_android_actionProviderClass
    int MenuItem_android_actionViewClass -> MenuItem_android_actionViewClass
    int MenuItem_android_alphabeticShortcut -> MenuItem_android_alphabeticShortcut
    int MenuItem_android_checkable -> MenuItem_android_checkable
    int MenuItem_android_checked -> MenuItem_android_checked
    int MenuItem_android_enabled -> MenuItem_android_enabled
    int MenuItem_android_icon -> MenuItem_android_icon
    int MenuItem_android_id -> MenuItem_android_id
    int MenuItem_android_menuCategory -> MenuItem_android_menuCategory
    int MenuItem_android_numericShortcut -> MenuItem_android_numericShortcut
    int MenuItem_android_onClick -> MenuItem_android_onClick
    int MenuItem_android_orderInCategory -> MenuItem_android_orderInCategory
    int MenuItem_android_showAsAction -> MenuItem_android_showAsAction
    int MenuItem_android_title -> MenuItem_android_title
    int MenuItem_android_titleCondensed -> MenuItem_android_titleCondensed
    int MenuItem_android_visible -> MenuItem_android_visible
    int[] MenuView -> MenuView
    int MenuView_android_headerBackground -> MenuView_android_headerBackground
    int MenuView_android_horizontalDivider -> MenuView_android_horizontalDivider
    int MenuView_android_itemBackground -> MenuView_android_itemBackground
    int MenuView_android_itemIconDisabledAlpha -> MenuView_android_itemIconDisabledAlpha
    int MenuView_android_itemTextAppearance -> MenuView_android_itemTextAppearance
    int MenuView_android_preserveIconSpacing -> MenuView_android_preserveIconSpacing
    int MenuView_android_verticalDivider -> MenuView_android_verticalDivider
    int MenuView_android_windowAnimationStyle -> MenuView_android_windowAnimationStyle
    int[] NumberPicker -> NumberPicker
    int NumberPicker_android_fadingEdgeLength -> NumberPicker_android_fadingEdgeLength
    int NumberPicker_android_layout -> NumberPicker_android_layout
    int NumberPicker_android_maxHeight -> NumberPicker_android_maxHeight
    int NumberPicker_android_maxWidth -> NumberPicker_android_maxWidth
    int NumberPicker_android_minHeight -> NumberPicker_android_minHeight
    int NumberPicker_android_minWidth -> NumberPicker_android_minWidth
    int NumberPicker_android_orientation -> NumberPicker_android_orientation
    int NumberPicker_flingable -> NumberPicker_flingable
    int NumberPicker_selectionDivider -> NumberPicker_selectionDivider
    int NumberPicker_selectionDividerHeight -> NumberPicker_selectionDividerHeight
    int NumberPicker_selectionDividersDistance -> NumberPicker_selectionDividersDistance
    int NumberPicker_solidColor -> NumberPicker_solidColor
    int NumberPicker_virtualButtonPressedDrawable -> NumberPicker_virtualButtonPressedDrawable
    int[] PopupWindow -> PopupWindow
    int PopupWindow_android_popupAnimationStyle -> PopupWindow_android_popupAnimationStyle
    int PopupWindow_android_popupBackground -> PopupWindow_android_popupBackground
    int[] ProgressBar -> ProgressBar
    int ProgressBar_android_indeterminate -> ProgressBar_android_indeterminate
    int ProgressBar_android_indeterminateBehavior -> ProgressBar_android_indeterminateBehavior
    int ProgressBar_android_indeterminateDrawable -> ProgressBar_android_indeterminateDrawable
    int ProgressBar_android_indeterminateDuration -> ProgressBar_android_indeterminateDuration
    int ProgressBar_android_indeterminateOnly -> ProgressBar_android_indeterminateOnly
    int ProgressBar_android_interpolator -> ProgressBar_android_interpolator
    int ProgressBar_android_max -> ProgressBar_android_max
    int ProgressBar_android_maxHeight -> ProgressBar_android_maxHeight
    int ProgressBar_android_maxWidth -> ProgressBar_android_maxWidth
    int ProgressBar_android_minHeight -> ProgressBar_android_minHeight
    int ProgressBar_android_minWidth -> ProgressBar_android_minWidth
    int ProgressBar_android_progress -> ProgressBar_android_progress
    int ProgressBar_android_progressDrawable -> ProgressBar_android_progressDrawable
    int ProgressBar_android_secondaryProgress -> ProgressBar_android_secondaryProgress
    int[] RotateDrawable -> RotateDrawable
    int RotateDrawable_android_drawable -> RotateDrawable_android_drawable
    int RotateDrawable_android_fromDegrees -> RotateDrawable_android_fromDegrees
    int RotateDrawable_android_pivotX -> RotateDrawable_android_pivotX
    int RotateDrawable_android_pivotY -> RotateDrawable_android_pivotY
    int RotateDrawable_android_toDegrees -> RotateDrawable_android_toDegrees
    int RotateDrawable_android_visible -> RotateDrawable_android_visible
    int[] SearchView -> SearchView
    int SearchView_android_imeOptions -> SearchView_android_imeOptions
    int SearchView_android_inputType -> SearchView_android_inputType
    int SearchView_android_maxWidth -> SearchView_android_maxWidth
    int SearchView_iconifiedByDefault -> SearchView_iconifiedByDefault
    int SearchView_queryHint -> SearchView_queryHint
    int[] SeekBar -> SeekBar
    int SeekBar_android_disabledAlpha -> SeekBar_android_disabledAlpha
    int SeekBar_android_thumb -> SeekBar_android_thumb
    int SeekBar_android_thumbOffset -> SeekBar_android_thumbOffset
    int[] Spinner -> Spinner
    int Spinner_android_dropDownSelector -> Spinner_android_dropDownSelector
    int Spinner_android_dropDownWidth -> Spinner_android_dropDownWidth
    int Spinner_android_gravity -> Spinner_android_gravity
    int Spinner_android_popupBackground -> Spinner_android_popupBackground
    int Spinner_android_prompt -> Spinner_android_prompt
    int Spinner_disableChildrenWhenDisabled -> Spinner_disableChildrenWhenDisabled
    int Spinner_dropDownHorizontalOffset -> Spinner_dropDownHorizontalOffset
    int Spinner_dropDownVerticalOffset -> Spinner_dropDownVerticalOffset
    int Spinner_popupPromptView -> Spinner_popupPromptView
    int Spinner_spinnerMode -> Spinner_spinnerMode
    int[] StateListDrawable -> StateListDrawable
    int StateListDrawable_android_constantSize -> StateListDrawable_android_constantSize
    int StateListDrawable_android_dither -> StateListDrawable_android_dither
    int StateListDrawable_android_enterFadeDuration -> StateListDrawable_android_enterFadeDuration
    int StateListDrawable_android_exitFadeDuration -> StateListDrawable_android_exitFadeDuration
    int StateListDrawable_android_variablePadding -> StateListDrawable_android_variablePadding
    int StateListDrawable_android_visible -> StateListDrawable_android_visible
    int[] Switch -> Switch
    int Switch_switchMinWidth -> Switch_switchMinWidth
    int Switch_switchPadding -> Switch_switchPadding
    int Switch_switchTextAppearance -> Switch_switchTextAppearance
    int Switch_textOff -> Switch_textOff
    int Switch_textOn -> Switch_textOn
    int Switch_thumb -> Switch_thumb
    int Switch_thumbTextPadding -> Switch_thumbTextPadding
    int Switch_toggleWhenClick -> Switch_toggleWhenClick
    int Switch_track -> Switch_track
    int[] TextAppearance -> TextAppearance
    int TextAppearance_android_fontFamily -> TextAppearance_android_fontFamily
    int TextAppearance_android_textAllCaps -> TextAppearance_android_textAllCaps
    int TextAppearance_android_textColor -> TextAppearance_android_textColor
    int TextAppearance_android_textColorHighlight -> TextAppearance_android_textColorHighlight
    int TextAppearance_android_textColorHint -> TextAppearance_android_textColorHint
    int TextAppearance_android_textColorLink -> TextAppearance_android_textColorLink
    int TextAppearance_android_textSize -> TextAppearance_android_textSize
    int TextAppearance_android_textStyle -> TextAppearance_android_textStyle
    int TextAppearance_android_typeface -> TextAppearance_android_typeface
    int[] TextView -> TextView
    int TextView_android_textAppearance -> TextView_android_textAppearance
    int[] Theme -> Theme
    int Theme_actionDropDownStyle -> Theme_actionDropDownStyle
    int Theme_dropdownListPreferredItemHeight -> Theme_dropdownListPreferredItemHeight
    int Theme_listChoiceBackgroundIndicator -> Theme_listChoiceBackgroundIndicator
    int Theme_panelMenuListTheme -> Theme_panelMenuListTheme
    int Theme_panelMenuListWidth -> Theme_panelMenuListWidth
    int Theme_popupMenuStyle -> Theme_popupMenuStyle
    int[] View -> View
    int View_android_focusable -> View_android_focusable
    int View_paddingEnd -> View_paddingEnd
    int View_paddingStart -> View_paddingStart
    int[] WindowSizes -> WindowSizes
    int WindowSizes_windowFixedHeightMajor -> WindowSizes_windowFixedHeightMajor
    int WindowSizes_windowFixedHeightMinor -> WindowSizes_windowFixedHeightMinor
    int WindowSizes_windowFixedWidthMajor -> WindowSizes_windowFixedWidthMajor
    int WindowSizes_windowFixedWidthMinor -> WindowSizes_windowFixedWidthMinor
    int WindowSizes_windowMinHeightMajor -> WindowSizes_windowMinHeightMajor
    int WindowSizes_windowMinHeightMinor -> WindowSizes_windowMinHeightMinor
    int WindowSizes_windowMinWidthMajor -> WindowSizes_windowMinWidthMajor
    int WindowSizes_windowMinWidthMinor -> WindowSizes_windowMinWidthMinor
org.holoeverywhere.SystemServiceManager -> org.holoeverywhere.SystemServiceManager:
    java.util.Map CREATORS_MAP -> a
    java.util.Map MAP -> b
    java.lang.Object getSuperSystemService(android.content.Context,java.lang.String) -> b
    java.lang.Object getSystemService(android.content.Context,java.lang.String) -> a
    void register(java.lang.Class) -> a
org.holoeverywhere.SystemServiceManager$SuperSystemService -> org.holoeverywhere.SystemServiceManager$SuperSystemService:
    java.lang.Object superGetSystemService(java.lang.String) -> superGetSystemService
org.holoeverywhere.SystemServiceManager$SystemServiceCreator -> org.holoeverywhere.SystemServiceManager$SystemServiceCreator:
    java.lang.Object createService(android.content.Context) -> b
org.holoeverywhere.SystemServiceManager$SystemServiceCreator$SystemService -> org.holoeverywhere.SystemServiceManager$SystemServiceCreator$SystemService:
    java.lang.String value() -> a
org.holoeverywhere.ThemeManager -> org.holoeverywhere.ThemeManager:
    int COLOR_SCHEME_MASK -> a
    int ALERT_DIALOG -> b
    int DARK -> c
    int DIALOG -> d
    int DIALOG_WHEN_LARGE -> e
    int FULLSCREEN -> f
    int LIGHT -> g
    int MIXED -> h
    int NO_ACTION_BAR -> i
    int WALLPAPER -> j
    android.util.SparseIntArray _THEMES_MAP -> k
    int _DEFAULT_THEME -> l
    java.util.List sThemeGetters -> m
    int _THEME_MASK -> n
    int _THEME_MODIFIER -> o
    int NEXT_OFFSET -> p
    java.util.List sThemeSetters -> q
    void applyTheme(org.holoeverywhere.app.Activity,boolean) -> a
    void cloneTheme(android.content.Intent,android.content.Intent,boolean) -> a
    int getDefaultTheme() -> a
    int getTheme(org.holoeverywhere.app.Activity) -> a
    int getTheme(android.content.Intent) -> a
    int getTheme(android.content.Intent,boolean) -> a
    int getThemeMask() -> b
    int getThemeResource(int) -> a
    int getThemeResource(int,boolean) -> a
    int getThemeType(android.content.Context) -> a
    boolean hasSpecifiedTheme(org.holoeverywhere.app.Activity) -> b
    boolean hasSpecifiedTheme(android.content.Intent) -> b
    boolean is(int,int) -> b
    boolean isAlertDialog(int) -> b
    boolean isDark(int) -> c
    boolean isDialog(int) -> d
    boolean isDialogWhenLarge(int) -> e
    boolean isFullScreen(int) -> f
    boolean isLight(int) -> g
    boolean isMixed(int) -> h
    boolean isNoActionBar(int) -> i
    boolean isWallpaper(int) -> j
    int makeNewFlag() -> c
    void map(int,int) -> a
    int prepareFlags(int,boolean) -> b
    void registerThemeSetter(org.holoeverywhere.ThemeManager$ThemeSetter) -> a
    void reset() -> d
    void startActivity(android.content.Context,android.content.Intent,android.os.Bundle) -> a
    void startActivity(android.content.Context,android.content.Intent,int,android.os.Bundle) -> a
    int getParentColorScheme(android.content.Intent) -> c
org.holoeverywhere.ThemeManager$1 -> org.holoeverywhere.ThemeManager$1:
org.holoeverywhere.ThemeManager$SuperStartActivity -> org.holoeverywhere.ThemeManager$SuperStartActivity:
    void superStartActivity(android.content.Intent,int,android.os.Bundle) -> superStartActivity
org.holoeverywhere.ThemeManager$ThemeGetter -> org.holoeverywhere.ThemeManager$ThemeGetter:
    int getThemeResource(org.holoeverywhere.ThemeManager$ThemeGetter$ThemeTag) -> a
org.holoeverywhere.ThemeManager$ThemeGetter$ThemeTag -> org.holoeverywhere.ThemeManager$ThemeGetter$ThemeTag:
    boolean dark -> a
    boolean fullscreen -> b
    boolean light -> c
    boolean mixed -> d
    boolean noActionBar -> e
    boolean wallpaper -> f
    boolean dialog -> g
    boolean dialogWhenLarge -> h
    boolean alertDialog -> i
    int flags -> j
org.holoeverywhere.ThemeManager$ThemeSetter -> org.holoeverywhere.ThemeManager$ThemeSetter:
    void setupThemes() -> a
org.holoeverywhere.addon.Addons -> org.holoeverywhere.addon.Addons:
    java.lang.Class[] value() -> a
org.holoeverywhere.addon.IAddon -> org.holoeverywhere.addon.IAddon:
    java.util.Map sAddonsMap -> a
    java.util.Map mStatesMap -> b
    java.util.Map mTypesMap -> c
    org.holoeverywhere.addon.IAddon addon(java.lang.Class) -> a
    org.holoeverywhere.addon.IAddonBase obtain(java.lang.Class,java.lang.Object) -> a
    org.holoeverywhere.addon.IAddonBase obtain(java.lang.Object) -> a
org.holoeverywhere.addon.IAddon$Addon -> org.holoeverywhere.addon.IAddon$Addon:
    java.lang.Class[] conflict() -> a
    java.lang.String[] conflictStrings() -> b
    boolean inhert() -> c
    int weight() -> d
org.holoeverywhere.addon.IAddonActivity -> org.holoeverywhere.addon.IAddonActivity:
    boolean closeOptionsMenu() -> a
    boolean dispatchKeyEvent(android.view.KeyEvent) -> a
    android.view.View findViewById(int) -> a
    boolean installDecorView(android.view.View,android.view.ViewGroup$LayoutParams) -> a
    boolean invalidateOptionsMenu() -> b
    void onActivityResult(int,int,android.content.Intent) -> a
    void onConfigurationChanged(android.content.res.Configuration,android.content.res.Configuration) -> a
    void onContentChanged() -> c
    void onCreate(android.os.Bundle) -> a
    void onDestroy() -> d
    boolean onNavigateUp() -> e
    void onNewIntent(android.content.Intent) -> a
    void onPanelClosed(int,android.view.Menu) -> a
    void onPause() -> f
    void onPostCreate(android.os.Bundle) -> b
    void onPostResume() -> g
    void onPreCreate(android.os.Bundle) -> c
    boolean onPreparePanel(int,android.view.View,android.view.Menu) -> a
    void onRestart() -> h
    void onResume() -> i
    void onSaveInstanceState(android.os.Bundle) -> d
    void onStart() -> j
    void onStop() -> k
    void onTitleChanged(java.lang.CharSequence,int) -> a
    boolean openOptionsMenu() -> l
    boolean requestWindowFeature(int) -> b
org.holoeverywhere.addon.IAddonApplication -> org.holoeverywhere.addon.IAddonApplication:
    void onCreate() -> a
    void onPreCreate() -> b
org.holoeverywhere.addon.IAddonAttacher -> org.holoeverywhere.addon.IAddonAttacher:
    org.holoeverywhere.addon.IAddonBase addon(java.lang.Class) -> a
    void lockAttaching() -> f
    java.util.Collection obtainAddonsList() -> g
    boolean performAddonAction(org.holoeverywhere.addon.IAddonAttacher$AddonCallback) -> a
org.holoeverywhere.addon.IAddonAttacher$AddonCallback -> org.holoeverywhere.addon.IAddonAttacher$AddonCallback:
    boolean action(java.lang.Object) -> action
    void justAction(java.lang.Object) -> justAction
    void justPost() -> justPost
    boolean post() -> post
org.holoeverywhere.addon.IAddonAttacher$AttachException -> org.holoeverywhere.addon.IAddonAttacher$AttachException:
    org.holoeverywhere.addon.IAddonAttacher$AttachException afterInit(java.lang.Object,java.lang.Class) -> a
    org.holoeverywhere.addon.IAddonAttacher$AttachException conflict(java.lang.String) -> a
org.holoeverywhere.addon.IAddonBase -> org.holoeverywhere.addon.IAddonBase:
    java.lang.Object mObject -> a
    org.holoeverywhere.addon.IAddon mParent -> b
    void attach(java.lang.Object,org.holoeverywhere.addon.IAddon) -> a
    org.holoeverywhere.addon.IAddon getParent() -> m
    void onAttach(java.lang.Object) -> a
org.holoeverywhere.addon.IAddonBasicAttacher -> org.holoeverywhere.addon.IAddonBasicAttacher:
    java.util.Map mAddons -> a
    java.util.Set mAddonsSet -> b
    java.util.List mAddonsList -> c
    boolean mLockAttaching -> d
    java.lang.Object mObject -> e
    void attachAnnotations(org.holoeverywhere.addon.IAddonAttacher) -> a
    org.holoeverywhere.addon.IAddonBase addon(java.lang.Class) -> a
    org.holoeverywhere.addon.IAddonBase addon(java.lang.Class,boolean) -> a
    void addon(java.util.Collection) -> a
    void checkConflicts() -> a
    void inhert(java.util.Collection) -> b
    void inhert(org.holoeverywhere.addon.IAddonAttacher) -> b
    void lockAttaching() -> f
    java.util.Collection obtainAddonsList() -> g
    boolean performAddonAction(org.holoeverywhere.addon.IAddonAttacher$AddonCallback) -> a
org.holoeverywhere.addon.IAddonBasicAttacher$1 -> org.holoeverywhere.addon.IAddonBasicAttacher$1:
org.holoeverywhere.addon.IAddonBasicAttacher$AddonComparator -> org.holoeverywhere.addon.IAddonBasicAttacher$AddonComparator:
    org.holoeverywhere.addon.IAddonBasicAttacher this$0 -> a
    int compare(org.holoeverywhere.addon.IAddonBase,org.holoeverywhere.addon.IAddonBase) -> a
    int getWeight(org.holoeverywhere.addon.IAddon) -> a
    int compare(java.lang.Object,java.lang.Object) -> compare
org.holoeverywhere.addon.IAddonFragment -> org.holoeverywhere.addon.IAddonFragment:
    void onCreate(android.os.Bundle) -> a
    void onDestroyView() -> a
    void onPreCreate(android.os.Bundle) -> b
    void onViewCreated(android.view.View,android.os.Bundle) -> a
org.holoeverywhere.addon.IAddonThemes -> org.holoeverywhere.addon.IAddonThemes:
    org.holoeverywhere.addon.IAddonThemes$ThemeResolver mDefaultThemeResolver -> a
    int mThemeFlag -> b
    java.util.Map mContexts -> c
    int mDarkTheme -> d
    int mLightTheme -> e
    int mMixedTheme -> f
    android.content.Context context(android.content.Context,int,org.holoeverywhere.addon.IAddonThemes$ThemeResolver) -> a
    int getThemeFlag() -> b
    void map(int,int,int) -> a
    void setupThemes() -> a
    android.content.Context unwrap(android.content.Context) -> a
    int access$000(org.holoeverywhere.addon.IAddonThemes) -> a
org.holoeverywhere.addon.IAddonThemes$1 -> org.holoeverywhere.addon.IAddonThemes$1:
    org.holoeverywhere.addon.IAddonThemes this$0 -> a
    int resolveThemeForContext(android.content.Context,int) -> a
org.holoeverywhere.addon.IAddonThemes$AddonThemeWrapper -> org.holoeverywhere.addon.IAddonThemes$AddonThemeWrapper:
org.holoeverywhere.addon.IAddonThemes$ThemeResolver -> org.holoeverywhere.addon.IAddonThemes$ThemeResolver:
    int resolveThemeForContext(android.content.Context,int) -> a
org.holoeverywhere.app.Activity -> org.holoeverywhere.app.Activity:
    org.holoeverywhere.addon.IAddonBasicAttacher mAttacher -> a
    org.holoeverywhere.app.Activity$FindViewAction mFindViewAction -> b
    org.holoeverywhere.app.Activity$KeyEventAction mKeyEventAction -> c
    boolean mCreatedByThemeManager -> d
    org.holoeverywhere.addon.IAddonActivity addon(java.lang.Class) -> b
    void closeOptionsMenu() -> closeOptionsMenu
    boolean dispatchKeyEvent(android.view.KeyEvent) -> dispatchKeyEvent
    android.view.View findViewById(int) -> findViewById
    android.os.Bundle instanceState(android.os.Bundle) -> a
    void lockAttaching() -> f
    java.util.Collection obtainAddonsList() -> g
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    void onSupportContentChanged() -> onSupportContentChanged
    void onCreate(android.os.Bundle) -> onCreate
    void onDestroy() -> onDestroy
    boolean onSupportNavigateUp() -> onSupportNavigateUp
    void onNewIntent(android.content.Intent) -> onNewIntent
    void onPanelClosed(int,android.view.Menu) -> onPanelClosed
    void onPause() -> onPause
    void onPostCreate(android.os.Bundle) -> onPostCreate
    void onPostInit(android.support.v4.app._HoloActivity$Holo,android.os.Bundle) -> onPostInit
    void onPostResume() -> onPostResume
    void onPreInit(android.support.v4.app._HoloActivity$Holo,android.os.Bundle) -> onPreInit
    boolean onPreparePanel(int,android.view.View,android.view.Menu) -> onPreparePanel
    void onRestart() -> onRestart
    void onResume() -> onResume
    void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    void onStart() -> onStart
    void onStop() -> onStop
    void onTitleChanged(java.lang.CharSequence,int) -> onTitleChanged
    void openOptionsMenu() -> openOptionsMenu
    boolean performAddonAction(org.holoeverywhere.addon.IAddonAttacher$AddonCallback) -> a
    void requestWindowFeature(long) -> requestWindowFeature
    void supportInvalidateOptionsMenu() -> supportInvalidateOptionsMenu
    org.holoeverywhere.addon.IAddonBase addon(java.lang.Class) -> a
    void access$201(org.holoeverywhere.app.Activity) -> a
    boolean access$601(org.holoeverywhere.app.Activity) -> b
    boolean access$701(org.holoeverywhere.app.Activity,int,android.view.View,android.view.Menu) -> a
    void access$801(org.holoeverywhere.app.Activity) -> c
    void access$901(org.holoeverywhere.app.Activity) -> d
    boolean access$1001(org.holoeverywhere.app.Activity,android.view.KeyEvent) -> a
org.holoeverywhere.app.Activity$1 -> org.holoeverywhere.app.Activity$1:
    org.holoeverywhere.app.Activity this$0 -> a
    boolean action(org.holoeverywhere.addon.IAddonActivity) -> a
    void justPost() -> justPost
    boolean action(java.lang.Object) -> action
org.holoeverywhere.app.Activity$10 -> org.holoeverywhere.app.Activity$10:
    int val$featureId -> a
    android.view.Menu val$menu -> b
    org.holoeverywhere.app.Activity this$0 -> c
    void justAction(org.holoeverywhere.addon.IAddonActivity) -> a
    void justAction(java.lang.Object) -> justAction
org.holoeverywhere.app.Activity$11 -> org.holoeverywhere.app.Activity$11:
    org.holoeverywhere.app.Activity this$0 -> a
    void justAction(org.holoeverywhere.addon.IAddonActivity) -> a
    void justAction(java.lang.Object) -> justAction
org.holoeverywhere.app.Activity$12 -> org.holoeverywhere.app.Activity$12:
    android.os.Bundle val$savedInstanceState -> a
    org.holoeverywhere.app.Activity this$0 -> b
    void justAction(org.holoeverywhere.addon.IAddonActivity) -> a
    void justAction(java.lang.Object) -> justAction
org.holoeverywhere.app.Activity$13 -> org.holoeverywhere.app.Activity$13:
    org.holoeverywhere.app.Activity this$0 -> a
    void justAction(org.holoeverywhere.addon.IAddonActivity) -> a
    void justAction(java.lang.Object) -> justAction
org.holoeverywhere.app.Activity$14 -> org.holoeverywhere.app.Activity$14:
    int val$featureId -> a
    android.view.View val$view -> b
    android.view.Menu val$menu -> c
    org.holoeverywhere.app.Activity this$0 -> d
    boolean action(org.holoeverywhere.addon.IAddonActivity) -> a
    boolean post() -> post
    boolean action(java.lang.Object) -> action
org.holoeverywhere.app.Activity$15 -> org.holoeverywhere.app.Activity$15:
    org.holoeverywhere.app.Activity this$0 -> a
    void justAction(org.holoeverywhere.addon.IAddonActivity) -> a
    void justAction(java.lang.Object) -> justAction
org.holoeverywhere.app.Activity$16 -> org.holoeverywhere.app.Activity$16:
    org.holoeverywhere.app.Activity this$0 -> a
    void justAction(org.holoeverywhere.addon.IAddonActivity) -> a
    void justAction(java.lang.Object) -> justAction
org.holoeverywhere.app.Activity$17 -> org.holoeverywhere.app.Activity$17:
    android.os.Bundle val$outState -> a
    org.holoeverywhere.app.Activity this$0 -> b
    void justAction(org.holoeverywhere.addon.IAddonActivity) -> a
    void justAction(java.lang.Object) -> justAction
org.holoeverywhere.app.Activity$18 -> org.holoeverywhere.app.Activity$18:
    org.holoeverywhere.app.Activity this$0 -> a
    void justAction(org.holoeverywhere.addon.IAddonActivity) -> a
    void justAction(java.lang.Object) -> justAction
org.holoeverywhere.app.Activity$19 -> org.holoeverywhere.app.Activity$19:
    org.holoeverywhere.app.Activity this$0 -> a
    void justAction(org.holoeverywhere.addon.IAddonActivity) -> a
    void justAction(java.lang.Object) -> justAction
org.holoeverywhere.app.Activity$2 -> org.holoeverywhere.app.Activity$2:
    int val$requestCode -> a
    int val$resultCode -> b
    android.content.Intent val$data -> c
    org.holoeverywhere.app.Activity this$0 -> d
    void justAction(org.holoeverywhere.addon.IAddonActivity) -> a
    void justAction(java.lang.Object) -> justAction
org.holoeverywhere.app.Activity$20 -> org.holoeverywhere.app.Activity$20:
    java.lang.CharSequence val$title -> a
    int val$color -> b
    org.holoeverywhere.app.Activity this$0 -> c
    void justAction(org.holoeverywhere.addon.IAddonActivity) -> a
    void justAction(java.lang.Object) -> justAction
org.holoeverywhere.app.Activity$21 -> org.holoeverywhere.app.Activity$21:
    org.holoeverywhere.app.Activity this$0 -> a
    boolean action(org.holoeverywhere.addon.IAddonActivity) -> a
    void justPost() -> justPost
    boolean action(java.lang.Object) -> action
org.holoeverywhere.app.Activity$22 -> org.holoeverywhere.app.Activity$22:
    int val$featureId -> a
    org.holoeverywhere.app.Activity this$0 -> b
    boolean action(org.holoeverywhere.addon.IAddonActivity) -> a
    void justPost() -> justPost
    boolean action(java.lang.Object) -> action
org.holoeverywhere.app.Activity$23 -> org.holoeverywhere.app.Activity$23:
    org.holoeverywhere.app.Activity this$0 -> a
    boolean action(org.holoeverywhere.addon.IAddonActivity) -> a
    void justPost() -> justPost
    boolean action(java.lang.Object) -> action
org.holoeverywhere.app.Activity$3 -> org.holoeverywhere.app.Activity$3:
    android.content.res.Configuration val$oldConfig -> a
    android.content.res.Configuration val$newConfig -> b
    org.holoeverywhere.app.Activity this$0 -> c
    void justAction(org.holoeverywhere.addon.IAddonActivity) -> a
    void justAction(java.lang.Object) -> justAction
org.holoeverywhere.app.Activity$4 -> org.holoeverywhere.app.Activity$4:
    org.holoeverywhere.app.Activity this$0 -> a
    void justAction(org.holoeverywhere.addon.IAddonActivity) -> a
    void justAction(java.lang.Object) -> justAction
org.holoeverywhere.app.Activity$5 -> org.holoeverywhere.app.Activity$5:
    android.os.Bundle val$state -> a
    org.holoeverywhere.app.Activity this$0 -> b
    void justAction(org.holoeverywhere.addon.IAddonActivity) -> a
    void justAction(java.lang.Object) -> justAction
org.holoeverywhere.app.Activity$6 -> org.holoeverywhere.app.Activity$6:
    android.os.Bundle val$state -> a
    org.holoeverywhere.app.Activity this$0 -> b
    void justAction(org.holoeverywhere.addon.IAddonActivity) -> a
    void justAction(java.lang.Object) -> justAction
org.holoeverywhere.app.Activity$7 -> org.holoeverywhere.app.Activity$7:
    org.holoeverywhere.app.Activity this$0 -> a
    void justAction(org.holoeverywhere.addon.IAddonActivity) -> a
    void justAction(java.lang.Object) -> justAction
org.holoeverywhere.app.Activity$8 -> org.holoeverywhere.app.Activity$8:
    org.holoeverywhere.app.Activity this$0 -> a
    boolean action(org.holoeverywhere.addon.IAddonActivity) -> a
    boolean post() -> post
    boolean action(java.lang.Object) -> action
org.holoeverywhere.app.Activity$9 -> org.holoeverywhere.app.Activity$9:
    android.content.Intent val$intent -> a
    org.holoeverywhere.app.Activity this$0 -> b
    void justAction(org.holoeverywhere.addon.IAddonActivity) -> a
    void justAction(java.lang.Object) -> justAction
org.holoeverywhere.app.Activity$FindViewAction -> org.holoeverywhere.app.Activity$FindViewAction:
    int mId -> b
    android.view.View mView -> c
    org.holoeverywhere.app.Activity this$0 -> a
    boolean action(org.holoeverywhere.addon.IAddonActivity) -> a
    boolean post() -> post
    boolean action(java.lang.Object) -> action
    android.view.View access$402(org.holoeverywhere.app.Activity$FindViewAction,android.view.View) -> a
    int access$502(org.holoeverywhere.app.Activity$FindViewAction,int) -> a
    android.view.View access$400(org.holoeverywhere.app.Activity$FindViewAction) -> a
org.holoeverywhere.app.Activity$KeyEventAction -> org.holoeverywhere.app.Activity$KeyEventAction:
    android.view.KeyEvent mEvent -> b
    org.holoeverywhere.app.Activity this$0 -> a
    boolean action(org.holoeverywhere.addon.IAddonActivity) -> a
    boolean post() -> post
    boolean action(java.lang.Object) -> action
    android.view.KeyEvent access$302(org.holoeverywhere.app.Activity$KeyEventAction,android.view.KeyEvent) -> a
org.holoeverywhere.app.AlertDialog -> org.holoeverywhere.app.AlertDialog:
    org.holoeverywhere.widget.AlertController mAlert -> a
    int resolveDialogTheme(android.content.Context,int) -> a
    org.holoeverywhere.widget.Button getButton(int) -> a
    void installDecorView(android.content.Context,int) -> b
    void onCreate(android.os.Bundle) -> onCreate
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    boolean onKeyUp(int,android.view.KeyEvent) -> onKeyUp
    void setTitle(java.lang.CharSequence) -> setTitle
    org.holoeverywhere.widget.AlertController access$000(org.holoeverywhere.app.AlertDialog) -> a
org.holoeverywhere.app.AlertDialog$Builder -> org.holoeverywhere.app.AlertDialog$Builder:
    java.lang.Class[] CONSTRUCTOR_SIGNATURE -> a
    java.lang.Class mDialogClass -> b
    org.holoeverywhere.widget.AlertController$AlertParams mParams -> c
    org.holoeverywhere.app.AlertDialog create() -> a
    android.content.Context getContext() -> b
    org.holoeverywhere.app.AlertDialog$Builder setAdapter(android.widget.ListAdapter,android.content.DialogInterface$OnClickListener) -> a
    org.holoeverywhere.app.AlertDialog$Builder setCustomTitle(android.view.View) -> a
    org.holoeverywhere.app.AlertDialog$Builder setIcon(android.graphics.drawable.Drawable) -> a
    org.holoeverywhere.app.AlertDialog$Builder setItems(java.lang.CharSequence[],android.content.DialogInterface$OnClickListener) -> a
    org.holoeverywhere.app.AlertDialog$Builder setMessage(java.lang.CharSequence) -> a
    org.holoeverywhere.app.AlertDialog$Builder setMessage(int) -> a
    org.holoeverywhere.app.AlertDialog$Builder setMultiChoiceItems(java.lang.CharSequence[],boolean[],android.content.DialogInterface$OnMultiChoiceClickListener) -> a
    org.holoeverywhere.app.AlertDialog$Builder setNegativeButton(java.lang.CharSequence,android.content.DialogInterface$OnClickListener) -> a
    org.holoeverywhere.app.AlertDialog$Builder setNegativeButton(int,android.content.DialogInterface$OnClickListener) -> a
    org.holoeverywhere.app.AlertDialog$Builder setOnKeyListener(android.content.DialogInterface$OnKeyListener) -> a
    org.holoeverywhere.app.AlertDialog$Builder setPositiveButton(java.lang.CharSequence,android.content.DialogInterface$OnClickListener) -> b
    org.holoeverywhere.app.AlertDialog$Builder setPositiveButton(int,android.content.DialogInterface$OnClickListener) -> b
    org.holoeverywhere.app.AlertDialog$Builder setSingleChoiceItems(java.lang.CharSequence[],int,android.content.DialogInterface$OnClickListener) -> a
    org.holoeverywhere.app.AlertDialog$Builder setSingleChoiceItems(android.widget.ListAdapter,int,android.content.DialogInterface$OnClickListener) -> a
    org.holoeverywhere.app.AlertDialog$Builder setTitle(java.lang.CharSequence) -> b
    org.holoeverywhere.app.AlertDialog$Builder setTitle(int) -> b
    org.holoeverywhere.app.AlertDialog$Builder setView(android.view.View) -> b
    org.holoeverywhere.app.AlertDialog show() -> c
org.holoeverywhere.app.Application -> org.holoeverywhere.app.Application:
    org.holoeverywhere.app.Application sLastInstance -> a
    org.holoeverywhere.addon.IAddonBasicAttacher mAttacher -> b
    org.holoeverywhere.app.Application getLastInstance() -> a
    org.holoeverywhere.addon.IAddonApplication addon(java.lang.Class) -> b
    org.holoeverywhere.preference.SharedPreferences getSharedPreferences(java.lang.String,int) -> a
    java.lang.Object getSystemService(java.lang.String) -> getSystemService
    void lockAttaching() -> f
    java.util.Collection obtainAddonsList() -> g
    void onCreate() -> onCreate
    boolean performAddonAction(org.holoeverywhere.addon.IAddonAttacher$AddonCallback) -> a
    void startActivities(android.content.Intent[]) -> startActivities
    void startActivities(android.content.Intent[],android.os.Bundle) -> startActivities
    void startActivity(android.content.Intent) -> startActivity
    void startActivity(android.content.Intent,android.os.Bundle) -> startActivity
    android.content.SharedPreferences superGetSharedPreferences(java.lang.String,int) -> b
    java.lang.Object superGetSystemService(java.lang.String) -> superGetSystemService
    void superStartActivity(android.content.Intent,int,android.os.Bundle) -> superStartActivity
    android.content.SharedPreferences getSharedPreferences(java.lang.String,int) -> getSharedPreferences
    org.holoeverywhere.addon.IAddonBase addon(java.lang.Class) -> a
org.holoeverywhere.app.Application$1 -> org.holoeverywhere.app.Application$1:
    org.holoeverywhere.app.Application this$0 -> a
    void justAction(org.holoeverywhere.addon.IAddonApplication) -> a
    void justAction(java.lang.Object) -> justAction
org.holoeverywhere.app.Application$2 -> org.holoeverywhere.app.Application$2:
    org.holoeverywhere.app.Application this$0 -> a
    void justAction(org.holoeverywhere.addon.IAddonApplication) -> a
    void justAction(java.lang.Object) -> justAction
org.holoeverywhere.app.ContextThemeWrapperPlus -> org.holoeverywhere.app.ContextThemeWrapperPlus:
    int mTheme -> a
    java.lang.Object getSystemService(java.lang.String) -> getSystemService
    int getThemeResource() -> a
    void setTheme(int) -> setTheme
    java.lang.Object superGetSystemService(java.lang.String) -> superGetSystemService
org.holoeverywhere.app.Dialog -> org.holoeverywhere.app.Dialog:
    java.util.Map mContextMenuListeners -> a
    org.holoeverywhere.widget.WindowDecorView mDecorView -> b
    int checkTheme(android.content.Context,int) -> a
    void onContextMenuClosed(android.view.ContextMenu) -> onContextMenuClosed
    void addContentView(android.view.View,android.view.ViewGroup$LayoutParams) -> addContentView
    android.support.v7.internal.view.menu.ContextMenuListener getContextMenuListener(android.view.View) -> getContextMenuListener
    org.holoeverywhere.LayoutInflater getLayoutInflater() -> a
    void registerForContextMenu(android.view.View) -> registerForContextMenu
    void registerForContextMenu(android.view.View,android.support.v7.internal.view.menu.ContextMenuListener) -> a
    boolean requestDecorView(android.view.View,android.view.ViewGroup$LayoutParams,int) -> a
    void setCancelable(boolean) -> setCancelable
    void setContentView(int) -> setContentView
    void setContentView(android.view.View) -> setContentView
    void setContentView(android.view.View,android.view.ViewGroup$LayoutParams) -> setContentView
    void unregisterForContextMenu(android.view.View) -> unregisterForContextMenu
    android.view.LayoutInflater getLayoutInflater() -> getLayoutInflater
org.holoeverywhere.app.Dialog$DialogTitle -> org.holoeverywhere.app.Dialog$DialogTitle:
    void onMeasure(int,int) -> onMeasure
org.holoeverywhere.app.Fragment -> org.holoeverywhere.app.Fragment:
    org.holoeverywhere.addon.IAddonBasicAttacher mAttacher -> a
    org.holoeverywhere.LayoutInflater mLayoutInflater -> b
    org.holoeverywhere.app.Fragment instantiate(java.lang.Class,android.os.Bundle) -> a
    org.holoeverywhere.app.Fragment instantiate(android.content.Context,java.lang.String,android.os.Bundle) -> a
    org.holoeverywhere.addon.IAddonFragment addon(java.lang.Class) -> b
    org.holoeverywhere.LayoutInflater getLayoutInflater() -> getLayoutInflater
    void lockAttaching() -> f
    java.util.Collection obtainAddonsList() -> g
    void onCreate(android.os.Bundle) -> onCreate
    void onDestroyView() -> onDestroyView
    void onViewCreated(android.view.View,android.os.Bundle) -> onViewCreated
    boolean performAddonAction(org.holoeverywhere.addon.IAddonAttacher$AddonCallback) -> a
    org.holoeverywhere.addon.IAddonBase addon(java.lang.Class) -> a
org.holoeverywhere.app.Fragment$1 -> org.holoeverywhere.app.Fragment$1:
    android.os.Bundle val$savedInstanceState -> a
    org.holoeverywhere.app.Fragment this$0 -> b
    void justAction(org.holoeverywhere.addon.IAddonFragment) -> a
    void justAction(java.lang.Object) -> justAction
org.holoeverywhere.app.Fragment$2 -> org.holoeverywhere.app.Fragment$2:
    android.os.Bundle val$savedInstanceState -> a
    org.holoeverywhere.app.Fragment this$0 -> b
    void justAction(org.holoeverywhere.addon.IAddonFragment) -> a
    void justAction(java.lang.Object) -> justAction
org.holoeverywhere.app.Fragment$3 -> org.holoeverywhere.app.Fragment$3:
    org.holoeverywhere.app.Fragment this$0 -> a
    void justAction(org.holoeverywhere.addon.IAddonFragment) -> a
    void justAction(java.lang.Object) -> justAction
org.holoeverywhere.app.Fragment$4 -> org.holoeverywhere.app.Fragment$4:
    android.view.View val$view -> a
    android.os.Bundle val$savedInstanceState -> b
    org.holoeverywhere.app.Fragment this$0 -> c
    void justAction(org.holoeverywhere.addon.IAddonFragment) -> a
    void justAction(java.lang.Object) -> justAction
org.holoeverywhere.app.ListActivity -> org.holoeverywhere.app.ListActivity:
    android.widget.ListAdapter mAdapter -> a
    org.holoeverywhere.widget.ListView mList -> b
    android.os.Handler mHandler -> c
    java.lang.Runnable mRequestFocus -> d
    void ensureList() -> b
    void setListAdapter(android.widget.ListAdapter) -> a
    org.holoeverywhere.widget.ListView getListView() -> a
    void onDestroy() -> onDestroy
    void onRestoreInstanceState(android.os.Bundle) -> onRestoreInstanceState
org.holoeverywhere.drawable.ColorDrawable -> org.holoeverywhere.drawable.ColorDrawable:
    android.graphics.Paint mPaint -> a
    org.holoeverywhere.drawable.ColorDrawable$ColorState mState -> b
    void draw(android.graphics.Canvas) -> draw
    int getAlpha() -> getAlpha
    int getChangingConfigurations() -> getChangingConfigurations
    int getColor() -> getColor
    android.graphics.drawable.Drawable$ConstantState getConstantState() -> getConstantState
    int getOpacity() -> getOpacity
    void inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet) -> inflate
    void setAlpha(int) -> setAlpha
    void setColor(int) -> setColor
    void setColorFilter(android.graphics.ColorFilter) -> setColorFilter
org.holoeverywhere.drawable.ColorDrawable$1 -> org.holoeverywhere.drawable.ColorDrawable$1:
org.holoeverywhere.drawable.ColorDrawable$ColorState -> org.holoeverywhere.drawable.ColorDrawable$ColorState:
    int mBaseColor -> a
    int mChangingConfigurations -> b
    int mUseColor -> c
    int getChangingConfigurations() -> getChangingConfigurations
    android.graphics.drawable.Drawable newDrawable() -> newDrawable
    android.graphics.drawable.Drawable newDrawable(android.content.res.Resources) -> newDrawable
org.holoeverywhere.drawable.DrawableCompat -> org.holoeverywhere.drawable.DrawableCompat:
    java.util.Map CLASS_MAP -> a
    android.support.v4.util.LongSparseArray sDrawableCache -> b
    void registerDrawable(java.lang.Class,java.lang.String) -> a
    android.graphics.drawable.Drawable createFromResourceStream(android.content.res.Resources,android.util.TypedValue,java.io.InputStream,java.lang.String,android.graphics.BitmapFactory$Options) -> a
    android.graphics.drawable.Drawable createFromXml(android.content.res.Resources,org.xmlpull.v1.XmlPullParser) -> a
    android.graphics.drawable.Drawable createFromXmlInner(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet) -> a
    android.graphics.drawable.Drawable getCachedDrawable(long,android.content.res.Resources) -> a
    android.graphics.drawable.Drawable getDrawable(android.content.res.Resources,int) -> a
    android.graphics.drawable.Drawable getDrawable(android.content.res.TypedArray,int) -> a
    android.graphics.drawable.Drawable loadDrawable(android.content.res.Resources,android.util.TypedValue) -> a
org.holoeverywhere.drawable.DrawableCompat$IStateOverlay -> org.holoeverywhere.drawable.DrawableCompat$IStateOverlay:
    void refreshDrawableState() -> refreshDrawableState
    void invalidate() -> invalidate
    int[] superOnCreateDrawableState(int) -> superOnCreateDrawableState
org.holoeverywhere.drawable.DrawableCompat$StateOverlay -> org.holoeverywhere.drawable.DrawableCompat$StateOverlay:
    org.holoeverywhere.drawable.DrawableCompat$IStateOverlay mOverlayInterface -> a
    int mFlags -> b
    void setFlag(int,boolean) -> a
    boolean getFlag(int) -> b
    boolean isActivated() -> isActivated
    void setActivated(boolean) -> setActivated
    void init(android.content.Context,android.util.AttributeSet,int) -> a
    int[] onCreateDrawableState(int) -> a
org.holoeverywhere.drawable.DrawableCompat$StateStub -> org.holoeverywhere.drawable.DrawableCompat$StateStub:
    boolean isActivated() -> isActivated
    void setActivated(boolean) -> setActivated
org.holoeverywhere.drawable.DrawableContainer -> org.holoeverywhere.drawable.DrawableContainer:
    int mAlpha -> a
    java.lang.Runnable mAnimationRunnable -> b
    android.graphics.ColorFilter mColorFilter -> c
    int mCurIndex -> d
    android.graphics.drawable.Drawable mCurrDrawable -> e
    org.holoeverywhere.drawable.DrawableContainer$DrawableContainerState mDrawableContainerState -> f
    long mEnterAnimationEnd -> g
    long mExitAnimationEnd -> h
    android.graphics.drawable.Drawable mLastDrawable -> i
    boolean mMutated -> j
    void animate(boolean) -> a
    void draw(android.graphics.Canvas) -> draw
    int getChangingConfigurations() -> getChangingConfigurations
    android.graphics.drawable.Drawable$ConstantState getConstantState() -> getConstantState
    android.graphics.drawable.Drawable getCurrent() -> getCurrent
    int getIntrinsicHeight() -> getIntrinsicHeight
    int getIntrinsicWidth() -> getIntrinsicWidth
    int getMinimumHeight() -> getMinimumHeight
    int getMinimumWidth() -> getMinimumWidth
    int getOpacity() -> getOpacity
    boolean getPadding(android.graphics.Rect) -> getPadding
    void invalidateDrawable(android.graphics.drawable.Drawable) -> invalidateDrawable
    boolean isStateful() -> isStateful
    void jumpToCurrentState() -> jumpToCurrentState
    android.graphics.drawable.Drawable mutate() -> mutate
    void onBoundsChange(android.graphics.Rect) -> onBoundsChange
    boolean onLevelChange(int) -> onLevelChange
    boolean onStateChange(int[]) -> onStateChange
    void scheduleDrawable(android.graphics.drawable.Drawable,java.lang.Runnable,long) -> scheduleDrawable
    boolean selectDrawable(int) -> a
    void setAlpha(int) -> setAlpha
    void setColorFilter(android.graphics.ColorFilter) -> setColorFilter
    void setConstantState(org.holoeverywhere.drawable.DrawableContainer$DrawableContainerState) -> a
    void setDither(boolean) -> setDither
    boolean setVisible(boolean,boolean) -> setVisible
    void unscheduleDrawable(android.graphics.drawable.Drawable,java.lang.Runnable) -> unscheduleDrawable
org.holoeverywhere.drawable.DrawableContainer$1 -> org.holoeverywhere.drawable.DrawableContainer$1:
    org.holoeverywhere.drawable.DrawableContainer this$0 -> a
    void run() -> run
org.holoeverywhere.drawable.DrawableContainer$DrawableContainerState -> org.holoeverywhere.drawable.DrawableContainer$DrawableContainerState:
    boolean mCanConstantState -> a
    int mChangingConfigurations -> b
    boolean mCheckedConstantState -> c
    int mChildrenChangingConfigurations -> d
    boolean mComputedConstantSize -> e
    int mConstantHeight -> f
    int mConstantMinimumHeight -> g
    int mConstantMinimumWidth -> h
    android.graphics.Rect mConstantPadding -> i
    boolean mConstantSize -> j
    int mConstantWidth -> k
    boolean mDither -> l
    android.graphics.drawable.Drawable[] mDrawables -> m
    int mEnterFadeDuration -> n
    int mExitFadeDuration -> o
    boolean mHaveOpacity -> p
    boolean mHaveStateful -> q
    int mNumChildren -> r
    int mOpacity -> s
    org.holoeverywhere.drawable.DrawableContainer mOwner -> t
    boolean mPaddingChecked -> u
    boolean mStateful -> v
    boolean mVariablePadding -> w
    int addChild(android.graphics.drawable.Drawable) -> a
    boolean canConstantState() -> a
    void computeConstantSize() -> b
    int getChangingConfigurations() -> getChangingConfigurations
    int getChildCount() -> c
    android.graphics.drawable.Drawable[] getChildren() -> d
    int getConstantHeight() -> e
    int getConstantMinimumHeight() -> f
    int getConstantMinimumWidth() -> g
    android.graphics.Rect getConstantPadding() -> h
    int getConstantWidth() -> i
    int getOpacity() -> j
    void growArray(int,int) -> a
    boolean isConstantSize() -> k
    boolean isStateful() -> l
    void setConstantSize(boolean) -> a
    void setEnterFadeDuration(int) -> a
    void setExitFadeDuration(int) -> b
    void setVariablePadding(boolean) -> b
org.holoeverywhere.drawable.LayerDrawable -> org.holoeverywhere.drawable.LayerDrawable:
    org.holoeverywhere.drawable.LayerDrawable$LayerState mLayerState -> a
    boolean mMutated -> b
    int mOpacityOverride -> c
    int[] mPaddingB -> d
    int[] mPaddingL -> e
    int[] mPaddingR -> f
    int[] mPaddingT -> g
    android.graphics.Rect mTmpRect -> h
    void addLayer(android.graphics.drawable.Drawable,int,int,int,int,int) -> a
    org.holoeverywhere.drawable.LayerDrawable$LayerState createConstantState(org.holoeverywhere.drawable.LayerDrawable$LayerState,android.content.res.Resources) -> a
    void draw(android.graphics.Canvas) -> draw
    void ensurePadding() -> a
    android.graphics.drawable.Drawable$Callback getCallback() -> getCallback
    int getChangingConfigurations() -> getChangingConfigurations
    android.graphics.drawable.Drawable$ConstantState getConstantState() -> getConstantState
    int getIntrinsicHeight() -> getIntrinsicHeight
    int getIntrinsicWidth() -> getIntrinsicWidth
    int getOpacity() -> getOpacity
    boolean getPadding(android.graphics.Rect) -> getPadding
    void inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet) -> inflate
    void invalidateDrawable(android.graphics.drawable.Drawable) -> invalidateDrawable
    boolean isStateful() -> isStateful
    android.graphics.drawable.Drawable mutate() -> mutate
    void onBoundsChange(android.graphics.Rect) -> onBoundsChange
    boolean onLevelChange(int) -> onLevelChange
    boolean onStateChange(int[]) -> onStateChange
    boolean reapplyPadding(int,org.holoeverywhere.drawable.LayerDrawable$ChildDrawable) -> a
    void scheduleDrawable(android.graphics.drawable.Drawable,java.lang.Runnable,long) -> scheduleDrawable
    void setAlpha(int) -> setAlpha
    void setColorFilter(android.graphics.ColorFilter) -> setColorFilter
    void setDither(boolean) -> setDither
    boolean setVisible(boolean,boolean) -> setVisible
    void unscheduleDrawable(android.graphics.drawable.Drawable,java.lang.Runnable) -> unscheduleDrawable
org.holoeverywhere.drawable.LayerDrawable$ChildDrawable -> org.holoeverywhere.drawable.LayerDrawable$ChildDrawable:
    android.graphics.drawable.Drawable mDrawable -> a
    int mId -> b
    int mInsetL -> c
    int mInsetT -> d
    int mInsetR -> e
    int mInsetB -> f
org.holoeverywhere.drawable.LayerDrawable$LayerState -> org.holoeverywhere.drawable.LayerDrawable$LayerState:
    boolean mCanConstantState -> e
    int mChangingConfigurations -> a
    boolean mCheckedConstantState -> f
    org.holoeverywhere.drawable.LayerDrawable$ChildDrawable[] mChildren -> b
    int mChildrenChangingConfigurations -> c
    boolean mHaveOpacity -> g
    boolean mHaveStateful -> h
    int mNum -> d
    int mOpacity -> i
    boolean mStateful -> j
    boolean canConstantState() -> a
    int getChangingConfigurations() -> getChangingConfigurations
    int getOpacity() -> b
    boolean isStateful() -> c
    android.graphics.drawable.Drawable newDrawable() -> newDrawable
    android.graphics.drawable.Drawable newDrawable(android.content.res.Resources) -> newDrawable
org.holoeverywhere.drawable.RotateDrawable -> org.holoeverywhere.drawable.RotateDrawable:
    boolean mMutated -> a
    org.holoeverywhere.drawable.RotateDrawable$RotateState mState -> b
    void draw(android.graphics.Canvas) -> draw
    int getChangingConfigurations() -> getChangingConfigurations
    android.graphics.drawable.Drawable$ConstantState getConstantState() -> getConstantState
    int getIntrinsicHeight() -> getIntrinsicHeight
    int getIntrinsicWidth() -> getIntrinsicWidth
    int getOpacity() -> getOpacity
    boolean getPadding(android.graphics.Rect) -> getPadding
    void inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet) -> inflate
    void invalidateDrawable(android.graphics.drawable.Drawable) -> invalidateDrawable
    boolean isStateful() -> isStateful
    android.graphics.drawable.Drawable mutate() -> mutate
    void onBoundsChange(android.graphics.Rect) -> onBoundsChange
    boolean onLevelChange(int) -> onLevelChange
    boolean onStateChange(int[]) -> onStateChange
    void scheduleDrawable(android.graphics.drawable.Drawable,java.lang.Runnable,long) -> scheduleDrawable
    void setAlpha(int) -> setAlpha
    void setColorFilter(android.graphics.ColorFilter) -> setColorFilter
    boolean setVisible(boolean,boolean) -> setVisible
    void unscheduleDrawable(android.graphics.drawable.Drawable,java.lang.Runnable) -> unscheduleDrawable
org.holoeverywhere.drawable.RotateDrawable$1 -> org.holoeverywhere.drawable.RotateDrawable$1:
org.holoeverywhere.drawable.RotateDrawable$RotateState -> org.holoeverywhere.drawable.RotateDrawable$RotateState:
    int mChangingConfigurations -> a
    float mCurrentDegrees -> b
    android.graphics.drawable.Drawable mDrawable -> c
    float mFromDegrees -> d
    float mPivotX -> e
    boolean mPivotXRel -> f
    float mPivotY -> g
    boolean mPivotYRel -> h
    float mToDegrees -> i
    boolean mCanConstantState -> j
    boolean mCheckedConstantState -> k
    boolean canConstantState() -> a
    int getChangingConfigurations() -> getChangingConfigurations
    android.graphics.drawable.Drawable newDrawable() -> newDrawable
    android.graphics.drawable.Drawable newDrawable(android.content.res.Resources) -> newDrawable
org.holoeverywhere.drawable.StateListDrawable -> org.holoeverywhere.drawable.StateListDrawable:
    boolean mMutated -> a
    org.holoeverywhere.drawable.StateListDrawable$StateListState mStateListState -> b
    int getStateCount() -> a
    android.graphics.drawable.Drawable getStateDrawable(int) -> b
    int getStateDrawableIndex(int[]) -> a
    void inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet) -> inflate
    boolean isStateful() -> isStateful
    android.graphics.drawable.Drawable mutate() -> mutate
    boolean onStateChange(int[]) -> onStateChange
org.holoeverywhere.drawable.StateListDrawable$1 -> org.holoeverywhere.drawable.StateListDrawable$1:
org.holoeverywhere.drawable.StateListDrawable$StateListState -> org.holoeverywhere.drawable.StateListDrawable$StateListState:
    int[][] mStateSets -> x
    int addStateSet(int[],android.graphics.drawable.Drawable) -> a
    void growArray(int,int) -> a
    int indexOfStateSet(int[]) -> a
    android.graphics.drawable.Drawable newDrawable() -> newDrawable
    android.graphics.drawable.Drawable newDrawable(android.content.res.Resources) -> newDrawable
    int access$100(org.holoeverywhere.drawable.StateListDrawable$StateListState,int[]) -> a
org.holoeverywhere.preference.DialogPreference -> org.holoeverywhere.preference.DialogPreference:
    org.holoeverywhere.app.AlertDialog$Builder mBuilder -> a
    android.app.Dialog mDialog -> b
    android.content.Context mDialogContext -> c
    android.graphics.drawable.Drawable mDialogIcon -> d
    int mDialogLayoutResId -> e
    java.lang.CharSequence mDialogMessage -> f
    java.lang.CharSequence mDialogTitle -> g
    android.view.inputmethod.InputMethodManager mInputMethodManager -> h
    java.lang.CharSequence mNegativeButtonText -> i
    java.lang.CharSequence mPositiveButtonText -> j
    int mWhichButtonClicked -> k
    boolean mForceNotSaveState -> l
    android.content.Context getDialogContext(boolean) -> a
    java.lang.CharSequence getDialogMessage() -> a
    boolean needInputMethod() -> b
    void onActivityDestroy() -> c
    void onBindDialogView(android.view.View) -> a
    void onClick() -> d
    void onClick(android.content.DialogInterface,int) -> onClick
    android.app.Dialog onCreateDialog(android.content.Context) -> a
    android.view.View onCreateDialogView() -> e
    android.view.View onCreateDialogView(android.content.Context) -> b
    void onDialogClosed(boolean) -> b
    void onDismiss(android.content.DialogInterface) -> onDismiss
    void onPrepareDialogBuilder(org.holoeverywhere.app.AlertDialog$Builder) -> a
    void onRestoreInstanceState(android.os.Parcelable) -> a
    android.os.Parcelable onSaveInstanceState() -> f
    void requestInputMethod(android.app.Dialog) -> a
    void showDialog(android.os.Bundle) -> a
org.holoeverywhere.preference.DialogPreference$SavedState -> org.holoeverywhere.preference.DialogPreference$SavedState:
    android.os.Bundle dialogBundle -> a
    boolean isDialogShowing -> b
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
org.holoeverywhere.preference.EditTextPreference -> org.holoeverywhere.preference.EditTextPreference:
    org.holoeverywhere.widget.EditText mEditText -> a
    java.lang.String mText -> b
    java.lang.String getText() -> g
    boolean needInputMethod() -> b
    void onAddEditTextToDialogView(android.view.View,org.holoeverywhere.widget.EditText) -> a
    void onBindDialogView(android.view.View) -> a
    void onDialogClosed(boolean) -> b
    void onRestoreInstanceState(android.os.Parcelable) -> a
    android.os.Parcelable onSaveInstanceState() -> f
    void setText(java.lang.String) -> a
    boolean shouldDisableDependents() -> h
org.holoeverywhere.preference.EditTextPreference$SavedState -> org.holoeverywhere.preference.EditTextPreference$SavedState:
    java.lang.String text -> a
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
org.holoeverywhere.preference.FragmentBreadCrumbs -> org.holoeverywhere.preference.FragmentBreadCrumbs:
    android.support.v4.app.FragmentActivity mActivity -> a
    org.holoeverywhere.widget.LinearLayout mContainer -> b
    org.holoeverywhere.LayoutInflater mInflater -> c
    int mMaxVisible -> d
    android.support.v4.app.FragmentManager$BackStackEntry mParentEntry -> e
    android.support.v4.app.FragmentManager$BackStackEntry mTopEntry -> f
    org.holoeverywhere.preference.FragmentBreadCrumbs$OnBreadCrumbClickListener mOnBreadCrumbClickListener -> g
    android.view.View$OnClickListener mOnClickListener -> h
    android.view.View$OnClickListener mParentClickListener -> i
    int supportCombineMeasuredStates(int,int) -> a
    android.support.v4.app.FragmentManager$BackStackEntry createBackStackEntry(java.lang.CharSequence,java.lang.CharSequence) -> b
    android.support.v4.app.FragmentManager$BackStackEntry getPreEntry(int) -> a
    int getPreEntryCount() -> getPreEntryCount
    void onBackStackChanged() -> onBackStackChanged
    void onLayout(boolean,int,int,int,int) -> onLayout
    void onMeasure(int,int) -> onMeasure
    void setActivity(android.support.v4.app.FragmentActivity) -> setActivity
    void setMaxVisible(int) -> setMaxVisible
    void setOnBreadCrumbClickListener(org.holoeverywhere.preference.FragmentBreadCrumbs$OnBreadCrumbClickListener) -> setOnBreadCrumbClickListener
    void setParentTitle(java.lang.CharSequence,java.lang.CharSequence,android.view.View$OnClickListener) -> a
    void setTitle(java.lang.CharSequence,java.lang.CharSequence) -> a
    void updateCrumbs() -> a
org.holoeverywhere.preference.FragmentBreadCrumbs$2 -> org.holoeverywhere.preference.FragmentBreadCrumbs$2:
    java.lang.CharSequence val$shortTitle -> a
    java.lang.CharSequence val$title -> b
    org.holoeverywhere.preference.FragmentBreadCrumbs this$0 -> c
    java.lang.CharSequence getBreadCrumbShortTitle() -> getBreadCrumbShortTitle
    int getBreadCrumbShortTitleRes() -> getBreadCrumbShortTitleRes
    java.lang.CharSequence getBreadCrumbTitle() -> getBreadCrumbTitle
    int getBreadCrumbTitleRes() -> getBreadCrumbTitleRes
    int getId() -> getId
    java.lang.String getName() -> getName
org.holoeverywhere.preference.FragmentBreadCrumbs$OnBreadCrumbClickListener -> org.holoeverywhere.preference.FragmentBreadCrumbs$OnBreadCrumbClickListener:
org.holoeverywhere.preference.ListPreference -> org.holoeverywhere.preference.ListPreference:
    int mClickedDialogEntryIndex -> a
    java.lang.CharSequence[] mEntries -> b
    java.lang.CharSequence[] mEntryValues -> c
    java.lang.CharSequence mSummary -> d
    java.lang.String mValue -> e
    int findIndexOfValue(java.lang.String) -> a
    java.lang.CharSequence getEntry() -> g
    java.lang.CharSequence getSummary() -> i
    java.lang.String getValue() -> j
    int getValueIndex() -> D
    void onDialogClosed(boolean) -> b
    void onPrepareDialogBuilder(org.holoeverywhere.app.AlertDialog$Builder) -> a
    void onRestoreInstanceState(android.os.Parcelable) -> a
    android.os.Parcelable onSaveInstanceState() -> f
    void setValue(java.lang.String) -> b
    int access$002(org.holoeverywhere.preference.ListPreference,int) -> a
org.holoeverywhere.preference.ListPreference$1 -> org.holoeverywhere.preference.ListPreference$1:
    org.holoeverywhere.preference.ListPreference this$0 -> a
    void onClick(android.content.DialogInterface,int) -> onClick
org.holoeverywhere.preference.ListPreference$SavedState -> org.holoeverywhere.preference.ListPreference$SavedState:
    java.lang.String value -> a
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
org.holoeverywhere.preference.MultiSelectListPreference -> org.holoeverywhere.preference.MultiSelectListPreference:
    java.lang.CharSequence[] mEntries -> a
    java.lang.CharSequence[] mEntryValues -> b
    java.util.Set mNewValues -> c
    boolean mPreferenceChanged -> d
    java.util.Set mValues -> e
    boolean[] getSelectedItems() -> j
    java.util.Set getValues() -> g
    void onDialogClosed(boolean) -> b
    void onPrepareDialogBuilder(org.holoeverywhere.app.AlertDialog$Builder) -> a
    android.os.Parcelable onSaveInstanceState() -> f
    void setValues(java.util.Set) -> a
    boolean access$076(org.holoeverywhere.preference.MultiSelectListPreference,int) -> a
    java.lang.CharSequence[] access$100(org.holoeverywhere.preference.MultiSelectListPreference) -> a
    java.util.Set access$200(org.holoeverywhere.preference.MultiSelectListPreference) -> b
org.holoeverywhere.preference.MultiSelectListPreference$1 -> org.holoeverywhere.preference.MultiSelectListPreference$1:
    org.holoeverywhere.preference.MultiSelectListPreference this$0 -> a
    void onClick(android.content.DialogInterface,int,boolean) -> onClick
org.holoeverywhere.preference.MultiSelectListPreference$SavedState -> org.holoeverywhere.preference.MultiSelectListPreference$SavedState:
    java.util.Set values -> a
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
org.holoeverywhere.preference.NumberPickerPreference -> org.holoeverywhere.preference.NumberPickerPreference:
    org.holoeverywhere.widget.NumberPicker mNumberPicker -> a
    org.holoeverywhere.widget.NumberPicker$OnScrollListener mOnScrollListener -> b
    org.holoeverywhere.widget.NumberPicker$OnValueChangeListener mOnValueChangeListener -> c
    int mValue -> d
    int mMinValue -> e
    int mMaxValue -> f
    boolean mWrapSelectorWheel -> g
    void onBindDialogView(android.view.View) -> a
    void onDialogClosed(boolean) -> b
    void onRestoreInstanceState(android.os.Parcelable) -> a
    android.os.Parcelable onSaveInstanceState() -> f
    void setMaxValue(int) -> a
    void setMinValue(int) -> b
    void setValue(int) -> c
    void setWrapSelectorWheel(boolean) -> c
org.holoeverywhere.preference.NumberPickerPreference$SavedState -> org.holoeverywhere.preference.NumberPickerPreference$SavedState:
    android.os.Parcelable$Creator CREATOR -> CREATOR
    int mValue -> a
    int mMinValue -> b
    int mMaxValue -> c
    boolean mWrapSelectorWheel -> d
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
org.holoeverywhere.preference.NumberPickerPreference$SavedState$1 -> org.holoeverywhere.preference.NumberPickerPreference$SavedState$1:
    org.holoeverywhere.preference.NumberPickerPreference$SavedState createFromParcel(android.os.Parcel) -> a
    org.holoeverywhere.preference.NumberPickerPreference$SavedState[] newArray(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
org.holoeverywhere.preference.Preference -> org.holoeverywhere.preference.Preference:
    boolean mBaseMethodCalled -> a
    android.content.Context mContext -> b
    int mDependencyId -> c
    java.lang.String mDependencyKey -> d
    boolean mDependencyMet -> e
    java.util.List mDependents -> f
    boolean mEnabled -> g
    java.lang.String mFragment -> h
    boolean mHasSpecifiedLayout -> i
    android.graphics.drawable.Drawable mIcon -> j
    int mIconResId -> k
    long mId -> l
    android.content.Intent mIntent -> m
    java.lang.String mKey -> n
    int mLayoutResId -> o
    org.holoeverywhere.preference.Preference$OnPreferenceChangeListener mOnChangeListener -> p
    org.holoeverywhere.preference.Preference$OnPreferenceClickListener mOnClickListener -> q
    int mOrder -> r
    boolean mPersistent -> s
    org.holoeverywhere.preference.PreferenceManager mPreferenceManager -> t
    int mResId -> u
    boolean mSelectable -> v
    boolean mShouldDisableView -> w
    java.lang.CharSequence mSummary -> x
    java.lang.CharSequence mTitle -> y
    int mWidgetLayoutResId -> z
    org.holoeverywhere.util.SparseArray mListeners -> A
    boolean callChangeListener(java.lang.Object) -> a
    int compareTo(org.holoeverywhere.preference.Preference) -> a
    void dispatchRestoreInstanceState(android.os.Bundle) -> b
    void dispatchSaveInstanceState(android.os.Bundle) -> c
    org.holoeverywhere.preference.Preference findPreferenceInHierarchy(int) -> d
    org.holoeverywhere.preference.Preference findPreferenceInHierarchy(java.lang.String) -> c
    android.content.Context getContext() -> k
    java.lang.StringBuilder getFilterableStringBuilder() -> l
    java.lang.String getFragment() -> m
    long getId() -> n
    android.content.Intent getIntent() -> o
    java.lang.String getKey() -> p
    int getLayoutResource() -> q
    boolean getPersistedBoolean(boolean) -> d
    int getPersistedInt(int) -> e
    java.lang.String getPersistedString(java.lang.String) -> d
    java.util.Set getPersistedStringSet(java.util.Set) -> b
    org.holoeverywhere.preference.PreferenceManager getPreferenceManager() -> r
    int getResId() -> s
    java.lang.CharSequence getSummary() -> i
    java.lang.CharSequence getTitle() -> t
    android.view.View getView(android.view.View,android.view.ViewGroup) -> a
    int getWidgetLayoutResource() -> u
    boolean hasKey() -> v
    boolean hasSpecifiedLayout() -> w
    boolean isEnabled() -> x
    boolean isPersistent() -> y
    boolean isSelectable() -> z
    void notifyChanged() -> A
    void notifyDependencyChange(boolean) -> e
    void onAttachedToActivity() -> B
    void onBindView(android.view.View) -> b
    void onClick() -> d
    android.view.View onCreateView(android.view.ViewGroup) -> a
    void onDependencyChanged(org.holoeverywhere.preference.Preference,boolean) -> a
    void onRestoreInstanceState(android.os.Parcelable) -> a
    android.os.Parcelable onSaveInstanceState() -> f
    void performClick(org.holoeverywhere.preference.PreferenceScreen) -> a
    boolean persistBoolean(boolean) -> f
    boolean persistInt(int) -> f
    boolean persistString(java.lang.String) -> e
    boolean persistStringSet(java.util.Set) -> c
    void registerDependency() -> a
    void registerDependent(org.holoeverywhere.preference.Preference) -> b
    void restoreHierarchyState(android.os.Bundle) -> d
    void saveHierarchyState(android.os.Bundle) -> e
    void setEnabledStateOnViews(android.view.View,boolean) -> a
    void addOnPreferenceChangeInternalListener(org.holoeverywhere.preference.Preference$OnPreferenceChangeInternalListener) -> a
    boolean shouldDisableDependents() -> h
    boolean shouldPersist() -> C
    java.lang.String toString() -> toString
    void tryCommit(org.holoeverywhere.preference.SharedPreferences$Editor) -> a
    int compareTo(java.lang.Object) -> compareTo
org.holoeverywhere.preference.Preference$BaseSavedState -> org.holoeverywhere.preference.Preference$BaseSavedState:
    android.os.Parcelable$Creator CREATOR -> CREATOR
org.holoeverywhere.preference.Preference$BaseSavedState$1 -> org.holoeverywhere.preference.Preference$BaseSavedState$1:
    org.holoeverywhere.preference.Preference$BaseSavedState createFromParcel(android.os.Parcel) -> a
    org.holoeverywhere.preference.Preference$BaseSavedState[] newArray(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
org.holoeverywhere.preference.Preference$OnPreferenceChangeInternalListener -> org.holoeverywhere.preference.Preference$OnPreferenceChangeInternalListener:
    void onPreferenceChange(org.holoeverywhere.preference.Preference) -> a
org.holoeverywhere.preference.Preference$OnPreferenceChangeListener -> org.holoeverywhere.preference.Preference$OnPreferenceChangeListener:
    boolean onPreferenceChange(org.holoeverywhere.preference.Preference,java.lang.Object) -> a
org.holoeverywhere.preference.Preference$OnPreferenceClickListener -> org.holoeverywhere.preference.Preference$OnPreferenceClickListener:
    boolean onPreferenceClick(org.holoeverywhere.preference.Preference) -> a
org.holoeverywhere.preference.PreferenceActivity -> org.holoeverywhere.preference.PreferenceActivity:
    org.holoeverywhere.preference.PreferenceActivity$Header mCurHeader -> c
    org.holoeverywhere.preference.FragmentBreadCrumbs mFragmentBreadCrumbs -> d
    java.util.ArrayList mHeaders -> e
    android.widget.FrameLayout mListFooter -> f
    org.holoeverywhere.widget.Button mNextButton -> g
    org.holoeverywhere.preference.PreferenceManager mPreferenceManager -> h
    android.view.ViewGroup mPrefsContainer -> i
    android.os.Bundle mSavedInstanceState -> j
    boolean mSinglePane -> k
    android.content.Context mThemedContext -> l
    void bindPreferences() -> j
    org.holoeverywhere.preference.PreferenceActivity$Header findBestMatchingHeader(org.holoeverywhere.preference.PreferenceActivity$Header,java.util.ArrayList) -> a
    org.holoeverywhere.preference.PreferenceScreen getPreferenceScreen() -> b
    android.content.Context getThemedContext() -> c
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    void onBuildHeaders(java.util.List) -> a
    void onCreate(android.os.Bundle) -> onCreate
    void onDestroy() -> onDestroy
    org.holoeverywhere.preference.PreferenceActivity$Header onGetInitialHeader() -> d
    org.holoeverywhere.preference.PreferenceActivity$Header onGetNewHeader() -> e
    boolean onIsHidingHeaders() -> h
    boolean onIsMultiPane() -> i
    void onNewIntent(android.content.Intent) -> onNewIntent
    void onRestoreInstanceState(android.os.Bundle) -> onRestoreInstanceState
    void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    void onStop() -> onStop
    void setListFooter(android.view.View) -> setListFooter
    void setSelectedHeader(org.holoeverywhere.preference.PreferenceActivity$Header) -> a
    void showBreadCrumbs(java.lang.CharSequence,java.lang.CharSequence) -> a
    void showBreadCrumbs(org.holoeverywhere.preference.PreferenceActivity$Header) -> b
    void switchToHeader(org.holoeverywhere.preference.PreferenceActivity$Header) -> c
    void switchToHeader(java.lang.String,android.os.Bundle) -> a
    void switchToHeaderInner(java.lang.String,android.os.Bundle,int) -> a
    void access$100(org.holoeverywhere.preference.PreferenceActivity) -> a
    java.util.ArrayList access$200(org.holoeverywhere.preference.PreferenceActivity) -> b
    android.widget.ListAdapter access$300(org.holoeverywhere.preference.PreferenceActivity) -> c
    android.widget.ListAdapter access$400(org.holoeverywhere.preference.PreferenceActivity) -> d
    org.holoeverywhere.preference.PreferenceActivity$Header access$500(org.holoeverywhere.preference.PreferenceActivity) -> e
org.holoeverywhere.preference.PreferenceActivity$1 -> org.holoeverywhere.preference.PreferenceActivity$1:
    org.holoeverywhere.preference.PreferenceActivity this$0 -> a
    void handleMessage(android.os.Message) -> handleMessage
org.holoeverywhere.preference.PreferenceActivity$2 -> org.holoeverywhere.preference.PreferenceActivity$2:
    org.holoeverywhere.preference.PreferenceActivity this$0 -> a
    void onClick(android.view.View) -> onClick
org.holoeverywhere.preference.PreferenceActivity$3 -> org.holoeverywhere.preference.PreferenceActivity$3:
    org.holoeverywhere.preference.PreferenceActivity this$0 -> a
    void onClick(android.view.View) -> onClick
org.holoeverywhere.preference.PreferenceActivity$4 -> org.holoeverywhere.preference.PreferenceActivity$4:
    org.holoeverywhere.preference.PreferenceActivity this$0 -> a
    void onClick(android.view.View) -> onClick
org.holoeverywhere.preference.PreferenceActivity$Header -> org.holoeverywhere.preference.PreferenceActivity$Header:
    android.os.Parcelable$Creator CREATOR -> CREATOR
    java.lang.CharSequence breadCrumbShortTitle -> a
    int breadCrumbShortTitleRes -> b
    java.lang.CharSequence breadCrumbTitle -> c
    int breadCrumbTitleRes -> d
    android.os.Bundle extras -> e
    java.lang.String fragment -> f
    android.os.Bundle fragmentArguments -> g
    int iconRes -> h
    long id -> i
    android.content.Intent intent -> j
    java.lang.CharSequence summary -> k
    int summaryRes -> l
    java.lang.CharSequence title -> m
    int titleRes -> n
    int describeContents() -> describeContents
    java.lang.CharSequence getBreadCrumbShortTitle(android.content.res.Resources) -> a
    java.lang.CharSequence getBreadCrumbTitle(android.content.res.Resources) -> b
    java.lang.CharSequence getSummary(android.content.res.Resources) -> c
    java.lang.CharSequence getTitle(android.content.res.Resources) -> d
    void readFromParcel(android.os.Parcel) -> a
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
org.holoeverywhere.preference.PreferenceActivity$Header$1 -> org.holoeverywhere.preference.PreferenceActivity$Header$1:
    org.holoeverywhere.preference.PreferenceActivity$Header createFromParcel(android.os.Parcel) -> a
    org.holoeverywhere.preference.PreferenceActivity$Header[] newArray(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
org.holoeverywhere.preference.PreferenceActivity$HeaderAdapter -> org.holoeverywhere.preference.PreferenceActivity$HeaderAdapter:
    org.holoeverywhere.LayoutInflater mInflater -> a
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
org.holoeverywhere.preference.PreferenceActivity$HeaderAdapter$HeaderViewHolder -> org.holoeverywhere.preference.PreferenceActivity$HeaderAdapter$HeaderViewHolder:
    android.widget.ImageView icon -> a
    org.holoeverywhere.widget.TextView summary -> b
    org.holoeverywhere.widget.TextView title -> c
org.holoeverywhere.preference.PreferenceFrameLayout -> org.holoeverywhere.preference.PreferenceFrameLayout:
    int mBorderBottom -> a
    int mBorderLeft -> b
    int mBorderRight -> c
    int mBorderTop -> d
    boolean mPaddingApplied -> e
    void addView(android.view.View) -> addView
    org.holoeverywhere.preference.PreferenceFrameLayout$LayoutParams generateLayoutParams(android.util.AttributeSet) -> a
    android.widget.FrameLayout$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
org.holoeverywhere.preference.PreferenceFrameLayout$LayoutParams -> org.holoeverywhere.preference.PreferenceFrameLayout$LayoutParams:
    boolean removeBorders -> a
org.holoeverywhere.preference.PreferenceGroup -> org.holoeverywhere.preference.PreferenceGroup:
    boolean mAttachedToActivity -> a
    java.util.List mPreferenceList -> b
    void dispatchRestoreInstanceState(android.os.Bundle) -> b
    void dispatchSaveInstanceState(android.os.Bundle) -> c
    org.holoeverywhere.preference.Preference findPreference(java.lang.CharSequence) -> a
    org.holoeverywhere.preference.Preference findPreference(int) -> a
    org.holoeverywhere.preference.Preference getPreference(int) -> b
    int getPreferenceCount() -> a
    boolean isOnSameScreenAsChildren() -> b
    void onAttachedToActivity() -> B
    void sortPreferences() -> c
org.holoeverywhere.preference.PreferenceGroupAdapter -> org.holoeverywhere.preference.PreferenceGroupAdapter:
    android.os.Handler mHandler -> a
    boolean mHasReturnedViewTypeCount -> b
    boolean mIsSyncing -> c
    org.holoeverywhere.preference.PreferenceGroup mPreferenceGroup -> d
    java.util.List mPreferenceLayouts -> e
    java.util.List mPreferenceList -> f
    java.lang.Runnable mSyncRunnable -> g
    org.holoeverywhere.preference.PreferenceGroupAdapter$PreferenceLayout mTempPreferenceLayout -> h
    void addPreferenceClassName(org.holoeverywhere.preference.Preference) -> b
    boolean areAllItemsEnabled() -> areAllItemsEnabled
    org.holoeverywhere.preference.PreferenceGroupAdapter$PreferenceLayout createPreferenceLayout(org.holoeverywhere.preference.Preference,org.holoeverywhere.preference.PreferenceGroupAdapter$PreferenceLayout) -> a
    void flattenPreferenceGroup(java.util.List,org.holoeverywhere.preference.PreferenceGroup) -> a
    int getCount() -> getCount
    org.holoeverywhere.preference.Preference getItem(int) -> a
    long getItemId(int) -> getItemId
    int getItemViewType(int) -> getItemViewType
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    int getViewTypeCount() -> getViewTypeCount
    boolean hasStableIds() -> hasStableIds
    boolean isEnabled(int) -> isEnabled
    void onPreferenceChange(org.holoeverywhere.preference.Preference) -> a
    void syncMyPreferences() -> a
    java.lang.Object getItem(int) -> getItem
    void access$000(org.holoeverywhere.preference.PreferenceGroupAdapter) -> a
org.holoeverywhere.preference.PreferenceGroupAdapter$1 -> org.holoeverywhere.preference.PreferenceGroupAdapter$1:
    org.holoeverywhere.preference.PreferenceGroupAdapter this$0 -> a
    void run() -> run
org.holoeverywhere.preference.PreferenceGroupAdapter$PreferenceLayout -> org.holoeverywhere.preference.PreferenceGroupAdapter$PreferenceLayout:
    java.lang.String name -> a
    int resId -> b
    int widgetResId -> c
    int compareTo(org.holoeverywhere.preference.PreferenceGroupAdapter$PreferenceLayout) -> a
    int compareTo(java.lang.Object) -> compareTo
    java.lang.String access$202(org.holoeverywhere.preference.PreferenceGroupAdapter$PreferenceLayout,java.lang.String) -> a
    int access$302(org.holoeverywhere.preference.PreferenceGroupAdapter$PreferenceLayout,int) -> a
    int access$402(org.holoeverywhere.preference.PreferenceGroupAdapter$PreferenceLayout,int) -> b
org.holoeverywhere.preference.PreferenceInit -> org.holoeverywhere.preference.PreferenceInit:
    java.lang.String PACKAGE -> a
    int THEME_FLAG -> b
    org.holoeverywhere.addon.IAddonThemes sThemes -> c
    org.holoeverywhere.addon.IAddonThemes$ThemeResolver sThemeResolver -> d
    android.content.Context context(android.content.Context) -> a
    void init() -> a
    void map(int,int) -> a
    void map(int,int,int) -> a
    android.content.Context unwrap(android.content.Context) -> b
org.holoeverywhere.preference.PreferenceInit$1 -> org.holoeverywhere.preference.PreferenceInit$1:
    int resolveThemeForContext(android.content.Context,int) -> a
org.holoeverywhere.preference.PreferenceManager -> org.holoeverywhere.preference.PreferenceManager:
    java.lang.String METADATA_KEY_PREFERENCES -> a
    org.holoeverywhere.app.Activity mActivity -> b
    java.util.List mActivityDestroyListeners -> c
    java.util.List mActivityResultListeners -> d
    java.util.List mActivityStopListeners -> e
    android.content.Context mContext -> f
    org.holoeverywhere.preference.SharedPreferences$Editor mEditor -> g
    long mNextId -> h
    int mNextRequestCode -> i
    boolean mNoCommit -> j
    org.holoeverywhere.preference.PreferenceManager$OnPreferenceTreeClickListener mOnPreferenceTreeClickListener -> k
    org.holoeverywhere.preference.PreferenceScreen mPreferenceScreen -> l
    java.util.List mPreferencesScreens -> m
    org.holoeverywhere.preference.SharedPreferences mSharedPreferences -> n
    int mSharedPreferencesMode -> o
    java.lang.String mSharedPreferencesName -> p
    java.lang.String getDefaultSharedPreferencesName(android.content.Context) -> a
    org.holoeverywhere.preference.SharedPreferences wrap(android.content.Context,org.holoeverywhere.HoloEverywhere$PreferenceImpl,java.lang.String,int) -> a
    org.holoeverywhere.preference.SharedPreferences wrap(android.content.Context,java.lang.String,int) -> a
    void addPreferencesScreen(android.content.DialogInterface) -> a
    void dismissAllScreens() -> h
    void dispatchActivityDestroy() -> a
    void dispatchActivityResult(int,int,android.content.Intent) -> a
    void dispatchActivityStop() -> b
    void dispatchNewIntent(android.content.Intent) -> a
    org.holoeverywhere.preference.Preference findPreference(java.lang.CharSequence) -> a
    org.holoeverywhere.preference.Preference findPreference(int) -> a
    org.holoeverywhere.preference.SharedPreferences$Editor getEditor() -> c
    org.holoeverywhere.preference.PreferenceManager$OnPreferenceTreeClickListener getOnPreferenceTreeClickListener() -> d
    org.holoeverywhere.preference.PreferenceScreen getPreferenceScreen() -> e
    org.holoeverywhere.preference.SharedPreferences getSharedPreferences() -> f
    void init(android.content.Context) -> b
    void registerOnActivityDestroyListener(org.holoeverywhere.preference.PreferenceManager$OnActivityDestroyListener) -> a
    void removePreferencesScreen(android.content.DialogInterface) -> b
    void setOnPreferenceTreeClickListener(org.holoeverywhere.preference.PreferenceManager$OnPreferenceTreeClickListener) -> a
    void setSharedPreferencesName(java.lang.String) -> a
    boolean shouldCommit() -> g
    void unregisterOnActivityDestroyListener(org.holoeverywhere.preference.PreferenceManager$OnActivityDestroyListener) -> b
org.holoeverywhere.preference.PreferenceManager$1 -> org.holoeverywhere.preference.PreferenceManager$1:
    int[] $SwitchMap$org$holoeverywhere$HoloEverywhere$PreferenceImpl -> a
org.holoeverywhere.preference.PreferenceManager$OnActivityDestroyListener -> org.holoeverywhere.preference.PreferenceManager$OnActivityDestroyListener:
    void onActivityDestroy() -> c
org.holoeverywhere.preference.PreferenceManager$OnActivityResultListener -> org.holoeverywhere.preference.PreferenceManager$OnActivityResultListener:
    boolean onActivityResult(int,int,android.content.Intent) -> a
org.holoeverywhere.preference.PreferenceManager$OnActivityStopListener -> org.holoeverywhere.preference.PreferenceManager$OnActivityStopListener:
    void onActivityStop() -> a
org.holoeverywhere.preference.PreferenceManager$OnPreferenceTreeClickListener -> org.holoeverywhere.preference.PreferenceManager$OnPreferenceTreeClickListener:
    boolean onPreferenceTreeClick(org.holoeverywhere.preference.PreferenceScreen,org.holoeverywhere.preference.Preference) -> a
org.holoeverywhere.preference.PreferenceManagerHelper -> org.holoeverywhere.preference.PreferenceManagerHelper:
    org.holoeverywhere.preference.PreferenceManagerHelper$PreferenceManagerImpl IMPL -> a
    void checkImpl() -> b
    org.holoeverywhere.preference.SharedPreferences getDefaultSharedPreferences(android.content.Context) -> a
    org.holoeverywhere.preference.SharedPreferences getDefaultSharedPreferences(android.content.Context,org.holoeverywhere.HoloEverywhere$PreferenceImpl) -> a
    int obtainThemeTag() -> a
    org.holoeverywhere.preference.SharedPreferences wrap(android.content.Context,org.holoeverywhere.HoloEverywhere$PreferenceImpl,java.lang.String,int) -> a
    org.holoeverywhere.preference.SharedPreferences wrap(android.content.Context,java.lang.String,int) -> a
org.holoeverywhere.preference.PreferenceManagerHelper$PreferenceManagerImpl -> org.holoeverywhere.preference.PreferenceManagerHelper$PreferenceManagerImpl:
    org.holoeverywhere.preference.SharedPreferences getDefaultSharedPreferences(android.content.Context,org.holoeverywhere.HoloEverywhere$PreferenceImpl) -> a
    int obtainThemeTag() -> a
    org.holoeverywhere.preference.SharedPreferences wrap(android.content.Context,org.holoeverywhere.HoloEverywhere$PreferenceImpl,java.lang.String,int) -> a
org.holoeverywhere.preference.PreferenceScreen -> org.holoeverywhere.preference.PreferenceScreen:
    org.holoeverywhere.preference.PreferenceScreen$PreferenceDialog mDialog -> a
    org.holoeverywhere.widget.ListView mListView -> b
    android.widget.ListAdapter mRootAdapter -> c
    void bind(org.holoeverywhere.widget.ListView) -> a
    org.holoeverywhere.app.Dialog getDialog() -> e
    android.widget.ListAdapter getRootAdapter() -> g
    int getThemeResId(android.content.Context) -> a
    boolean isOnSameScreenAsChildren() -> b
    void onClick() -> d
    android.widget.ListAdapter onCreateRootAdapter() -> j
    void onDismiss(android.content.DialogInterface) -> onDismiss
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
    void onRestoreInstanceState(android.os.Parcelable) -> a
    android.os.Parcelable onSaveInstanceState() -> f
    void showDialog(android.os.Bundle) -> a
    void onPrepareDialog(org.holoeverywhere.app.Dialog) -> a
    boolean onOptionsItemSelected(android.view.MenuItem) -> a
    boolean onCreateOptionsMenu(android.view.Menu) -> a
    org.holoeverywhere.preference.PreferenceScreen$PreferenceDialog access$000(org.holoeverywhere.preference.PreferenceScreen) -> b
org.holoeverywhere.preference.PreferenceScreen$PreferenceDialog -> org.holoeverywhere.preference.PreferenceScreen$PreferenceDialog:
    org.holoeverywhere.preference.PreferenceScreen this$0 -> a
    void onAttachedToWindow() -> onAttachedToWindow
    void onCreate(android.os.Bundle) -> onCreate
    boolean onCreatePanelMenu(int,android.view.Menu) -> onCreatePanelMenu
    boolean onMenuItemSelected(int,android.view.MenuItem) -> onMenuItemSelected
    void prepareActionBar() -> b
    void setContentView(android.view.View) -> setContentView
    void setTitle(java.lang.CharSequence) -> setTitle
    void setTitle(int) -> setTitle
org.holoeverywhere.preference.PreferenceScreen$SavedState -> org.holoeverywhere.preference.PreferenceScreen$SavedState:
    android.os.Parcelable$Creator CREATOR -> CREATOR
    android.os.Bundle dialogBundle -> a
    boolean isShowing -> b
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
org.holoeverywhere.preference.PreferenceScreen$SavedState$1 -> org.holoeverywhere.preference.PreferenceScreen$SavedState$1:
    org.holoeverywhere.preference.PreferenceScreen$SavedState createFromParcel(android.os.Parcel) -> a
    org.holoeverywhere.preference.PreferenceScreen$SavedState[] newArray(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
org.holoeverywhere.preference.R -> org.holoeverywhere.preference.R:
org.holoeverywhere.preference.R$attr -> org.holoeverywhere.preference.R$attr:
    int actionBarDivider -> actionBarDivider
    int actionBarItemBackground -> actionBarItemBackground
    int actionBarSize -> actionBarSize
    int actionBarSplitStyle -> actionBarSplitStyle
    int actionBarStyle -> actionBarStyle
    int actionBarTabBarStyle -> actionBarTabBarStyle
    int actionBarTabStyle -> actionBarTabStyle
    int actionBarTabTextStyle -> actionBarTabTextStyle
    int actionBarWidgetTheme -> actionBarWidgetTheme
    int actionButtonStyle -> actionButtonStyle
    int actionDropDownStyle -> actionDropDownStyle
    int actionMenuTextAppearance -> actionMenuTextAppearance
    int actionMenuTextColor -> actionMenuTextColor
    int actionModeBackground -> actionModeBackground
    int actionModeCloseButtonStyle -> actionModeCloseButtonStyle
    int actionModeCloseDrawable -> actionModeCloseDrawable
    int actionModeCopyDrawable -> actionModeCopyDrawable
    int actionModeCutDrawable -> actionModeCutDrawable
    int actionModeFindDrawable -> actionModeFindDrawable
    int actionModePasteDrawable -> actionModePasteDrawable
    int actionModePopupWindowStyle -> actionModePopupWindowStyle
    int actionModeSelectAllDrawable -> actionModeSelectAllDrawable
    int actionModeShareDrawable -> actionModeShareDrawable
    int actionModeSplitBackground -> actionModeSplitBackground
    int actionModeStyle -> actionModeStyle
    int actionModeWebSearchDrawable -> actionModeWebSearchDrawable
    int actionOverflowButtonStyle -> actionOverflowButtonStyle
    int activatedBackgroundIndicator -> activatedBackgroundIndicator
    int activityChooserViewStyle -> activityChooserViewStyle
    int alertDialogCenterButtons -> alertDialogCenterButtons
    int alertDialogStyle -> alertDialogStyle
    int alertDialogTheme -> alertDialogTheme
    int alertDialogTitleDividerColor -> alertDialogTitleDividerColor
    int autoCompleteTextViewStyle -> autoCompleteTextViewStyle
    int background -> background
    int backgroundSplit -> backgroundSplit
    int backgroundStacked -> backgroundStacked
    int borderlessButtonStyle -> borderlessButtonStyle
    int bottomBright -> bottomBright
    int bottomDark -> bottomDark
    int bottomMedium -> bottomMedium
    int buttonBarButtonStyle -> buttonBarButtonStyle
    int buttonBarStyle -> buttonBarStyle
    int centerBright -> centerBright
    int centerDark -> centerDark
    int centerMedium -> centerMedium
    int checkBoxPreferenceStyle -> checkBoxPreferenceStyle
    int customNavigationLayout -> customNavigationLayout
    int dateCircleColor -> dateCircleColor
    int dateDayTextColor -> dateDayTextColor
    int dateMonthTitleColor -> dateMonthTitleColor
    int datePreferenceStyle -> datePreferenceStyle
    int dateTimePickerActiveTextColor -> dateTimePickerActiveTextColor
    int dateTimePickerSelectedDateBackground -> dateTimePickerSelectedDateBackground
    int dateTimePickerStyle -> dateTimePickerStyle
    int dateTimePickerTextColor -> dateTimePickerTextColor
    int dateTodayColor -> dateTodayColor
    int dateYearSelectorColor -> dateYearSelectorColor
    int dependency -> dependency
    int detailsElementBackground -> detailsElementBackground
    int dialogPreferenceStyle -> dialogPreferenceStyle
    int dialogTheme -> dialogTheme
    int disableChildrenWhenDisabled -> disableChildrenWhenDisabled
    int displayOptions -> displayOptions
    int dividerHorizontal -> dividerHorizontal
    int dividerVertical -> dividerVertical
    int dropDownHorizontalOffset -> dropDownHorizontalOffset
    int dropDownListViewStyle -> dropDownListViewStyle
    int dropDownVerticalOffset -> dropDownVerticalOffset
    int dropdownListPreferredItemHeight -> dropdownListPreferredItemHeight
    int editTextPreferenceStyle -> editTextPreferenceStyle
    int expandActivityOverflowButtonDrawable -> expandActivityOverflowButtonDrawable
    int fastScrollOverlayPosition -> fastScrollOverlayPosition
    int fastScrollPreviewBackgroundLeft -> fastScrollPreviewBackgroundLeft
    int fastScrollPreviewBackgroundRight -> fastScrollPreviewBackgroundRight
    int fastScrollTextColor -> fastScrollTextColor
    int fastScrollThumbDrawable -> fastScrollThumbDrawable
    int fastScrollTrackDrawable -> fastScrollTrackDrawable
    int flingable -> flingable
    int fullBright -> fullBright
    int fullDark -> fullDark
    int height -> height
    int holoTheme -> holoTheme
    int homeAsUpIndicator -> homeAsUpIndicator
    int homeLayout -> homeLayout
    int horizontalProgressLayout -> horizontalProgressLayout
    int icon -> icon
    int iconifiedByDefault -> iconifiedByDefault
    int indeterminateProgressStyle -> indeterminateProgressStyle
    int initialActivityCount -> initialActivityCount
    int is24HourView -> is24HourView
    int isLightTheme -> isLightTheme
    int itemPadding -> itemPadding
    int layout -> layout
    int listChoiceBackgroundIndicator -> listChoiceBackgroundIndicator
    int listDividerAlertDialog -> listDividerAlertDialog
    int listItemLayout -> listItemLayout
    int listLayout -> listLayout
    int listPopupWindowStyle -> listPopupWindowStyle
    int listPreferredItemHeight -> listPreferredItemHeight
    int listPreferredItemHeightLarge -> listPreferredItemHeightLarge
    int listPreferredItemHeightSmall -> listPreferredItemHeightSmall
    int listPreferredItemPaddingLeft -> listPreferredItemPaddingLeft
    int listPreferredItemPaddingRight -> listPreferredItemPaddingRight
    int logo -> logo
    int max -> max
    int min -> min
    int multiChoiceItemLayout -> multiChoiceItemLayout
    int navigationMode -> navigationMode
    int numberPickerDownButtonStyle -> numberPickerDownButtonStyle
    int numberPickerInputTextStyle -> numberPickerInputTextStyle
    int numberPickerPreferenceStyle -> numberPickerPreferenceStyle
    int numberPickerStyle -> numberPickerStyle
    int numberPickerUpButtonStyle -> numberPickerUpButtonStyle
    int paddingEnd -> paddingEnd
    int paddingStart -> paddingStart
    int panelMenuListTheme -> panelMenuListTheme
    int panelMenuListWidth -> panelMenuListWidth
    int popupMenuStyle -> popupMenuStyle
    int popupPromptView -> popupPromptView
    int popupWindowStyle -> popupWindowStyle
    int preferenceCategoryStyle -> preferenceCategoryStyle
    int preferenceFragmentStyle -> preferenceFragmentStyle
    int preferenceFrameLayoutStyle -> preferenceFrameLayoutStyle
    int preferenceInformationStyle -> preferenceInformationStyle
    int preferenceLayoutChild -> preferenceLayoutChild
    int preferencePanelStyle -> preferencePanelStyle
    int preferenceScreenStyle -> preferenceScreenStyle
    int preferenceStyle -> preferenceStyle
    int preferenceTheme -> preferenceTheme
    int progressBarPadding -> progressBarPadding
    int progressBarStyle -> progressBarStyle
    int progressLayout -> progressLayout
    int queryHint -> queryHint
    int ringtonePreferenceStyle -> ringtonePreferenceStyle
    int searchDropdownBackground -> searchDropdownBackground
    int searchResultListItemHeight -> searchResultListItemHeight
    int searchViewAutoCompleteTextView -> searchViewAutoCompleteTextView
    int searchViewCloseIcon -> searchViewCloseIcon
    int searchViewEditQuery -> searchViewEditQuery
    int searchViewEditQueryBackground -> searchViewEditQueryBackground
    int searchViewGoIcon -> searchViewGoIcon
    int searchViewSearchIcon -> searchViewSearchIcon
    int searchViewTextField -> searchViewTextField
    int searchViewTextFieldRight -> searchViewTextFieldRight
    int searchViewVoiceIcon -> searchViewVoiceIcon
    int seekBarDialogPreferenceStyle -> seekBarDialogPreferenceStyle
    int seekBarPreferenceStyle -> seekBarPreferenceStyle
    int segmentedButtonStyle -> segmentedButtonStyle
    int selectableItemBackground -> selectableItemBackground
    int selectionDivider -> selectionDivider
    int selectionDividerHeight -> selectionDividerHeight
    int selectionDividersDistance -> selectionDividersDistance
    int singleChoiceItemLayout -> singleChoiceItemLayout
    int solidColor -> solidColor
    int spinnerDropDownItemStyle -> spinnerDropDownItemStyle
    int spinnerItemStyle -> spinnerItemStyle
    int spinnerMode -> spinnerMode
    int spinnerStyle -> spinnerStyle
    int subtitle -> subtitle
    int subtitleTextStyle -> subtitleTextStyle
    int switchMinWidth -> switchMinWidth
    int switchPadding -> switchPadding
    int switchPreferenceStyle -> switchPreferenceStyle
    int switchScreenPreferenceStyle -> switchScreenPreferenceStyle
    int switchStyle -> switchStyle
    int switchStyleOld -> switchStyleOld
    int switchTextAppearance -> switchTextAppearance
    int textAppearanceLargePopupMenu -> textAppearanceLargePopupMenu
    int textAppearanceListItem -> textAppearanceListItem
    int textAppearanceListItemSmall -> textAppearanceListItemSmall
    int textAppearanceSearchResultSubtitle -> textAppearanceSearchResultSubtitle
    int textAppearanceSearchResultTitle -> textAppearanceSearchResultTitle
    int textAppearanceSmallPopupMenu -> textAppearanceSmallPopupMenu
    int textColorAlertDialogListItem -> textColorAlertDialogListItem
    int textColorSearchUrl -> textColorSearchUrl
    int textOff -> textOff
    int textOn -> textOn
    int thumb -> thumb
    int thumbTextPadding -> thumbTextPadding
    int timeAmPmPicker -> timeAmPmPicker
    int timeAmPmPickerBackground -> timeAmPmPickerBackground
    int timeAmPmPickerTextColor -> timeAmPmPickerTextColor
    int timeCenterPointerColor -> timeCenterPointerColor
    int timeCenterPointerRadius -> timeCenterPointerRadius
    int timeCircleColor -> timeCircleColor
    int timePickerSelectorColor -> timePickerSelectorColor
    int timePreferenceStyle -> timePreferenceStyle
    int timeRadialTextColor -> timeRadialTextColor
    int title -> title
    int titleTextStyle -> titleTextStyle
    int toastFrameBackground -> toastFrameBackground
    int toggleWhenClick -> toggleWhenClick
    int topBright -> topBright
    int topDark -> topDark
    int track -> track
    int virtualButtonPressedDrawable -> virtualButtonPressedDrawable
    int windowActionBar -> windowActionBar
    int windowActionBarOverlay -> windowActionBarOverlay
    int windowActionModeOverlay -> windowActionModeOverlay
    int windowAnimationStyle -> windowAnimationStyle
    int windowContentOverlay -> windowContentOverlay
    int windowFixedHeightMajor -> windowFixedHeightMajor
    int windowFixedHeightMinor -> windowFixedHeightMinor
    int windowFixedWidthMajor -> windowFixedWidthMajor
    int windowFixedWidthMinor -> windowFixedWidthMinor
    int windowMinHeightMajor -> windowMinHeightMajor
    int windowMinHeightMinor -> windowMinHeightMinor
    int windowMinWidthMajor -> windowMinWidthMajor
    int windowMinWidthMinor -> windowMinWidthMinor
    int windowNoTitle -> windowNoTitle
    int windowSplitActionBar -> windowSplitActionBar
    int wrapSelectorWheel -> wrapSelectorWheel
    int yesNoPreferenceStyle -> yesNoPreferenceStyle
org.holoeverywhere.preference.R$bool -> org.holoeverywhere.preference.R$bool:
    int abc_action_bar_embed_tabs_pre_jb -> abc_action_bar_embed_tabs_pre_jb
    int abc_action_bar_expanded_action_views_exclusive -> abc_action_bar_expanded_action_views_exclusive
    int abc_config_actionMenuItemAllCaps -> abc_config_actionMenuItemAllCaps
    int abc_config_allowActionMenuItemTextWithIcon -> abc_config_allowActionMenuItemTextWithIcon
    int abc_config_showMenuShortcutsWhenKeyboardPresent -> abc_config_showMenuShortcutsWhenKeyboardPresent
    int abc_split_action_bar_is_narrow -> abc_split_action_bar_is_narrow
    int preferences_prefer_dual_pane -> preferences_prefer_dual_pane
org.holoeverywhere.preference.R$id -> org.holoeverywhere.preference.R$id:
    int action_bar -> action_bar
    int action_bar_activity_content -> action_bar_activity_content
    int action_bar_container -> action_bar_container
    int action_bar_overlay_layout -> action_bar_overlay_layout
    int action_bar_root -> action_bar_root
    int action_bar_subtitle -> action_bar_subtitle
    int action_bar_title -> action_bar_title
    int action_context_bar -> action_context_bar
    int action_menu_divider -> action_menu_divider
    int action_menu_presenter -> action_menu_presenter
    int action_mode_bar -> action_mode_bar
    int action_mode_bar_stub -> action_mode_bar_stub
    int action_mode_close_button -> action_mode_close_button
    int activity_chooser_view_content -> activity_chooser_view_content
    int alertTitle -> alertTitle
    int ampm_label -> ampm_label
    int animator -> animator
    int atThumb -> atThumb
    int auto -> auto
    int back_button -> back_button
    int button1 -> button1
    int button2 -> button2
    int button3 -> button3
    int buttonPanel -> buttonPanel
    int buttonPanelTopDivivder -> buttonPanelTopDivivder
    int button_always -> button_always
    int button_bar -> button_bar
    int button_once -> button_once
    int checkbox -> checkbox
    int contentPanel -> contentPanel
    int custom -> custom
    int customPanel -> customPanel
    int dark -> dark
    int date_picker_day -> date_picker_day
    int date_picker_month -> date_picker_month
    int date_picker_month_and_day -> date_picker_month_and_day
    int date_picker_week -> date_picker_week
    int date_picker_year -> date_picker_year
    int day_picker_selected_date_layout -> day_picker_selected_date_layout
    int decrement -> decrement
    int default_activity_button -> default_activity_button
    int dialog -> dialog
    int disableHome -> disableHome
    int done -> done
    int done_button -> done_button
    int dropdown -> dropdown
    int edit -> edit
    int edit_query -> edit_query
    int edittext_container -> edittext_container
    int empty -> empty
    int expand_activities_button -> expand_activities_button
    int expanded_menu -> expanded_menu
    int floating -> floating
    int fontLoaderFont -> fontLoaderFont
    int fontLoaderFontFamily -> fontLoaderFontFamily
    int fontLoaderFontStyle -> fontLoaderFontStyle
    int headers -> headers
    int home -> home
    int homeAsUp -> homeAsUp
    int hour_space -> hour_space
    int hours -> hours
    int icon -> icon
    int image -> image
    int increment -> increment
    int internalEmpty -> internalEmpty
    int invalid -> invalid
    int leftSpacer -> leftSpacer
    int left_icon -> left_icon
    int light -> light
    int listContainer -> listContainer
    int listMode -> listMode
    int list_footer -> list_footer
    int list_item -> list_item
    int message -> message
    int minutes -> minutes
    int minutes_space -> minutes_space
    int mixed -> mixed
    int month_text_view -> month_text_view
    int next_button -> next_button
    int no -> no
    int normal -> normal
    int numberpicker_input -> numberpicker_input
    int parentPanel -> parentPanel
    int preference -> preference
    int prefs -> prefs
    int prefs_frame -> prefs_frame
    int progress -> progress
    int progressContainer -> progressContainer
    int progress_circular -> progress_circular
    int progress_horizontal -> progress_horizontal
    int progress_number -> progress_number
    int progress_percent -> progress_percent
    int radio -> radio
    int resolver_grid -> resolver_grid
    int rightSpacer -> rightSpacer
    int right_container -> right_container
    int right_icon -> right_icon
    int scrollView -> scrollView
    int search_badge -> search_badge
    int search_bar -> search_bar
    int search_button -> search_button
    int search_close_btn -> search_close_btn
    int search_edit_frame -> search_edit_frame
    int search_go_btn -> search_go_btn
    int search_mag_icon -> search_mag_icon
    int search_plate -> search_plate
    int search_src_text -> search_src_text
    int search_voice_btn -> search_voice_btn
    int seekbar -> seekbar
    int select_dialog_listview -> select_dialog_listview
    int separator -> separator
    int shortcut -> shortcut
    int showCustom -> showCustom
    int showHome -> showHome
    int showTitle -> showTitle
    int skip_button -> skip_button
    int split_action_bar -> split_action_bar
    int submit_area -> submit_area
    int summary -> summary
    int switchWidget -> switchWidget
    int tabMode -> tabMode
    int tabSwipePager -> tabSwipePager
    int time_picker -> time_picker
    int time_picker_dialog -> time_picker_dialog
    int title -> title
    int titleDivider -> titleDivider
    int titleDividerTop -> titleDividerTop
    int title_container -> title_container
    int title_template -> title_template
    int topPanel -> topPanel
    int top_action_bar -> top_action_bar
    int typeface -> typeface
    int up -> up
    int useLogo -> useLogo
    int widget_frame -> widget_frame
    int yes -> yes
org.holoeverywhere.preference.R$layout -> org.holoeverywhere.preference.R$layout:
    int abc_action_bar_decor -> abc_action_bar_decor
    int abc_action_bar_decor_include -> abc_action_bar_decor_include
    int abc_action_bar_decor_overlay -> abc_action_bar_decor_overlay
    int abc_action_bar_home -> abc_action_bar_home
    int abc_action_bar_tab -> abc_action_bar_tab
    int abc_action_bar_tabbar -> abc_action_bar_tabbar
    int abc_action_bar_title_item -> abc_action_bar_title_item
    int abc_action_bar_view_list_nav_layout -> abc_action_bar_view_list_nav_layout
    int abc_action_menu_item_layout -> abc_action_menu_item_layout
    int abc_action_menu_layout -> abc_action_menu_layout
    int abc_action_mode_bar -> abc_action_mode_bar
    int abc_action_mode_close_item -> abc_action_mode_close_item
    int abc_activity_chooser_view -> abc_activity_chooser_view
    int abc_activity_chooser_view_list_item -> abc_activity_chooser_view_list_item
    int abc_expanded_menu_layout -> abc_expanded_menu_layout
    int abc_list_menu_item_checkbox -> abc_list_menu_item_checkbox
    int abc_list_menu_item_icon -> abc_list_menu_item_icon
    int abc_list_menu_item_layout -> abc_list_menu_item_layout
    int abc_list_menu_item_radio -> abc_list_menu_item_radio
    int abc_popup_menu_item_layout -> abc_popup_menu_item_layout
    int abc_screen -> abc_screen
    int abc_search_dropdown_item_icons_2line -> abc_search_dropdown_item_icons_2line
    int abc_search_view -> abc_search_view
    int alert_dialog_holo -> alert_dialog_holo
    int alert_dialog_progress_holo -> alert_dialog_progress_holo
    int breadcrumbs_in_fragment -> breadcrumbs_in_fragment
    int date_picker_dialog -> date_picker_dialog
    int date_picker_done_button -> date_picker_done_button
    int date_picker_view_animator -> date_picker_view_animator
    int expandable_list_content -> expandable_list_content
    int expanded_menu_layout -> expanded_menu_layout
    int fragment_bread_crumb_item -> fragment_bread_crumb_item
    int fragment_bread_crumbs -> fragment_bread_crumbs
    int grid_content -> grid_content
    int list_content -> list_content
    int list_menu_item_checkbox -> list_menu_item_checkbox
    int list_menu_item_icon -> list_menu_item_icon
    int list_menu_item_layout -> list_menu_item_layout
    int list_menu_item_radio -> list_menu_item_radio
    int number_picker_with_selector_wheel -> number_picker_with_selector_wheel
    int preference_category_holo -> preference_category_holo
    int preference_child_holo -> preference_child_holo
    int preference_dialog_edittext -> preference_dialog_edittext
    int preference_dialog_numberpicker -> preference_dialog_numberpicker
    int preference_dialog_seekbar -> preference_dialog_seekbar
    int preference_dialog_seekbar_widget -> preference_dialog_seekbar_widget
    int preference_header_item -> preference_header_item
    int preference_holo -> preference_holo
    int preference_information_holo -> preference_information_holo
    int preference_list_content -> preference_list_content
    int preference_list_content_single -> preference_list_content_single
    int preference_list_fragment -> preference_list_fragment
    int preference_widget_checkbox -> preference_widget_checkbox
    int preference_widget_seekbar -> preference_widget_seekbar
    int preference_widget_switch -> preference_widget_switch
    int preference_widget_switch_screen -> preference_widget_switch_screen
    int preference_widget_switch_screen_bar -> preference_widget_switch_screen_bar
    int progress_dialog_holo -> progress_dialog_holo
    int resolve_list_item -> resolve_list_item
    int resolver_grid -> resolver_grid
    int select_dialog_holo -> select_dialog_holo
    int select_dialog_item_holo -> select_dialog_item_holo
    int select_dialog_multichoice_holo -> select_dialog_multichoice_holo
    int select_dialog_singlechoice_holo -> select_dialog_singlechoice_holo
    int simple_dropdown_hint -> simple_dropdown_hint
    int simple_dropdown_item_1line -> simple_dropdown_item_1line
    int simple_list_item_1 -> simple_list_item_1
    int simple_list_item_2 -> simple_list_item_2
    int simple_list_item_2_single_choice -> simple_list_item_2_single_choice
    int simple_list_item_activated_1 -> simple_list_item_activated_1
    int simple_list_item_activated_2 -> simple_list_item_activated_2
    int simple_list_item_checked -> simple_list_item_checked
    int simple_list_item_multiple_choice -> simple_list_item_multiple_choice
    int simple_list_item_single_choice -> simple_list_item_single_choice
    int simple_spinner_dropdown_item -> simple_spinner_dropdown_item
    int simple_spinner_item -> simple_spinner_item
    int support_simple_spinner_dropdown_item -> support_simple_spinner_dropdown_item
    int tab_swipe -> tab_swipe
    int time_header_label -> time_header_label
    int time_picker_dialog -> time_picker_dialog
    int transient_notification -> transient_notification
    int year_label_text_view -> year_label_text_view
org.holoeverywhere.preference.R$style -> org.holoeverywhere.preference.R$style:
    int ActionBarTabStyle_Deepgray -> ActionBarTabStyle_Deepgray
    int ActionBar_Solid_Deepgray -> ActionBar_Solid_Deepgray
    int ActionBar_Transparent_Deepgray -> ActionBar_Transparent_Deepgray
    int ActionButton_CloseMode_Deepgray -> ActionButton_CloseMode_Deepgray
    int AppBaseTheme -> AppBaseTheme
    int DropDownListView_Deepgray -> DropDownListView_Deepgray
    int DropDownNav_Deepgray -> DropDownNav_Deepgray
    int Holo -> Holo
    int Holo_AlertDialog -> Holo_AlertDialog
    int Holo_AlertDialog_Light -> Holo_AlertDialog_Light
    int Holo_Animation -> Holo_Animation
    int Holo_Animation_Dialog -> Holo_Animation_Dialog
    int Holo_Animation_DropDownDown -> Holo_Animation_DropDownDown
    int Holo_Animation_DropDownUp -> Holo_Animation_DropDownUp
    int Holo_Animation_PopupWindow -> Holo_Animation_PopupWindow
    int Holo_Animation_Toast -> Holo_Animation_Toast
    int Holo_AutoCompleteTextView -> Holo_AutoCompleteTextView
    int Holo_AutoCompleteTextView_Light -> Holo_AutoCompleteTextView_Light
    int Holo_Base_Theme -> Holo_Base_Theme
    int Holo_Base_Theme_Dialog -> Holo_Base_Theme_Dialog
    int Holo_Base_Theme_Dialog_Light -> Holo_Base_Theme_Dialog_Light
    int Holo_Base_Theme_Dialog_Light_NoFrame -> Holo_Base_Theme_Dialog_Light_NoFrame
    int Holo_Base_Theme_Dialog_NoFrame -> Holo_Base_Theme_Dialog_NoFrame
    int Holo_Base_Theme_Light -> Holo_Base_Theme_Light
    int Holo_Base_Theme_Light_DarkActionBar -> Holo_Base_Theme_Light_DarkActionBar
    int Holo_Button -> Holo_Button
    int Holo_ButtonBar -> Holo_ButtonBar
    int Holo_ButtonBar_AlertDialog -> Holo_ButtonBar_AlertDialog
    int Holo_Button_Borderless -> Holo_Button_Borderless
    int Holo_Button_Borderless_Light -> Holo_Button_Borderless_Light
    int Holo_Button_Borderless_Small -> Holo_Button_Borderless_Small
    int Holo_Button_Borderless_Small_Light -> Holo_Button_Borderless_Small_Light
    int Holo_Button_Light -> Holo_Button_Light
    int Holo_Button_Small -> Holo_Button_Small
    int Holo_Button_Small_Light -> Holo_Button_Small_Light
    int Holo_Button_Toggle -> Holo_Button_Toggle
    int Holo_Button_Toggle_Light -> Holo_Button_Toggle_Light
    int Holo_CompoundButton -> Holo_CompoundButton
    int Holo_CompoundButton_CheckBox -> Holo_CompoundButton_CheckBox
    int Holo_CompoundButton_CheckBox_Light -> Holo_CompoundButton_CheckBox_Light
    int Holo_CompoundButton_RadioButton -> Holo_CompoundButton_RadioButton
    int Holo_CompoundButton_RadioButton_Light -> Holo_CompoundButton_RadioButton_Light
    int Holo_DateTimePicker -> Holo_DateTimePicker
    int Holo_DateTimePicker_Light -> Holo_DateTimePicker_Light
    int Holo_DialogWindowTitle -> Holo_DialogWindowTitle
    int Holo_DialogWindowTitle_Light -> Holo_DialogWindowTitle_Light
    int Holo_DropDownItem -> Holo_DropDownItem
    int Holo_EditText -> Holo_EditText
    int Holo_EditText_Light -> Holo_EditText_Light
    int Holo_EditText_NumberPickerInputText -> Holo_EditText_NumberPickerInputText
    int Holo_ExpandableListView -> Holo_ExpandableListView
    int Holo_ExpandableListView_Light -> Holo_ExpandableListView_Light
    int Holo_GridView -> Holo_GridView
    int Holo_ImageButton -> Holo_ImageButton
    int Holo_ImageButton_Light -> Holo_ImageButton_Light
    int Holo_Internal_Preference -> Holo_Internal_Preference
    int Holo_Internal_Preference_Light -> Holo_Internal_Preference_Light
    int Holo_ListPopupWindow -> Holo_ListPopupWindow
    int Holo_ListPopupWindow_Light -> Holo_ListPopupWindow_Light
    int Holo_ListView -> Holo_ListView
    int Holo_ListView_Base -> Holo_ListView_Base
    int Holo_ListView_DropDown -> Holo_ListView_DropDown
    int Holo_ListView_DropDown_Light -> Holo_ListView_DropDown_Light
    int Holo_ListView_Light -> Holo_ListView_Light
    int Holo_NumberPicker -> Holo_NumberPicker
    int Holo_PopupWindow -> Holo_PopupWindow
    int Holo_PopupWindow_Light -> Holo_PopupWindow_Light
    int Holo_Preference -> Holo_Preference
    int Holo_PreferenceCategory -> Holo_PreferenceCategory
    int Holo_PreferenceCheckBox -> Holo_PreferenceCheckBox
    int Holo_PreferenceDate -> Holo_PreferenceDate
    int Holo_PreferenceDialog -> Holo_PreferenceDialog
    int Holo_PreferenceDialog_EditTextPreference -> Holo_PreferenceDialog_EditTextPreference
    int Holo_PreferenceDialog_NumberPickerPreference -> Holo_PreferenceDialog_NumberPickerPreference
    int Holo_PreferenceDialog_SeekBarDialogPreference -> Holo_PreferenceDialog_SeekBarDialogPreference
    int Holo_PreferenceDialog_YesNoPreference -> Holo_PreferenceDialog_YesNoPreference
    int Holo_PreferenceFragment -> Holo_PreferenceFragment
    int Holo_PreferenceFrameLayout -> Holo_PreferenceFrameLayout
    int Holo_PreferenceInformation -> Holo_PreferenceInformation
    int Holo_PreferencePanel -> Holo_PreferencePanel
    int Holo_PreferenceRingtone -> Holo_PreferenceRingtone
    int Holo_PreferenceScreen -> Holo_PreferenceScreen
    int Holo_PreferenceSeekBar -> Holo_PreferenceSeekBar
    int Holo_PreferenceSwitch -> Holo_PreferenceSwitch
    int Holo_PreferenceSwitchScreen -> Holo_PreferenceSwitchScreen
    int Holo_PreferenceTime -> Holo_PreferenceTime
    int Holo_PreferenceTwoState -> Holo_PreferenceTwoState
    int Holo_ProgressBar -> Holo_ProgressBar
    int Holo_ProgressBar_Horizontal -> Holo_ProgressBar_Horizontal
    int Holo_ProgressBar_Horizontal_Light -> Holo_ProgressBar_Horizontal_Light
    int Holo_ProgressBar_Large -> Holo_ProgressBar_Large
    int Holo_ProgressBar_Small -> Holo_ProgressBar_Small
    int Holo_RatingBar -> Holo_RatingBar
    int Holo_RatingBar_Indicator -> Holo_RatingBar_Indicator
    int Holo_RatingBar_Indicator_Light -> Holo_RatingBar_Indicator_Light
    int Holo_RatingBar_Light -> Holo_RatingBar_Light
    int Holo_RatingBar_Small -> Holo_RatingBar_Small
    int Holo_RatingBar_Small_Light -> Holo_RatingBar_Small_Light
    int Holo_SeekBar -> Holo_SeekBar
    int Holo_SeekBar_Light -> Holo_SeekBar_Light
    int Holo_SegmentedButton -> Holo_SegmentedButton
    int Holo_SegmentedButton_Light -> Holo_SegmentedButton_Light
    int Holo_Spinner -> Holo_Spinner
    int Holo_Spinner_Light -> Holo_Spinner_Light
    int Holo_Switch -> Holo_Switch
    int Holo_Switch_Light -> Holo_Switch_Light
    int Holo_Switch_Light_Old -> Holo_Switch_Light_Old
    int Holo_Switch_Old -> Holo_Switch_Old
    int Holo_Switch_TextAppearance -> Holo_Switch_TextAppearance
    int Holo_Switch_TextAppearance_Light -> Holo_Switch_TextAppearance_Light
    int Holo_TextAppearance -> Holo_TextAppearance
    int Holo_TextAppearance_DialogWindowTitle -> Holo_TextAppearance_DialogWindowTitle
    int Holo_TextAppearance_DialogWindowTitle_Light -> Holo_TextAppearance_DialogWindowTitle_Light
    int Holo_TextAppearance_DropDownItem -> Holo_TextAppearance_DropDownItem
    int Holo_TextAppearance_Inverse -> Holo_TextAppearance_Inverse
    int Holo_TextAppearance_Inverse_Light -> Holo_TextAppearance_Inverse_Light
    int Holo_TextAppearance_Large -> Holo_TextAppearance_Large
    int Holo_TextAppearance_Large_Inverse -> Holo_TextAppearance_Large_Inverse
    int Holo_TextAppearance_Large_Inverse_Light -> Holo_TextAppearance_Large_Inverse_Light
    int Holo_TextAppearance_Large_Light -> Holo_TextAppearance_Large_Light
    int Holo_TextAppearance_Light -> Holo_TextAppearance_Light
    int Holo_TextAppearance_Medium -> Holo_TextAppearance_Medium
    int Holo_TextAppearance_Medium_Inverse -> Holo_TextAppearance_Medium_Inverse
    int Holo_TextAppearance_Medium_Inverse_Light -> Holo_TextAppearance_Medium_Inverse_Light
    int Holo_TextAppearance_Medium_Light -> Holo_TextAppearance_Medium_Light
    int Holo_TextAppearance_PopupMenu -> Holo_TextAppearance_PopupMenu
    int Holo_TextAppearance_PopupMenu_Large -> Holo_TextAppearance_PopupMenu_Large
    int Holo_TextAppearance_PopupMenu_Light -> Holo_TextAppearance_PopupMenu_Light
    int Holo_TextAppearance_PopupMenu_Light_Large -> Holo_TextAppearance_PopupMenu_Light_Large
    int Holo_TextAppearance_PopupMenu_Light_Small -> Holo_TextAppearance_PopupMenu_Light_Small
    int Holo_TextAppearance_PopupMenu_Small -> Holo_TextAppearance_PopupMenu_Small
    int Holo_TextAppearance_Small -> Holo_TextAppearance_Small
    int Holo_TextAppearance_Small_Inverse -> Holo_TextAppearance_Small_Inverse
    int Holo_TextAppearance_Small_Inverse_Light -> Holo_TextAppearance_Small_Inverse_Light
    int Holo_TextAppearance_Small_Light -> Holo_TextAppearance_Small_Light
    int Holo_TextAppearance_TextView -> Holo_TextAppearance_TextView
    int Holo_TextAppearance_TextView_SpinnerItem -> Holo_TextAppearance_TextView_SpinnerItem
    int Holo_TextAppearance_TextView_SpinnerItem_Light -> Holo_TextAppearance_TextView_SpinnerItem_Light
    int Holo_TextAppearance_Toast -> Holo_TextAppearance_Toast
    int Holo_TextView -> Holo_TextView
    int Holo_TextView_ListSeparator -> Holo_TextView_ListSeparator
    int Holo_TextView_ListSeparator_Light -> Holo_TextView_ListSeparator_Light
    int Holo_TextView_SpinnerItem -> Holo_TextView_SpinnerItem
    int Holo_TextView_SpinnerItem_DropDown -> Holo_TextView_SpinnerItem_DropDown
    int Holo_TextView_SpinnerItem_DropDown_Light -> Holo_TextView_SpinnerItem_DropDown_Light
    int Holo_TextView_SpinnerItem_Light -> Holo_TextView_SpinnerItem_Light
    int Holo_Theme -> Holo_Theme
    int Holo_Theme_Dialog -> Holo_Theme_Dialog
    int Holo_Theme_DialogWhenLarge -> Holo_Theme_DialogWhenLarge
    int Holo_Theme_DialogWhenLarge_Light -> Holo_Theme_DialogWhenLarge_Light
    int Holo_Theme_DialogWhenLarge_Light_DarkActionBar -> Holo_Theme_DialogWhenLarge_Light_DarkActionBar
    int Holo_Theme_DialogWhenLarge_Light_DarkActionBar_NoActionBar -> Holo_Theme_DialogWhenLarge_Light_DarkActionBar_NoActionBar
    int Holo_Theme_DialogWhenLarge_Light_NoActionBar -> Holo_Theme_DialogWhenLarge_Light_NoActionBar
    int Holo_Theme_DialogWhenLarge_NoActionBar -> Holo_Theme_DialogWhenLarge_NoActionBar
    int Holo_Theme_Dialog_Alert -> Holo_Theme_Dialog_Alert
    int Holo_Theme_Dialog_Alert_Light -> Holo_Theme_Dialog_Alert_Light
    int Holo_Theme_Dialog_FixedSize -> Holo_Theme_Dialog_FixedSize
    int Holo_Theme_Dialog_Light -> Holo_Theme_Dialog_Light
    int Holo_Theme_Dialog_Light_FixedSize -> Holo_Theme_Dialog_Light_FixedSize
    int Holo_Theme_Dialog_Light_NoFrame -> Holo_Theme_Dialog_Light_NoFrame
    int Holo_Theme_Dialog_NoFrame -> Holo_Theme_Dialog_NoFrame
    int Holo_Theme_Fullscreen -> Holo_Theme_Fullscreen
    int Holo_Theme_Fullscreen_Wallpaper -> Holo_Theme_Fullscreen_Wallpaper
    int Holo_Theme_Light -> Holo_Theme_Light
    int Holo_Theme_Light_DarkActionBar -> Holo_Theme_Light_DarkActionBar
    int Holo_Theme_Light_DarkActionBar_Fullscreen -> Holo_Theme_Light_DarkActionBar_Fullscreen
    int Holo_Theme_Light_DarkActionBar_Fullscreen_Wallpaper -> Holo_Theme_Light_DarkActionBar_Fullscreen_Wallpaper
    int Holo_Theme_Light_DarkActionBar_NoActionBar -> Holo_Theme_Light_DarkActionBar_NoActionBar
    int Holo_Theme_Light_DarkActionBar_NoActionBar_Fullscreen -> Holo_Theme_Light_DarkActionBar_NoActionBar_Fullscreen
    int Holo_Theme_Light_DarkActionBar_NoActionBar_Fullscreen_Wallpaper -> Holo_Theme_Light_DarkActionBar_NoActionBar_Fullscreen_Wallpaper
    int Holo_Theme_Light_DarkActionBar_NoActionBar_Wallpaper -> Holo_Theme_Light_DarkActionBar_NoActionBar_Wallpaper
    int Holo_Theme_Light_DarkActionBar_Translucent -> Holo_Theme_Light_DarkActionBar_Translucent
    int Holo_Theme_Light_DarkActionBar_Wallpaper -> Holo_Theme_Light_DarkActionBar_Wallpaper
    int Holo_Theme_Light_Fullscreen -> Holo_Theme_Light_Fullscreen
    int Holo_Theme_Light_Fullscreen_Wallpaper -> Holo_Theme_Light_Fullscreen_Wallpaper
    int Holo_Theme_Light_NoActionBar -> Holo_Theme_Light_NoActionBar
    int Holo_Theme_Light_NoActionBar_Fullscreen -> Holo_Theme_Light_NoActionBar_Fullscreen
    int Holo_Theme_Light_NoActionBar_Fullscreen_Wallpaper -> Holo_Theme_Light_NoActionBar_Fullscreen_Wallpaper
    int Holo_Theme_Light_NoActionBar_Wallpaper -> Holo_Theme_Light_NoActionBar_Wallpaper
    int Holo_Theme_Light_Translucent -> Holo_Theme_Light_Translucent
    int Holo_Theme_Light_Wallpaper -> Holo_Theme_Light_Wallpaper
    int Holo_Theme_NoActionBar -> Holo_Theme_NoActionBar
    int Holo_Theme_NoActionBar_Fullscreen -> Holo_Theme_NoActionBar_Fullscreen
    int Holo_Theme_NoActionBar_Fullscreen_Wallpaper -> Holo_Theme_NoActionBar_Fullscreen_Wallpaper
    int Holo_Theme_NoActionBar_Wallpaper -> Holo_Theme_NoActionBar_Wallpaper
    int Holo_Theme_Toast -> Holo_Theme_Toast
    int Holo_Theme_Translucent -> Holo_Theme_Translucent
    int Holo_Theme_Wallpaper -> Holo_Theme_Wallpaper
    int PopupMenu_Deepgray -> PopupMenu_Deepgray
    int ProgressBar_Deepgray -> ProgressBar_Deepgray
    int TextAppearance_AppCompat_Base_CompactMenu_Dialog -> TextAppearance_AppCompat_Base_CompactMenu_Dialog
    int TextAppearance_AppCompat_Base_SearchResult -> TextAppearance_AppCompat_Base_SearchResult
    int TextAppearance_AppCompat_Base_SearchResult_Subtitle -> TextAppearance_AppCompat_Base_SearchResult_Subtitle
    int TextAppearance_AppCompat_Base_SearchResult_Title -> TextAppearance_AppCompat_Base_SearchResult_Title
    int TextAppearance_AppCompat_Base_Widget_PopupMenu_Large -> TextAppearance_AppCompat_Base_Widget_PopupMenu_Large
    int TextAppearance_AppCompat_Base_Widget_PopupMenu_Small -> TextAppearance_AppCompat_Base_Widget_PopupMenu_Small
    int TextAppearance_AppCompat_Light_Base_SearchResult -> TextAppearance_AppCompat_Light_Base_SearchResult
    int TextAppearance_AppCompat_Light_Base_SearchResult_Subtitle -> TextAppearance_AppCompat_Light_Base_SearchResult_Subtitle
    int TextAppearance_AppCompat_Light_Base_SearchResult_Title -> TextAppearance_AppCompat_Light_Base_SearchResult_Title
    int TextAppearance_AppCompat_Light_Base_Widget_PopupMenu_Large -> TextAppearance_AppCompat_Light_Base_Widget_PopupMenu_Large
    int TextAppearance_AppCompat_Light_Base_Widget_PopupMenu_Small -> TextAppearance_AppCompat_Light_Base_Widget_PopupMenu_Small
    int TextAppearance_AppCompat_Light_SearchResult_Subtitle -> TextAppearance_AppCompat_Light_SearchResult_Subtitle
    int TextAppearance_AppCompat_Light_SearchResult_Title -> TextAppearance_AppCompat_Light_SearchResult_Title
    int TextAppearance_AppCompat_Light_Widget_PopupMenu_Large -> TextAppearance_AppCompat_Light_Widget_PopupMenu_Large
    int TextAppearance_AppCompat_Light_Widget_PopupMenu_Small -> TextAppearance_AppCompat_Light_Widget_PopupMenu_Small
    int TextAppearance_AppCompat_SearchResult_Subtitle -> TextAppearance_AppCompat_SearchResult_Subtitle
    int TextAppearance_AppCompat_SearchResult_Title -> TextAppearance_AppCompat_SearchResult_Title
    int TextAppearance_AppCompat_Widget_ActionBar_Menu -> TextAppearance_AppCompat_Widget_ActionBar_Menu
    int TextAppearance_AppCompat_Widget_ActionBar_Subtitle -> TextAppearance_AppCompat_Widget_ActionBar_Subtitle
    int TextAppearance_AppCompat_Widget_ActionBar_Subtitle_Inverse -> TextAppearance_AppCompat_Widget_ActionBar_Subtitle_Inverse
    int TextAppearance_AppCompat_Widget_ActionBar_Title -> TextAppearance_AppCompat_Widget_ActionBar_Title
    int TextAppearance_AppCompat_Widget_ActionBar_Title_Inverse -> TextAppearance_AppCompat_Widget_ActionBar_Title_Inverse
    int TextAppearance_AppCompat_Widget_ActionMode_Subtitle -> TextAppearance_AppCompat_Widget_ActionMode_Subtitle
    int TextAppearance_AppCompat_Widget_ActionMode_Subtitle_Inverse -> TextAppearance_AppCompat_Widget_ActionMode_Subtitle_Inverse
    int TextAppearance_AppCompat_Widget_ActionMode_Title -> TextAppearance_AppCompat_Widget_ActionMode_Title
    int TextAppearance_AppCompat_Widget_ActionMode_Title_Inverse -> TextAppearance_AppCompat_Widget_ActionMode_Title_Inverse
    int TextAppearance_AppCompat_Widget_Base_ActionBar_Menu -> TextAppearance_AppCompat_Widget_Base_ActionBar_Menu
    int TextAppearance_AppCompat_Widget_Base_ActionBar_Subtitle -> TextAppearance_AppCompat_Widget_Base_ActionBar_Subtitle
    int TextAppearance_AppCompat_Widget_Base_ActionBar_Subtitle_Inverse -> TextAppearance_AppCompat_Widget_Base_ActionBar_Subtitle_Inverse
    int TextAppearance_AppCompat_Widget_Base_ActionBar_Title -> TextAppearance_AppCompat_Widget_Base_ActionBar_Title
    int TextAppearance_AppCompat_Widget_Base_ActionBar_Title_Inverse -> TextAppearance_AppCompat_Widget_Base_ActionBar_Title_Inverse
    int TextAppearance_AppCompat_Widget_Base_ActionMode_Subtitle -> TextAppearance_AppCompat_Widget_Base_ActionMode_Subtitle
    int TextAppearance_AppCompat_Widget_Base_ActionMode_Subtitle_Inverse -> TextAppearance_AppCompat_Widget_Base_ActionMode_Subtitle_Inverse
    int TextAppearance_AppCompat_Widget_Base_ActionMode_Title -> TextAppearance_AppCompat_Widget_Base_ActionMode_Title
    int TextAppearance_AppCompat_Widget_Base_ActionMode_Title_Inverse -> TextAppearance_AppCompat_Widget_Base_ActionMode_Title_Inverse
    int TextAppearance_AppCompat_Widget_Base_DropDownItem -> TextAppearance_AppCompat_Widget_Base_DropDownItem
    int TextAppearance_AppCompat_Widget_DropDownItem -> TextAppearance_AppCompat_Widget_DropDownItem
    int TextAppearance_AppCompat_Widget_PopupMenu_Large -> TextAppearance_AppCompat_Widget_PopupMenu_Large
    int TextAppearance_AppCompat_Widget_PopupMenu_Small -> TextAppearance_AppCompat_Widget_PopupMenu_Small
    int TextAppearance_Widget_AppCompat_Base_ExpandedMenu_Item -> TextAppearance_Widget_AppCompat_Base_ExpandedMenu_Item
    int TextAppearance_Widget_AppCompat_ExpandedMenu_Item -> TextAppearance_Widget_AppCompat_ExpandedMenu_Item
    int Theme_AppCompat -> Theme_AppCompat
    int Theme_AppCompat_Base_CompactMenu -> Theme_AppCompat_Base_CompactMenu
    int Theme_AppCompat_Base_CompactMenu_Dialog -> Theme_AppCompat_Base_CompactMenu_Dialog
    int Theme_AppCompat_CompactMenu -> Theme_AppCompat_CompactMenu
    int Theme_AppCompat_CompactMenu_Dialog -> Theme_AppCompat_CompactMenu_Dialog
    int Theme_AppCompat_Light -> Theme_AppCompat_Light
    int Theme_AppCompat_Light_DarkActionBar -> Theme_AppCompat_Light_DarkActionBar
    int Theme_Base -> Theme_Base
    int Theme_Base_AppCompat -> Theme_Base_AppCompat
    int Theme_Base_AppCompat_Light -> Theme_Base_AppCompat_Light
    int Theme_Base_AppCompat_Light_DarkActionBar -> Theme_Base_AppCompat_Light_DarkActionBar
    int Theme_Base_Light -> Theme_Base_Light
    int Theme_Deepgray -> Theme_Deepgray
    int Theme_Deepgray_Widget -> Theme_Deepgray_Widget
    int Widget_AppCompat_ActionBar -> Widget_AppCompat_ActionBar
    int Widget_AppCompat_ActionBar_Solid -> Widget_AppCompat_ActionBar_Solid
    int Widget_AppCompat_ActionBar_TabBar -> Widget_AppCompat_ActionBar_TabBar
    int Widget_AppCompat_ActionBar_TabText -> Widget_AppCompat_ActionBar_TabText
    int Widget_AppCompat_ActionBar_TabView -> Widget_AppCompat_ActionBar_TabView
    int Widget_AppCompat_ActionButton -> Widget_AppCompat_ActionButton
    int Widget_AppCompat_ActionButton_CloseMode -> Widget_AppCompat_ActionButton_CloseMode
    int Widget_AppCompat_ActionButton_Overflow -> Widget_AppCompat_ActionButton_Overflow
    int Widget_AppCompat_ActionMode -> Widget_AppCompat_ActionMode
    int Widget_AppCompat_ActivityChooserView -> Widget_AppCompat_ActivityChooserView
    int Widget_AppCompat_AutoCompleteTextView -> Widget_AppCompat_AutoCompleteTextView
    int Widget_AppCompat_Base_ActionBar -> Widget_AppCompat_Base_ActionBar
    int Widget_AppCompat_Base_ActionBar_Solid -> Widget_AppCompat_Base_ActionBar_Solid
    int Widget_AppCompat_Base_ActionBar_TabBar -> Widget_AppCompat_Base_ActionBar_TabBar
    int Widget_AppCompat_Base_ActionBar_TabText -> Widget_AppCompat_Base_ActionBar_TabText
    int Widget_AppCompat_Base_ActionBar_TabView -> Widget_AppCompat_Base_ActionBar_TabView
    int Widget_AppCompat_Base_ActionButton -> Widget_AppCompat_Base_ActionButton
    int Widget_AppCompat_Base_ActionButton_CloseMode -> Widget_AppCompat_Base_ActionButton_CloseMode
    int Widget_AppCompat_Base_ActionButton_Overflow -> Widget_AppCompat_Base_ActionButton_Overflow
    int Widget_AppCompat_Base_ActionMode -> Widget_AppCompat_Base_ActionMode
    int Widget_AppCompat_Base_ActivityChooserView -> Widget_AppCompat_Base_ActivityChooserView
    int Widget_AppCompat_Base_AutoCompleteTextView -> Widget_AppCompat_Base_AutoCompleteTextView
    int Widget_AppCompat_Base_DropDownItem_Spinner -> Widget_AppCompat_Base_DropDownItem_Spinner
    int Widget_AppCompat_Base_ListView_DropDown -> Widget_AppCompat_Base_ListView_DropDown
    int Widget_AppCompat_Base_ListView_Menu -> Widget_AppCompat_Base_ListView_Menu
    int Widget_AppCompat_Base_PopupMenu -> Widget_AppCompat_Base_PopupMenu
    int Widget_AppCompat_Base_ProgressBar -> Widget_AppCompat_Base_ProgressBar
    int Widget_AppCompat_Base_ProgressBar_Horizontal -> Widget_AppCompat_Base_ProgressBar_Horizontal
    int Widget_AppCompat_Base_Spinner -> Widget_AppCompat_Base_Spinner
    int Widget_AppCompat_DropDownItem_Spinner -> Widget_AppCompat_DropDownItem_Spinner
    int Widget_AppCompat_Light_ActionBar -> Widget_AppCompat_Light_ActionBar
    int Widget_AppCompat_Light_ActionBar_Solid -> Widget_AppCompat_Light_ActionBar_Solid
    int Widget_AppCompat_Light_ActionBar_Solid_Inverse -> Widget_AppCompat_Light_ActionBar_Solid_Inverse
    int Widget_AppCompat_Light_ActionBar_TabBar -> Widget_AppCompat_Light_ActionBar_TabBar
    int Widget_AppCompat_Light_ActionBar_TabBar_Inverse -> Widget_AppCompat_Light_ActionBar_TabBar_Inverse
    int Widget_AppCompat_Light_ActionBar_TabText -> Widget_AppCompat_Light_ActionBar_TabText
    int Widget_AppCompat_Light_ActionBar_TabText_Inverse -> Widget_AppCompat_Light_ActionBar_TabText_Inverse
    int Widget_AppCompat_Light_ActionBar_TabView -> Widget_AppCompat_Light_ActionBar_TabView
    int Widget_AppCompat_Light_ActionBar_TabView_Inverse -> Widget_AppCompat_Light_ActionBar_TabView_Inverse
    int Widget_AppCompat_Light_ActionButton -> Widget_AppCompat_Light_ActionButton
    int Widget_AppCompat_Light_ActionButton_CloseMode -> Widget_AppCompat_Light_ActionButton_CloseMode
    int Widget_AppCompat_Light_ActionButton_Overflow -> Widget_AppCompat_Light_ActionButton_Overflow
    int Widget_AppCompat_Light_ActionMode_Inverse -> Widget_AppCompat_Light_ActionMode_Inverse
    int Widget_AppCompat_Light_ActivityChooserView -> Widget_AppCompat_Light_ActivityChooserView
    int Widget_AppCompat_Light_AutoCompleteTextView -> Widget_AppCompat_Light_AutoCompleteTextView
    int Widget_AppCompat_Light_Base_ActionBar -> Widget_AppCompat_Light_Base_ActionBar
    int Widget_AppCompat_Light_Base_ActionBar_Solid -> Widget_AppCompat_Light_Base_ActionBar_Solid
    int Widget_AppCompat_Light_Base_ActionBar_Solid_Inverse -> Widget_AppCompat_Light_Base_ActionBar_Solid_Inverse
    int Widget_AppCompat_Light_Base_ActionBar_TabBar -> Widget_AppCompat_Light_Base_ActionBar_TabBar
    int Widget_AppCompat_Light_Base_ActionBar_TabBar_Inverse -> Widget_AppCompat_Light_Base_ActionBar_TabBar_Inverse
    int Widget_AppCompat_Light_Base_ActionBar_TabText -> Widget_AppCompat_Light_Base_ActionBar_TabText
    int Widget_AppCompat_Light_Base_ActionBar_TabText_Inverse -> Widget_AppCompat_Light_Base_ActionBar_TabText_Inverse
    int Widget_AppCompat_Light_Base_ActionBar_TabView -> Widget_AppCompat_Light_Base_ActionBar_TabView
    int Widget_AppCompat_Light_Base_ActionBar_TabView_Inverse -> Widget_AppCompat_Light_Base_ActionBar_TabView_Inverse
    int Widget_AppCompat_Light_Base_ActionButton -> Widget_AppCompat_Light_Base_ActionButton
    int Widget_AppCompat_Light_Base_ActionButton_CloseMode -> Widget_AppCompat_Light_Base_ActionButton_CloseMode
    int Widget_AppCompat_Light_Base_ActionButton_Overflow -> Widget_AppCompat_Light_Base_ActionButton_Overflow
    int Widget_AppCompat_Light_Base_ActionMode_Inverse -> Widget_AppCompat_Light_Base_ActionMode_Inverse
    int Widget_AppCompat_Light_Base_ActivityChooserView -> Widget_AppCompat_Light_Base_ActivityChooserView
    int Widget_AppCompat_Light_Base_AutoCompleteTextView -> Widget_AppCompat_Light_Base_AutoCompleteTextView
    int Widget_AppCompat_Light_Base_DropDownItem_Spinner -> Widget_AppCompat_Light_Base_DropDownItem_Spinner
    int Widget_AppCompat_Light_Base_ListView_DropDown -> Widget_AppCompat_Light_Base_ListView_DropDown
    int Widget_AppCompat_Light_Base_PopupMenu -> Widget_AppCompat_Light_Base_PopupMenu
    int Widget_AppCompat_Light_Base_Spinner -> Widget_AppCompat_Light_Base_Spinner
    int Widget_AppCompat_Light_DropDownItem_Spinner -> Widget_AppCompat_Light_DropDownItem_Spinner
    int Widget_AppCompat_Light_ListView_DropDown -> Widget_AppCompat_Light_ListView_DropDown
    int Widget_AppCompat_Light_PopupMenu -> Widget_AppCompat_Light_PopupMenu
    int Widget_AppCompat_Light_Spinner_DropDown_ActionBar -> Widget_AppCompat_Light_Spinner_DropDown_ActionBar
    int Widget_AppCompat_ListView_DropDown -> Widget_AppCompat_ListView_DropDown
    int Widget_AppCompat_ListView_Menu -> Widget_AppCompat_ListView_Menu
    int Widget_AppCompat_PopupMenu -> Widget_AppCompat_PopupMenu
    int Widget_AppCompat_ProgressBar -> Widget_AppCompat_ProgressBar
    int Widget_AppCompat_ProgressBar_Horizontal -> Widget_AppCompat_ProgressBar_Horizontal
    int Widget_AppCompat_Spinner_DropDown_ActionBar -> Widget_AppCompat_Spinner_DropDown_ActionBar
org.holoeverywhere.preference.R$styleable -> org.holoeverywhere.preference.R$styleable:
    int[] AbsListView -> AbsListView
    int AbsListView_android_choiceMode -> AbsListView_android_choiceMode
    int AbsListView_android_fastScrollAlwaysVisible -> AbsListView_android_fastScrollAlwaysVisible
    int AbsListView_android_fastScrollEnabled -> AbsListView_android_fastScrollEnabled
    int[] AbsSpinner -> AbsSpinner
    int AbsSpinner_android_entries -> AbsSpinner_android_entries
    int[] ActionBar -> ActionBar
    int[] ActionBarLayout -> ActionBarLayout
    int ActionBarLayout_android_layout_gravity -> ActionBarLayout_android_layout_gravity
    int[] ActionBarWindow -> ActionBarWindow
    int ActionBarWindow_windowActionBar -> ActionBarWindow_windowActionBar
    int ActionBarWindow_windowActionBarOverlay -> ActionBarWindow_windowActionBarOverlay
    int ActionBarWindow_windowSplitActionBar -> ActionBarWindow_windowSplitActionBar
    int ActionBar_background -> ActionBar_background
    int ActionBar_backgroundSplit -> ActionBar_backgroundSplit
    int ActionBar_backgroundStacked -> ActionBar_backgroundStacked
    int ActionBar_customNavigationLayout -> ActionBar_customNavigationLayout
    int ActionBar_displayOptions -> ActionBar_displayOptions
    int ActionBar_height -> ActionBar_height
    int ActionBar_homeLayout -> ActionBar_homeLayout
    int ActionBar_icon -> ActionBar_icon
    int ActionBar_indeterminateProgressStyle -> ActionBar_indeterminateProgressStyle
    int ActionBar_itemPadding -> ActionBar_itemPadding
    int ActionBar_logo -> ActionBar_logo
    int ActionBar_navigationMode -> ActionBar_navigationMode
    int ActionBar_progressBarPadding -> ActionBar_progressBarPadding
    int ActionBar_progressBarStyle -> ActionBar_progressBarStyle
    int ActionBar_subtitle -> ActionBar_subtitle
    int ActionBar_subtitleTextStyle -> ActionBar_subtitleTextStyle
    int ActionBar_title -> ActionBar_title
    int ActionBar_titleTextStyle -> ActionBar_titleTextStyle
    int[] ActionMenuItemView -> ActionMenuItemView
    int ActionMenuItemView_android_minWidth -> ActionMenuItemView_android_minWidth
    int[] ActionMenuView -> ActionMenuView
    int[] ActionMode -> ActionMode
    int ActionMode_background -> ActionMode_background
    int ActionMode_backgroundSplit -> ActionMode_backgroundSplit
    int ActionMode_height -> ActionMode_height
    int ActionMode_subtitleTextStyle -> ActionMode_subtitleTextStyle
    int ActionMode_titleTextStyle -> ActionMode_titleTextStyle
    int[] ActivityChooserView -> ActivityChooserView
    int ActivityChooserView_expandActivityOverflowButtonDrawable -> ActivityChooserView_expandActivityOverflowButtonDrawable
    int ActivityChooserView_initialActivityCount -> ActivityChooserView_initialActivityCount
    int[] AlertDialog -> AlertDialog
    int AlertDialog_android_gravity -> AlertDialog_android_gravity
    int AlertDialog_bottomBright -> AlertDialog_bottomBright
    int AlertDialog_bottomDark -> AlertDialog_bottomDark
    int AlertDialog_bottomMedium -> AlertDialog_bottomMedium
    int AlertDialog_centerBright -> AlertDialog_centerBright
    int AlertDialog_centerDark -> AlertDialog_centerDark
    int AlertDialog_centerMedium -> AlertDialog_centerMedium
    int AlertDialog_fullBright -> AlertDialog_fullBright
    int AlertDialog_fullDark -> AlertDialog_fullDark
    int AlertDialog_horizontalProgressLayout -> AlertDialog_horizontalProgressLayout
    int AlertDialog_layout -> AlertDialog_layout
    int AlertDialog_listItemLayout -> AlertDialog_listItemLayout
    int AlertDialog_listLayout -> AlertDialog_listLayout
    int AlertDialog_multiChoiceItemLayout -> AlertDialog_multiChoiceItemLayout
    int AlertDialog_progressLayout -> AlertDialog_progressLayout
    int AlertDialog_singleChoiceItemLayout -> AlertDialog_singleChoiceItemLayout
    int AlertDialog_topBright -> AlertDialog_topBright
    int AlertDialog_topDark -> AlertDialog_topDark
    int[] AutoCompleteTextView -> AutoCompleteTextView
    int AutoCompleteTextView_android_completionHint -> AutoCompleteTextView_android_completionHint
    int AutoCompleteTextView_android_completionHintView -> AutoCompleteTextView_android_completionHintView
    int AutoCompleteTextView_android_completionThreshold -> AutoCompleteTextView_android_completionThreshold
    int AutoCompleteTextView_android_dropDownAnchor -> AutoCompleteTextView_android_dropDownAnchor
    int AutoCompleteTextView_android_dropDownHeight -> AutoCompleteTextView_android_dropDownHeight
    int AutoCompleteTextView_android_dropDownSelector -> AutoCompleteTextView_android_dropDownSelector
    int AutoCompleteTextView_android_dropDownWidth -> AutoCompleteTextView_android_dropDownWidth
    int AutoCompleteTextView_android_entries -> AutoCompleteTextView_android_entries
    int AutoCompleteTextView_android_inputType -> AutoCompleteTextView_android_inputType
    int AutoCompleteTextView_dropDownHorizontalOffset -> AutoCompleteTextView_dropDownHorizontalOffset
    int AutoCompleteTextView_dropDownVerticalOffset -> AutoCompleteTextView_dropDownVerticalOffset
    int[] ColorDrawable -> ColorDrawable
    int ColorDrawable_android_color -> ColorDrawable_android_color
    int[] DateTimePicker -> DateTimePicker
    int DateTimePicker_dateCircleColor -> DateTimePicker_dateCircleColor
    int DateTimePicker_dateDayTextColor -> DateTimePicker_dateDayTextColor
    int DateTimePicker_dateMonthTitleColor -> DateTimePicker_dateMonthTitleColor
    int DateTimePicker_dateTodayColor -> DateTimePicker_dateTodayColor
    int DateTimePicker_dateYearSelectorColor -> DateTimePicker_dateYearSelectorColor
    int DateTimePicker_timeAmPmPicker -> DateTimePicker_timeAmPmPicker
    int DateTimePicker_timeAmPmPickerBackground -> DateTimePicker_timeAmPmPickerBackground
    int DateTimePicker_timeAmPmPickerTextColor -> DateTimePicker_timeAmPmPickerTextColor
    int DateTimePicker_timeCenterPointerColor -> DateTimePicker_timeCenterPointerColor
    int DateTimePicker_timeCenterPointerRadius -> DateTimePicker_timeCenterPointerRadius
    int DateTimePicker_timeCircleColor -> DateTimePicker_timeCircleColor
    int DateTimePicker_timePickerSelectorColor -> DateTimePicker_timePickerSelectorColor
    int DateTimePicker_timeRadialTextColor -> DateTimePicker_timeRadialTextColor
    int[] DialogPreference -> DialogPreference
    int DialogPreference_android_dialogIcon -> DialogPreference_android_dialogIcon
    int DialogPreference_android_dialogLayout -> DialogPreference_android_dialogLayout
    int DialogPreference_android_dialogMessage -> DialogPreference_android_dialogMessage
    int DialogPreference_android_dialogTitle -> DialogPreference_android_dialogTitle
    int DialogPreference_android_negativeButtonText -> DialogPreference_android_negativeButtonText
    int DialogPreference_android_positiveButtonText -> DialogPreference_android_positiveButtonText
    int[] Divider -> Divider
    int Divider_android_orientation -> Divider_android_orientation
    int[] ExpandableListView -> ExpandableListView
    int ExpandableListView_android_childDivider -> ExpandableListView_android_childDivider
    int ExpandableListView_android_childIndicator -> ExpandableListView_android_childIndicator
    int ExpandableListView_android_childIndicatorLeft -> ExpandableListView_android_childIndicatorLeft
    int ExpandableListView_android_childIndicatorRight -> ExpandableListView_android_childIndicatorRight
    int ExpandableListView_android_groupIndicator -> ExpandableListView_android_groupIndicator
    int ExpandableListView_android_indicatorLeft -> ExpandableListView_android_indicatorLeft
    int ExpandableListView_android_indicatorRight -> ExpandableListView_android_indicatorRight
    int[] Extra -> Extra
    int Extra_android_name -> Extra_android_name
    int Extra_android_value -> Extra_android_value
    int[] FastScroll -> FastScroll
    int FastScroll_fastScrollOverlayPosition -> FastScroll_fastScrollOverlayPosition
    int FastScroll_fastScrollPreviewBackgroundLeft -> FastScroll_fastScrollPreviewBackgroundLeft
    int FastScroll_fastScrollPreviewBackgroundRight -> FastScroll_fastScrollPreviewBackgroundRight
    int FastScroll_fastScrollTextColor -> FastScroll_fastScrollTextColor
    int FastScroll_fastScrollThumbDrawable -> FastScroll_fastScrollThumbDrawable
    int FastScroll_fastScrollTrackDrawable -> FastScroll_fastScrollTrackDrawable
    int[] IconMenuView -> IconMenuView
    int IconMenuView_android_maxItems -> IconMenuView_android_maxItems
    int IconMenuView_android_maxItemsPerRow -> IconMenuView_android_maxItemsPerRow
    int IconMenuView_android_maxRows -> IconMenuView_android_maxRows
    int IconMenuView_android_moreIcon -> IconMenuView_android_moreIcon
    int IconMenuView_android_rowHeight -> IconMenuView_android_rowHeight
    int[] Intent -> Intent
    int[] IntentCategory -> IntentCategory
    int IntentCategory_android_name -> IntentCategory_android_name
    int Intent_android_action -> Intent_android_action
    int Intent_android_data -> Intent_android_data
    int Intent_android_mimeType -> Intent_android_mimeType
    int Intent_android_targetClass -> Intent_android_targetClass
    int Intent_android_targetPackage -> Intent_android_targetPackage
    int[] LayerDrawable -> LayerDrawable
    int[] LayerDrawableItem -> LayerDrawableItem
    int LayerDrawableItem_android_bottom -> LayerDrawableItem_android_bottom
    int LayerDrawableItem_android_drawable -> LayerDrawableItem_android_drawable
    int LayerDrawableItem_android_id -> LayerDrawableItem_android_id
    int LayerDrawableItem_android_left -> LayerDrawableItem_android_left
    int LayerDrawableItem_android_right -> LayerDrawableItem_android_right
    int LayerDrawableItem_android_top -> LayerDrawableItem_android_top
    int LayerDrawable_android_opacity -> LayerDrawable_android_opacity
    int[] LinearLayout -> LinearLayout
    int LinearLayout_android_baselineAligned -> LinearLayout_android_baselineAligned
    int LinearLayout_android_baselineAlignedChildIndex -> LinearLayout_android_baselineAlignedChildIndex
    int LinearLayout_android_divider -> LinearLayout_android_divider
    int LinearLayout_android_dividerPadding -> LinearLayout_android_dividerPadding
    int LinearLayout_android_gravity -> LinearLayout_android_gravity
    int LinearLayout_android_measureWithLargestChild -> LinearLayout_android_measureWithLargestChild
    int LinearLayout_android_orientation -> LinearLayout_android_orientation
    int LinearLayout_android_showDividers -> LinearLayout_android_showDividers
    int LinearLayout_android_weightSum -> LinearLayout_android_weightSum
    int[] ListPreference -> ListPreference
    int ListPreference_android_entries -> ListPreference_android_entries
    int ListPreference_android_entryValues -> ListPreference_android_entryValues
    int[] MenuGroup -> MenuGroup
    int MenuGroup_android_checkableBehavior -> MenuGroup_android_checkableBehavior
    int MenuGroup_android_enabled -> MenuGroup_android_enabled
    int MenuGroup_android_id -> MenuGroup_android_id
    int MenuGroup_android_menuCategory -> MenuGroup_android_menuCategory
    int MenuGroup_android_orderInCategory -> MenuGroup_android_orderInCategory
    int MenuGroup_android_visible -> MenuGroup_android_visible
    int[] MenuItem -> MenuItem
    int MenuItem_android_actionLayout -> MenuItem_android_actionLayout
    int MenuItem_android_actionProviderClass -> MenuItem_android_actionProviderClass
    int MenuItem_android_actionViewClass -> MenuItem_android_actionViewClass
    int MenuItem_android_alphabeticShortcut -> MenuItem_android_alphabeticShortcut
    int MenuItem_android_checkable -> MenuItem_android_checkable
    int MenuItem_android_checked -> MenuItem_android_checked
    int MenuItem_android_enabled -> MenuItem_android_enabled
    int MenuItem_android_icon -> MenuItem_android_icon
    int MenuItem_android_id -> MenuItem_android_id
    int MenuItem_android_menuCategory -> MenuItem_android_menuCategory
    int MenuItem_android_numericShortcut -> MenuItem_android_numericShortcut
    int MenuItem_android_onClick -> MenuItem_android_onClick
    int MenuItem_android_orderInCategory -> MenuItem_android_orderInCategory
    int MenuItem_android_showAsAction -> MenuItem_android_showAsAction
    int MenuItem_android_title -> MenuItem_android_title
    int MenuItem_android_titleCondensed -> MenuItem_android_titleCondensed
    int MenuItem_android_visible -> MenuItem_android_visible
    int[] MenuView -> MenuView
    int MenuView_android_headerBackground -> MenuView_android_headerBackground
    int MenuView_android_horizontalDivider -> MenuView_android_horizontalDivider
    int MenuView_android_itemBackground -> MenuView_android_itemBackground
    int MenuView_android_itemIconDisabledAlpha -> MenuView_android_itemIconDisabledAlpha
    int MenuView_android_itemTextAppearance -> MenuView_android_itemTextAppearance
    int MenuView_android_preserveIconSpacing -> MenuView_android_preserveIconSpacing
    int MenuView_android_verticalDivider -> MenuView_android_verticalDivider
    int MenuView_android_windowAnimationStyle -> MenuView_android_windowAnimationStyle
    int[] NumberPicker -> NumberPicker
    int[] NumberPickerPreference -> NumberPickerPreference
    int NumberPickerPreference_max -> NumberPickerPreference_max
    int NumberPickerPreference_min -> NumberPickerPreference_min
    int NumberPickerPreference_wrapSelectorWheel -> NumberPickerPreference_wrapSelectorWheel
    int NumberPicker_android_fadingEdgeLength -> NumberPicker_android_fadingEdgeLength
    int NumberPicker_android_layout -> NumberPicker_android_layout
    int NumberPicker_android_maxHeight -> NumberPicker_android_maxHeight
    int NumberPicker_android_maxWidth -> NumberPicker_android_maxWidth
    int NumberPicker_android_minHeight -> NumberPicker_android_minHeight
    int NumberPicker_android_minWidth -> NumberPicker_android_minWidth
    int NumberPicker_android_orientation -> NumberPicker_android_orientation
    int NumberPicker_flingable -> NumberPicker_flingable
    int NumberPicker_selectionDivider -> NumberPicker_selectionDivider
    int NumberPicker_selectionDividerHeight -> NumberPicker_selectionDividerHeight
    int NumberPicker_selectionDividersDistance -> NumberPicker_selectionDividersDistance
    int NumberPicker_solidColor -> NumberPicker_solidColor
    int NumberPicker_virtualButtonPressedDrawable -> NumberPicker_virtualButtonPressedDrawable
    int[] PopupWindow -> PopupWindow
    int PopupWindow_android_popupAnimationStyle -> PopupWindow_android_popupAnimationStyle
    int PopupWindow_android_popupBackground -> PopupWindow_android_popupBackground
    int[] Preference -> Preference
    int[] PreferenceFrameLayout -> PreferenceFrameLayout
    int[] PreferenceFrameLayout_Layout -> PreferenceFrameLayout_Layout
    int PreferenceFrameLayout_Layout_android_layout_removeBorders -> PreferenceFrameLayout_Layout_android_layout_removeBorders
    int PreferenceFrameLayout_android_paddingBottom -> PreferenceFrameLayout_android_paddingBottom
    int PreferenceFrameLayout_android_paddingLeft -> PreferenceFrameLayout_android_paddingLeft
    int PreferenceFrameLayout_android_paddingRight -> PreferenceFrameLayout_android_paddingRight
    int PreferenceFrameLayout_android_paddingTop -> PreferenceFrameLayout_android_paddingTop
    int[] PreferenceGroup -> PreferenceGroup
    int PreferenceGroup_android_orderingFromXml -> PreferenceGroup_android_orderingFromXml
    int[] PreferenceHeader -> PreferenceHeader
    int PreferenceHeader_android_breadCrumbShortTitle -> PreferenceHeader_android_breadCrumbShortTitle
    int PreferenceHeader_android_breadCrumbTitle -> PreferenceHeader_android_breadCrumbTitle
    int PreferenceHeader_android_fragment -> PreferenceHeader_android_fragment
    int PreferenceHeader_android_icon -> PreferenceHeader_android_icon
    int PreferenceHeader_android_id -> PreferenceHeader_android_id
    int PreferenceHeader_android_summary -> PreferenceHeader_android_summary
    int PreferenceHeader_android_title -> PreferenceHeader_android_title
    int Preference_android_defaultValue -> Preference_android_defaultValue
    int Preference_android_dependency -> Preference_android_dependency
    int Preference_android_enabled -> Preference_android_enabled
    int Preference_android_fragment -> Preference_android_fragment
    int Preference_android_icon -> Preference_android_icon
    int Preference_android_id -> Preference_android_id
    int Preference_android_key -> Preference_android_key
    int Preference_android_layout -> Preference_android_layout
    int Preference_android_order -> Preference_android_order
    int Preference_android_persistent -> Preference_android_persistent
    int Preference_android_selectable -> Preference_android_selectable
    int Preference_android_shouldDisableView -> Preference_android_shouldDisableView
    int Preference_android_summary -> Preference_android_summary
    int Preference_android_title -> Preference_android_title
    int Preference_android_widgetLayout -> Preference_android_widgetLayout
    int Preference_dependency -> Preference_dependency
    int[] ProgressBar -> ProgressBar
    int ProgressBar_android_indeterminate -> ProgressBar_android_indeterminate
    int ProgressBar_android_indeterminateBehavior -> ProgressBar_android_indeterminateBehavior
    int ProgressBar_android_indeterminateDrawable -> ProgressBar_android_indeterminateDrawable
    int ProgressBar_android_indeterminateDuration -> ProgressBar_android_indeterminateDuration
    int ProgressBar_android_indeterminateOnly -> ProgressBar_android_indeterminateOnly
    int ProgressBar_android_interpolator -> ProgressBar_android_interpolator
    int ProgressBar_android_max -> ProgressBar_android_max
    int ProgressBar_android_maxHeight -> ProgressBar_android_maxHeight
    int ProgressBar_android_maxWidth -> ProgressBar_android_maxWidth
    int ProgressBar_android_minHeight -> ProgressBar_android_minHeight
    int ProgressBar_android_minWidth -> ProgressBar_android_minWidth
    int ProgressBar_android_progress -> ProgressBar_android_progress
    int ProgressBar_android_progressDrawable -> ProgressBar_android_progressDrawable
    int ProgressBar_android_secondaryProgress -> ProgressBar_android_secondaryProgress
    int[] RingtonePreference -> RingtonePreference
    int RingtonePreference_android_ringtoneType -> RingtonePreference_android_ringtoneType
    int RingtonePreference_android_showDefault -> RingtonePreference_android_showDefault
    int RingtonePreference_android_showSilent -> RingtonePreference_android_showSilent
    int[] RotateDrawable -> RotateDrawable
    int RotateDrawable_android_drawable -> RotateDrawable_android_drawable
    int RotateDrawable_android_fromDegrees -> RotateDrawable_android_fromDegrees
    int RotateDrawable_android_pivotX -> RotateDrawable_android_pivotX
    int RotateDrawable_android_pivotY -> RotateDrawable_android_pivotY
    int RotateDrawable_android_toDegrees -> RotateDrawable_android_toDegrees
    int RotateDrawable_android_visible -> RotateDrawable_android_visible
    int[] SearchView -> SearchView
    int SearchView_android_imeOptions -> SearchView_android_imeOptions
    int SearchView_android_inputType -> SearchView_android_inputType
    int SearchView_android_maxWidth -> SearchView_android_maxWidth
    int SearchView_iconifiedByDefault -> SearchView_iconifiedByDefault
    int SearchView_queryHint -> SearchView_queryHint
    int[] SeekBar -> SeekBar
    int[] SeekBarPreference -> SeekBarPreference
    int SeekBarPreference_android_max -> SeekBarPreference_android_max
    int SeekBar_android_disabledAlpha -> SeekBar_android_disabledAlpha
    int SeekBar_android_thumb -> SeekBar_android_thumb
    int SeekBar_android_thumbOffset -> SeekBar_android_thumbOffset
    int[] Spinner -> Spinner
    int Spinner_android_dropDownSelector -> Spinner_android_dropDownSelector
    int Spinner_android_dropDownWidth -> Spinner_android_dropDownWidth
    int Spinner_android_gravity -> Spinner_android_gravity
    int Spinner_android_popupBackground -> Spinner_android_popupBackground
    int Spinner_android_prompt -> Spinner_android_prompt
    int Spinner_disableChildrenWhenDisabled -> Spinner_disableChildrenWhenDisabled
    int Spinner_dropDownHorizontalOffset -> Spinner_dropDownHorizontalOffset
    int Spinner_dropDownVerticalOffset -> Spinner_dropDownVerticalOffset
    int Spinner_popupPromptView -> Spinner_popupPromptView
    int Spinner_spinnerMode -> Spinner_spinnerMode
    int[] StateListDrawable -> StateListDrawable
    int StateListDrawable_android_constantSize -> StateListDrawable_android_constantSize
    int StateListDrawable_android_dither -> StateListDrawable_android_dither
    int StateListDrawable_android_enterFadeDuration -> StateListDrawable_android_enterFadeDuration
    int StateListDrawable_android_exitFadeDuration -> StateListDrawable_android_exitFadeDuration
    int StateListDrawable_android_variablePadding -> StateListDrawable_android_variablePadding
    int StateListDrawable_android_visible -> StateListDrawable_android_visible
    int[] Switch -> Switch
    int[] SwitchPreference -> SwitchPreference
    int SwitchPreference_android_switchTextOff -> SwitchPreference_android_switchTextOff
    int SwitchPreference_android_switchTextOn -> SwitchPreference_android_switchTextOn
    int Switch_switchMinWidth -> Switch_switchMinWidth
    int Switch_switchPadding -> Switch_switchPadding
    int Switch_switchTextAppearance -> Switch_switchTextAppearance
    int Switch_textOff -> Switch_textOff
    int Switch_textOn -> Switch_textOn
    int Switch_thumb -> Switch_thumb
    int Switch_thumbTextPadding -> Switch_thumbTextPadding
    int Switch_toggleWhenClick -> Switch_toggleWhenClick
    int Switch_track -> Switch_track
    int[] TextAppearance -> TextAppearance
    int TextAppearance_android_fontFamily -> TextAppearance_android_fontFamily
    int TextAppearance_android_textAllCaps -> TextAppearance_android_textAllCaps
    int TextAppearance_android_textColor -> TextAppearance_android_textColor
    int TextAppearance_android_textColorHighlight -> TextAppearance_android_textColorHighlight
    int TextAppearance_android_textColorHint -> TextAppearance_android_textColorHint
    int TextAppearance_android_textColorLink -> TextAppearance_android_textColorLink
    int TextAppearance_android_textSize -> TextAppearance_android_textSize
    int TextAppearance_android_textStyle -> TextAppearance_android_textStyle
    int TextAppearance_android_typeface -> TextAppearance_android_typeface
    int[] TextView -> TextView
    int TextView_android_textAppearance -> TextView_android_textAppearance
    int[] Theme -> Theme
    int Theme_actionDropDownStyle -> Theme_actionDropDownStyle
    int Theme_dropdownListPreferredItemHeight -> Theme_dropdownListPreferredItemHeight
    int Theme_listChoiceBackgroundIndicator -> Theme_listChoiceBackgroundIndicator
    int Theme_panelMenuListTheme -> Theme_panelMenuListTheme
    int Theme_panelMenuListWidth -> Theme_panelMenuListWidth
    int Theme_popupMenuStyle -> Theme_popupMenuStyle
    int[] TimePreference -> TimePreference
    int TimePreference_is24HourView -> TimePreference_is24HourView
    int[] TwoStatePreference -> TwoStatePreference
    int TwoStatePreference_android_disableDependentsState -> TwoStatePreference_android_disableDependentsState
    int TwoStatePreference_android_summaryOff -> TwoStatePreference_android_summaryOff
    int TwoStatePreference_android_summaryOn -> TwoStatePreference_android_summaryOn
    int[] View -> View
    int View_android_focusable -> View_android_focusable
    int View_paddingEnd -> View_paddingEnd
    int View_paddingStart -> View_paddingStart
    int[] WindowSizes -> WindowSizes
    int WindowSizes_windowFixedHeightMajor -> WindowSizes_windowFixedHeightMajor
    int WindowSizes_windowFixedHeightMinor -> WindowSizes_windowFixedHeightMinor
    int WindowSizes_windowFixedWidthMajor -> WindowSizes_windowFixedWidthMajor
    int WindowSizes_windowFixedWidthMinor -> WindowSizes_windowFixedWidthMinor
    int WindowSizes_windowMinHeightMajor -> WindowSizes_windowMinHeightMajor
    int WindowSizes_windowMinHeightMinor -> WindowSizes_windowMinHeightMinor
    int WindowSizes_windowMinWidthMajor -> WindowSizes_windowMinWidthMajor
    int WindowSizes_windowMinWidthMinor -> WindowSizes_windowMinWidthMinor
org.holoeverywhere.preference.SeekBarPreference -> org.holoeverywhere.preference.SeekBarPreference:
    int mMax -> a
    int mProgress -> b
    boolean mTrackingTouch -> c
    java.lang.CharSequence getSummary() -> i
    void onBindView(android.view.View) -> b
    void onProgressChanged(org.holoeverywhere.widget.SeekBar,int,boolean) -> a
    void onRestoreInstanceState(android.os.Parcelable) -> a
    android.os.Parcelable onSaveInstanceState() -> f
    void onStartTrackingTouch(org.holoeverywhere.widget.SeekBar) -> a
    void onStopTrackingTouch(org.holoeverywhere.widget.SeekBar) -> b
    void setProgress(int,boolean) -> a
    void syncProgress(org.holoeverywhere.widget.SeekBar) -> c
org.holoeverywhere.preference.SeekBarPreference$SavedState -> org.holoeverywhere.preference.SeekBarPreference$SavedState:
    int max -> a
    int progress -> b
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
org.holoeverywhere.preference.SharedPreferences -> org.holoeverywhere.preference.SharedPreferences:
    org.holoeverywhere.preference.SharedPreferences$Editor edit() -> a
    boolean getBoolean(java.lang.String,boolean) -> getBoolean
    int getInt(java.lang.String,int) -> getInt
    java.lang.String getString(java.lang.String,java.lang.String) -> getString
    java.util.Set getStringSet(java.lang.String,java.util.Set) -> getStringSet
org.holoeverywhere.preference.SharedPreferences$Editor -> org.holoeverywhere.preference.SharedPreferences$Editor:
    void apply() -> apply
    boolean commit() -> commit
    org.holoeverywhere.preference.SharedPreferences$Editor putBoolean(java.lang.String,boolean) -> a
    org.holoeverywhere.preference.SharedPreferences$Editor putInt(java.lang.String,int) -> a
    org.holoeverywhere.preference.SharedPreferences$Editor putString(java.lang.String,java.lang.String) -> a
    org.holoeverywhere.preference.SharedPreferences$Editor putStringSet(java.lang.String,java.util.Set) -> a
org.holoeverywhere.preference.SharedPreferences$OnSharedPreferenceChangeListener -> org.holoeverywhere.preference.SharedPreferences$OnSharedPreferenceChangeListener:
    void onSharedPreferenceChanged(org.holoeverywhere.preference.SharedPreferences,java.lang.String) -> a
org.holoeverywhere.preference.SwitchScreenPreference -> org.holoeverywhere.preference.SwitchScreenPreference:
    org.holoeverywhere.preference.SwitchScreenPreference$Listener mListener -> b
    boolean mChecked -> a
    boolean mDisableDependentsState -> c
    boolean mSendClickAccessibilityEvent -> d
    java.lang.CharSequence mSummaryOff -> e
    java.lang.CharSequence mSummaryOn -> f
    java.lang.CharSequence mSwitchOff -> g
    java.lang.CharSequence mSwitchOn -> h
    boolean isChecked() -> D
    void setChecked(boolean) -> a
    void onRestoreInstanceState(android.os.Parcelable) -> a
    android.os.Parcelable onSaveInstanceState() -> f
    boolean onCreateOptionsMenu(android.view.Menu) -> a
    void onPrepareDialog(org.holoeverywhere.app.Dialog) -> a
    void sendAccessibilityEvent(android.view.View) -> a
    boolean shouldDisableDependents() -> h
    android.view.View getView(android.view.View,android.view.ViewGroup) -> a
    void syncSummaryView(android.view.View) -> c
    void onBindView(android.view.View) -> b
    void onCloseMenu(android.support.v7.internal.view.menu.MenuBuilder,boolean) -> onCloseMenu
    boolean onOpenSubMenu(android.support.v7.internal.view.menu.MenuBuilder) -> onOpenSubMenu
org.holoeverywhere.preference.SwitchScreenPreference$Listener -> org.holoeverywhere.preference.SwitchScreenPreference$Listener:
    org.holoeverywhere.preference.SwitchScreenPreference this$0 -> a
    void onCheckedChanged(android.widget.CompoundButton,boolean) -> onCheckedChanged
org.holoeverywhere.preference.SwitchScreenPreference$SavedState -> org.holoeverywhere.preference.SwitchScreenPreference$SavedState:
    android.os.Parcelable$Creator CREATOR -> CREATOR
    boolean checked -> a
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
org.holoeverywhere.preference.SwitchScreenPreference$SavedState$1 -> org.holoeverywhere.preference.SwitchScreenPreference$SavedState$1:
    org.holoeverywhere.preference.SwitchScreenPreference$SavedState createFromParcel(android.os.Parcel) -> a
    org.holoeverywhere.preference.SwitchScreenPreference$SavedState[] newArray(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
org.holoeverywhere.preference.TwoStatePreference -> org.holoeverywhere.preference.TwoStatePreference:
    boolean mChecked -> a
    boolean mDisableDependentsState -> b
    boolean mSendClickAccessibilityEvent -> c
    boolean isChecked() -> a
    void setChecked(boolean) -> a
    void onClick() -> d
    void onRestoreInstanceState(android.os.Parcelable) -> a
    android.os.Parcelable onSaveInstanceState() -> f
    boolean shouldDisableDependents() -> h
org.holoeverywhere.preference.TwoStatePreference$SavedState -> org.holoeverywhere.preference.TwoStatePreference$SavedState:
    android.os.Parcelable$Creator CREATOR -> CREATOR
    boolean checked -> a
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
org.holoeverywhere.preference.TwoStatePreference$SavedState$1 -> org.holoeverywhere.preference.TwoStatePreference$SavedState$1:
    org.holoeverywhere.preference.TwoStatePreference$SavedState createFromParcel(android.os.Parcel) -> a
    org.holoeverywhere.preference.TwoStatePreference$SavedState[] newArray(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
org.holoeverywhere.preference._SharedPreferencesBase -> org.holoeverywhere.preference._SharedPreferencesBase:
    android.os.Bundle bundle -> a
    android.os.Bundle d() -> b
org.holoeverywhere.preference._SharedPreferencesBase$_BaseEditor -> org.holoeverywhere.preference._SharedPreferencesBase$_BaseEditor:
    org.holoeverywhere.preference._SharedPreferencesBase this$0 -> a
org.holoeverywhere.preference._SharedPreferencesImpl_JSON -> org.holoeverywhere.preference._SharedPreferencesImpl_JSON:
    java.util.Map refs -> a
    java.lang.String TAG -> b
    java.lang.String charset -> c
    java.io.File file -> d
    java.lang.String fileTag -> e
    boolean contains(java.lang.String) -> contains
    org.holoeverywhere.preference.SharedPreferences$Editor edit() -> a
    java.util.Map getAll() -> getAll
    boolean getBoolean(java.lang.String,boolean) -> getBoolean
    org.json.JSONObject getData() -> c
    float getFloat(java.lang.String,float) -> getFloat
    int getInt(java.lang.String,int) -> getInt
    long getLong(java.lang.String,long) -> getLong
    org.holoeverywhere.preference._SharedPreferencesImpl_JSON$ImplReference getReference() -> d
    java.util.Set getSet(java.lang.String,java.util.Set) -> a
    java.lang.String getString(java.lang.String,java.lang.String) -> getString
    java.util.Set getStringSet(java.lang.String,java.util.Set) -> getStringSet
    void notifyOnChange(java.lang.String) -> a
    org.json.JSONObject readDataFromFile(java.io.File) -> a
    void registerOnSharedPreferenceChangeListener(android.content.SharedPreferences$OnSharedPreferenceChangeListener) -> registerOnSharedPreferenceChangeListener
    void saveDataToFile(java.io.File,org.json.JSONObject) -> a
    void setCharset(java.lang.String) -> b
    void unregisterOnSharedPreferenceChangeListener(android.content.SharedPreferences$OnSharedPreferenceChangeListener) -> unregisterOnSharedPreferenceChangeListener
    android.content.SharedPreferences$Editor edit() -> edit
    java.io.File access$000(org.holoeverywhere.preference._SharedPreferencesImpl_JSON) -> a
    java.lang.String access$100() -> e
org.holoeverywhere.preference._SharedPreferencesImpl_JSON$1 -> org.holoeverywhere.preference._SharedPreferencesImpl_JSON$1:
org.holoeverywhere.preference._SharedPreferencesImpl_JSON$ClearJSONManipulate -> org.holoeverywhere.preference._SharedPreferencesImpl_JSON$ClearJSONManipulate:
    org.holoeverywhere.preference._SharedPreferencesImpl_JSON this$0 -> a
    boolean onJSONManipulate(org.json.JSONObject) -> a
org.holoeverywhere.preference._SharedPreferencesImpl_JSON$CouldNotCreateStorage -> org.holoeverywhere.preference._SharedPreferencesImpl_JSON$CouldNotCreateStorage:
    org.holoeverywhere.preference._SharedPreferencesImpl_JSON this$0 -> a
org.holoeverywhere.preference._SharedPreferencesImpl_JSON$EditorImpl -> org.holoeverywhere.preference._SharedPreferencesImpl_JSON$EditorImpl:
    java.util.List manipulate -> c
    org.holoeverywhere.preference._SharedPreferencesImpl_JSON this$0 -> b
    org.holoeverywhere.preference._SharedPreferencesImpl_JSON$EditorImpl add(org.holoeverywhere.preference._SharedPreferencesImpl_JSON$FutureJSONManipulate) -> a
    void apply() -> apply
    org.holoeverywhere.preference.SharedPreferences$Editor clear() -> a
    boolean commit() -> commit
    org.holoeverywhere.preference.SharedPreferences$Editor putBoolean(java.lang.String,boolean) -> a
    org.holoeverywhere.preference.SharedPreferences$Editor putFloat(java.lang.String,float) -> a
    org.holoeverywhere.preference.SharedPreferences$Editor putInt(java.lang.String,int) -> a
    org.holoeverywhere.preference.SharedPreferences$Editor putLong(java.lang.String,long) -> a
    org.holoeverywhere.preference.SharedPreferences$Editor putString(java.lang.String,java.lang.String) -> a
    org.holoeverywhere.preference.SharedPreferences$Editor putStringSet(java.lang.String,java.util.Set) -> a
    org.holoeverywhere.preference.SharedPreferences$Editor remove(java.lang.String) -> a
    android.content.SharedPreferences$Editor clear() -> clear
    android.content.SharedPreferences$Editor remove(java.lang.String) -> remove
    android.content.SharedPreferences$Editor putBoolean(java.lang.String,boolean) -> putBoolean
    android.content.SharedPreferences$Editor putFloat(java.lang.String,float) -> putFloat
    android.content.SharedPreferences$Editor putLong(java.lang.String,long) -> putLong
    android.content.SharedPreferences$Editor putInt(java.lang.String,int) -> putInt
    android.content.SharedPreferences$Editor putStringSet(java.lang.String,java.util.Set) -> putStringSet
    android.content.SharedPreferences$Editor putString(java.lang.String,java.lang.String) -> putString
org.holoeverywhere.preference._SharedPreferencesImpl_JSON$FutureJSONManipulate -> org.holoeverywhere.preference._SharedPreferencesImpl_JSON$FutureJSONManipulate:
    boolean onJSONManipulate(org.json.JSONObject) -> a
org.holoeverywhere.preference._SharedPreferencesImpl_JSON$ImplReference -> org.holoeverywhere.preference._SharedPreferencesImpl_JSON$ImplReference:
    org.json.JSONObject data -> a
    java.util.Set listeners -> b
    org.json.JSONObject access$300(org.holoeverywhere.preference._SharedPreferencesImpl_JSON$ImplReference) -> a
    org.json.JSONObject access$302(org.holoeverywhere.preference._SharedPreferencesImpl_JSON$ImplReference,org.json.JSONObject) -> a
    java.util.Set access$600(org.holoeverywhere.preference._SharedPreferencesImpl_JSON$ImplReference) -> b
org.holoeverywhere.preference._SharedPreferencesImpl_JSON$PutValueJSONManipulate -> org.holoeverywhere.preference._SharedPreferencesImpl_JSON$PutValueJSONManipulate:
    java.lang.String key -> b
    java.lang.Object t -> c
    org.holoeverywhere.preference._SharedPreferencesImpl_JSON this$0 -> a
    boolean onJSONManipulate(org.json.JSONObject) -> a
org.holoeverywhere.preference._SharedPreferencesImpl_JSON$RemoveValueJSONManipulate -> org.holoeverywhere.preference._SharedPreferencesImpl_JSON$RemoveValueJSONManipulate:
    java.lang.String key -> b
    org.holoeverywhere.preference._SharedPreferencesImpl_JSON this$0 -> a
    boolean onJSONManipulate(org.json.JSONObject) -> a
org.holoeverywhere.preference._SharedPreferencesImpl_XML -> org.holoeverywhere.preference._SharedPreferencesImpl_XML:
    android.content.SharedPreferences prefs -> a
    java.lang.String setToString(java.util.Set) -> b
    java.util.Set stringToSet(java.lang.String,java.lang.Class) -> a
    boolean contains(java.lang.String) -> contains
    org.holoeverywhere.preference.SharedPreferences$Editor edit() -> a
    java.util.Map getAll() -> getAll
    boolean getBoolean(java.lang.String,boolean) -> getBoolean
    float getFloat(java.lang.String,float) -> getFloat
    int getInt(java.lang.String,int) -> getInt
    long getLong(java.lang.String,long) -> getLong
    java.util.Set getSet(java.lang.String,java.util.Set,java.lang.Class) -> a
    java.lang.String getString(java.lang.String,java.lang.String) -> getString
    java.util.Set getStringSet(java.lang.String,java.util.Set) -> getStringSet
    void registerOnSharedPreferenceChangeListener(android.content.SharedPreferences$OnSharedPreferenceChangeListener) -> registerOnSharedPreferenceChangeListener
    void unregisterOnSharedPreferenceChangeListener(android.content.SharedPreferences$OnSharedPreferenceChangeListener) -> unregisterOnSharedPreferenceChangeListener
    android.content.SharedPreferences$Editor edit() -> edit
    java.lang.String access$000(java.util.Set) -> a
org.holoeverywhere.preference._SharedPreferencesImpl_XML$EditorImpl -> org.holoeverywhere.preference._SharedPreferencesImpl_XML$EditorImpl:
    android.content.SharedPreferences$Editor editor -> c
    org.holoeverywhere.preference._SharedPreferencesImpl_XML this$0 -> b
    void apply() -> apply
    org.holoeverywhere.preference.SharedPreferences$Editor clear() -> a
    boolean commit() -> commit
    org.holoeverywhere.preference.SharedPreferences$Editor putBoolean(java.lang.String,boolean) -> a
    org.holoeverywhere.preference.SharedPreferences$Editor putFloat(java.lang.String,float) -> a
    org.holoeverywhere.preference.SharedPreferences$Editor putInt(java.lang.String,int) -> a
    org.holoeverywhere.preference.SharedPreferences$Editor putLong(java.lang.String,long) -> a
    org.holoeverywhere.preference.SharedPreferences$Editor putString(java.lang.String,java.lang.String) -> a
    org.holoeverywhere.preference.SharedPreferences$Editor putStringSet(java.lang.String,java.util.Set) -> a
    org.holoeverywhere.preference.SharedPreferences$Editor remove(java.lang.String) -> a
    android.content.SharedPreferences$Editor clear() -> clear
    android.content.SharedPreferences$Editor remove(java.lang.String) -> remove
    android.content.SharedPreferences$Editor putBoolean(java.lang.String,boolean) -> putBoolean
    android.content.SharedPreferences$Editor putFloat(java.lang.String,float) -> putFloat
    android.content.SharedPreferences$Editor putLong(java.lang.String,long) -> putLong
    android.content.SharedPreferences$Editor putInt(java.lang.String,int) -> putInt
    android.content.SharedPreferences$Editor putStringSet(java.lang.String,java.util.Set) -> putStringSet
    android.content.SharedPreferences$Editor putString(java.lang.String,java.lang.String) -> putString
org.holoeverywhere.text.AllCapsTransformationMethod -> org.holoeverywhere.text.AllCapsTransformationMethod:
    boolean mEnabled -> a
    java.util.Locale mLocale -> b
    java.lang.CharSequence getTransformation(java.lang.CharSequence,android.view.View) -> getTransformation
    void onFocusChanged(android.view.View,java.lang.CharSequence,boolean,int,android.graphics.Rect) -> onFocusChanged
    void setLengthChangesAllowed(boolean) -> a
org.holoeverywhere.text.TransformationMethod -> org.holoeverywhere.text.TransformationMethod:
    java.lang.CharSequence getTransformation(java.lang.CharSequence,android.view.View) -> getTransformation
    void setLengthChangesAllowed(boolean) -> a
org.holoeverywhere.util.ArrayUtils -> org.holoeverywhere.util.ArrayUtils:
    java.lang.Object[] EMPTY -> a
    java.lang.Object[] sCache -> b
    int idealByteArraySize(int) -> a
    int idealIntArraySize(int) -> b
org.holoeverywhere.util.CharSequences -> org.holoeverywhere.util.CharSequences:
    int compareToIgnoreCase(java.lang.CharSequence,java.lang.CharSequence) -> a
org.holoeverywhere.util.FinitePool -> org.holoeverywhere.util.FinitePool:
    boolean mInfinite -> a
    int mLimit -> b
    org.holoeverywhere.util.PoolableManager mManager -> c
    int mPoolCount -> d
    org.holoeverywhere.util.Poolable mRoot -> e
    org.holoeverywhere.util.Poolable acquire() -> a
    void release(org.holoeverywhere.util.Poolable) -> a
org.holoeverywhere.util.Pool -> org.holoeverywhere.util.Pool:
    org.holoeverywhere.util.Poolable acquire() -> a
    void release(org.holoeverywhere.util.Poolable) -> a
org.holoeverywhere.util.Poolable -> org.holoeverywhere.util.Poolable:
    java.lang.Object getNextPoolable() -> a
    boolean isPooled() -> b
    void setNextPoolable(java.lang.Object) -> a
    void setPooled(boolean) -> a
org.holoeverywhere.util.PoolableManager -> org.holoeverywhere.util.PoolableManager:
    org.holoeverywhere.util.Poolable newInstance() -> a
    void onAcquired(org.holoeverywhere.util.Poolable) -> a
    void onReleased(org.holoeverywhere.util.Poolable) -> b
org.holoeverywhere.util.Pools -> org.holoeverywhere.util.Pools:
    org.holoeverywhere.util.Pool finitePool(org.holoeverywhere.util.PoolableManager,int) -> a
    org.holoeverywhere.util.Pool synchronizedPool(org.holoeverywhere.util.Pool) -> a
org.holoeverywhere.util.ReflectHelper -> org.holoeverywhere.util.ReflectHelper:
    java.lang.Class[] classess(java.lang.Object[]) -> a
    java.lang.Object invoke(java.lang.Object,java.lang.String,java.lang.Class,boolean,java.lang.Object[]) -> a
    java.lang.Object invoke(java.lang.Object,java.lang.String,java.lang.Class,java.lang.Object[]) -> a
org.holoeverywhere.util.SparseArray -> org.holoeverywhere.util.SparseArray:
    java.lang.Object DELETED -> a
    boolean mGarbage -> b
    int[] mKeys -> c
    int mSize -> d
    java.lang.Object[] mValues -> e
    int binarySearch(int[],int,int,int) -> a
    org.holoeverywhere.util.SparseArray clone() -> a
    void gc() -> c
    void put(int,java.lang.Object) -> a
    int size() -> b
    java.lang.Object valueAt(int) -> a
    java.lang.Object clone() -> clone
org.holoeverywhere.util.SparseIntArray -> org.holoeverywhere.util.SparseIntArray:
    android.os.Parcelable$Creator CREATOR -> CREATOR
    int[] mKeys -> a
    int mSize -> b
    int[] mValues -> c
    int binarySearch(int[],int,int,int) -> a
    org.holoeverywhere.util.SparseIntArray clone() -> a
    int describeContents() -> describeContents
    int get(int,int) -> a
    int keyAt(int) -> a
    void put(int,int) -> b
    int size() -> b
    int valueAt(int) -> b
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    java.lang.Object clone() -> clone
    int access$002(org.holoeverywhere.util.SparseIntArray,int) -> a
    int[] access$102(org.holoeverywhere.util.SparseIntArray,int[]) -> a
    int[] access$202(org.holoeverywhere.util.SparseIntArray,int[]) -> b
org.holoeverywhere.util.SparseIntArray$1 -> org.holoeverywhere.util.SparseIntArray$1:
    org.holoeverywhere.util.SparseIntArray createFromParcel(android.os.Parcel) -> a
    org.holoeverywhere.util.SparseIntArray[] newArray(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
org.holoeverywhere.util.SynchronizedPool -> org.holoeverywhere.util.SynchronizedPool:
    java.lang.Object mLock -> a
    org.holoeverywhere.util.Pool mPool -> b
    org.holoeverywhere.util.Poolable acquire() -> a
    void release(org.holoeverywhere.util.Poolable) -> a
org.holoeverywhere.util.WeaklyMap -> org.holoeverywhere.util.WeaklyMap:
    java.util.WeakHashMap mMap -> a
    void clear() -> clear
    boolean containsKey(java.lang.Object) -> containsKey
    boolean containsValue(java.lang.Object) -> containsValue
    java.util.Set entrySet() -> entrySet
    java.lang.Object get(java.lang.Object) -> get
    boolean isEmpty() -> isEmpty
    java.util.Set keySet() -> keySet
    java.lang.Object put(java.lang.Object,java.lang.Object) -> put
    void putAll(java.util.Map) -> putAll
    java.lang.Object remove(java.lang.Object) -> remove
    int size() -> size
    java.util.Collection values() -> values
org.holoeverywhere.util.WeaklyMap$1 -> org.holoeverywhere.util.WeaklyMap$1:
    java.util.Set val$entrySet -> a
    org.holoeverywhere.util.WeaklyMap this$0 -> b
    java.util.Iterator iterator() -> iterator
    int size() -> size
org.holoeverywhere.util.WeaklyMap$1$1 -> org.holoeverywhere.util.WeaklyMap$1$1:
    java.util.Iterator val$iterator -> a
    org.holoeverywhere.util.WeaklyMap$1 this$1 -> b
    boolean hasNext() -> hasNext
    java.util.Map$Entry next() -> a
    void remove() -> remove
    java.lang.Object next() -> next
org.holoeverywhere.util.WeaklyMap$2 -> org.holoeverywhere.util.WeaklyMap$2:
    java.util.Collection val$values -> a
    org.holoeverywhere.util.WeaklyMap this$0 -> b
    java.util.Iterator iterator() -> iterator
    int size() -> size
org.holoeverywhere.util.WeaklyMap$2$1 -> org.holoeverywhere.util.WeaklyMap$2$1:
    java.util.Iterator val$iterator -> a
    org.holoeverywhere.util.WeaklyMap$2 this$1 -> b
    boolean hasNext() -> hasNext
    java.lang.Object next() -> next
    void remove() -> remove
org.holoeverywhere.util.WeaklyMap$WeaklyEntry -> org.holoeverywhere.util.WeaklyMap$WeaklyEntry:
    java.util.Map$Entry mEntry -> a
    java.lang.Object getKey() -> getKey
    java.lang.Object getValue() -> getValue
    java.lang.Object setValue(java.lang.Object) -> setValue
org.holoeverywhere.util.WeaklyMap$WeaklyReference -> org.holoeverywhere.util.WeaklyMap$WeaklyReference:
    boolean equals(java.lang.Object) -> equals
org.holoeverywhere.widget.AbsSeekBar -> org.holoeverywhere.widget.AbsSeekBar:
    float mDisabledAlpha -> g
    boolean mIsDragging -> h
    boolean mIsUserSeekable -> a
    int mKeyProgressIncrement -> i
    int mScaledTouchSlop -> j
    android.graphics.drawable.Drawable mThumb -> k
    int mThumbOffset -> l
    float mTouchDownX -> m
    float mTouchProgressOffset -> b
    void attemptClaimDrag() -> g
    void drawableStateChanged() -> drawableStateChanged
    int getKeyProgressIncrement() -> getKeyProgressIncrement
    android.graphics.drawable.Drawable getThumb() -> getThumb
    int getThumbOffset() -> getThumbOffset
    boolean isInScrollingContainer() -> a
    void jumpDrawablesToCurrentState() -> jumpDrawablesToCurrentState
    void onDraw(android.graphics.Canvas) -> onDraw
    void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo) -> onInitializeAccessibilityNodeInfo
    void onKeyChange() -> b
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    void onMeasure(int,int) -> onMeasure
    void onProgressRefresh(float,boolean) -> a
    void onSizeChanged(int,int,int,int) -> onSizeChanged
    void onStartTrackingTouch() -> c
    void onStopTrackingTouch() -> d
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    boolean performAccessibilityAction(int,android.os.Bundle) -> performAccessibilityAction
    void setKeyProgressIncrement(int) -> setKeyProgressIncrement
    void setMax(int) -> setMax
    void setThumb(android.graphics.drawable.Drawable) -> setThumb
    void setThumbOffset(int) -> setThumbOffset
    void setThumbPos(int,android.graphics.drawable.Drawable,float,int) -> a
    void trackTouchEvent(android.view.MotionEvent) -> a
    void updateThumbPos(int,int) -> a
    boolean verifyDrawable(android.graphics.drawable.Drawable) -> verifyDrawable
org.holoeverywhere.widget.AbsSpinner -> org.holoeverywhere.widget.AbsSpinner:
    org.holoeverywhere.widget.AbsSpinner$RecycleBin mRecycler -> a
    android.graphics.Rect mSpinnerPadding -> b
    android.widget.SpinnerAdapter mAdapter -> c
    int mHeightMeasureSpec -> d
    int mSelectionBottomPadding -> e
    int mSelectionLeftPadding -> f
    int mSelectionRightPadding -> g
    int mSelectionTopPadding -> h
    int mWidthMeasureSpec -> i
    android.database.DataSetObserver mDataSetObserver -> E
    android.view.ViewGroup$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    android.widget.SpinnerAdapter getAdapter() -> getAdapter
    void setAdapter(android.widget.SpinnerAdapter) -> setAdapter
    int getChildHeight(android.view.View) -> a
    int getChildWidth(android.view.View) -> b
    int getCount() -> getCount
    android.view.View getSelectedView() -> getSelectedView
    void initAbsSpinner() -> j
    void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo) -> onInitializeAccessibilityNodeInfo
    void onMeasure(int,int) -> onMeasure
    void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    void recycleAllViews() -> a
    void requestLayout() -> requestLayout
    void resetList() -> b
    void setSelection(int) -> setSelection
    void setAdapter(android.widget.Adapter) -> setAdapter
    android.widget.Adapter getAdapter() -> getAdapter
    void access$100(org.holoeverywhere.widget.AbsSpinner,android.view.View,boolean) -> a
org.holoeverywhere.widget.AbsSpinner$1 -> org.holoeverywhere.widget.AbsSpinner$1:
org.holoeverywhere.widget.AbsSpinner$RecycleBin -> org.holoeverywhere.widget.AbsSpinner$RecycleBin:
    android.util.SparseArray mScrapHeap -> b
    org.holoeverywhere.widget.AbsSpinner this$0 -> a
    void clear() -> a
    android.view.View get(int) -> a
    void put(int,android.view.View) -> a
org.holoeverywhere.widget.AbsSpinner$SavedState -> org.holoeverywhere.widget.AbsSpinner$SavedState:
    android.os.Parcelable$Creator CREATOR -> CREATOR
    int position -> a
    long selectedId -> b
    java.lang.String toString() -> toString
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
org.holoeverywhere.widget.AbsSpinner$SavedState$1 -> org.holoeverywhere.widget.AbsSpinner$SavedState$1:
    org.holoeverywhere.widget.AbsSpinner$SavedState createFromParcel(android.os.Parcel) -> a
    org.holoeverywhere.widget.AbsSpinner$SavedState[] newArray(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
org.holoeverywhere.widget.AdapterView -> org.holoeverywhere.widget.AdapterView:
    boolean mBlockLayoutRequests -> j
    boolean mDataChanged -> k
    int mFirstPosition -> l
    boolean mInLayout -> m
    int mItemCount -> n
    boolean mNeedSync -> o
    int mNextSelectedPosition -> p
    long mNextSelectedRowId -> q
    int mOldItemCount -> r
    int mOldSelectedPosition -> s
    long mOldSelectedRowId -> t
    org.holoeverywhere.widget.AdapterView$OnItemClickListener mOnItemClickListener -> u
    org.holoeverywhere.widget.AdapterView$OnItemLongClickListener mOnItemLongClickListener -> v
    org.holoeverywhere.widget.AdapterView$OnItemSelectedListener mOnItemSelectedListener -> w
    int mSelectedPosition -> x
    long mSelectedRowId -> y
    int mSpecificTop -> z
    long mSyncHeight -> A
    int mSyncMode -> B
    int mSyncPosition -> C
    long mSyncRowId -> D
    boolean mDesiredFocusableInTouchModeState -> a
    boolean mDesiredFocusableState -> b
    android.view.View mEmptyView -> c
    int mLayoutHeight -> d
    org.holoeverywhere.widget.AdapterView$SelectionNotifier mSelectionNotifier -> e
    void addView(android.view.View) -> addView
    void addView(android.view.View,int) -> addView
    void addView(android.view.View,int,android.view.ViewGroup$LayoutParams) -> addView
    void addView(android.view.View,android.view.ViewGroup$LayoutParams) -> addView
    boolean canAnimate() -> canAnimate
    void checkFocus() -> c
    void checkSelectionChanged() -> d
    boolean dispatchPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    void dispatchRestoreInstanceState(android.util.SparseArray) -> dispatchRestoreInstanceState
    void dispatchSaveInstanceState(android.util.SparseArray) -> dispatchSaveInstanceState
    int findSyncPosition() -> e
    void fireOnSelected() -> a
    android.widget.Adapter getAdapter() -> getAdapter
    void setAdapter(android.widget.Adapter) -> setAdapter
    int getCount() -> getCount
    android.view.View getEmptyView() -> getEmptyView
    void setEmptyView(android.view.View) -> setEmptyView
    int getFirstVisiblePosition() -> getFirstVisiblePosition
    long getItemIdAtPosition(int) -> a
    int getLastVisiblePosition() -> getLastVisiblePosition
    org.holoeverywhere.widget.AdapterView$OnItemClickListener getOnItemClickListener() -> getOnItemClickListener
    void setOnItemClickListener(org.holoeverywhere.widget.AdapterView$OnItemClickListener) -> setOnItemClickListener
    org.holoeverywhere.widget.AdapterView$OnItemLongClickListener getOnItemLongClickListener() -> getOnItemLongClickListener
    void setOnItemLongClickListener(org.holoeverywhere.widget.AdapterView$OnItemLongClickListener) -> setOnItemLongClickListener
    org.holoeverywhere.widget.AdapterView$OnItemSelectedListener getOnItemSelectedListener() -> getOnItemSelectedListener
    void setOnItemSelectedListener(org.holoeverywhere.widget.AdapterView$OnItemSelectedListener) -> setOnItemSelectedListener
    java.lang.Object getSelectedItem() -> getSelectedItem
    long getSelectedItemId() -> getSelectedItemId
    int getSelectedItemPosition() -> getSelectedItemPosition
    android.view.View getSelectedView() -> getSelectedView
    void handleDataChanged() -> f
    boolean isInFilterMode() -> g
    boolean isScrollableForAccessibility() -> b
    int lookForSelectablePosition(int,boolean) -> a
    void onDetachedFromWindow() -> onDetachedFromWindow
    void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo) -> onInitializeAccessibilityNodeInfo
    void onLayout(boolean,int,int,int,int) -> onLayout
    boolean onRequestSendAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
    void performAccessibilityActionsOnSelected() -> j
    boolean performItemClick(android.view.View,int,long) -> a
    void rememberSyncState() -> h
    void removeAllViews() -> removeAllViews
    void removeView(android.view.View) -> removeView
    void removeViewAt(int) -> removeViewAt
    void selectionChanged() -> i
    void setFocusable(boolean) -> setFocusable
    void setFocusableInTouchMode(boolean) -> setFocusableInTouchMode
    void setNextSelectedPositionInt(int) -> setNextSelectedPositionInt
    void setOnClickListener(android.view.View$OnClickListener) -> setOnClickListener
    void setSelectedPositionInt(int) -> setSelectedPositionInt
    void setSelection(int) -> setSelection
    void updateEmptyStatus(boolean) -> a
    void access$100(org.holoeverywhere.widget.AdapterView,android.os.Parcelable) -> a
    android.os.Parcelable access$200(org.holoeverywhere.widget.AdapterView) -> a
    void access$300(org.holoeverywhere.widget.AdapterView) -> b
    void access$400(org.holoeverywhere.widget.AdapterView) -> c
org.holoeverywhere.widget.AdapterView$1 -> org.holoeverywhere.widget.AdapterView$1:
org.holoeverywhere.widget.AdapterView$AdapterDataSetObserver -> org.holoeverywhere.widget.AdapterView$AdapterDataSetObserver:
    android.os.Parcelable mInstanceState -> b
    org.holoeverywhere.widget.AdapterView this$0 -> a
    void onChanged() -> onChanged
    void onInvalidated() -> onInvalidated
org.holoeverywhere.widget.AdapterView$OnItemClickListener -> org.holoeverywhere.widget.AdapterView$OnItemClickListener:
    void onItemClick(org.holoeverywhere.widget.AdapterView,android.view.View,int,long) -> a
org.holoeverywhere.widget.AdapterView$OnItemLongClickListener -> org.holoeverywhere.widget.AdapterView$OnItemLongClickListener:
org.holoeverywhere.widget.AdapterView$OnItemSelectedListener -> org.holoeverywhere.widget.AdapterView$OnItemSelectedListener:
    void onItemSelected(org.holoeverywhere.widget.AdapterView,android.view.View,int,long) -> a
    void onNothingSelected(org.holoeverywhere.widget.AdapterView) -> a
org.holoeverywhere.widget.AdapterView$SelectionNotifier -> org.holoeverywhere.widget.AdapterView$SelectionNotifier:
    org.holoeverywhere.widget.AdapterView this$0 -> a
    void run() -> run
org.holoeverywhere.widget.AlertController -> org.holoeverywhere.widget.AlertController:
    android.widget.ListAdapter mAdapter -> a
    int mAlertDialogLayout -> b
    int mButtonBehavior -> c
    android.view.View$OnClickListener mButtonHandler -> d
    org.holoeverywhere.widget.Button mButtonNegative -> e
    android.os.Message mButtonNegativeMessage -> f
    java.lang.CharSequence mButtonNegativeText -> g
    org.holoeverywhere.widget.Button mButtonNeutral -> h
    android.os.Message mButtonNeutralMessage -> i
    java.lang.CharSequence mButtonNeutralText -> j
    org.holoeverywhere.widget.Button mButtonPositive -> k
    android.os.Message mButtonPositiveMessage -> l
    java.lang.CharSequence mButtonPositiveText -> m
    int mCheckedItem -> n
    android.content.Context mContext -> o
    android.view.View mCustomTitleView -> p
    org.holoeverywhere.widget.AlertController$AlertDecorViewInstaller mDecorViewInstaller -> q
    android.content.DialogInterface mDialogInterface -> r
    boolean mForceInverseBackground -> s
    android.os.Handler mHandler -> t
    android.graphics.drawable.Drawable mIcon -> u
    int mIconId -> v
    android.widget.ImageView mIconView -> w
    int mListItemLayout -> x
    int mListLayout -> y
    org.holoeverywhere.widget.ListView mListView -> z
    java.lang.CharSequence mMessage -> A
    org.holoeverywhere.widget.TextView mMessageView -> B
    int mMultiChoiceItemLayout -> C
    android.widget.ScrollView mScrollView -> D
    int mSingleChoiceItemLayout -> E
    java.lang.CharSequence mTitle -> F
    org.holoeverywhere.widget.TextView mTitleView -> G
    android.view.View mView -> H
    int mViewSpacingBottom -> I
    int mViewSpacingLeft -> J
    int mViewSpacingRight -> K
    boolean mViewSpacingSpecified -> L
    int mViewSpacingTop -> M
    android.view.Window mWindow -> N
    boolean canTextInput(android.view.View) -> a
    boolean shouldCenterSingleButton(android.content.Context) -> a
    void centerButton(org.holoeverywhere.widget.Button) -> a
    org.holoeverywhere.widget.Button getButton(int) -> a
    void installContent() -> a
    boolean onKeyDown(int,android.view.KeyEvent) -> a
    boolean onKeyUp(int,android.view.KeyEvent) -> b
    void setBackground(org.holoeverywhere.widget.LinearLayout,org.holoeverywhere.widget.LinearLayout,android.view.View,boolean,android.content.res.TypedArray,boolean,android.view.View) -> a
    void setButton(int,java.lang.CharSequence,android.content.DialogInterface$OnClickListener,android.os.Message) -> a
    void setButtonBehavior(int) -> b
    void setCustomTitle(android.view.View) -> b
    void setIcon(android.graphics.drawable.Drawable) -> a
    void setIcon(int) -> c
    void setInverseBackgroundForced(boolean) -> a
    void setMessage(java.lang.CharSequence) -> a
    void setTitle(java.lang.CharSequence) -> b
    boolean setupButtons() -> b
    void setupContent(org.holoeverywhere.widget.LinearLayout) -> a
    boolean setupTitle(org.holoeverywhere.widget.LinearLayout) -> b
    void setupView() -> c
    void setView(android.view.View) -> c
    void setView(android.view.View,int,int,int,int) -> a
    int access$000(org.holoeverywhere.widget.AlertController) -> a
    int access$100(org.holoeverywhere.widget.AlertController) -> b
    int access$200(org.holoeverywhere.widget.AlertController) -> c
    int access$300(org.holoeverywhere.widget.AlertController) -> d
    android.widget.ListAdapter access$402(org.holoeverywhere.widget.AlertController,android.widget.ListAdapter) -> a
    int access$502(org.holoeverywhere.widget.AlertController,int) -> a
    android.content.DialogInterface access$600(org.holoeverywhere.widget.AlertController) -> e
    org.holoeverywhere.widget.ListView access$702(org.holoeverywhere.widget.AlertController,org.holoeverywhere.widget.ListView) -> a
    int access$800(org.holoeverywhere.widget.AlertController) -> f
    org.holoeverywhere.widget.Button access$900(org.holoeverywhere.widget.AlertController) -> g
    org.holoeverywhere.widget.Button access$1000(org.holoeverywhere.widget.AlertController) -> h
    org.holoeverywhere.widget.Button access$1100(org.holoeverywhere.widget.AlertController) -> i
    android.os.Message access$1200(org.holoeverywhere.widget.AlertController) -> j
    android.os.Message access$1300(org.holoeverywhere.widget.AlertController) -> k
    android.os.Message access$1400(org.holoeverywhere.widget.AlertController) -> l
    android.os.Handler access$1500(org.holoeverywhere.widget.AlertController) -> m
org.holoeverywhere.widget.AlertController$1 -> org.holoeverywhere.widget.AlertController$1:
    org.holoeverywhere.widget.AlertController this$0 -> a
    boolean needToDismiss(int) -> a
    void onClick(android.view.View) -> onClick
    void send(android.os.Message) -> a
org.holoeverywhere.widget.AlertController$AlertDecorViewInstaller -> org.holoeverywhere.widget.AlertController$AlertDecorViewInstaller:
    void installDecorView(android.content.Context,int) -> b
org.holoeverywhere.widget.AlertController$AlertParams -> org.holoeverywhere.widget.AlertController$AlertParams:
    android.widget.ListAdapter mAdapter -> a
    int mButtonBehavior -> b
    boolean mCancelable -> c
    int mCheckedItem -> d
    boolean[] mCheckedItems -> e
    android.content.Context mContext -> f
    android.database.Cursor mCursor -> g
    android.view.View mCustomTitleView -> h
    boolean mForceInverseBackground -> i
    android.graphics.drawable.Drawable mIcon -> j
    int mIconId -> k
    org.holoeverywhere.LayoutInflater mInflater -> l
    java.lang.String mIsCheckedColumn -> m
    boolean mIsMultiChoice -> n
    boolean mIsSingleChoice -> o
    java.lang.CharSequence[] mItems -> p
    java.lang.String mLabelColumn -> q
    java.lang.CharSequence mMessage -> r
    android.content.DialogInterface$OnClickListener mNegativeButtonListener -> s
    java.lang.CharSequence mNegativeButtonText -> t
    android.content.DialogInterface$OnClickListener mNeutralButtonListener -> u
    java.lang.CharSequence mNeutralButtonText -> v
    android.content.DialogInterface$OnCancelListener mOnCancelListener -> w
    android.content.DialogInterface$OnMultiChoiceClickListener mOnCheckboxClickListener -> x
    android.content.DialogInterface$OnClickListener mOnClickListener -> y
    android.content.DialogInterface$OnDismissListener mOnDismissListener -> z
    android.widget.AdapterView$OnItemSelectedListener mOnItemSelectedListener -> A
    android.content.DialogInterface$OnKeyListener mOnKeyListener -> B
    org.holoeverywhere.widget.AlertController$AlertParams$OnPrepareListViewListener mOnPrepareListViewListener -> C
    android.content.DialogInterface$OnClickListener mPositiveButtonListener -> D
    java.lang.CharSequence mPositiveButtonText -> E
    int mTheme -> F
    java.lang.CharSequence mTitle -> G
    android.view.View mView -> H
    int mViewSpacingBottom -> I
    int mViewSpacingLeft -> J
    int mViewSpacingRight -> K
    boolean mViewSpacingSpecified -> L
    int mViewSpacingTop -> M
    void apply(org.holoeverywhere.widget.AlertController) -> a
    void createListView(org.holoeverywhere.widget.AlertController) -> b
org.holoeverywhere.widget.AlertController$AlertParams$1 -> org.holoeverywhere.widget.AlertController$AlertParams$1:
    org.holoeverywhere.widget.ListView val$listView -> a
    org.holoeverywhere.widget.AlertController$AlertParams this$0 -> b
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
org.holoeverywhere.widget.AlertController$AlertParams$2 -> org.holoeverywhere.widget.AlertController$AlertParams$2:
    int mIsCheckedIndex -> d
    int mLabelIndex -> e
    org.holoeverywhere.widget.ListView val$listView -> a
    org.holoeverywhere.widget.AlertController val$dialog -> b
    org.holoeverywhere.widget.AlertController$AlertParams this$0 -> c
    void bindView(android.view.View,android.content.Context,android.database.Cursor) -> bindView
    android.view.View newView(android.content.Context,android.database.Cursor,android.view.ViewGroup) -> newView
org.holoeverywhere.widget.AlertController$AlertParams$3 -> org.holoeverywhere.widget.AlertController$AlertParams$3:
    org.holoeverywhere.widget.AlertController val$dialog -> a
    org.holoeverywhere.widget.AlertController$AlertParams this$0 -> b
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
org.holoeverywhere.widget.AlertController$AlertParams$4 -> org.holoeverywhere.widget.AlertController$AlertParams$4:
    org.holoeverywhere.widget.ListView val$listView -> a
    org.holoeverywhere.widget.AlertController val$dialog -> b
    org.holoeverywhere.widget.AlertController$AlertParams this$0 -> c
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
org.holoeverywhere.widget.AlertController$AlertParams$OnPrepareListViewListener -> org.holoeverywhere.widget.AlertController$AlertParams$OnPrepareListViewListener:
    void onPrepareListView(org.holoeverywhere.widget.ListView) -> a
org.holoeverywhere.widget.AlertController$ButtonHandler -> org.holoeverywhere.widget.AlertController$ButtonHandler:
    java.lang.ref.WeakReference mDialog -> a
    void handleMessage(android.os.Message) -> handleMessage
org.holoeverywhere.widget.ArrayAdapter -> org.holoeverywhere.widget.ArrayAdapter:
    boolean mAutoSetNotifyFlag -> a
    android.content.Context mContext -> b
    int mDropDownResource -> c
    int mFieldId -> d
    org.holoeverywhere.widget.ArrayAdapter$ArrayFilter mFilter -> e
    org.holoeverywhere.LayoutInflater mInflater -> f
    java.lang.Object mLock -> g
    boolean mNotifyOnChange -> h
    java.util.List mObjects -> i
    java.util.ArrayList mOriginalValues -> j
    int mResource -> k
    android.view.View createViewFromResource(int,android.view.View,android.view.ViewGroup,int) -> a
    android.content.Context getContext() -> a
    int getCount() -> getCount
    android.view.View getDropDownView(int,android.view.View,android.view.ViewGroup) -> getDropDownView
    android.widget.Filter getFilter() -> getFilter
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    void init(android.content.Context,int,int,java.util.List) -> a
    void notifyDataSetChanged() -> notifyDataSetChanged
    void setDropDownViewResource(int) -> a
    java.util.ArrayList access$000(org.holoeverywhere.widget.ArrayAdapter) -> a
    java.lang.Object access$100(org.holoeverywhere.widget.ArrayAdapter) -> b
    java.util.ArrayList access$002(org.holoeverywhere.widget.ArrayAdapter,java.util.ArrayList) -> a
    java.util.List access$200(org.holoeverywhere.widget.ArrayAdapter) -> c
    java.util.List access$202(org.holoeverywhere.widget.ArrayAdapter,java.util.List) -> a
org.holoeverywhere.widget.ArrayAdapter$1 -> org.holoeverywhere.widget.ArrayAdapter$1:
org.holoeverywhere.widget.ArrayAdapter$ArrayFilter -> org.holoeverywhere.widget.ArrayAdapter$ArrayFilter:
    org.holoeverywhere.widget.ArrayAdapter this$0 -> a
    android.widget.Filter$FilterResults performFiltering(java.lang.CharSequence) -> performFiltering
    void publishResults(java.lang.CharSequence,android.widget.Filter$FilterResults) -> publishResults
org.holoeverywhere.widget.AutoCompleteTextView -> org.holoeverywhere.widget.AutoCompleteTextView:
    android.widget.ListAdapter mAdapter -> a
    boolean mBlockCompletion -> b
    int mDropDownAnchorId -> c
    boolean mDropDownDismissedOnCompletion -> d
    android.widget.Filter mFilter -> e
    int mHintResource -> f
    java.lang.CharSequence mHintText -> g
    org.holoeverywhere.widget.TextView mHintView -> h
    android.widget.AdapterView$OnItemClickListener mItemClickListener -> i
    android.widget.AdapterView$OnItemSelectedListener mItemSelectedListener -> j
    int mLastKeyCode -> k
    org.holoeverywhere.widget.AutoCompleteTextView$PopupDataSetObserver mObserver -> l
    boolean mOpenBefore -> m
    org.holoeverywhere.widget.AutoCompleteTextView$PassThroughClickListener mPassThroughClickListener -> n
    org.holoeverywhere.widget.ListPopupWindow mPopup -> o
    boolean mPopupCanBeUpdated -> p
    int mThreshold -> q
    org.holoeverywhere.widget.AutoCompleteTextView$Validator mValidator -> r
    void buildImeCompletions() -> j
    void clearListSelection() -> c
    java.lang.CharSequence convertSelectionToString(java.lang.Object) -> a
    void dismissDropDown() -> d
    void doAfterTextChanged() -> e
    void doBeforeTextChanged() -> f
    boolean enoughToFilter() -> b
    void ensureImeVisible(boolean) -> a
    android.widget.ListAdapter getAdapter() -> getAdapter
    java.lang.CharSequence getCompletionHint() -> getCompletionHint
    int getDropDownAnchor() -> getDropDownAnchor
    int getDropDownAnimationStyle() -> getDropDownAnimationStyle
    android.graphics.drawable.Drawable getDropDownBackground() -> getDropDownBackground
    int getDropDownHeight() -> getDropDownHeight
    int getDropDownHorizontalOffset() -> getDropDownHorizontalOffset
    int getDropDownVerticalOffset() -> getDropDownVerticalOffset
    int getDropDownWidth() -> getDropDownWidth
    android.widget.Filter getFilter() -> getFilter
    int getListSelection() -> getListSelection
    android.widget.AdapterView$OnItemClickListener getOnItemClickListener() -> getOnItemClickListener
    android.widget.AdapterView$OnItemSelectedListener getOnItemSelectedListener() -> getOnItemSelectedListener
    int getThreshold() -> getThreshold
    org.holoeverywhere.widget.AutoCompleteTextView$Validator getValidator() -> getValidator
    boolean isPopupShowing() -> g
    void onClickImpl() -> k
    void onCommitCompletion(android.view.inputmethod.CompletionInfo) -> onCommitCompletion
    void onDetachedFromWindow() -> onDetachedFromWindow
    void onDisplayHint(int) -> onDisplayHint
    void onFilterComplete(int) -> onFilterComplete
    void onFocusChanged(boolean,int,android.graphics.Rect) -> onFocusChanged
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    boolean onKeyPreIme(int,android.view.KeyEvent) -> onKeyPreIme
    boolean onKeyUp(int,android.view.KeyEvent) -> onKeyUp
    void onLoadEntries(java.lang.CharSequence[]) -> a
    void onWindowFocusChanged(boolean) -> onWindowFocusChanged
    void performCompletion() -> a
    void performCompletion(android.view.View,int,long) -> a
    void performFiltering(java.lang.CharSequence,int) -> a
    void performValidation() -> h
    void replaceText(java.lang.CharSequence) -> a
    void setAdapter(android.widget.ListAdapter) -> setAdapter
    void setCompletionHint(java.lang.CharSequence) -> setCompletionHint
    void setDropDownAlwaysVisible(boolean) -> setDropDownAlwaysVisible
    void setDropDownAnchor(int) -> setDropDownAnchor
    void setDropDownAnimationStyle(int) -> setDropDownAnimationStyle
    void setDropDownBackgroundDrawable(android.graphics.drawable.Drawable) -> setDropDownBackgroundDrawable
    void setDropDownBackgroundResource(int) -> setDropDownBackgroundResource
    void setDropDownDismissedOnCompletion(boolean) -> setDropDownDismissedOnCompletion
    void setDropDownHeight(int) -> setDropDownHeight
    void setDropDownHorizontalOffset(int) -> setDropDownHorizontalOffset
    void setDropDownVerticalOffset(int) -> setDropDownVerticalOffset
    void setDropDownWidth(int) -> setDropDownWidth
    void setForceIgnoreOutsideTouch(boolean) -> setForceIgnoreOutsideTouch
    boolean setFrame(int,int,int,int) -> setFrame
    void setListSelection(int) -> setListSelection
    void setOnClickListener(android.view.View$OnClickListener) -> setOnClickListener
    void setOnItemClickListener(android.widget.AdapterView$OnItemClickListener) -> setOnItemClickListener
    void setOnItemSelectedListener(android.widget.AdapterView$OnItemSelectedListener) -> setOnItemSelectedListener
    void setThreshold(int) -> setThreshold
    void setValidator(org.holoeverywhere.widget.AutoCompleteTextView$Validator) -> setValidator
    void showDropDown() -> i
    void updateDropDownForFilter(int) -> a
    void access$000(org.holoeverywhere.widget.AutoCompleteTextView,android.view.View,int,long) -> a
    void access$100(org.holoeverywhere.widget.AutoCompleteTextView) -> a
    android.widget.ListAdapter access$200(org.holoeverywhere.widget.AutoCompleteTextView) -> b
    void access$300(org.holoeverywhere.widget.AutoCompleteTextView,int) -> a
org.holoeverywhere.widget.AutoCompleteTextView$1 -> org.holoeverywhere.widget.AutoCompleteTextView$1:
org.holoeverywhere.widget.AutoCompleteTextView$DropDownItemClickListener -> org.holoeverywhere.widget.AutoCompleteTextView$DropDownItemClickListener:
    org.holoeverywhere.widget.AutoCompleteTextView this$0 -> a
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
org.holoeverywhere.widget.AutoCompleteTextView$MyWatcher -> org.holoeverywhere.widget.AutoCompleteTextView$MyWatcher:
    org.holoeverywhere.widget.AutoCompleteTextView this$0 -> a
    void afterTextChanged(android.text.Editable) -> afterTextChanged
    void beforeTextChanged(java.lang.CharSequence,int,int,int) -> beforeTextChanged
    void onTextChanged(java.lang.CharSequence,int,int,int) -> onTextChanged
org.holoeverywhere.widget.AutoCompleteTextView$PassThroughClickListener -> org.holoeverywhere.widget.AutoCompleteTextView$PassThroughClickListener:
    android.view.View$OnClickListener mWrapped -> b
    org.holoeverywhere.widget.AutoCompleteTextView this$0 -> a
    void onClick(android.view.View) -> onClick
    android.view.View$OnClickListener access$802(org.holoeverywhere.widget.AutoCompleteTextView$PassThroughClickListener,android.view.View$OnClickListener) -> a
org.holoeverywhere.widget.AutoCompleteTextView$PopupDataSetObserver -> org.holoeverywhere.widget.AutoCompleteTextView$PopupDataSetObserver:
    org.holoeverywhere.widget.AutoCompleteTextView this$0 -> a
    void onChanged() -> onChanged
org.holoeverywhere.widget.AutoCompleteTextView$PopupDataSetObserver$1 -> org.holoeverywhere.widget.AutoCompleteTextView$PopupDataSetObserver$1:
    org.holoeverywhere.widget.AutoCompleteTextView$PopupDataSetObserver this$1 -> a
    void run() -> run
org.holoeverywhere.widget.AutoCompleteTextView$Validator -> org.holoeverywhere.widget.AutoCompleteTextView$Validator:
    java.lang.CharSequence fixText(java.lang.CharSequence) -> a
    boolean isValid(java.lang.CharSequence) -> b
org.holoeverywhere.widget.BaseExpandableListAdapter -> org.holoeverywhere.widget.BaseExpandableListAdapter:
    android.database.DataSetObservable mDataSetObservable -> a
    boolean areAllItemsEnabled() -> areAllItemsEnabled
    int getChildType(int,int) -> b
    int getChildTypeCount() -> a
    long getCombinedChildId(long,long) -> getCombinedChildId
    long getCombinedGroupId(long) -> getCombinedGroupId
    int getGroupType(int) -> b
    int getGroupTypeCount() -> b
    boolean isEmpty() -> isEmpty
    void onGroupCollapsed(int) -> onGroupCollapsed
    void onGroupExpanded(int) -> onGroupExpanded
    void registerDataSetObserver(android.database.DataSetObserver) -> registerDataSetObserver
    void unregisterDataSetObserver(android.database.DataSetObserver) -> unregisterDataSetObserver
org.holoeverywhere.widget.Button -> org.holoeverywhere.widget.Button:
    org.holoeverywhere.drawable.DrawableCompat$StateOverlay mStateOverlay -> a
    java.lang.String mFontFamily -> b
    int mFontStyle -> c
    boolean isActivated() -> isActivated
    void setActivated(boolean) -> setActivated
    int[] onCreateDrawableState(int) -> onCreateDrawableState
    int[] superOnCreateDrawableState(int) -> superOnCreateDrawableState
    java.lang.String getFontFamily() -> getFontFamily
    int getFontStyle() -> getFontStyle
    void setAllCaps(boolean) -> setAllCaps
    void setFontStyle(java.lang.String,int) -> a
    void setTextAppearance(android.content.Context,int) -> setTextAppearance
org.holoeverywhere.widget.CheckBox -> org.holoeverywhere.widget.CheckBox:
    java.lang.String mFontFamily -> a
    int mFontStyle -> b
    java.lang.String getFontFamily() -> getFontFamily
    int getFontStyle() -> getFontStyle
    void setAllCaps(boolean) -> setAllCaps
    void setFontStyle(java.lang.String,int) -> a
    void setTextAppearance(android.content.Context,int) -> setTextAppearance
org.holoeverywhere.widget.CheckedTextView -> org.holoeverywhere.widget.CheckedTextView:
    java.lang.String mFontFamily -> a
    int mFontStyle -> b
    java.lang.String getFontFamily() -> getFontFamily
    int getFontStyle() -> getFontStyle
    void setAllCaps(boolean) -> setAllCaps
    void setFontStyle(java.lang.String,int) -> a
    void setTextAppearance(android.content.Context,int) -> setTextAppearance
org.holoeverywhere.widget.EditText -> org.holoeverywhere.widget.EditText:
    java.lang.String mFontFamily -> a
    int mFontStyle -> b
    java.lang.String getFontFamily() -> getFontFamily
    int getFontStyle() -> getFontStyle
    void setAllCaps(boolean) -> setAllCaps
    void setFontStyle(java.lang.String,int) -> a
    void setTextAppearance(android.content.Context,int) -> setTextAppearance
org.holoeverywhere.widget.ExpandableListConnector -> org.holoeverywhere.widget.ExpandableListConnector:
    android.database.DataSetObserver mDataSetObserver -> a
    android.widget.ExpandableListAdapter mExpandableListAdapter -> b
    java.util.ArrayList mExpGroupMetadataList -> c
    int mMaxExpGroupCount -> d
    int mTotalExpChildrenCount -> e
    boolean areAllItemsEnabled() -> areAllItemsEnabled
    boolean collapseGroup(int) -> a
    boolean collapseGroup(org.holoeverywhere.widget.ExpandableListConnector$PositionMetadata) -> a
    boolean expandGroup(org.holoeverywhere.widget.ExpandableListConnector$PositionMetadata) -> b
    int findGroupPosition(long,int) -> a
    android.widget.ExpandableListAdapter getAdapter() -> a
    int getCount() -> getCount
    java.util.ArrayList getExpandedGroupMetadataList() -> b
    android.widget.Filter getFilter() -> getFilter
    org.holoeverywhere.widget.ExpandableListConnector$PositionMetadata getFlattenedPos(org.holoeverywhere.widget.ExpandableListPosition) -> a
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
    int getItemViewType(int) -> getItemViewType
    org.holoeverywhere.widget.ExpandableListConnector$PositionMetadata getUnflattenedPos(int) -> b
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    int getViewTypeCount() -> getViewTypeCount
    boolean hasStableIds() -> hasStableIds
    boolean isEmpty() -> isEmpty
    boolean isEnabled(int) -> isEnabled
    void refreshExpGroupMetadataList(boolean,boolean) -> a
    void setExpandableListAdapter(android.widget.ExpandableListAdapter) -> a
    void setExpandedGroupMetadataList(java.util.ArrayList) -> a
    void access$000(org.holoeverywhere.widget.ExpandableListConnector,boolean,boolean) -> a
org.holoeverywhere.widget.ExpandableListConnector$GroupMetadata -> org.holoeverywhere.widget.ExpandableListConnector$GroupMetadata:
    android.os.Parcelable$Creator CREATOR -> CREATOR
    int flPos -> a
    long gId -> b
    int gPos -> c
    int lastChildFlPos -> d
    org.holoeverywhere.widget.ExpandableListConnector$GroupMetadata obtain(int,int,int,long) -> a
    int compareTo(org.holoeverywhere.widget.ExpandableListConnector$GroupMetadata) -> a
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    int compareTo(java.lang.Object) -> compareTo
org.holoeverywhere.widget.ExpandableListConnector$GroupMetadata$1 -> org.holoeverywhere.widget.ExpandableListConnector$GroupMetadata$1:
    org.holoeverywhere.widget.ExpandableListConnector$GroupMetadata createFromParcel(android.os.Parcel) -> a
    org.holoeverywhere.widget.ExpandableListConnector$GroupMetadata[] newArray(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
org.holoeverywhere.widget.ExpandableListConnector$MyDataSetObserver -> org.holoeverywhere.widget.ExpandableListConnector$MyDataSetObserver:
    org.holoeverywhere.widget.ExpandableListConnector this$0 -> a
    void onChanged() -> onChanged
    void onInvalidated() -> onInvalidated
org.holoeverywhere.widget.ExpandableListConnector$PositionMetadata -> org.holoeverywhere.widget.ExpandableListConnector$PositionMetadata:
    java.util.ArrayList sPool -> d
    int groupInsertIndex -> a
    org.holoeverywhere.widget.ExpandableListConnector$GroupMetadata groupMetadata -> b
    org.holoeverywhere.widget.ExpandableListPosition position -> c
    org.holoeverywhere.widget.ExpandableListConnector$PositionMetadata getRecycledOrCreate() -> c
    org.holoeverywhere.widget.ExpandableListConnector$PositionMetadata obtain(int,int,int,int,org.holoeverywhere.widget.ExpandableListConnector$GroupMetadata,int) -> a
    boolean isExpanded() -> a
    void recycle() -> b
    void resetState() -> d
org.holoeverywhere.widget.ExpandableListPosition -> org.holoeverywhere.widget.ExpandableListPosition:
    java.util.ArrayList sPool -> e
    int childPos -> a
    int flatListPos -> b
    int groupPos -> c
    int type -> d
    org.holoeverywhere.widget.ExpandableListPosition getRecycledOrCreate() -> c
    org.holoeverywhere.widget.ExpandableListPosition obtain(int,int,int,int) -> a
    org.holoeverywhere.widget.ExpandableListPosition obtainGroupPosition(int) -> a
    org.holoeverywhere.widget.ExpandableListPosition obtainPosition(long) -> a
    long getPackedPosition() -> a
    void recycle() -> b
    void resetState() -> d
org.holoeverywhere.widget.ExpandableListView -> org.holoeverywhere.widget.ExpandableListView:
    int[] CHILD_LAST_STATE_SET -> a
    int[] EMPTY_STATE_SET -> b
    int[] GROUP_EMPTY_STATE_SET -> c
    int[] GROUP_EXPANDED_EMPTY_STATE_SET -> d
    int[] GROUP_EXPANDED_STATE_SET -> e
    int[][] GROUP_STATE_SETS -> f
    android.widget.ExpandableListAdapter mAdapter -> g
    android.graphics.drawable.Drawable mChildDivider -> h
    android.graphics.drawable.Drawable mChildIndicator -> i
    int mChildIndicatorLeft -> j
    int mChildIndicatorRight -> k
    boolean mClipToPadding -> l
    org.holoeverywhere.widget.ExpandableListConnector mConnector -> m
    android.graphics.drawable.Drawable mGroupIndicator -> n
    int mIndicatorLeft -> o
    android.graphics.Rect mIndicatorRect -> p
    int mIndicatorRight -> q
    org.holoeverywhere.widget.ExpandableListView$OnChildClickListener mOnChildClickListener -> r
    org.holoeverywhere.widget.ExpandableListView$OnGroupClickListener mOnGroupClickListener -> s
    org.holoeverywhere.widget.ExpandableListView$OnGroupCollapseListener mOnGroupCollapseListener -> t
    org.holoeverywhere.widget.ExpandableListView$OnGroupExpandListener mOnGroupExpandListener -> u
    int getPackedPositionChild(long) -> a
    long getPackedPositionForChild(int,int) -> a
    long getPackedPositionForGroup(int) -> a
    int getPackedPositionGroup(long) -> b
    int getPackedPositionType(long) -> c
    android.view.ContextMenu$ContextMenuInfo createContextMenuInfo(android.view.View,int,long) -> a
    void dispatchDraw(android.graphics.Canvas) -> dispatchDraw
    int getAbsoluteFlatPosition(int) -> d
    long getChildOrGroupId(org.holoeverywhere.widget.ExpandableListPosition) -> a
    android.widget.ExpandableListAdapter getExpandableListAdapter() -> getExpandableListAdapter
    long getExpandableListPosition(int) -> b
    int getFlatListPosition(long) -> d
    int getFlatPositionForConnector(int) -> e
    android.graphics.drawable.Drawable getIndicator(org.holoeverywhere.widget.ExpandableListConnector$PositionMetadata) -> a
    long getSelectedId() -> getSelectedId
    long getSelectedPosition() -> getSelectedPosition
    boolean handleItemClick(android.view.View,int,long) -> b
    boolean isHeaderOrFooterPosition(int) -> f
    void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo) -> onInitializeAccessibilityNodeInfo
    void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    boolean performItemClick(android.view.View,int,long) -> performItemClick
    void setAdapter(android.widget.ExpandableListAdapter) -> setAdapter
    void setAdapter(android.widget.ListAdapter) -> setAdapter
    void setChildDivider(android.graphics.drawable.Drawable) -> setChildDivider
    void setChildIndicator(android.graphics.drawable.Drawable) -> setChildIndicator
    void setClipToPadding(boolean) -> setClipToPadding
    void setGroupIndicator(android.graphics.drawable.Drawable) -> setGroupIndicator
    void setOnChildClickListener(org.holoeverywhere.widget.ExpandableListView$OnChildClickListener) -> setOnChildClickListener
    void setOnGroupClickListener(org.holoeverywhere.widget.ExpandableListView$OnGroupClickListener) -> setOnGroupClickListener
    void setOnGroupCollapseListener(org.holoeverywhere.widget.ExpandableListView$OnGroupCollapseListener) -> setOnGroupCollapseListener
    void setOnGroupExpandListener(org.holoeverywhere.widget.ExpandableListView$OnGroupExpandListener) -> setOnGroupExpandListener
    void setOnItemClickListener(android.widget.AdapterView$OnItemClickListener) -> setOnItemClickListener
    void setSelectedGroup(int) -> setSelectedGroup
    void setAdapter(android.widget.Adapter) -> setAdapter
org.holoeverywhere.widget.ExpandableListView$1 -> org.holoeverywhere.widget.ExpandableListView$1:
org.holoeverywhere.widget.ExpandableListView$ExpandableListContextMenuInfo -> org.holoeverywhere.widget.ExpandableListView$ExpandableListContextMenuInfo:
    long id -> a
    long packedPosition -> b
    android.view.View targetView -> c
org.holoeverywhere.widget.ExpandableListView$OnChildClickListener -> org.holoeverywhere.widget.ExpandableListView$OnChildClickListener:
    boolean onChildClick(org.holoeverywhere.widget.ExpandableListView,android.view.View,int,int,long) -> a
org.holoeverywhere.widget.ExpandableListView$OnGroupClickListener -> org.holoeverywhere.widget.ExpandableListView$OnGroupClickListener:
    boolean onGroupClick(org.holoeverywhere.widget.ExpandableListView,android.view.View,int,long) -> a
org.holoeverywhere.widget.ExpandableListView$OnGroupCollapseListener -> org.holoeverywhere.widget.ExpandableListView$OnGroupCollapseListener:
    void onGroupCollapse(int) -> a
org.holoeverywhere.widget.ExpandableListView$OnGroupExpandListener -> org.holoeverywhere.widget.ExpandableListView$OnGroupExpandListener:
    void onGroupExpand(int) -> a
org.holoeverywhere.widget.ExpandableListView$SavedState -> org.holoeverywhere.widget.ExpandableListView$SavedState:
    android.os.Parcelable$Creator CREATOR -> CREATOR
    java.util.ArrayList expandedGroupMetadataList -> a
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
org.holoeverywhere.widget.ExpandableListView$SavedState$1 -> org.holoeverywhere.widget.ExpandableListView$SavedState$1:
    org.holoeverywhere.widget.ExpandableListView$SavedState createFromParcel(android.os.Parcel) -> a
    org.holoeverywhere.widget.ExpandableListView$SavedState[] newArray(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
org.holoeverywhere.widget.FastScroller -> org.holoeverywhere.widget.FastScroller:
    int[] DEFAULT_STATES -> i
    int MIN_PAGES -> j
    int[] PRESSED_STATES -> k
    boolean mAlwaysShow -> l
    boolean mChangedBounds -> m
    java.lang.Runnable mDeferStartDrag -> n
    boolean mDrawOverlay -> o
    android.os.Handler mHandler -> p
    float mInitialTouchY -> a
    int mItemCount -> q
    android.widget.AbsListView mList -> b
    android.widget.ListAdapter mListAdapter -> c
    int mListOffset -> r
    boolean mLongList -> s
    boolean mMatchDragPosition -> t
    android.graphics.drawable.Drawable mOverlayDrawable -> u
    android.graphics.drawable.Drawable mOverlayDrawableLeft -> v
    android.graphics.drawable.Drawable mOverlayDrawableRight -> w
    android.graphics.RectF mOverlayPos -> x
    int mOverlayPosition -> y
    int mOverlaySize -> z
    android.graphics.Paint mPaint -> A
    boolean mPendingDrag -> d
    int mPosition -> B
    int mScaledTouchSlop -> C
    boolean mScrollCompleted -> e
    org.holoeverywhere.widget.FastScroller$ScrollFade mScrollFade -> D
    android.widget.SectionIndexer mSectionIndexer -> E
    java.lang.Object[] mSections -> F
    java.lang.String mSectionText -> G
    int mState -> H
    android.graphics.drawable.Drawable mThumbDrawable -> I
    int mThumbH -> f
    int mThumbW -> g
    int mThumbY -> h
    android.graphics.Rect mTmpRect -> J
    android.graphics.drawable.Drawable mTrackDrawable -> K
    void beginDrag() -> a
    void cancelFling() -> j
    void cancelPendingDrag() -> b
    void draw(android.graphics.Canvas) -> a
    void getSectionsFromIndexer() -> c
    int getState() -> d
    int getWidth() -> e
    void init(android.content.Context) -> a
    boolean isAlwaysShowEnabled() -> f
    boolean isPointInside(float,float) -> a
    boolean onInterceptTouchEvent(android.view.MotionEvent) -> a
    void onItemCountChanged(int,int) -> a
    void onSectionsChanged() -> g
    void onSizeChanged(int,int,int,int) -> a
    boolean onTouchEvent(android.view.MotionEvent) -> b
    void refreshDrawableState() -> k
    void resetThumbPos() -> l
    void scrollTo(float) -> a
    void setAlwaysShow(boolean) -> a
    void setScrollbarPosition(int) -> a
    void setState(int) -> b
    void startPendingDrag() -> h
    void stop() -> i
    void useThumbDrawable(android.content.Context,android.graphics.drawable.Drawable) -> a
org.holoeverywhere.widget.FastScroller$1 -> org.holoeverywhere.widget.FastScroller$1:
    org.holoeverywhere.widget.FastScroller this$0 -> a
    void run() -> run
org.holoeverywhere.widget.FastScroller$FastScrollerCallback -> org.holoeverywhere.widget.FastScroller$FastScrollerCallback:
    int getVerticalScrollbarPosition() -> getVerticalScrollbarPosition
    boolean isAttached() -> a
    boolean isInScrollingContainer() -> b
    void reportScrollStateChange(int) -> c
org.holoeverywhere.widget.FastScroller$ScrollFade -> org.holoeverywhere.widget.FastScroller$ScrollFade:
    long mFadeDuration -> a
    long mStartTime -> b
    org.holoeverywhere.widget.FastScroller this$0 -> c
    int getAlpha() -> a
    void run() -> run
    void startFade() -> b
org.holoeverywhere.widget.FrameLayout -> org.holoeverywhere.widget.FrameLayout:
    org.holoeverywhere.drawable.DrawableCompat$StateOverlay mStateOverlay -> mStateOverlay
    boolean mSaveChildrenState -> mSaveChildrenState
    boolean isActivated() -> isActivated
    void setActivated(boolean) -> setActivated
    int[] onCreateDrawableState(int) -> onCreateDrawableState
    int[] superOnCreateDrawableState(int) -> superOnCreateDrawableState
    boolean isSaveChildrenState() -> isSaveChildrenState
    void setSaveChildrenState(boolean) -> setSaveChildrenState
    void dispatchSaveInstanceState(android.util.SparseArray) -> dispatchSaveInstanceState
    void dispatchRestoreInstanceState(android.util.SparseArray) -> dispatchRestoreInstanceState
org.holoeverywhere.widget.GridView -> org.holoeverywhere.widget.GridView:
    boolean USE_ACTIVATED -> a
    java.util.List mFooterViewInfos -> b
    java.util.List mHeaderViewInfos -> c
    org.holoeverywhere.widget.ListAdapterWrapper$ListAdapterCallback mListAdapterCallback -> d
    org.holoeverywhere.widget.GridView$OnItemLongClickListenerWrapper mOnItemLongClickListenerWrapper -> e
    org.holoeverywhere.app.Activity mActivity -> f
    org.holoeverywhere.widget.ListAdapterWrapper mAdapter -> g
    boolean mAdapterHasStableIds -> h
    android.support.v4.util.LongSparseArray mCheckedIdStates -> i
    int mCheckedItemCount -> j
    android.util.SparseBooleanArray mCheckStates -> k
    android.support.v7.view.ActionMode mChoiceActionMode -> l
    int mChoiceMode -> m
    android.view.ContextMenu$ContextMenuInfo mContextMenuInfo -> n
    boolean mFastScrollEnabled -> o
    org.holoeverywhere.widget.FastScroller mFastScroller -> p
    boolean mForceFastScrollAlwaysVisibleDisable -> q
    boolean mForceHeaderListAdapter -> r
    boolean mIsAttached -> s
    int mLastScrollState -> t
    org.holoeverywhere.widget.GridView$MultiChoiceModeWrapper mMultiChoiceModeCallback -> u
    android.widget.AbsListView$OnScrollListener mOnScrollListener -> v
    boolean mPaddingFromScroller -> w
    int mVerticalScrollbarPosition -> x
    void clearChoices() -> clearChoices
    android.view.ContextMenu$ContextMenuInfo createContextMenuInfo(android.view.View,int,long) -> a
    void draw(android.graphics.Canvas) -> draw
    org.holoeverywhere.app.Activity getActivity() -> getActivity
    void setActivity(org.holoeverywhere.app.Activity) -> setActivity
    android.widget.ListAdapter getAdapterSource() -> getAdapterSource
    int getCheckedItemCount() -> getCheckedItemCount
    long[] getCheckedItemIds() -> getCheckedItemIds
    int getCheckedItemPosition() -> getCheckedItemPosition
    android.util.SparseBooleanArray getCheckedItemPositions() -> getCheckedItemPositions
    int getChoiceMode() -> getChoiceMode
    void setChoiceMode(int) -> setChoiceMode
    android.view.ContextMenu$ContextMenuInfo getContextMenuInfo() -> getContextMenuInfo
    int getFooterViewsCount() -> getFooterViewsCount
    int getHeaderViewsCount() -> getHeaderViewsCount
    int getVerticalScrollbarPosition() -> getVerticalScrollbarPosition
    void setVerticalScrollbarPosition(int) -> setVerticalScrollbarPosition
    int getVerticalScrollbarWidth() -> getVerticalScrollbarWidth
    boolean isAttached() -> a
    boolean isFastScrollAlwaysVisible() -> isFastScrollAlwaysVisible
    void setFastScrollAlwaysVisible(boolean) -> setFastScrollAlwaysVisible
    boolean isFastScrollEnabled() -> isFastScrollEnabled
    void setFastScrollEnabled(boolean) -> setFastScrollEnabled
    void setForceHeaderListAdapter(boolean) -> setForceHeaderListAdapter
    boolean isInScrollingContainer() -> b
    boolean isItemChecked(int) -> isItemChecked
    void setPaddingFromScroller(boolean) -> setPaddingFromScroller
    void onAttachedToWindow() -> onAttachedToWindow
    void onDetachedFromWindow() -> onDetachedFromWindow
    void onFocusChanged(boolean,int,android.graphics.Rect) -> onFocusChanged
    boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    boolean onKeyUp(int,android.view.KeyEvent) -> onKeyUp
    void onLayout(boolean,int,int,int,int) -> onLayout
    android.view.View onPrepareView(android.view.View,int) -> a
    void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    void onSizeChanged(int,int,int,int) -> onSizeChanged
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void onWindowFocusChanged(boolean) -> onWindowFocusChanged
    boolean performItemClick(android.view.View,int,long) -> performItemClick
    boolean performItemLongClick(android.view.View,int,long) -> b
    void recomputePaddingFromScroller() -> c
    void reportScrollStateChange(int) -> c
    void setAdapter(android.widget.ListAdapter) -> setAdapter
    void setItemChecked(int,boolean) -> setItemChecked
    void setMultiChoiceModeListener(org.holoeverywhere.widget.ListView$MultiChoiceModeListener) -> setMultiChoiceModeListener
    void setOnItemLongClickListener(android.widget.AdapterView$OnItemLongClickListener) -> setOnItemLongClickListener
    void setOnScrollListener(android.widget.AbsListView$OnScrollListener) -> setOnScrollListener
    void setSelector(int) -> setSelector
    void setStateOnView(android.view.View,boolean) -> a
    boolean showContextMenuForChild(android.view.View) -> showContextMenuForChild
    android.support.v7.view.ActionMode startSupportActionMode(android.support.v7.view.ActionMode$Callback) -> a
    void updateOnScreenCheckedViews() -> d
    void setAdapter(android.widget.Adapter) -> setAdapter
    org.holoeverywhere.widget.FastScroller access$000(org.holoeverywhere.widget.GridView) -> a
    android.support.v7.view.ActionMode access$402(org.holoeverywhere.widget.GridView,android.support.v7.view.ActionMode) -> a
    void access$500(org.holoeverywhere.widget.GridView) -> b
org.holoeverywhere.widget.GridView$1 -> org.holoeverywhere.widget.GridView$1:
    org.holoeverywhere.widget.GridView this$0 -> a
    void onChanged() -> a
    void onInvalidated() -> b
    android.view.View onPrepareView(android.view.View,int) -> a
org.holoeverywhere.widget.GridView$MultiChoiceModeWrapper -> org.holoeverywhere.widget.GridView$MultiChoiceModeWrapper:
    org.holoeverywhere.widget.ListView$MultiChoiceModeListener mWrapped -> b
    org.holoeverywhere.widget.GridView this$0 -> a
    boolean onActionItemClicked(android.support.v7.view.ActionMode,android.view.MenuItem) -> a
    boolean onCreateActionMode(android.support.v7.view.ActionMode,android.view.Menu) -> a
    void onDestroyActionMode(android.support.v7.view.ActionMode) -> a
    void onItemCheckedStateChanged(android.support.v7.view.ActionMode,int,long,boolean) -> a
    boolean onPrepareActionMode(android.support.v7.view.ActionMode,android.view.Menu) -> b
    void setWrapped(org.holoeverywhere.widget.ListView$MultiChoiceModeListener) -> a
org.holoeverywhere.widget.GridView$OnItemLongClickListenerWrapper -> org.holoeverywhere.widget.GridView$OnItemLongClickListenerWrapper:
    android.widget.AdapterView$OnItemLongClickListener wrapped -> b
    org.holoeverywhere.widget.GridView this$0 -> a
    boolean onItemLongClick(android.widget.AdapterView,android.view.View,int,long) -> onItemLongClick
    void setWrapped(android.widget.AdapterView$OnItemLongClickListener) -> a
    android.widget.AdapterView$OnItemLongClickListener access$200(org.holoeverywhere.widget.GridView$OnItemLongClickListenerWrapper) -> a
org.holoeverywhere.widget.GridView$SavedState -> org.holoeverywhere.widget.GridView$SavedState:
    android.os.Parcelable$Creator CREATOR -> CREATOR
    int checkedItemCount -> a
    android.support.v4.util.LongSparseArray checkIdState -> b
    android.util.SparseBooleanArray checkState -> c
    boolean inActionMode -> d
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
org.holoeverywhere.widget.GridView$SavedState$1 -> org.holoeverywhere.widget.GridView$SavedState$1:
    org.holoeverywhere.widget.GridView$SavedState createFromParcel(android.os.Parcel) -> a
    org.holoeverywhere.widget.GridView$SavedState[] newArray(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
org.holoeverywhere.widget.HeaderViewListAdapter -> org.holoeverywhere.widget.HeaderViewListAdapter:
    java.util.List EMPTY_INFO_LIST -> b
    boolean mAreAllFixedViewsSelectable -> a
    java.util.List mFooterViewInfos -> c
    java.util.List mHeaderViewInfos -> d
    boolean mIsFilterable -> e
    boolean areAllItemsEnabled() -> areAllItemsEnabled
    boolean areAllListInfosSelectable(java.util.List) -> a
    int getCount() -> getCount
    android.widget.Filter getFilter() -> getFilter
    int getFootersCount() -> a
    int getHeadersCount() -> b
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
    int getItemViewType(int) -> getItemViewType
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    boolean isEnabled(int) -> isEnabled
    boolean removeFooter(android.view.View) -> a
    boolean removeHeader(android.view.View) -> b
org.holoeverywhere.widget.HeaderViewListAdapter$ViewInfo -> org.holoeverywhere.widget.HeaderViewListAdapter$ViewInfo:
    java.lang.Object data -> a
    boolean isSelectable -> b
    android.view.View view -> c
org.holoeverywhere.widget.HeterogeneousExpandableList -> org.holoeverywhere.widget.HeterogeneousExpandableList:
    int getChildType(int,int) -> b
    int getChildTypeCount() -> a
    int getGroupType(int) -> b
    int getGroupTypeCount() -> b
org.holoeverywhere.widget.ImageButton -> org.holoeverywhere.widget.ImageButton:
    org.holoeverywhere.drawable.DrawableCompat$StateOverlay mStateOverlay -> a
    boolean isActivated() -> isActivated
    void setActivated(boolean) -> setActivated
    int[] onCreateDrawableState(int) -> onCreateDrawableState
    int[] superOnCreateDrawableState(int) -> superOnCreateDrawableState
org.holoeverywhere.widget.LinearLayout -> org.holoeverywhere.widget.LinearLayout:
    org.holoeverywhere.drawable.DrawableCompat$StateOverlay mStateOverlay -> a
    android.graphics.drawable.Drawable mDivider -> b
    int mDividerHeight -> c
    int mDividerPadding -> d
    int mDividerWidth -> e
    int mShowDividers -> f
    int mGravity -> g
    int[] mMaxAscent -> h
    int[] mMaxDescent -> i
    int mTotalLength -> j
    int mBaselineChildTop -> k
    boolean mUseLargestChild -> l
    int getAbsoluteGravity(int,int) -> a
    boolean isMeasureWithLargestChildEnabled() -> isMeasureWithLargestChildEnabled
    void setMeasureWithLargestChildEnabled(boolean) -> setMeasureWithLargestChildEnabled
    boolean isActivated() -> isActivated
    void setActivated(boolean) -> setActivated
    int[] onCreateDrawableState(int) -> onCreateDrawableState
    int[] superOnCreateDrawableState(int) -> superOnCreateDrawableState
    void drawDividersHorizontal(android.graphics.Canvas) -> a
    void drawDividersVertical(android.graphics.Canvas) -> b
    void drawHorizontalDivider(android.graphics.Canvas,int) -> a
    void drawVerticalDivider(android.graphics.Canvas,int) -> b
    void forceUniformHeight(int,int) -> d
    void forceUniformWidth(int,int) -> e
    android.graphics.drawable.Drawable getDividerDrawable() -> getDividerDrawable
    void setDividerDrawable(android.graphics.drawable.Drawable) -> setDividerDrawable
    int getDividerPadding() -> getDividerPadding
    void setDividerPadding(int) -> setDividerPadding
    int getDividerWidth() -> getDividerWidth
    int getShowDividers() -> getShowDividers
    void setShowDividers(int) -> setShowDividers
    boolean hasDividerBeforeChildAt(int) -> a
    boolean isLayoutRtl() -> e
    void layoutHorizontal() -> f
    void layoutVertical() -> g
    void measureChildBeforeLayout(android.view.View,int,int,int,int,int) -> a
    void measureHorizontal(int,int) -> b
    int getBaseline() -> getBaseline
    void measureVertical(int,int) -> c
    void onDraw(android.graphics.Canvas) -> onDraw
    void onLayout(boolean,int,int,int,int) -> onLayout
    void onMeasure(int,int) -> onMeasure
    void setChildFrame(android.view.View,int,int,int,int) -> a
    int getGravity() -> getGravity
    void setGravity(int) -> setGravity
    void setHorizontalGravity(int) -> setHorizontalGravity
    void setVerticalGravity(int) -> setVerticalGravity
    boolean shouldDelayChildPressedState() -> shouldDelayChildPressedState
org.holoeverywhere.widget.ListAdapterWrapper -> org.holoeverywhere.widget.ListAdapterWrapper:
    org.holoeverywhere.widget.ListAdapterWrapper$ListAdapterCallback mCallback -> a
    android.widget.ListAdapter mWrapped -> b
    android.database.DataSetObserver mLastDataSetObserver -> c
    android.widget.AdapterView mAdapterView -> d
    void setAdapterView(android.widget.AdapterView) -> a
    boolean areAllItemsEnabled() -> areAllItemsEnabled
    int getCount() -> getCount
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
    int getItemViewType(int) -> getItemViewType
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    int getViewTypeCount() -> getViewTypeCount
    android.widget.ListAdapter getWrappedAdapter() -> getWrappedAdapter
    boolean hasStableIds() -> hasStableIds
    boolean isEmpty() -> isEmpty
    boolean isEnabled(int) -> isEnabled
    android.view.View onPrepareView(android.view.View,int) -> a
    void registerDataSetObserver(android.database.DataSetObserver) -> registerDataSetObserver
    void unregisterDataSetObserver(android.database.DataSetObserver) -> unregisterDataSetObserver
    org.holoeverywhere.widget.ListAdapterWrapper$ListAdapterCallback access$000(org.holoeverywhere.widget.ListAdapterWrapper) -> a
org.holoeverywhere.widget.ListAdapterWrapper$ListAdapterCallback -> org.holoeverywhere.widget.ListAdapterWrapper$ListAdapterCallback:
    void onChanged() -> a
    void onInvalidated() -> b
    android.view.View onPrepareView(android.view.View,int) -> a
org.holoeverywhere.widget.ListAdapterWrapper$WrapperDataSetObserver -> org.holoeverywhere.widget.ListAdapterWrapper$WrapperDataSetObserver:
    android.database.DataSetObserver mDataSetObserver -> b
    org.holoeverywhere.widget.ListAdapterWrapper this$0 -> a
    void onChanged() -> onChanged
    void onInvalidated() -> onInvalidated
org.holoeverywhere.widget.ListPopupWindow -> org.holoeverywhere.widget.ListPopupWindow:
    android.widget.ListAdapter mAdapter -> b
    android.content.Context mContext -> c
    boolean mDropDownAlwaysVisible -> d
    android.view.View mDropDownAnchorView -> e
    int mDropDownHeight -> f
    int mDropDownHorizontalOffset -> g
    org.holoeverywhere.widget.ListPopupWindow$DropDownListView mDropDownList -> h
    android.graphics.drawable.Drawable mDropDownListHighlight -> i
    int mDropDownVerticalOffset -> j
    boolean mDropDownVerticalOffsetSet -> k
    int mDropDownWidth -> l
    boolean mForceIgnoreOutsideTouch -> m
    android.os.Handler mHandler -> n
    org.holoeverywhere.widget.ListPopupWindow$ListSelectorHider mHideSelector -> o
    android.widget.AdapterView$OnItemClickListener mItemClickListener -> p
    android.widget.AdapterView$OnItemSelectedListener mItemSelectedListener -> q
    int mListItemExpandMaximum -> a
    boolean mModal -> r
    android.database.DataSetObserver mObserver -> s
    org.holoeverywhere.widget.PopupWindow mPopup -> t
    int mPromptPosition -> u
    android.view.View mPromptView -> v
    org.holoeverywhere.widget.ListPopupWindow$ResizePopupRunnable mResizePopupRunnable -> w
    org.holoeverywhere.widget.ListPopupWindow$PopupScrollListener mScrollListener -> x
    java.lang.Runnable mShowDropDownRunnable -> y
    android.graphics.Rect mTempRect -> z
    org.holoeverywhere.widget.ListPopupWindow$PopupTouchInterceptor mTouchInterceptor -> A
    int buildDropDown() -> a
    void clearListSelection() -> b
    void dismiss() -> c
    android.view.View getAnchorView() -> d
    int getAnimationStyle() -> e
    android.graphics.drawable.Drawable getBackground() -> f
    int getHeight() -> g
    int getHorizontalOffset() -> h
    org.holoeverywhere.widget.ListView getListView() -> i
    int getMaxAvailableHeight(android.view.View,int,boolean) -> a
    java.lang.Object getSelectedItem() -> j
    long getSelectedItemId() -> k
    int getSelectedItemPosition() -> l
    android.view.View getSelectedView() -> m
    int getVerticalOffset() -> n
    int getWidth() -> o
    boolean isDropDownAlwaysVisible() -> p
    boolean isInputMethodNotNeeded() -> q
    boolean isShowing() -> r
    int measureHeightOfChildren(int,int,int,int,int) -> a
    void measureScrapChild(android.view.View,int,int) -> a
    boolean onKeyDown(int,android.view.KeyEvent) -> a
    boolean onKeyUp(int,android.view.KeyEvent) -> b
    boolean performItemClick(int) -> a
    void removePromptView() -> t
    void setAdapter(android.widget.ListAdapter) -> a
    void setAnchorView(android.view.View) -> a
    void setAnimationStyle(int) -> b
    void setBackgroundDrawable(android.graphics.drawable.Drawable) -> a
    void setContentWidth(int) -> c
    void setDropDownAlwaysVisible(boolean) -> a
    void setForceIgnoreOutsideTouch(boolean) -> b
    void setHeight(int) -> d
    void setHorizontalOffset(int) -> e
    void setInputMethodMode(int) -> f
    void setListItemExpandMax(int) -> g
    void setListSelector(android.graphics.drawable.Drawable) -> b
    void setModal(boolean) -> c
    void setOnDismissListener(org.holoeverywhere.widget.PopupWindow$OnDismissListener) -> a
    void setOnItemClickListener(android.widget.AdapterView$OnItemClickListener) -> a
    void setPromptPosition(int) -> h
    void setPromptView(android.view.View) -> b
    void setSelection(int) -> i
    void setSoftInputMode(int) -> j
    void setVerticalOffset(int) -> k
    void setWidth(int) -> l
    void show() -> s
    org.holoeverywhere.widget.PopupWindow access$000(org.holoeverywhere.widget.ListPopupWindow) -> a
    org.holoeverywhere.widget.ListPopupWindow$ResizePopupRunnable access$100(org.holoeverywhere.widget.ListPopupWindow) -> b
    android.os.Handler access$200(org.holoeverywhere.widget.ListPopupWindow) -> c
    org.holoeverywhere.widget.ListPopupWindow$DropDownListView access$300(org.holoeverywhere.widget.ListPopupWindow) -> d
org.holoeverywhere.widget.ListPopupWindow$1 -> org.holoeverywhere.widget.ListPopupWindow$1:
    org.holoeverywhere.widget.ListPopupWindow this$0 -> a
    void run() -> run
org.holoeverywhere.widget.ListPopupWindow$2 -> org.holoeverywhere.widget.ListPopupWindow$2:
    org.holoeverywhere.widget.ListPopupWindow this$0 -> a
    void onItemSelected(android.widget.AdapterView,android.view.View,int,long) -> onItemSelected
    void onNothingSelected(android.widget.AdapterView) -> onNothingSelected
org.holoeverywhere.widget.ListPopupWindow$DropDownListView -> org.holoeverywhere.widget.ListPopupWindow$DropDownListView:
    boolean mHijackFocus -> a
    boolean mListSelectionHidden -> b
    boolean hasFocus() -> hasFocus
    boolean hasWindowFocus() -> hasWindowFocus
    boolean isFocused() -> isFocused
    boolean isInTouchMode() -> isInTouchMode
    android.view.View onPrepareView(android.view.View,int) -> a
    boolean access$802(org.holoeverywhere.widget.ListPopupWindow$DropDownListView,boolean) -> a
org.holoeverywhere.widget.ListPopupWindow$ListSelectorHider -> org.holoeverywhere.widget.ListPopupWindow$ListSelectorHider:
    org.holoeverywhere.widget.ListPopupWindow this$0 -> a
    void run() -> run
org.holoeverywhere.widget.ListPopupWindow$PopupDataSetObserver -> org.holoeverywhere.widget.ListPopupWindow$PopupDataSetObserver:
    org.holoeverywhere.widget.ListPopupWindow this$0 -> a
    void onChanged() -> onChanged
    void onInvalidated() -> onInvalidated
org.holoeverywhere.widget.ListPopupWindow$PopupScrollListener -> org.holoeverywhere.widget.ListPopupWindow$PopupScrollListener:
    org.holoeverywhere.widget.ListPopupWindow this$0 -> a
    void onScroll(android.widget.AbsListView,int,int,int) -> onScroll
    void onScrollStateChanged(android.widget.AbsListView,int) -> onScrollStateChanged
org.holoeverywhere.widget.ListPopupWindow$PopupTouchInterceptor -> org.holoeverywhere.widget.ListPopupWindow$PopupTouchInterceptor:
    org.holoeverywhere.widget.ListPopupWindow this$0 -> a
    boolean onTouch(android.view.View,android.view.MotionEvent) -> onTouch
org.holoeverywhere.widget.ListPopupWindow$ResizePopupRunnable -> org.holoeverywhere.widget.ListPopupWindow$ResizePopupRunnable:
    org.holoeverywhere.widget.ListPopupWindow this$0 -> a
    void run() -> run
org.holoeverywhere.widget.ListView -> org.holoeverywhere.widget.ListView:
    boolean USE_ACTIVATED -> a
    java.util.List mFooterViewInfos -> b
    java.util.List mHeaderViewInfos -> c
    org.holoeverywhere.widget.ListAdapterWrapper$ListAdapterCallback mListAdapterCallback -> d
    org.holoeverywhere.widget.ListView$OnItemLongClickListenerWrapper mOnItemLongClickListenerWrapper -> e
    org.holoeverywhere.app.Activity mActivity -> f
    org.holoeverywhere.widget.ListAdapterWrapper mAdapter -> g
    boolean mAdapterHasStableIds -> h
    android.support.v4.util.LongSparseArray mCheckedIdStates -> i
    int mCheckedItemCount -> j
    android.util.SparseBooleanArray mCheckStates -> k
    android.support.v7.view.ActionMode mChoiceActionMode -> l
    int mChoiceMode -> m
    android.view.ContextMenu$ContextMenuInfo mContextMenuInfo -> n
    boolean mFastScrollEnabled -> o
    org.holoeverywhere.widget.FastScroller mFastScroller -> p
    boolean mForceFastScrollAlwaysVisibleDisable -> q
    boolean mForceHeaderListAdapter -> r
    boolean mIsAttached -> s
    int mLastScrollState -> t
    org.holoeverywhere.widget.ListView$MultiChoiceModeWrapper mMultiChoiceModeCallback -> u
    android.widget.AbsListView$OnScrollListener mOnScrollListener -> v
    boolean mPaddingFromScroller -> w
    int mVerticalScrollbarPosition -> x
    void addFooterView(android.view.View) -> addFooterView
    void addFooterView(android.view.View,java.lang.Object,boolean) -> addFooterView
    void addHeaderView(android.view.View) -> addHeaderView
    void addHeaderView(android.view.View,java.lang.Object,boolean) -> addHeaderView
    void clearChoices() -> clearChoices
    android.view.ContextMenu$ContextMenuInfo createContextMenuInfo(android.view.View,int,long) -> a
    void draw(android.graphics.Canvas) -> draw
    org.holoeverywhere.app.Activity getActivity() -> getActivity
    void setActivity(org.holoeverywhere.app.Activity) -> setActivity
    android.widget.ListAdapter getAdapterSource() -> getAdapterSource
    int getCheckedItemCount() -> getCheckedItemCount
    long[] getCheckedItemIds() -> getCheckedItemIds
    int getCheckedItemPosition() -> getCheckedItemPosition
    android.util.SparseBooleanArray getCheckedItemPositions() -> getCheckedItemPositions
    long[] getCheckItemIds() -> getCheckItemIds
    int getChoiceMode() -> getChoiceMode
    void setChoiceMode(int) -> setChoiceMode
    android.view.ContextMenu$ContextMenuInfo getContextMenuInfo() -> getContextMenuInfo
    int getFooterViewsCount() -> getFooterViewsCount
    int getHeaderViewsCount() -> getHeaderViewsCount
    int getVerticalScrollbarPosition() -> getVerticalScrollbarPosition
    void setVerticalScrollbarPosition(int) -> setVerticalScrollbarPosition
    int getVerticalScrollbarWidth() -> getVerticalScrollbarWidth
    boolean isAttached() -> a
    boolean isFastScrollAlwaysVisible() -> isFastScrollAlwaysVisible
    void setFastScrollAlwaysVisible(boolean) -> setFastScrollAlwaysVisible
    boolean isFastScrollEnabled() -> isFastScrollEnabled
    void setFastScrollEnabled(boolean) -> setFastScrollEnabled
    void setForceHeaderListAdapter(boolean) -> setForceHeaderListAdapter
    boolean isInScrollingContainer() -> b
    boolean isItemChecked(int) -> isItemChecked
    void setPaddingFromScroller(boolean) -> setPaddingFromScroller
    void onAttachedToWindow() -> onAttachedToWindow
    void onDetachedFromWindow() -> onDetachedFromWindow
    void onFocusChanged(boolean,int,android.graphics.Rect) -> onFocusChanged
    boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    boolean onKeyUp(int,android.view.KeyEvent) -> onKeyUp
    void onLayout(boolean,int,int,int,int) -> onLayout
    android.view.View onPrepareView(android.view.View,int) -> a
    void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    void onSizeChanged(int,int,int,int) -> onSizeChanged
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void onWindowFocusChanged(boolean) -> onWindowFocusChanged
    boolean performItemClick(android.view.View,int,long) -> performItemClick
    boolean performItemLongClick(android.view.View,int,long) -> c
    void recomputePaddingFromScroller() -> c
    boolean removeFooterView(android.view.View) -> removeFooterView
    boolean removeHeaderView(android.view.View) -> removeHeaderView
    void removeViewInfo(android.view.View,java.util.List) -> a
    void reportScrollStateChange(int) -> c
    void setAdapter(android.widget.ListAdapter) -> setAdapter
    void setItemChecked(int,boolean) -> setItemChecked
    void setMultiChoiceModeListener(org.holoeverywhere.widget.ListView$MultiChoiceModeListener) -> setMultiChoiceModeListener
    void setOnItemLongClickListener(android.widget.AdapterView$OnItemLongClickListener) -> setOnItemLongClickListener
    void setOnScrollListener(android.widget.AbsListView$OnScrollListener) -> setOnScrollListener
    void setSelectionAfterHeaderView() -> setSelectionAfterHeaderView
    void setSelector(int) -> setSelector
    void setStateOnView(android.view.View,boolean) -> a
    boolean showContextMenuForChild(android.view.View) -> showContextMenuForChild
    android.support.v7.view.ActionMode startSupportActionMode(android.support.v7.view.ActionMode$Callback) -> a
    void updateOnScreenCheckedViews() -> d
    void setAdapter(android.widget.Adapter) -> setAdapter
    org.holoeverywhere.widget.FastScroller access$000(org.holoeverywhere.widget.ListView) -> a
    android.support.v7.view.ActionMode access$402(org.holoeverywhere.widget.ListView,android.support.v7.view.ActionMode) -> a
    void access$500(org.holoeverywhere.widget.ListView) -> b
org.holoeverywhere.widget.ListView$1 -> org.holoeverywhere.widget.ListView$1:
    org.holoeverywhere.widget.ListView this$0 -> a
    void onChanged() -> a
    void onInvalidated() -> b
    android.view.View onPrepareView(android.view.View,int) -> a
org.holoeverywhere.widget.ListView$MultiChoiceModeListener -> org.holoeverywhere.widget.ListView$MultiChoiceModeListener:
    void onItemCheckedStateChanged(android.support.v7.view.ActionMode,int,long,boolean) -> a
org.holoeverywhere.widget.ListView$MultiChoiceModeWrapper -> org.holoeverywhere.widget.ListView$MultiChoiceModeWrapper:
    org.holoeverywhere.widget.ListView$MultiChoiceModeListener mWrapped -> b
    org.holoeverywhere.widget.ListView this$0 -> a
    boolean onActionItemClicked(android.support.v7.view.ActionMode,android.view.MenuItem) -> a
    boolean onCreateActionMode(android.support.v7.view.ActionMode,android.view.Menu) -> a
    void onDestroyActionMode(android.support.v7.view.ActionMode) -> a
    void onItemCheckedStateChanged(android.support.v7.view.ActionMode,int,long,boolean) -> a
    boolean onPrepareActionMode(android.support.v7.view.ActionMode,android.view.Menu) -> b
    void setWrapped(org.holoeverywhere.widget.ListView$MultiChoiceModeListener) -> a
org.holoeverywhere.widget.ListView$OnItemLongClickListenerWrapper -> org.holoeverywhere.widget.ListView$OnItemLongClickListenerWrapper:
    android.widget.AdapterView$OnItemLongClickListener wrapped -> b
    org.holoeverywhere.widget.ListView this$0 -> a
    boolean onItemLongClick(android.widget.AdapterView,android.view.View,int,long) -> onItemLongClick
    void setWrapped(android.widget.AdapterView$OnItemLongClickListener) -> a
    android.widget.AdapterView$OnItemLongClickListener access$200(org.holoeverywhere.widget.ListView$OnItemLongClickListenerWrapper) -> a
org.holoeverywhere.widget.ListView$SavedState -> org.holoeverywhere.widget.ListView$SavedState:
    android.os.Parcelable$Creator CREATOR -> CREATOR
    int checkedItemCount -> a
    android.support.v4.util.LongSparseArray checkIdState -> b
    android.util.SparseBooleanArray checkState -> c
    boolean inActionMode -> d
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
org.holoeverywhere.widget.ListView$SavedState$1 -> org.holoeverywhere.widget.ListView$SavedState$1:
    org.holoeverywhere.widget.ListView$SavedState createFromParcel(android.os.Parcel) -> a
    org.holoeverywhere.widget.ListView$SavedState[] newArray(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
org.holoeverywhere.widget.NumberPicker -> org.holoeverywhere.widget.NumberPicker:
    org.holoeverywhere.widget.NumberPicker$Formatter TWO_DIGIT_FORMATTER -> a
    int DEFAULT_LAYOUT_RESOURCE_ID -> b
    char[] DIGIT_CHARACTERS -> c
    int[] PRESSED_STATE_SET -> d
    org.holoeverywhere.widget.Scroller mAdjustScroller -> e
    boolean mComputeMaxWidth -> f
    android.widget.ImageButton mDecrementButton -> g
    org.holoeverywhere.widget.Scroller mFlingScroller -> h
    boolean mHasSelectorWheel -> i
    android.widget.ImageButton mIncrementButton -> j
    org.holoeverywhere.widget.NumberPicker$NumberPickerEditText mInputText -> k
    int mMaxHeight -> l
    int mMinHeight -> m
    int mMinWidth -> n
    org.holoeverywhere.widget.NumberPicker$PressedStateHelper mPressedStateHelper -> o
    android.graphics.drawable.Drawable mSelectionDivider -> p
    int mSelectionDividerHeight -> q
    int mSelectionDividersDistance -> r
    android.util.SparseArray mSelectorIndexToStringCache -> s
    int[] mSelectorIndices -> t
    android.graphics.Paint mSelectorWheelPaint -> u
    int mSolidColor -> v
    int mTextSize -> w
    android.graphics.drawable.Drawable mVirtualButtonPressedDrawable -> x
    org.holoeverywhere.widget.NumberPicker$BeginSoftInputOnLongPressCommand mBeginSoftInputOnLongPressCommand -> y
    int mBottomSelectionDividerBottom -> z
    org.holoeverywhere.widget.NumberPicker$ChangeCurrentByOneFromLongPressCommand mChangeCurrentByOneFromLongPressCommand -> A
    int mCurrentScrollOffset -> B
    boolean mDecrementVirtualButtonPressed -> C
    java.lang.String[] mDisplayedValues -> D
    org.holoeverywhere.widget.NumberPicker$Formatter mFormatter -> E
    boolean mIncrementVirtualButtonPressed -> F
    boolean mIngonreMoveEvents -> G
    int mInitialScrollOffset -> H
    long mLastDownEventTime -> I
    float mLastDownEventY -> J
    float mLastDownOrMoveEventY -> K
    long mLongPressUpdateInterval -> L
    int mMaximumFlingVelocity -> M
    int mMaxValue -> N
    int mMaxWidth -> O
    int mMinimumFlingVelocity -> P
    int mMinValue -> Q
    org.holoeverywhere.widget.NumberPicker$OnScrollListener mOnScrollListener -> R
    org.holoeverywhere.widget.NumberPicker$OnValueChangeListener mOnValueChangeListener -> S
    int mPreviousScrollerY -> T
    int mScrollState -> U
    int mSelectorElementHeight -> V
    int mSelectorTextGapHeight -> W
    org.holoeverywhere.widget.NumberPicker$SetSelectionCommand mSetSelectionCommand -> Z
    boolean mShowSoftInputOnTap -> aa
    int mTopSelectionDividerTop -> ab
    int mTouchSlop -> ac
    int mValue -> ad
    android.view.VelocityTracker mVelocityTracker -> ae
    boolean mWrapSelectorWheel -> af
    void addFocusables(java.util.ArrayList,int,int) -> addFocusables
    void changeValueByOne(boolean) -> a
    void computeScroll() -> computeScroll
    void decrementSelectorIndices(int[]) -> a
    boolean dispatchHoverEvent(android.view.MotionEvent) -> dispatchHoverEvent
    boolean dispatchKeyEvent(android.view.KeyEvent) -> dispatchKeyEvent
    boolean dispatchTouchEvent(android.view.MotionEvent) -> dispatchTouchEvent
    boolean dispatchTrackballEvent(android.view.MotionEvent) -> dispatchTrackballEvent
    void ensureCachedScrollSelectorValue(int) -> b
    boolean ensureScrollWheelAdjusted() -> b
    void fling(int) -> c
    java.lang.String formatNumber(int) -> d
    float getBottomFadingEdgeStrength() -> getBottomFadingEdgeStrength
    java.lang.String[] getDisplayedValues() -> getDisplayedValues
    void setDisplayedValues(java.lang.String[]) -> setDisplayedValues
    org.holoeverywhere.widget.NumberPicker$NumberPickerEditText getInputField() -> getInputField
    int getMaxValue() -> getMaxValue
    void setMaxValue(int) -> setMaxValue
    int getMinValue() -> getMinValue
    void setMinValue(int) -> setMinValue
    int getSelectedPos(java.lang.String) -> a
    int getSolidColor() -> getSolidColor
    float getTopFadingEdgeStrength() -> getTopFadingEdgeStrength
    int getValue() -> getValue
    void setValue(int) -> setValue
    int getWrappedSelectorIndex(int) -> e
    boolean getWrapSelectorWheel() -> getWrapSelectorWheel
    void setWrapSelectorWheel(boolean) -> setWrapSelectorWheel
    void hideSoftInput() -> c
    void incrementSelectorIndices(int[]) -> b
    void initializeFadingEdges() -> d
    void initializeSelectorWheel() -> h
    void initializeSelectorWheelIndices() -> i
    int makeMeasureSpec(int,int) -> d
    boolean moveToFinalScrollerPosition(org.holoeverywhere.widget.Scroller) -> a
    void notifyChange(int,int) -> e
    void onDetachedFromWindow() -> onDetachedFromWindow
    void onDraw(android.graphics.Canvas) -> onDraw
    void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    void onLayout(boolean,int,int,int,int) -> onLayout
    void onMeasure(int,int) -> onMeasure
    void onScrollerFinished(org.holoeverywhere.widget.Scroller) -> b
    void onScrollStateChange(int) -> f
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void postBeginSoftInputOnLongPressCommand() -> j
    void postChangeCurrentByOneFromLongPress(boolean,long) -> a
    void postSetSelectionCommand(int,int) -> f
    void removeAllCallbacks() -> k
    void removeBeginSoftInputCommand() -> l
    void removeChangeCurrentByOneFromLongPress() -> m
    int resolveSizeAndStateRespectingMinSize(int,int,int) -> a
    void scrollBy(int,int) -> scrollBy
    void setEnabled(boolean) -> setEnabled
    void setFormatter(org.holoeverywhere.widget.NumberPicker$Formatter) -> setFormatter
    void setOnLongPressUpdateInterval(long) -> setOnLongPressUpdateInterval
    void setOnScrollListener(org.holoeverywhere.widget.NumberPicker$OnScrollListener) -> setOnScrollListener
    void setOnValueChangedListener(org.holoeverywhere.widget.NumberPicker$OnValueChangeListener) -> setOnValueChangedListener
    void setValueInternal(int,boolean) -> a
    void showSoftInput() -> n
    void tryComputeMaxWidth() -> o
    boolean updateInputTextView() -> p
    void validateInputTextView(org.holoeverywhere.widget.NumberPicker$NumberPickerEditText) -> a
    void access$000(org.holoeverywhere.widget.NumberPicker) -> a
    org.holoeverywhere.widget.NumberPicker$NumberPickerEditText access$100(org.holoeverywhere.widget.NumberPicker) -> b
    void access$200(org.holoeverywhere.widget.NumberPicker,boolean) -> a
    void access$300(org.holoeverywhere.widget.NumberPicker,boolean,long) -> a
    void access$400(org.holoeverywhere.widget.NumberPicker,org.holoeverywhere.widget.NumberPicker$NumberPickerEditText) -> a
    void access$800(org.holoeverywhere.widget.NumberPicker) -> c
    boolean access$902(org.holoeverywhere.widget.NumberPicker,boolean) -> b
    long access$1000(org.holoeverywhere.widget.NumberPicker) -> d
    java.lang.String[] access$1100(org.holoeverywhere.widget.NumberPicker) -> e
    int access$1200(org.holoeverywhere.widget.NumberPicker,java.lang.String) -> a
    int access$1300(org.holoeverywhere.widget.NumberPicker) -> f
    void access$1400(org.holoeverywhere.widget.NumberPicker,int,int) -> a
    char[] access$1500() -> a
    boolean access$1600(org.holoeverywhere.widget.NumberPicker) -> g
    boolean access$1602(org.holoeverywhere.widget.NumberPicker,boolean) -> c
    int access$1700(org.holoeverywhere.widget.NumberPicker) -> h
    boolean access$1802(org.holoeverywhere.widget.NumberPicker,boolean) -> d
    boolean access$1800(org.holoeverywhere.widget.NumberPicker) -> i
    int access$1900(org.holoeverywhere.widget.NumberPicker) -> j
    boolean access$1680(org.holoeverywhere.widget.NumberPicker,int) -> a
    boolean access$1880(org.holoeverywhere.widget.NumberPicker,int) -> b
org.holoeverywhere.widget.NumberPicker$1 -> org.holoeverywhere.widget.NumberPicker$1:
    java.lang.Object[] mArgs -> a
    java.lang.StringBuilder mBuilder -> b
    java.util.Formatter mFmt -> c
    java.lang.String format(int) -> a
org.holoeverywhere.widget.NumberPicker$2 -> org.holoeverywhere.widget.NumberPicker$2:
    org.holoeverywhere.widget.NumberPicker this$0 -> a
    void onClick(android.view.View) -> onClick
org.holoeverywhere.widget.NumberPicker$3 -> org.holoeverywhere.widget.NumberPicker$3:
    org.holoeverywhere.widget.NumberPicker this$0 -> a
    boolean onLongClick(android.view.View) -> onLongClick
org.holoeverywhere.widget.NumberPicker$4 -> org.holoeverywhere.widget.NumberPicker$4:
    org.holoeverywhere.widget.NumberPicker this$0 -> a
    void onFocusChange(android.view.View,boolean) -> onFocusChange
org.holoeverywhere.widget.NumberPicker$BeginSoftInputOnLongPressCommand -> org.holoeverywhere.widget.NumberPicker$BeginSoftInputOnLongPressCommand:
    org.holoeverywhere.widget.NumberPicker this$0 -> a
    void run() -> run
org.holoeverywhere.widget.NumberPicker$ChangeCurrentByOneFromLongPressCommand -> org.holoeverywhere.widget.NumberPicker$ChangeCurrentByOneFromLongPressCommand:
    boolean mIncrement -> b
    org.holoeverywhere.widget.NumberPicker this$0 -> a
    void run() -> run
    void setStep(boolean) -> a
    void access$500(org.holoeverywhere.widget.NumberPicker$ChangeCurrentByOneFromLongPressCommand,boolean) -> a
org.holoeverywhere.widget.NumberPicker$Formatter -> org.holoeverywhere.widget.NumberPicker$Formatter:
    java.lang.String format(int) -> a
org.holoeverywhere.widget.NumberPicker$InputTextFilter -> org.holoeverywhere.widget.NumberPicker$InputTextFilter:
    org.holoeverywhere.widget.NumberPicker this$0 -> a
    java.lang.CharSequence filter(java.lang.CharSequence,int,int,android.text.Spanned,int,int) -> filter
    char[] getAcceptedChars() -> getAcceptedChars
    int getInputType() -> getInputType
org.holoeverywhere.widget.NumberPicker$NumberPickerEditText -> org.holoeverywhere.widget.NumberPicker$NumberPickerEditText:
    void onEditorAction(int) -> onEditorAction
org.holoeverywhere.widget.NumberPicker$OnScrollListener -> org.holoeverywhere.widget.NumberPicker$OnScrollListener:
    void onScrollStateChange(org.holoeverywhere.widget.NumberPicker,int) -> a
org.holoeverywhere.widget.NumberPicker$OnValueChangeListener -> org.holoeverywhere.widget.NumberPicker$OnValueChangeListener:
    void onValueChange(org.holoeverywhere.widget.NumberPicker,int,int) -> a
org.holoeverywhere.widget.NumberPicker$PressedStateHelper -> org.holoeverywhere.widget.NumberPicker$PressedStateHelper:
    int mManagedButton -> b
    int mMode -> c
    org.holoeverywhere.widget.NumberPicker this$0 -> a
    void buttonPressDelayed(int) -> a
    void buttonTapped(int) -> b
    void cancel() -> a
    void run() -> run
org.holoeverywhere.widget.NumberPicker$SetSelectionCommand -> org.holoeverywhere.widget.NumberPicker$SetSelectionCommand:
    int mSelectionEnd -> b
    int mSelectionStart -> c
    org.holoeverywhere.widget.NumberPicker this$0 -> a
    void run() -> run
    int access$602(org.holoeverywhere.widget.NumberPicker$SetSelectionCommand,int) -> a
    int access$702(org.holoeverywhere.widget.NumberPicker$SetSelectionCommand,int) -> b
org.holoeverywhere.widget.PopupWindow -> org.holoeverywhere.widget.PopupWindow:
    int[] ABOVE_ANCHOR_STATE_SET -> a
    boolean mAboveAnchor -> b
    android.graphics.drawable.Drawable mAboveAnchorBackgroundDrawable -> c
    boolean mAllowScrollingAnchorParent -> d
    java.lang.ref.WeakReference mAnchor -> e
    int mAnchorXoff -> f
    int mAnchorYoff -> g
    int mAnimationStyle -> h
    android.graphics.drawable.Drawable mBackground -> i
    android.graphics.drawable.Drawable mBelowAnchorBackgroundDrawable -> j
    boolean mClippingEnabled -> k
    boolean mClipToScreen -> l
    android.view.View mContentView -> m
    android.content.Context mContext -> n
    int[] mDrawingLocation -> o
    boolean mFocusable -> p
    int mHeight -> q
    int mHeightMode -> r
    boolean mIgnoreCheekPress -> s
    int mInputMethodMode -> t
    boolean mIsDropdown -> u
    boolean mIsShowing -> v
    int mLastHeight -> w
    int mLastWidth -> x
    boolean mLayoutInScreen -> y
    boolean mLayoutInsetDecor -> z
    boolean mNotTouchModal -> A
    org.holoeverywhere.widget.PopupWindow$OnDismissListener mOnDismissListener -> B
    android.view.ViewTreeObserver$OnScrollChangedListener mOnScrollChangedListener -> C
    boolean mOutsideTouchable -> D
    int mPopupHeight -> E
    android.view.View mPopupView -> F
    int mPopupWidth -> G
    int[] mScreenLocation -> H
    int mSoftInputMode -> I
    int mSplitTouchEnabled -> J
    android.graphics.Rect mTempRect -> K
    boolean mTouchable -> L
    android.view.View$OnTouchListener mTouchInterceptor -> M
    int mWidth -> N
    int mWidthMode -> O
    int mWindowLayoutType -> P
    android.view.WindowManager mWindowManager -> Q
    int computeAnimationResource() -> l
    int computeFlags(int) -> f
    android.view.WindowManager$LayoutParams createPopupLayout(android.os.IBinder) -> a
    void dismiss() -> a
    boolean findDropDownPosition(android.view.View,android.view.WindowManager$LayoutParams,int,int) -> a
    int getAnimationStyle() -> b
    android.graphics.drawable.Drawable getBackground() -> c
    android.view.View getContentView() -> d
    int getHeight() -> e
    int getInputMethodMode() -> f
    int getWidth() -> g
    void invokePopup(android.view.WindowManager$LayoutParams) -> a
    boolean isAboveAnchor() -> h
    boolean isShowing() -> i
    boolean isSplitTouchEnabled() -> j
    void preparePopup(android.view.WindowManager$LayoutParams) -> b
    void registerForScrollChanged(android.view.View,int,int) -> b
    void setAllowScrollingAnchorParent(boolean) -> a
    void setAnimationStyle(int) -> a
    void setBackgroundDrawable(android.graphics.drawable.Drawable) -> a
    void setClippingEnabled(boolean) -> b
    void setClipToScreenEnabled(boolean) -> c
    void setContentView(android.view.View) -> a
    void setFocusable(boolean) -> d
    void setHeight(int) -> b
    void setInputMethodMode(int) -> c
    void setOnDismissListener(org.holoeverywhere.widget.PopupWindow$OnDismissListener) -> a
    void setOutsideTouchable(boolean) -> e
    void setSoftInputMode(int) -> d
    void setTouchInterceptor(android.view.View$OnTouchListener) -> a
    void setWidth(int) -> e
    void setWindowLayoutMode(int,int) -> a
    void showAsDropDown(android.view.View,int,int) -> a
    void unregisterForScrollChanged() -> m
    void update(int,int,int,int,boolean) -> a
    void update(android.view.View,boolean,int,int,boolean,int,int) -> a
    void update(android.view.View,int,int,int,int) -> a
    void updateAboveAnchor(boolean) -> f
    android.view.View$OnTouchListener access$000(org.holoeverywhere.widget.PopupWindow) -> a
    boolean access$100(org.holoeverywhere.widget.PopupWindow) -> b
    int[] access$200() -> k
    android.view.View access$300(org.holoeverywhere.widget.PopupWindow) -> c
    java.lang.ref.WeakReference access$400(org.holoeverywhere.widget.PopupWindow) -> d
    android.view.View access$500(org.holoeverywhere.widget.PopupWindow) -> e
    int access$600(org.holoeverywhere.widget.PopupWindow) -> f
    int access$700(org.holoeverywhere.widget.PopupWindow) -> g
    boolean access$800(org.holoeverywhere.widget.PopupWindow,android.view.View,android.view.WindowManager$LayoutParams,int,int) -> a
    void access$900(org.holoeverywhere.widget.PopupWindow,boolean) -> a
org.holoeverywhere.widget.PopupWindow$1 -> org.holoeverywhere.widget.PopupWindow$1:
    org.holoeverywhere.widget.PopupWindow this$0 -> a
    void onScrollChanged() -> onScrollChanged
org.holoeverywhere.widget.PopupWindow$OnDismissListener -> org.holoeverywhere.widget.PopupWindow$OnDismissListener:
    void onDismiss() -> a_
org.holoeverywhere.widget.PopupWindow$PopupViewContainer -> org.holoeverywhere.widget.PopupWindow$PopupViewContainer:
    org.holoeverywhere.widget.PopupWindow this$0 -> a
    boolean dispatchKeyEvent(android.view.KeyEvent) -> dispatchKeyEvent
    boolean dispatchTouchEvent(android.view.MotionEvent) -> dispatchTouchEvent
    int[] onCreateDrawableState(int) -> onCreateDrawableState
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void sendAccessibilityEvent(int) -> sendAccessibilityEvent
org.holoeverywhere.widget.ProgressBar -> org.holoeverywhere.widget.ProgressBar:
    org.holoeverywhere.widget.ProgressBar$AccessibilityEventSender mAccessibilityEventSender -> a
    android.view.animation.AlphaAnimation mAnimation -> b
    boolean mAttached -> g
    int mBehavior -> h
    android.graphics.drawable.Drawable mCurrentDrawable -> i
    int mDuration -> j
    boolean mHasAnimation -> k
    boolean mIndeterminate -> l
    android.graphics.drawable.Drawable mIndeterminateDrawable -> m
    boolean mInDrawing -> n
    android.view.animation.Interpolator mInterpolator -> o
    int mMax -> p
    int mMinWidth -> c
    int mMaxWidth -> d
    int mMinHeight -> e
    int mMaxHeight -> f
    boolean mNoInvalidate -> q
    boolean mOnlyIndeterminate -> r
    int mProgress -> s
    android.graphics.drawable.Drawable mProgressDrawable -> t
    java.util.ArrayList mRefreshData -> u
    boolean mRefreshIsPosted -> v
    org.holoeverywhere.widget.ProgressBar$RefreshProgressRunnable mRefreshProgressRunnable -> w
    android.graphics.Bitmap mSampleTile -> x
    int mSecondaryProgress -> y
    boolean mShouldStartAnimationDrawable -> z
    android.view.animation.Transformation mTransformation -> A
    long mUiThreadId -> B
    void doRefreshProgress(int,int,boolean,boolean) -> a
    void drawableStateChanged() -> drawableStateChanged
    android.graphics.drawable.Drawable getCurrentDrawable() -> getCurrentDrawable
    android.graphics.drawable.shapes.Shape getDrawableShape() -> getDrawableShape
    android.graphics.drawable.Drawable getIndeterminateDrawable() -> getIndeterminateDrawable
    android.view.animation.Interpolator getInterpolator() -> getInterpolator
    int getMax() -> getMax
    int getProgress() -> getProgress
    android.graphics.drawable.Drawable getProgressDrawable() -> getProgressDrawable
    int getResolvedLayoutDirection() -> getResolvedLayoutDirection
    int getSecondaryProgress() -> getSecondaryProgress
    void incrementProgress(int) -> a
    void initProgressBar() -> a
    void invalidateDrawable(android.graphics.drawable.Drawable) -> invalidateDrawable
    boolean isIndeterminate() -> isIndeterminate
    void jumpDrawablesToCurrentState() -> jumpDrawablesToCurrentState
    void onAttachedToWindow() -> onAttachedToWindow
    void onDetachedFromWindow() -> onDetachedFromWindow
    void onDraw(android.graphics.Canvas) -> onDraw
    void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo) -> onInitializeAccessibilityNodeInfo
    void onMeasure(int,int) -> onMeasure
    void onProgressRefresh(float,boolean) -> a
    void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    void onSizeChanged(int,int,int,int) -> onSizeChanged
    void onVisibilityChanged(android.view.View,int) -> onVisibilityChanged
    void postInvalidate() -> postInvalidate
    void refreshProgress(int,int,boolean) -> a
    void scheduleAccessibilityEventSender() -> b
    void setIndeterminate(boolean) -> setIndeterminate
    void setIndeterminateDrawable(android.graphics.drawable.Drawable) -> setIndeterminateDrawable
    void setInterpolator(android.content.Context,int) -> setInterpolator
    void setInterpolator(android.view.animation.Interpolator) -> setInterpolator
    void setMax(int) -> setMax
    void setProgress(int) -> setProgress
    void setProgress(int,boolean) -> a
    void setProgressDrawable(android.graphics.drawable.Drawable) -> setProgressDrawable
    void setSecondaryProgress(int) -> setSecondaryProgress
    void setVisibility(int) -> setVisibility
    void startAnimation() -> e
    void stopAnimation() -> f
    android.graphics.drawable.Drawable tileify(android.graphics.drawable.Drawable,boolean) -> a
    android.graphics.drawable.Drawable tileifyIndeterminate(android.graphics.drawable.Drawable) -> a
    void updateDrawableBounds(int,int) -> a
    void updateDrawableState() -> c
    boolean verifyDrawable(android.graphics.drawable.Drawable) -> verifyDrawable
    java.util.ArrayList access$100(org.holoeverywhere.widget.ProgressBar) -> a
    void access$200(org.holoeverywhere.widget.ProgressBar,int,int,boolean,boolean) -> a
    boolean access$302(org.holoeverywhere.widget.ProgressBar,boolean) -> a
org.holoeverywhere.widget.ProgressBar$1 -> org.holoeverywhere.widget.ProgressBar$1:
org.holoeverywhere.widget.ProgressBar$AccessibilityEventSender -> org.holoeverywhere.widget.ProgressBar$AccessibilityEventSender:
    org.holoeverywhere.widget.ProgressBar this$0 -> a
    void run() -> run
org.holoeverywhere.widget.ProgressBar$RefreshData -> org.holoeverywhere.widget.ProgressBar$RefreshData:
    org.holoeverywhere.util.Pool sPool -> d
    boolean fromUser -> a
    int id -> b
    boolean mIsPooled -> e
    org.holoeverywhere.widget.ProgressBar$RefreshData mNext -> f
    int progress -> c
    org.holoeverywhere.widget.ProgressBar$RefreshData obtain(int,int,boolean) -> a
    org.holoeverywhere.widget.ProgressBar$RefreshData getNextPoolable() -> c
    boolean isPooled() -> b
    void recycle() -> d
    void setNextPoolable(org.holoeverywhere.widget.ProgressBar$RefreshData) -> a
    void setPooled(boolean) -> a
    void setNextPoolable(java.lang.Object) -> a
    java.lang.Object getNextPoolable() -> a
org.holoeverywhere.widget.ProgressBar$RefreshData$1 -> org.holoeverywhere.widget.ProgressBar$RefreshData$1:
    org.holoeverywhere.widget.ProgressBar$RefreshData newInstance() -> b
    void onAcquired(org.holoeverywhere.widget.ProgressBar$RefreshData) -> a
    void onReleased(org.holoeverywhere.widget.ProgressBar$RefreshData) -> b
    void onReleased(org.holoeverywhere.util.Poolable) -> b
    void onAcquired(org.holoeverywhere.util.Poolable) -> a
    org.holoeverywhere.util.Poolable newInstance() -> a
org.holoeverywhere.widget.ProgressBar$RefreshProgressRunnable -> org.holoeverywhere.widget.ProgressBar$RefreshProgressRunnable:
    org.holoeverywhere.widget.ProgressBar this$0 -> a
    void run() -> run
org.holoeverywhere.widget.ProgressBar$SavedState -> org.holoeverywhere.widget.ProgressBar$SavedState:
    android.os.Parcelable$Creator CREATOR -> CREATOR
    int progress -> a
    int secondaryProgress -> b
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
org.holoeverywhere.widget.ProgressBar$SavedState$1 -> org.holoeverywhere.widget.ProgressBar$SavedState$1:
    org.holoeverywhere.widget.ProgressBar$SavedState createFromParcel(android.os.Parcel) -> a
    org.holoeverywhere.widget.ProgressBar$SavedState[] newArray(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
org.holoeverywhere.widget.RadioButton -> org.holoeverywhere.widget.RadioButton:
    java.lang.String mFontFamily -> a
    int mFontStyle -> b
    java.lang.String getFontFamily() -> getFontFamily
    int getFontStyle() -> getFontStyle
    void setAllCaps(boolean) -> setAllCaps
    void setFontStyle(java.lang.String,int) -> a
    void setTextAppearance(android.content.Context,int) -> setTextAppearance
org.holoeverywhere.widget.Scroller -> org.holoeverywhere.widget.Scroller:
    float ALPHA -> a
    float DECELERATION_RATE -> b
    float END_TENSION -> c
    float[] SPLINE -> d
    float START_TENSION -> e
    float sViscousFluidNormalize -> f
    float sViscousFluidScale -> g
    int mCurrX -> h
    int mCurrY -> i
    float mDeceleration -> j
    float mDeltaX -> k
    float mDeltaY -> l
    int mDuration -> m
    float mDurationReciprocal -> n
    int mFinalX -> o
    int mFinalY -> p
    boolean mFinished -> q
    boolean mFlywheel -> r
    android.view.animation.Interpolator mInterpolator -> s
    int mMaxX -> t
    int mMaxY -> u
    int mMinX -> v
    int mMinY -> w
    int mMode -> x
    float mPpi -> y
    long mStartTime -> z
    int mStartX -> A
    int mStartY -> B
    float mVelocity -> C
    float viscousFluid(float) -> a
    float computeDeceleration(float) -> b
    boolean computeScrollOffset() -> a
    void fling(int,int,int,int,int,int,int,int) -> a
    void forceFinished(boolean) -> a
    float getCurrVelocity() -> b
    int getCurrY() -> c
    int getFinalY() -> d
    int getStartY() -> e
    boolean isFinished() -> f
    void startScroll(int,int,int,int,int) -> a
    int timePassed() -> g
org.holoeverywhere.widget.SeekBar -> org.holoeverywhere.widget.SeekBar:
    org.holoeverywhere.widget.SeekBar$OnSeekBarChangeListener mOnSeekBarChangeListener -> g
    void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo) -> onInitializeAccessibilityNodeInfo
    void onProgressRefresh(float,boolean) -> a
    void onStartTrackingTouch() -> c
    void onStopTrackingTouch() -> d
    void setOnSeekBarChangeListener(org.holoeverywhere.widget.SeekBar$OnSeekBarChangeListener) -> setOnSeekBarChangeListener
org.holoeverywhere.widget.SeekBar$OnSeekBarChangeListener -> org.holoeverywhere.widget.SeekBar$OnSeekBarChangeListener:
    void onProgressChanged(org.holoeverywhere.widget.SeekBar,int,boolean) -> a
    void onStartTrackingTouch(org.holoeverywhere.widget.SeekBar) -> a
    void onStopTrackingTouch(org.holoeverywhere.widget.SeekBar) -> b
org.holoeverywhere.widget.Spinner -> org.holoeverywhere.widget.Spinner:
    boolean mDisableChildrenWhenDisabled -> F
    int mDropDownWidth -> E
    int mGravity -> G
    org.holoeverywhere.widget.Spinner$SpinnerPopup mPopup -> H
    org.holoeverywhere.widget.Spinner$DropDownAdapter mTempAdapter -> I
    android.graphics.Rect mTempRect -> J
    int getBaseline() -> getBaseline
    int getDropDownHorizontalOffset() -> getDropDownHorizontalOffset
    int getDropDownVerticalOffset() -> getDropDownVerticalOffset
    int getDropDownWidth() -> getDropDownWidth
    int getGravity() -> getGravity
    android.graphics.drawable.Drawable getPopupBackground() -> getPopupBackground
    java.lang.CharSequence getPrompt() -> getPrompt
    void internalSetOnItemClickListener(org.holoeverywhere.widget.AdapterView$OnItemClickListener) -> a
    void layout(int,boolean) -> b
    android.view.View makeAndAddView(int) -> b
    int measureContentWidth(android.widget.SpinnerAdapter,android.graphics.drawable.Drawable) -> a
    void onClick(android.content.DialogInterface,int) -> onClick
    void onDetachedFromWindow() -> onDetachedFromWindow
    void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo) -> onInitializeAccessibilityNodeInfo
    void onLayout(boolean,int,int,int,int) -> onLayout
    void onMeasure(int,int) -> onMeasure
    boolean performClick() -> performClick
    void setAdapter(android.widget.SpinnerAdapter) -> setAdapter
    void setDropDownHorizontalOffset(int) -> setDropDownHorizontalOffset
    void setDropDownVerticalOffset(int) -> setDropDownVerticalOffset
    void setDropDownWidth(int) -> setDropDownWidth
    void setEnabled(boolean) -> setEnabled
    void setGravity(int) -> setGravity
    void setOnItemClickListener(org.holoeverywhere.widget.AdapterView$OnItemClickListener) -> setOnItemClickListener
    void setPopupBackgroundDrawable(android.graphics.drawable.Drawable) -> setPopupBackgroundDrawable
    void setPopupBackgroundResource(int) -> setPopupBackgroundResource
    void setPrompt(java.lang.CharSequence) -> setPrompt
    void setPromptId(int) -> setPromptId
    void setUpChild(android.view.View) -> setUpChild
    void setAdapter(android.widget.Adapter) -> setAdapter
    android.graphics.Rect access$100(org.holoeverywhere.widget.Spinner) -> a
org.holoeverywhere.widget.Spinner$1 -> org.holoeverywhere.widget.Spinner$1:
org.holoeverywhere.widget.Spinner$DialogPopup -> org.holoeverywhere.widget.Spinner$DialogPopup:
    android.widget.ListAdapter mListAdapter -> b
    org.holoeverywhere.app.AlertDialog mPopup -> c
    java.lang.CharSequence mPrompt -> d
    org.holoeverywhere.widget.Spinner this$0 -> a
    void dismiss() -> c
    android.graphics.drawable.Drawable getBackground() -> f
    java.lang.CharSequence getHintText() -> a
    int getHorizontalOffset() -> h
    int getVerticalOffset() -> n
    boolean isShowing() -> r
    void onClick(android.content.DialogInterface,int) -> onClick
    void setAdapter(android.widget.ListAdapter) -> a
    void setHorizontalOffset(int) -> e
    void setPromptText(java.lang.CharSequence) -> a
    void setVerticalOffset(int) -> k
    void show() -> s
org.holoeverywhere.widget.Spinner$DropDownAdapter -> org.holoeverywhere.widget.Spinner$DropDownAdapter:
    android.widget.SpinnerAdapter mAdapter -> a
    android.widget.ListAdapter mListAdapter -> b
    boolean areAllItemsEnabled() -> areAllItemsEnabled
    int getCount() -> getCount
    android.view.View getDropDownView(int,android.view.View,android.view.ViewGroup) -> getDropDownView
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
    int getItemViewType(int) -> getItemViewType
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    int getViewTypeCount() -> getViewTypeCount
    boolean hasStableIds() -> hasStableIds
    boolean isEmpty() -> isEmpty
    boolean isEnabled(int) -> isEnabled
    void registerDataSetObserver(android.database.DataSetObserver) -> registerDataSetObserver
    void unregisterDataSetObserver(android.database.DataSetObserver) -> unregisterDataSetObserver
org.holoeverywhere.widget.Spinner$DropdownPopup -> org.holoeverywhere.widget.Spinner$DropdownPopup:
    android.widget.ListAdapter mAdapter -> c
    java.lang.CharSequence mHintText -> d
    boolean mSelectionSetted -> e
    org.holoeverywhere.widget.Spinner this$0 -> b
    java.lang.CharSequence getHintText() -> a
    void onDismiss() -> a_
    void setAdapter(android.widget.ListAdapter) -> a
    void setPromptText(java.lang.CharSequence) -> a
    void show() -> s
    android.widget.ListAdapter access$000(org.holoeverywhere.widget.Spinner$DropdownPopup) -> a
org.holoeverywhere.widget.Spinner$DropdownPopup$1 -> org.holoeverywhere.widget.Spinner$DropdownPopup$1:
    org.holoeverywhere.widget.Spinner val$this$0 -> a
    org.holoeverywhere.widget.Spinner$DropdownPopup this$1 -> b
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
org.holoeverywhere.widget.Spinner$SpinnerPopup -> org.holoeverywhere.widget.Spinner$SpinnerPopup:
    void dismiss() -> c
    android.graphics.drawable.Drawable getBackground() -> f
    java.lang.CharSequence getHintText() -> a
    int getHorizontalOffset() -> h
    int getVerticalOffset() -> n
    boolean isShowing() -> r
    void setAdapter(android.widget.ListAdapter) -> a
    void setHorizontalOffset(int) -> e
    void setPromptText(java.lang.CharSequence) -> a
    void setVerticalOffset(int) -> k
    void show() -> s
org.holoeverywhere.widget.Switch -> org.holoeverywhere.widget.Switch:
    int[] CHECKED_STATE_SET -> a
    int mMinFlingVelocity -> b
    android.text.Layout mOffLayout -> c
    android.text.Layout mOnLayout -> d
    int mSwitchBottom -> e
    int mSwitchHeight -> f
    int mSwitchLeft -> g
    int mSwitchMinWidth -> h
    int mSwitchPadding -> i
    int mSwitchRight -> j
    int mSwitchTop -> k
    org.holoeverywhere.text.TransformationMethod mSwitchTransformationMethod -> l
    int mSwitchWidth -> m
    android.graphics.Rect mTempRect -> n
    android.content.res.ColorStateList mTextColors -> o
    java.lang.CharSequence mTextOff -> p
    java.lang.CharSequence mTextOn -> q
    android.text.TextPaint mTextPaint -> r
    android.graphics.drawable.Drawable mThumbDrawable -> s
    float mThumbPosition -> t
    int mThumbTextPadding -> u
    int mThumbWidth -> v
    boolean mToggleWhenClick -> w
    int mTouchMode -> x
    int mTouchSlop -> y
    float mTouchX -> z
    float mTouchY -> A
    android.graphics.drawable.Drawable mTrackDrawable -> B
    android.view.VelocityTracker mVelocityTracker -> C
    void animateThumbToCheckedState(boolean) -> a
    void cancelSuperTouch(android.view.MotionEvent) -> a
    void drawableStateChanged() -> drawableStateChanged
    int getCompoundPaddingRight() -> getCompoundPaddingRight
    int getSwitchMinWidth() -> getSwitchMinWidth
    int getSwitchPadding() -> getSwitchPadding
    boolean getTargetCheckedState() -> getTargetCheckedState
    java.lang.CharSequence getTextOff() -> getTextOff
    java.lang.CharSequence getTextOn() -> getTextOn
    android.graphics.drawable.Drawable getThumbDrawable() -> getThumbDrawable
    int getThumbScrollRange() -> getThumbScrollRange
    int getThumbTextPadding() -> getThumbTextPadding
    android.graphics.drawable.Drawable getTrackDrawable() -> getTrackDrawable
    boolean hitThumb(float,float) -> a
    void jumpDrawablesToCurrentState() -> jumpDrawablesToCurrentState
    android.text.Layout makeLayout(java.lang.CharSequence) -> a
    int[] onCreateDrawableState(int) -> onCreateDrawableState
    void onDraw(android.graphics.Canvas) -> onDraw
    void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo) -> onInitializeAccessibilityNodeInfo
    void onLayout(boolean,int,int,int,int) -> onLayout
    void onMeasure(int,int) -> onMeasure
    void onPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void setChecked(boolean) -> setChecked
    void setSwitchMinWidth(int) -> setSwitchMinWidth
    void setSwitchPadding(int) -> setSwitchPadding
    void setSwitchTextAppearance(android.content.Context,int) -> a
    void setSwitchTypeface(android.graphics.Typeface) -> setSwitchTypeface
    void setSwitchTypeface(android.graphics.Typeface,int) -> a
    void setSwitchTypefaceByIndex(int,int) -> a
    void setTextOff(java.lang.CharSequence) -> setTextOff
    void setTextOn(java.lang.CharSequence) -> setTextOn
    void setThumbDrawable(android.graphics.drawable.Drawable) -> setThumbDrawable
    void setThumbResource(int) -> setThumbResource
    void setThumbTextPadding(int) -> setThumbTextPadding
    void setToggleWhenClick(boolean) -> setToggleWhenClick
    void setTrackDrawable(android.graphics.drawable.Drawable) -> setTrackDrawable
    void setTrackResource(int) -> setTrackResource
    void stopDrag(android.view.MotionEvent) -> b
    boolean verifyDrawable(android.graphics.drawable.Drawable) -> verifyDrawable
org.holoeverywhere.widget.TextView -> org.holoeverywhere.widget.TextView:
    java.lang.String mFontFamily -> a
    int mFontStyle -> b
    void construct(android.widget.TextView,android.content.Context,android.util.AttributeSet,int) -> a
    java.lang.Object[] parseFontStyle(android.content.res.TypedArray) -> a
    void setAllCaps(android.widget.TextView,boolean) -> a
    void setFontStyle(android.widget.TextView,java.lang.String,int) -> a
    void setTextAppearance(android.widget.TextView,android.content.Context,int) -> a
    void setTextAppearance(android.widget.TextView,android.content.res.TypedArray) -> a
    java.lang.String getFontFamily() -> getFontFamily
    int getFontStyle() -> getFontStyle
    void setAllCaps(boolean) -> setAllCaps
    void setFontStyle(java.lang.String,int) -> a
    void setTextAppearance(android.content.Context,int) -> setTextAppearance
org.holoeverywhere.widget.Toast -> org.holoeverywhere.widget.Toast:
    org.holoeverywhere.widget.Toast makeText(android.content.Context,java.lang.CharSequence,int) -> a
    org.holoeverywhere.widget.Toast makeText(android.content.Context,int,int) -> a
    void setText(java.lang.CharSequence) -> setText
org.holoeverywhere.widget.ToggleButton -> org.holoeverywhere.widget.ToggleButton:
    java.lang.String mFontFamily -> a
    int mFontStyle -> b
    java.lang.String getFontFamily() -> getFontFamily
    int getFontStyle() -> getFontStyle
    void setAllCaps(boolean) -> setAllCaps
    void setFontStyle(java.lang.String,int) -> a
    void setTextAppearance(android.content.Context,int) -> setTextAppearance
org.holoeverywhere.widget.WindowDecorView -> org.holoeverywhere.widget.WindowDecorView:
    android.util.TypedValue mFixedHeightMajor -> mFixedHeightMajor
    android.util.TypedValue mFixedHeightMinor -> mFixedHeightMinor
    android.util.TypedValue mFixedWidthMajor -> mFixedWidthMajor
    android.util.TypedValue mFixedWidthMinor -> mFixedWidthMinor
    android.util.TypedValue mMinHeightMajor -> mMinHeightMajor
    android.util.TypedValue mMinHeightMinor -> mMinHeightMinor
    android.util.TypedValue mMinWidthMajor -> mMinWidthMajor
    android.util.TypedValue mMinWidthMinor -> mMinWidthMinor
    boolean fitSystemWindows(android.graphics.Rect) -> fitSystemWindows
    void onMeasure(int,int) -> onMeasure
org.holoeverywhere.widget.datetimepicker.AccessibleLinearLayout -> org.holoeverywhere.widget.datetimepicker.AccessibleLinearLayout:
    void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo) -> onInitializeAccessibilityNodeInfo
org.holoeverywhere.widget.datetimepicker.AccessibleTextView -> org.holoeverywhere.widget.datetimepicker.AccessibleTextView:
    void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo) -> onInitializeAccessibilityNodeInfo
org.holoeverywhere.widget.datetimepicker.date.AccessibleDateAnimator -> org.holoeverywhere.widget.datetimepicker.date.AccessibleDateAnimator:
    long mDateMillis -> a
    void setDateMillis(long) -> setDateMillis
    boolean dispatchPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
org.holoeverywhere.widget.datetimepicker.date.RotateTextView -> org.holoeverywhere.widget.datetimepicker.date.RotateTextView:
    boolean mTopDown -> a
    void onMeasure(int,int) -> onMeasure
    void onDraw(android.graphics.Canvas) -> onDraw
org.holoeverywhere.widget.datetimepicker.date.TextViewWithCircularIndicator -> org.holoeverywhere.widget.datetimepicker.date.TextViewWithCircularIndicator:
    java.lang.String mItemIsSelectedText -> b
    android.graphics.Paint mCirclePaint -> a
    boolean mDrawCircle -> c
    void init() -> a
    void onDraw(android.graphics.Canvas) -> onDraw
    java.lang.CharSequence getContentDescription() -> getContentDescription
org.holoeverywhere.widget.datetimepicker.time.AmPmCirclesView -> org.holoeverywhere.widget.datetimepicker.time.AmPmCirclesView:
    android.graphics.Paint mPaint -> a
    int mAmPmTextColor -> b
    float mCircleRadiusMultiplier -> c
    float mAmPmCircleRadiusMultiplier -> d
    java.lang.String mAmText -> e
    java.lang.String mPmText -> f
    boolean mIsInitialized -> g
    boolean mDrawValuesReady -> h
    int mAmPmCircleRadius -> i
    int mAmXCenter -> j
    int mPmXCenter -> k
    int mAmPmYCenter -> l
    int mAmOrPm -> m
    int mAmOrPmPressed -> n
    android.content.res.ColorStateList mCircleBackground -> o
    int mCircleBackgroundDefault -> p
    void setAmOrPm(int) -> setAmOrPm
    void setAmOrPmPressed(int) -> setAmOrPmPressed
    int getIsTouchingAmOrPm(float,float) -> a
    void onDraw(android.graphics.Canvas) -> onDraw
    int getCircleBackgroundColor(int) -> a
org.holoeverywhere.widget.datetimepicker.time.CircleView -> org.holoeverywhere.widget.datetimepicker.time.CircleView:
    android.graphics.Paint mPaint -> a
    int mPointerRadius -> b
    boolean mIs24HourMode -> c
    int mCircleBackground -> d
    int mPointerColor -> e
    float mCircleRadiusMultiplier -> f
    float mAmPmCircleRadiusMultiplier -> g
    boolean mIsInitialized -> h
    boolean mDrawValuesReady -> i
    int mXCenter -> j
    int mYCenter -> k
    int mCircleRadius -> l
    void onDraw(android.graphics.Canvas) -> onDraw
org.holoeverywhere.widget.datetimepicker.time.RadialPickerLayout -> org.holoeverywhere.widget.datetimepicker.time.RadialPickerLayout:
    int TOUCH_SLOP -> a
    int TAP_TIMEOUT -> b
    android.os.Vibrator mVibrator -> c
    long mLastVibrate -> d
    int mLastValueSelected -> e
    org.holoeverywhere.widget.datetimepicker.time.RadialPickerLayout$OnValueSelectedListener mListener -> f
    boolean mTimeInitialized -> g
    int mCurrentHoursOfDay -> h
    int mCurrentMinutes -> i
    boolean mIs24HourMode -> j
    boolean mHideAmPm -> k
    int mCurrentItemShowing -> l
    org.holoeverywhere.widget.datetimepicker.time.CircleView mCircleView -> m
    org.holoeverywhere.widget.datetimepicker.time.AmPmCirclesView mAmPmCirclesView -> n
    org.holoeverywhere.widget.datetimepicker.time.RadialTextsView mHourRadialTextsView -> o
    org.holoeverywhere.widget.datetimepicker.time.RadialTextsView mMinuteRadialTextsView -> p
    org.holoeverywhere.widget.datetimepicker.time.RadialSelectorView mHourRadialSelectorView -> q
    org.holoeverywhere.widget.datetimepicker.time.RadialSelectorView mMinuteRadialSelectorView -> r
    android.view.View mGrayBox -> s
    int[] mSnapPrefer30sMap -> t
    boolean mInputEnabled -> u
    int mIsTouchingAmOrPm -> v
    boolean mDoingMove -> w
    boolean mDoingTouch -> x
    int mDownDegrees -> y
    float mDownX -> z
    float mDownY -> A
    android.view.accessibility.AccessibilityManager mAccessibilityManager -> B
    android.os.Handler mHandler -> C
    void onMeasure(int,int) -> onMeasure
    void setOnValueSelectedListener(org.holoeverywhere.widget.datetimepicker.time.RadialPickerLayout$OnValueSelectedListener) -> setOnValueSelectedListener
    void setItem(int,int) -> a
    boolean isHourInnerCircle(int) -> a
    int getHours() -> getHours
    int getMinutes() -> getMinutes
    int getCurrentlyShowingValue() -> getCurrentlyShowingValue
    int getIsCurrentlyAmOrPm() -> getIsCurrentlyAmOrPm
    void setValueForItem(int,int) -> b
    void setAmOrPm(int) -> setAmOrPm
    void preparePrefer30sMap() -> b
    int snapPrefer30s(int) -> b
    int snapOnly30s(int,int) -> c
    int reselectSelector(int,boolean,boolean,boolean) -> a
    int getDegreesFromCoords(float,float,boolean,java.lang.Boolean[]) -> a
    int getCurrentItemShowing() -> getCurrentItemShowing
    boolean onTouch(android.view.View,android.view.MotionEvent) -> onTouch
    void tryVibrate() -> a
    void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo) -> onInitializeAccessibilityNodeInfo
    boolean dispatchPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    boolean performAccessibilityAction(int,android.os.Bundle) -> performAccessibilityAction
    int access$000(org.holoeverywhere.widget.datetimepicker.time.RadialPickerLayout) -> a
    org.holoeverywhere.widget.datetimepicker.time.AmPmCirclesView access$100(org.holoeverywhere.widget.datetimepicker.time.RadialPickerLayout) -> b
    boolean access$202(org.holoeverywhere.widget.datetimepicker.time.RadialPickerLayout,boolean) -> a
    int access$300(org.holoeverywhere.widget.datetimepicker.time.RadialPickerLayout) -> c
    int access$400(org.holoeverywhere.widget.datetimepicker.time.RadialPickerLayout,int,boolean,boolean,boolean) -> a
    int access$502(org.holoeverywhere.widget.datetimepicker.time.RadialPickerLayout,int) -> a
    org.holoeverywhere.widget.datetimepicker.time.RadialPickerLayout$OnValueSelectedListener access$600(org.holoeverywhere.widget.datetimepicker.time.RadialPickerLayout) -> d
org.holoeverywhere.widget.datetimepicker.time.RadialPickerLayout$1 -> org.holoeverywhere.widget.datetimepicker.time.RadialPickerLayout$1:
    org.holoeverywhere.widget.datetimepicker.time.RadialPickerLayout this$0 -> a
    void run() -> run
org.holoeverywhere.widget.datetimepicker.time.RadialPickerLayout$2 -> org.holoeverywhere.widget.datetimepicker.time.RadialPickerLayout$2:
    java.lang.Boolean[] val$isInnerCircle -> a
    org.holoeverywhere.widget.datetimepicker.time.RadialPickerLayout this$0 -> b
    void run() -> run
org.holoeverywhere.widget.datetimepicker.time.RadialPickerLayout$OnValueSelectedListener -> org.holoeverywhere.widget.datetimepicker.time.RadialPickerLayout$OnValueSelectedListener:
    void onValueSelected(int,int,boolean) -> a
org.holoeverywhere.widget.datetimepicker.time.RadialSelectorView -> org.holoeverywhere.widget.datetimepicker.time.RadialSelectorView:
    android.graphics.Paint mPaint -> a
    com.nineoldandroids.view.animation.AnimatorProxy mProxy -> b
    boolean mIsInitialized -> c
    boolean mDrawValuesReady -> d
    float mCircleRadiusMultiplier -> e
    float mAmPmCircleRadiusMultiplier -> f
    float mInnerNumbersRadiusMultiplier -> g
    float mOuterNumbersRadiusMultiplier -> h
    float mNumbersRadiusMultiplier -> i
    float mSelectionRadiusMultiplier -> j
    float mAnimationRadiusMultiplier -> k
    boolean mIs24HourMode -> l
    boolean mHasInnerCircle -> m
    int mXCenter -> n
    int mYCenter -> o
    int mCircleRadius -> p
    int mLineLength -> q
    int mSelectionRadius -> r
    org.holoeverywhere.widget.datetimepicker.time.RadialSelectorView$InvalidateUpdateListener mInvalidateUpdateListener -> s
    int mSelectionDegrees -> t
    double mSelectionRadians -> u
    boolean mForceDrawDot -> v
    float getAlpha() -> getAlpha
    void setAlpha(float) -> setAlpha
    void setSelection(int,boolean,boolean) -> a
    boolean hasOverlappingRendering() -> hasOverlappingRendering
    int getDegreesFromCoords(float,float,boolean,java.lang.Boolean[]) -> a
    void onDraw(android.graphics.Canvas) -> onDraw
    com.nineoldandroids.animation.ObjectAnimator getDisappearAnimator() -> getDisappearAnimator
    com.nineoldandroids.animation.ObjectAnimator getReappearAnimator() -> getReappearAnimator
org.holoeverywhere.widget.datetimepicker.time.RadialSelectorView$InvalidateUpdateListener -> org.holoeverywhere.widget.datetimepicker.time.RadialSelectorView$InvalidateUpdateListener:
org.holoeverywhere.widget.datetimepicker.time.RadialTextsView -> org.holoeverywhere.widget.datetimepicker.time.RadialTextsView:
    android.graphics.Paint mPaint -> c
    com.nineoldandroids.view.animation.AnimatorProxy mProxy -> d
    com.nineoldandroids.animation.ObjectAnimator mDisappearAnimator -> a
    com.nineoldandroids.animation.ObjectAnimator mReappearAnimator -> b
    boolean mDrawValuesReady -> e
    boolean mIsInitialized -> f
    android.graphics.Typeface mTypeface -> g
    java.lang.String[] mTexts -> h
    java.lang.String[] mInnerTexts -> i
    boolean mIs24HourMode -> j
    boolean mHasInnerCircle -> k
    float mCircleRadiusMultiplier -> l
    float mAmPmCircleRadiusMultiplier -> m
    float mNumbersRadiusMultiplier -> n
    float mInnerNumbersRadiusMultiplier -> o
    float mTextSizeMultiplier -> p
    float mInnerTextSizeMultiplier -> q
    int mXCenter -> r
    int mYCenter -> s
    float mCircleRadius -> t
    boolean mTextGridValuesDirty -> u
    float mTextSize -> v
    float mInnerTextSize -> w
    float[] mTextGridHeights -> x
    float[] mTextGridWidths -> y
    float[] mInnerTextGridHeights -> z
    float[] mInnerTextGridWidths -> A
    float mAnimationRadiusMultiplier -> B
    org.holoeverywhere.widget.datetimepicker.time.RadialTextsView$InvalidateUpdateListener mInvalidateUpdateListener -> C
    int mNumberTextColor -> D
    float getAlpha() -> getAlpha
    void setAlpha(float) -> setAlpha
    float getRotation() -> getRotation
    void setRotation(float) -> setRotation
    boolean hasOverlappingRendering() -> hasOverlappingRendering
    void setAnimationRadiusMultiplier(float) -> setAnimationRadiusMultiplier
    void onDraw(android.graphics.Canvas) -> onDraw
    void calculateGridSizes(float,float,float,float,float[],float[]) -> a
    void drawTexts(android.graphics.Canvas,float,android.graphics.Typeface,java.lang.String[],float[],float[]) -> a
    void renderAnimations() -> a
    com.nineoldandroids.animation.ObjectAnimator getDisappearAnimator() -> getDisappearAnimator
    com.nineoldandroids.animation.ObjectAnimator getReappearAnimator() -> getReappearAnimator
org.holoeverywhere.widget.datetimepicker.time.RadialTextsView$InvalidateUpdateListener -> org.holoeverywhere.widget.datetimepicker.time.RadialTextsView$InvalidateUpdateListener:
org.jivesoftware.smack.AbstractConnectionListener -> org.jivesoftware.smack.AbstractConnectionListener:
    void connectionClosed() -> a
    void connectionClosedOnError(java.lang.Exception) -> a
    void reconnectionSuccessful() -> b
org.jivesoftware.smack.AccountManager -> org.jivesoftware.smack.AccountManager:
    org.jivesoftware.smack.Connection connection -> a
    org.jivesoftware.smack.packet.Registration info -> b
    boolean accountCreationSupported -> c
    void setSupportsAccountCreation(boolean) -> a
org.jivesoftware.smack.ChatManager -> org.jivesoftware.smack.ChatManager:
    java.lang.String prefix -> a
    long id -> b
org.jivesoftware.smack.Connection -> org.jivesoftware.smack.Connection:
    java.util.concurrent.atomic.AtomicInteger connectionCounter -> q
    java.util.Set connectionEstablishedListeners -> r
    java.util.List compressionHandlers -> a
    boolean DEBUG_ENABLED -> b
    java.util.Collection connectionListeners -> c
    java.util.Collection collectors -> d
    java.util.Map recvListeners -> e
    java.util.Map sendListeners -> f
    java.util.Map interceptors -> g
    org.jivesoftware.smack.AccountManager accountManager -> s
    org.jivesoftware.smack.ChatManager chatManager -> h
    org.jivesoftware.smack.debugger.SmackDebugger debugger -> i
    java.io.Reader reader -> j
    java.io.Writer writer -> k
    org.jivesoftware.smack.RosterStorage rosterStorage -> l
    org.jivesoftware.smack.SASLAuthentication saslAuthentication -> m
    int connectionCounterValue -> n
    org.jivesoftware.smack.ConnectionConfiguration config -> o
    java.lang.String serviceCapsNode -> t
    org.jivesoftware.smack.compression.XMPPInputOutputStream compressionHandler -> p
    org.jivesoftware.smack.ConnectionConfiguration getConfiguration() -> a
    java.lang.String getServiceName() -> b
    java.lang.String getHost() -> c
    int getPort() -> d
    java.lang.String getConnectionID() -> e
    boolean isConnected() -> f
    boolean isAuthenticated() -> g
    boolean isAnonymous() -> h
    void sendPacket(org.jivesoftware.smack.packet.Packet) -> a
    org.jivesoftware.smack.AccountManager getAccountManager() -> i
    org.jivesoftware.smack.SASLAuthentication getSASLAuthentication() -> j
    void disconnect() -> k
    void disconnect(org.jivesoftware.smack.packet.Presence) -> a
    void addConnectionCreationListener(org.jivesoftware.smack.ConnectionCreationListener) -> a
    java.util.Collection getConnectionCreationListeners() -> l
    void addConnectionListener(org.jivesoftware.smack.ConnectionListener) -> a
    java.util.Collection getConnectionListeners() -> m
    org.jivesoftware.smack.PacketCollector createPacketCollector(org.jivesoftware.smack.filter.PacketFilter) -> a
    void removePacketCollector(org.jivesoftware.smack.PacketCollector) -> a
    java.util.Collection getPacketCollectors() -> n
    void addPacketListener(org.jivesoftware.smack.PacketListener,org.jivesoftware.smack.filter.PacketFilter) -> a
    void removePacketListener(org.jivesoftware.smack.PacketListener) -> a
    void addPacketSendingListener(org.jivesoftware.smack.PacketListener,org.jivesoftware.smack.filter.PacketFilter) -> b
    void firePacketSendingListeners(org.jivesoftware.smack.packet.Packet) -> b
    void firePacketInterceptors(org.jivesoftware.smack.packet.Packet) -> c
    void initDebugger() -> o
    void setServiceCapsNode(java.lang.String) -> a
org.jivesoftware.smack.Connection$InterceptorWrapper -> org.jivesoftware.smack.Connection$InterceptorWrapper:
    org.jivesoftware.smack.PacketInterceptor packetInterceptor -> a
    org.jivesoftware.smack.filter.PacketFilter packetFilter -> b
    boolean equals(java.lang.Object) -> equals
    void notifyListener(org.jivesoftware.smack.packet.Packet) -> a
org.jivesoftware.smack.Connection$ListenerWrapper -> org.jivesoftware.smack.Connection$ListenerWrapper:
    org.jivesoftware.smack.PacketListener packetListener -> a
    org.jivesoftware.smack.filter.PacketFilter packetFilter -> b
    void notifyListener(org.jivesoftware.smack.packet.Packet) -> a
org.jivesoftware.smack.ConnectionConfiguration -> org.jivesoftware.smack.ConnectionConfiguration:
    java.lang.String serviceName -> c
    java.lang.String host -> d
    int port -> e
    java.util.List hostAddresses -> a
    java.lang.String truststorePath -> f
    java.lang.String truststoreType -> g
    java.lang.String truststorePassword -> h
    java.lang.String keystorePath -> i
    java.lang.String keystoreType -> j
    java.lang.String pkcs11Library -> k
    boolean verifyChainEnabled -> l
    boolean verifyRootCAEnabled -> m
    boolean selfSignedCertificateEnabled -> n
    boolean expiredCertificatesCheckEnabled -> o
    boolean notMatchingDomainCheckEnabled -> p
    boolean isRosterVersioningAvailable -> q
    javax.net.ssl.SSLContext customSSLContext -> r
    boolean compressionEnabled -> s
    boolean saslAuthenticationEnabled -> t
    org.apache.harmony.javax.security.auth.callback.CallbackHandler callbackHandler -> u
    boolean debuggerEnabled -> v
    boolean reconnectionAllowed -> w
    javax.net.SocketFactory socketFactory -> x
    java.lang.String username -> y
    java.lang.String password -> z
    java.lang.String resource -> A
    boolean sendPresence -> B
    boolean rosterLoadedAtLogin -> C
    org.jivesoftware.smack.ConnectionConfiguration$SecurityMode securityMode -> D
    org.jivesoftware.smack.proxy.ProxyInfo proxy -> b
    void init(java.lang.String,org.jivesoftware.smack.proxy.ProxyInfo) -> a
    void setServiceName(java.lang.String) -> a
    java.lang.String getServiceName() -> a
    java.lang.String getHost() -> b
    int getPort() -> c
    void setUsedHostAddress(org.jivesoftware.smack.util.dns.HostAddress) -> a
    org.jivesoftware.smack.ConnectionConfiguration$SecurityMode getSecurityMode() -> d
    java.lang.String getTruststorePath() -> e
    java.lang.String getTruststoreType() -> f
    java.lang.String getTruststorePassword() -> g
    java.lang.String getKeystorePath() -> h
    java.lang.String getKeystoreType() -> i
    java.lang.String getPKCS11Library() -> j
    boolean isVerifyChainEnabled() -> k
    boolean isVerifyRootCAEnabled() -> l
    void setVerifyRootCAEnabled(boolean) -> a
    boolean isSelfSignedCertificateEnabled() -> m
    boolean isExpiredCertificatesCheckEnabled() -> n
    boolean isNotMatchingDomainCheckEnabled() -> o
    javax.net.ssl.SSLContext getCustomSSLContext() -> p
    boolean isCompressionEnabled() -> q
    boolean isSASLAuthenticationEnabled() -> r
    boolean isDebuggerEnabled() -> s
    void setDebuggerEnabled(boolean) -> b
    boolean isRosterLoadedAtLogin() -> t
    org.apache.harmony.javax.security.auth.callback.CallbackHandler getCallbackHandler() -> u
    javax.net.SocketFactory getSocketFactory() -> v
    java.util.List getHostAddresses() -> w
    java.lang.String getUsername() -> x
    java.lang.String getPassword() -> y
    java.lang.String getResource() -> z
    boolean isRosterVersioningAvailable() -> A
    void setRosterVersioningAvailable(boolean) -> c
    boolean isSendPresence() -> B
    void setLoginInfo(java.lang.String,java.lang.String,java.lang.String) -> a
    void initHostAddresses(java.lang.String,int) -> a
org.jivesoftware.smack.ConnectionConfiguration$SecurityMode -> org.jivesoftware.smack.ConnectionConfiguration$SecurityMode:
    org.jivesoftware.smack.ConnectionConfiguration$SecurityMode required -> a
    org.jivesoftware.smack.ConnectionConfiguration$SecurityMode enabled -> b
    org.jivesoftware.smack.ConnectionConfiguration$SecurityMode disabled -> c
    org.jivesoftware.smack.ConnectionConfiguration$SecurityMode[] $VALUES -> d
    org.jivesoftware.smack.ConnectionConfiguration$SecurityMode[] values() -> values
    org.jivesoftware.smack.ConnectionConfiguration$SecurityMode valueOf(java.lang.String) -> valueOf
org.jivesoftware.smack.ConnectionCreationListener -> org.jivesoftware.smack.ConnectionCreationListener:
    void connectionCreated(org.jivesoftware.smack.Connection) -> a
org.jivesoftware.smack.ConnectionListener -> org.jivesoftware.smack.ConnectionListener:
    void connectionClosed() -> a
    void connectionClosedOnError(java.lang.Exception) -> a
    void reconnectionSuccessful() -> b
org.jivesoftware.smack.NonSASLAuthentication -> org.jivesoftware.smack.NonSASLAuthentication:
    org.jivesoftware.smack.Connection connection -> a
    java.lang.String authenticate(java.lang.String,java.lang.String,java.lang.String) -> a
    java.lang.String authenticateAnonymously() -> a
org.jivesoftware.smack.PacketCollector -> org.jivesoftware.smack.PacketCollector:
    org.jivesoftware.smack.filter.PacketFilter packetFilter -> a
    java.util.concurrent.ArrayBlockingQueue resultQueue -> b
    org.jivesoftware.smack.Connection connection -> c
    boolean cancelled -> d
    void cancel() -> a
    org.jivesoftware.smack.packet.Packet nextResult(long) -> a
    void processPacket(org.jivesoftware.smack.packet.Packet) -> a
org.jivesoftware.smack.PacketInterceptor -> org.jivesoftware.smack.PacketInterceptor:
    void interceptPacket(org.jivesoftware.smack.packet.Packet) -> a
org.jivesoftware.smack.PacketListener -> org.jivesoftware.smack.PacketListener:
    void processPacket(org.jivesoftware.smack.packet.Packet) -> a
org.jivesoftware.smack.PacketReader -> org.jivesoftware.smack.PacketReader:
    java.lang.Thread readerThread -> b
    java.util.concurrent.ExecutorService listenerExecutor -> c
    org.jivesoftware.smack.XMPPConnection connection -> d
    org.xmlpull.v1.XmlPullParser parser -> e
    boolean done -> a
    java.lang.String connectionID -> f
    void init() -> a
    void startup() -> b
    void shutdown() -> c
    void resetParser() -> d
    void parsePackets(java.lang.Thread) -> a
    void releaseConnectionIDLock() -> e
    void processPacket(org.jivesoftware.smack.packet.Packet) -> a
    void parseFeatures(org.xmlpull.v1.XmlPullParser) -> a
    void access$000(org.jivesoftware.smack.PacketReader,java.lang.Thread) -> a
    org.jivesoftware.smack.XMPPConnection access$100(org.jivesoftware.smack.PacketReader) -> a
org.jivesoftware.smack.PacketReader$1 -> org.jivesoftware.smack.PacketReader$1:
    org.jivesoftware.smack.PacketReader this$0 -> a
    void run() -> run
org.jivesoftware.smack.PacketReader$2 -> org.jivesoftware.smack.PacketReader$2:
    org.jivesoftware.smack.PacketReader this$0 -> a
    java.lang.Thread newThread(java.lang.Runnable) -> newThread
org.jivesoftware.smack.PacketReader$ListenerNotification -> org.jivesoftware.smack.PacketReader$ListenerNotification:
    org.jivesoftware.smack.packet.Packet packet -> b
    org.jivesoftware.smack.PacketReader this$0 -> a
    void run() -> run
org.jivesoftware.smack.PacketWriter -> org.jivesoftware.smack.PacketWriter:
    java.lang.Thread writerThread -> b
    java.lang.Thread keepAliveThread -> c
    java.io.Writer writer -> d
    org.jivesoftware.smack.XMPPConnection connection -> e
    java.util.concurrent.BlockingQueue queue -> f
    boolean done -> a
    void init() -> a
    void sendPacket(org.jivesoftware.smack.packet.Packet) -> a
    void startup() -> b
    void setWriter(java.io.Writer) -> a
    void shutdown() -> c
    org.jivesoftware.smack.packet.Packet nextPacket() -> e
    void writePackets(java.lang.Thread) -> a
    void openStream() -> d
    void access$000(org.jivesoftware.smack.PacketWriter,java.lang.Thread) -> a
org.jivesoftware.smack.PacketWriter$1 -> org.jivesoftware.smack.PacketWriter$1:
    org.jivesoftware.smack.PacketWriter this$0 -> a
    void run() -> run
org.jivesoftware.smack.Roster -> org.jivesoftware.smack.Roster:
    org.jivesoftware.smack.Roster$SubscriptionMode defaultSubscriptionMode -> b
    org.jivesoftware.smack.RosterStorage persistentStorage -> c
    org.jivesoftware.smack.Connection connection -> d
    java.util.Map groups -> e
    java.util.Map entries -> f
    java.util.List unfiledEntries -> g
    java.util.List rosterListeners -> h
    java.util.Map presenceMap -> i
    boolean rosterInitialized -> a
    org.jivesoftware.smack.Roster$PresencePacketListener presencePacketListener -> j
    org.jivesoftware.smack.Roster$SubscriptionMode subscriptionMode -> k
    java.lang.String requestPacketId -> l
    org.jivesoftware.smack.Roster$SubscriptionMode getDefaultSubscriptionMode() -> a
    void reload() -> b
    org.jivesoftware.smack.RosterGroup createGroup(java.lang.String) -> a
    void insertRosterItem(org.jivesoftware.smack.packet.RosterPacket$Item,java.util.Collection,java.util.Collection,java.util.Collection) -> a
    org.jivesoftware.smack.RosterEntry getEntry(java.lang.String) -> b
    boolean contains(java.lang.String) -> c
    org.jivesoftware.smack.RosterGroup getGroup(java.lang.String) -> d
    java.util.Collection getGroups() -> c
    java.lang.String getPresenceMapKey(java.lang.String) -> e
    void setOfflinePresences() -> d
    void fireRosterChangedEvent(java.util.Collection,java.util.Collection,java.util.Collection) -> a
    void fireRosterPresenceEvent(org.jivesoftware.smack.packet.Presence) -> a
    void access$200(org.jivesoftware.smack.Roster) -> a
    org.jivesoftware.smack.Connection access$300(org.jivesoftware.smack.Roster) -> b
    java.lang.String access$500(org.jivesoftware.smack.Roster,java.lang.String) -> a
    java.util.Map access$600(org.jivesoftware.smack.Roster) -> c
    java.util.Map access$700(org.jivesoftware.smack.Roster) -> d
    void access$800(org.jivesoftware.smack.Roster,org.jivesoftware.smack.packet.Presence) -> a
    org.jivesoftware.smack.Roster$SubscriptionMode access$900(org.jivesoftware.smack.Roster) -> e
    org.jivesoftware.smack.RosterStorage access$1000(org.jivesoftware.smack.Roster) -> f
    void access$1100(org.jivesoftware.smack.Roster,org.jivesoftware.smack.packet.RosterPacket$Item,java.util.Collection,java.util.Collection,java.util.Collection) -> a
    void access$1200(org.jivesoftware.smack.Roster,java.util.Collection,java.util.Collection,java.util.Collection) -> a
    org.jivesoftware.smack.RosterStorage access$1002(org.jivesoftware.smack.Roster,org.jivesoftware.smack.RosterStorage) -> a
org.jivesoftware.smack.Roster$1 -> org.jivesoftware.smack.Roster$1:
    org.jivesoftware.smack.Roster this$0 -> a
    void connectionClosed() -> a
    void connectionClosedOnError(java.lang.Exception) -> a
org.jivesoftware.smack.Roster$2 -> org.jivesoftware.smack.Roster$2:
    org.jivesoftware.smack.ConnectionListener val$connectionListener -> a
    org.jivesoftware.smack.Roster this$0 -> b
    void connectionCreated(org.jivesoftware.smack.Connection) -> a
org.jivesoftware.smack.Roster$PresencePacketListener -> org.jivesoftware.smack.Roster$PresencePacketListener:
    org.jivesoftware.smack.Roster this$0 -> a
    void processPacket(org.jivesoftware.smack.packet.Packet) -> a
org.jivesoftware.smack.Roster$RosterPacketListener -> org.jivesoftware.smack.Roster$RosterPacketListener:
    org.jivesoftware.smack.Roster this$0 -> a
    void processPacket(org.jivesoftware.smack.packet.Packet) -> a
org.jivesoftware.smack.Roster$RosterResultListener -> org.jivesoftware.smack.Roster$RosterResultListener:
    org.jivesoftware.smack.Roster this$0 -> a
    void processPacket(org.jivesoftware.smack.packet.Packet) -> a
org.jivesoftware.smack.Roster$SubscriptionMode -> org.jivesoftware.smack.Roster$SubscriptionMode:
    org.jivesoftware.smack.Roster$SubscriptionMode accept_all -> a
    org.jivesoftware.smack.Roster$SubscriptionMode reject_all -> b
    org.jivesoftware.smack.Roster$SubscriptionMode manual -> c
    org.jivesoftware.smack.Roster$SubscriptionMode[] $VALUES -> d
    org.jivesoftware.smack.Roster$SubscriptionMode[] values() -> values
    org.jivesoftware.smack.Roster$SubscriptionMode valueOf(java.lang.String) -> valueOf
org.jivesoftware.smack.RosterEntry -> org.jivesoftware.smack.RosterEntry:
    java.lang.String user -> a
    java.lang.String name -> b
    org.jivesoftware.smack.packet.RosterPacket$ItemType type -> c
    org.jivesoftware.smack.packet.RosterPacket$ItemStatus status -> d
    org.jivesoftware.smack.Roster roster -> e
    org.jivesoftware.smack.Connection connection -> f
    java.lang.String getUser() -> a
    java.util.Collection getGroups() -> b
    java.lang.String toString() -> toString
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
org.jivesoftware.smack.RosterGroup -> org.jivesoftware.smack.RosterGroup:
    java.lang.String name -> a
    org.jivesoftware.smack.Connection connection -> b
    java.util.List entries -> c
    java.lang.String getName() -> a
    int getEntryCount() -> b
    boolean contains(org.jivesoftware.smack.RosterEntry) -> a
    void addEntryLocal(org.jivesoftware.smack.RosterEntry) -> b
    void removeEntryLocal(org.jivesoftware.smack.RosterEntry) -> c
org.jivesoftware.smack.RosterListener -> org.jivesoftware.smack.RosterListener:
    void entriesAdded(java.util.Collection) -> a
    void entriesUpdated(java.util.Collection) -> b
    void entriesDeleted(java.util.Collection) -> c
    void presenceChanged(org.jivesoftware.smack.packet.Presence) -> a
org.jivesoftware.smack.RosterStorage -> org.jivesoftware.smack.RosterStorage:
    java.util.List getEntries() -> a
    java.lang.String getRosterVersion() -> b
    void addEntry(org.jivesoftware.smack.packet.RosterPacket$Item,java.lang.String) -> a
    void removeEntry(java.lang.String) -> a
org.jivesoftware.smack.SASLAuthentication -> org.jivesoftware.smack.SASLAuthentication:
    java.util.Map implementedMechanisms -> a
    java.util.List mechanismsPreferences -> b
    org.jivesoftware.smack.Connection connection -> c
    java.util.Collection serverMechanisms -> d
    org.jivesoftware.smack.sasl.SASLMechanism currentMechanism -> e
    boolean saslNegotiated -> f
    boolean saslFailed -> g
    boolean resourceBinded -> h
    boolean sessionSupported -> i
    java.lang.String errorCondition -> j
    void registerSASLMechanism(java.lang.String,java.lang.Class) -> a
    void supportSASLMechanism(java.lang.String,int) -> a
    boolean hasAnonymousAuthentication() -> a
    boolean hasNonAnonymousAuthentication() -> b
    java.lang.String authenticate(java.lang.String,java.lang.String,org.apache.harmony.javax.security.auth.callback.CallbackHandler) -> a
    java.lang.String authenticate(java.lang.String,java.lang.String,java.lang.String) -> a
    java.lang.String authenticateAnonymously() -> c
    java.lang.String bindResourceAndEstablishSession(java.lang.String) -> c
    void setAvailableSASLMethods(java.util.Collection) -> a
    void challengeReceived(java.lang.String) -> a
    void authenticated() -> d
    void authenticationFailed() -> e
    void authenticationFailed(java.lang.String) -> b
    void bindingRequired() -> f
    void send(org.jivesoftware.smack.packet.Packet) -> a
    void sessionsSupported() -> g
    void init() -> h
org.jivesoftware.smack.ServerTrustManager -> org.jivesoftware.smack.ServerTrustManager:
    java.util.regex.Pattern cnPattern -> a
    org.jivesoftware.smack.ConnectionConfiguration configuration -> b
    java.lang.String server -> c
    java.security.KeyStore trustStore -> d
    java.util.Map stores -> e
    java.security.cert.X509Certificate[] getAcceptedIssuers() -> getAcceptedIssuers
    void checkClientTrusted(java.security.cert.X509Certificate[],java.lang.String) -> checkClientTrusted
    void checkServerTrusted(java.security.cert.X509Certificate[],java.lang.String) -> checkServerTrusted
    java.util.List getPeerIdentity(java.security.cert.X509Certificate) -> a
    java.util.List getSubjectAlternativeNames(java.security.cert.X509Certificate) -> b
org.jivesoftware.smack.ServerTrustManager$KeyStoreOptions -> org.jivesoftware.smack.ServerTrustManager$KeyStoreOptions:
    java.lang.String type -> a
    java.lang.String path -> b
    java.lang.String password -> c
    java.lang.String getType() -> a
    java.lang.String getPath() -> b
    java.lang.String getPassword() -> c
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
org.jivesoftware.smack.SmackConfiguration -> org.jivesoftware.smack.SmackConfiguration:
    int packetReplyTimeout -> a
    java.util.Vector defaultMechs -> b
    boolean localSocks5ProxyEnabled -> c
    int localSocks5ProxyPort -> d
    int packetCollectorSize -> e
    int defaultPingInterval -> f
    org.jivesoftware.smack.parsing.ParsingExceptionCallback defaultCallback -> g
    boolean autoEnableEntityCaps -> h
    java.lang.String getVersion() -> a
    int getPacketReplyTimeout() -> b
    int getPacketCollectorSize() -> c
    org.jivesoftware.smack.parsing.ParsingExceptionCallback getDefaultParsingExceptionCallback() -> d
    void parseClassToLoad(org.xmlpull.v1.XmlPullParser) -> a
    int parseIntProperty(org.xmlpull.v1.XmlPullParser,int) -> a
    java.lang.ClassLoader[] getClassLoaders() -> e
org.jivesoftware.smack.XMPPConnection -> org.jivesoftware.smack.XMPPConnection:
    java.net.Socket socket -> q
    java.lang.String connectionID -> r
    java.lang.String user -> v
    boolean connected -> w
    boolean socketClosed -> x
    boolean authenticated -> y
    boolean wasAuthenticated -> z
    boolean anonymous -> A
    boolean usingTLS -> B
    org.jivesoftware.smack.parsing.ParsingExceptionCallback parsingExceptionCallback -> C
    org.jivesoftware.smack.PacketWriter packetWriter -> s
    org.jivesoftware.smack.PacketReader packetReader -> t
    org.jivesoftware.smack.Roster roster -> u
    java.util.Collection compressionMethods -> D
    boolean serverAckdCompression -> E
    java.lang.String getConnectionID() -> e
    org.jivesoftware.smack.parsing.ParsingExceptionCallback getParsingExceptionCallback() -> p
    void login(java.lang.String,java.lang.String,java.lang.String) -> a
    void loginAnonymously() -> q
    boolean isConnected() -> f
    boolean isSecureConnection() -> r
    boolean isSocketClosed() -> s
    boolean isAuthenticated() -> g
    boolean isAnonymous() -> h
    void shutdown(org.jivesoftware.smack.packet.Presence) -> b
    void disconnect(org.jivesoftware.smack.packet.Presence) -> a
    void sendPacket(org.jivesoftware.smack.packet.Packet) -> a
    void connectUsingConfiguration(org.jivesoftware.smack.ConnectionConfiguration) -> a
    void initConnection() -> A
    void initReaderAndWriter() -> B
    boolean isUsingTLS() -> t
    void startTLSReceived(boolean) -> a
    void proceedTLSReceived() -> u
    void setAvailableCompressionMethods(java.util.Collection) -> a
    org.jivesoftware.smack.compression.XMPPInputOutputStream maybeGetCompressionHandler() -> C
    boolean isUsingCompression() -> v
    boolean useCompression() -> D
    void requestStreamCompression(java.lang.String) -> b
    void startStreamCompression() -> w
    void streamCompressionDenied() -> x
    void connect() -> y
    void setWasAuthenticated(boolean) -> b
    void notifyConnectionError(java.lang.Exception) -> a
    void notifyReconnection() -> z
org.jivesoftware.smack.XMPPException -> org.jivesoftware.smack.XMPPException:
    org.jivesoftware.smack.packet.StreamError streamError -> a
    org.jivesoftware.smack.packet.XMPPError error -> b
    java.lang.Throwable wrappedThrowable -> c
    void printStackTrace() -> printStackTrace
    void printStackTrace(java.io.PrintStream) -> printStackTrace
    void printStackTrace(java.io.PrintWriter) -> printStackTrace
    java.lang.String getMessage() -> getMessage
    java.lang.String toString() -> toString
org.jivesoftware.smack.compression.Java7ZlibInputOutputStream -> org.jivesoftware.smack.compression.Java7ZlibInputOutputStream:
    java.lang.reflect.Method method -> b
    boolean supported -> c
    boolean isSupported() -> a
    java.io.InputStream getInputStream(java.io.InputStream) -> a
    java.io.OutputStream getOutputStream(java.io.OutputStream) -> a
    boolean access$000() -> b
    java.lang.reflect.Method access$100() -> c
org.jivesoftware.smack.compression.Java7ZlibInputOutputStream$1 -> org.jivesoftware.smack.compression.Java7ZlibInputOutputStream$1:
    org.jivesoftware.smack.compression.Java7ZlibInputOutputStream this$0 -> a
    int available() -> available
org.jivesoftware.smack.compression.Java7ZlibInputOutputStream$2 -> org.jivesoftware.smack.compression.Java7ZlibInputOutputStream$2:
    org.jivesoftware.smack.compression.Java7ZlibInputOutputStream this$0 -> a
    void flush() -> flush
org.jivesoftware.smack.compression.JzlibInputOutputStream -> org.jivesoftware.smack.compression.JzlibInputOutputStream:
    java.lang.Class zoClass -> b
    java.lang.Class ziClass -> c
    boolean isSupported() -> a
    java.io.InputStream getInputStream(java.io.InputStream) -> a
    java.io.OutputStream getOutputStream(java.io.OutputStream) -> a
org.jivesoftware.smack.compression.XMPPInputOutputStream -> org.jivesoftware.smack.compression.XMPPInputOutputStream:
    java.lang.String compressionMethod -> a
    java.lang.String getCompressionMethod() -> d
    boolean isSupported() -> a
    java.io.InputStream getInputStream(java.io.InputStream) -> a
    java.io.OutputStream getOutputStream(java.io.OutputStream) -> a
org.jivesoftware.smack.debugger.ConsoleDebugger -> org.jivesoftware.smack.debugger.ConsoleDebugger:
    boolean printInterpreted -> a
    org.jivesoftware.smack.Connection connection -> b
    org.jivesoftware.smack.PacketListener listener -> c
    org.jivesoftware.smack.ConnectionListener connListener -> d
    java.io.Writer writer -> e
    java.io.Reader reader -> f
    org.jivesoftware.smack.util.ReaderListener readerListener -> g
    org.jivesoftware.smack.util.WriterListener writerListener -> h
    java.io.Reader newConnectionReader(java.io.Reader) -> a
    java.io.Writer newConnectionWriter(java.io.Writer) -> a
    void userHasLogged(java.lang.String) -> a
    java.io.Reader getReader() -> a
    java.io.Writer getWriter() -> b
    org.jivesoftware.smack.PacketListener getReaderListener() -> c
    org.jivesoftware.smack.PacketListener getWriterListener() -> d
org.jivesoftware.smack.debugger.SmackDebugger -> org.jivesoftware.smack.debugger.SmackDebugger:
    void userHasLogged(java.lang.String) -> a
    java.io.Reader getReader() -> a
    java.io.Writer getWriter() -> b
    java.io.Reader newConnectionReader(java.io.Reader) -> a
    java.io.Writer newConnectionWriter(java.io.Writer) -> a
    org.jivesoftware.smack.PacketListener getReaderListener() -> c
    org.jivesoftware.smack.PacketListener getWriterListener() -> d
org.jivesoftware.smack.filter.PacketFilter -> org.jivesoftware.smack.filter.PacketFilter:
    boolean accept(org.jivesoftware.smack.packet.Packet) -> a
org.jivesoftware.smack.filter.PacketIDFilter -> org.jivesoftware.smack.filter.PacketIDFilter:
    java.lang.String packetID -> a
    boolean accept(org.jivesoftware.smack.packet.Packet) -> a
    java.lang.String toString() -> toString
org.jivesoftware.smack.filter.PacketTypeFilter -> org.jivesoftware.smack.filter.PacketTypeFilter:
    java.lang.Class packetType -> a
    boolean accept(org.jivesoftware.smack.packet.Packet) -> a
    java.lang.String toString() -> toString
org.jivesoftware.smack.packet.Authentication -> org.jivesoftware.smack.packet.Authentication:
    java.lang.String username -> c
    java.lang.String password -> d
    java.lang.String digest -> e
    java.lang.String resource -> f
    void setUsername(java.lang.String) -> a
    java.lang.String getPassword() -> a
    void setPassword(java.lang.String) -> b
    java.lang.String getDigest() -> b
    void setDigest(java.lang.String,java.lang.String) -> a
    void setDigest(java.lang.String) -> c
    java.lang.String getResource() -> c
    void setResource(java.lang.String) -> d
    java.lang.String getChildElementXML() -> d
org.jivesoftware.smack.packet.Bind -> org.jivesoftware.smack.packet.Bind:
    java.lang.String resource -> c
    java.lang.String jid -> d
    void setResource(java.lang.String) -> a
    java.lang.String getJid() -> a
    void setJid(java.lang.String) -> b
    java.lang.String getChildElementXML() -> d
org.jivesoftware.smack.packet.DefaultPacketExtension -> org.jivesoftware.smack.packet.DefaultPacketExtension:
    java.lang.String elementName -> a
    java.lang.String namespace -> b
    java.util.Map map -> c
    java.lang.String toXML() -> a
    java.util.Collection getNames() -> b
    java.lang.String getValue(java.lang.String) -> a
    void setValue(java.lang.String,java.lang.String) -> a
org.jivesoftware.smack.packet.IQ -> org.jivesoftware.smack.packet.IQ:
    org.jivesoftware.smack.packet.IQ$Type type -> c
    org.jivesoftware.smack.packet.IQ$Type getType() -> e
    void setType(org.jivesoftware.smack.packet.IQ$Type) -> a
    java.lang.String toXML() -> f
    java.lang.String getChildElementXML() -> d
org.jivesoftware.smack.packet.IQ$Type -> org.jivesoftware.smack.packet.IQ$Type:
    org.jivesoftware.smack.packet.IQ$Type GET -> a
    org.jivesoftware.smack.packet.IQ$Type SET -> b
    org.jivesoftware.smack.packet.IQ$Type RESULT -> c
    org.jivesoftware.smack.packet.IQ$Type ERROR -> d
    java.lang.String value -> e
    org.jivesoftware.smack.packet.IQ$Type fromString(java.lang.String) -> a
    java.lang.String toString() -> toString
org.jivesoftware.smack.packet.Message -> org.jivesoftware.smack.packet.Message:
    org.jivesoftware.smack.packet.Message$Type type -> c
    java.lang.String thread -> d
    java.lang.String language -> e
    java.util.Set subjects -> f
    java.util.Set bodies -> g
    void setType(org.jivesoftware.smack.packet.Message$Type) -> a
    java.lang.String getSubject(java.lang.String) -> a
    org.jivesoftware.smack.packet.Message$Subject getMessageSubject(java.lang.String) -> i
    java.util.Collection getSubjects() -> a
    org.jivesoftware.smack.packet.Message$Subject addSubject(java.lang.String,java.lang.String) -> a
    java.lang.String getBody(java.lang.String) -> b
    org.jivesoftware.smack.packet.Message$Body getMessageBody(java.lang.String) -> j
    java.util.Collection getBodies() -> b
    org.jivesoftware.smack.packet.Message$Body addBody(java.lang.String,java.lang.String) -> b
    void setThread(java.lang.String) -> c
    java.lang.String getLanguage() -> c
    void setLanguage(java.lang.String) -> d
    java.lang.String determineLanguage(java.lang.String) -> k
    java.lang.String toXML() -> f
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
org.jivesoftware.smack.packet.Message$1 -> org.jivesoftware.smack.packet.Message$1:
org.jivesoftware.smack.packet.Message$Body -> org.jivesoftware.smack.packet.Message$Body:
    java.lang.String message -> a
    java.lang.String language -> b
    java.lang.String getLanguage() -> a
    java.lang.String getMessage() -> b
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
    java.lang.String access$300(org.jivesoftware.smack.packet.Message$Body) -> a
    java.lang.String access$400(org.jivesoftware.smack.packet.Message$Body) -> b
org.jivesoftware.smack.packet.Message$Subject -> org.jivesoftware.smack.packet.Message$Subject:
    java.lang.String subject -> a
    java.lang.String language -> b
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
    java.lang.String access$000(org.jivesoftware.smack.packet.Message$Subject) -> a
    java.lang.String access$100(org.jivesoftware.smack.packet.Message$Subject) -> b
org.jivesoftware.smack.packet.Message$Type -> org.jivesoftware.smack.packet.Message$Type:
    org.jivesoftware.smack.packet.Message$Type normal -> a
    org.jivesoftware.smack.packet.Message$Type chat -> b
    org.jivesoftware.smack.packet.Message$Type groupchat -> c
    org.jivesoftware.smack.packet.Message$Type headline -> d
    org.jivesoftware.smack.packet.Message$Type error -> e
    org.jivesoftware.smack.packet.Message$Type[] $VALUES -> f
    org.jivesoftware.smack.packet.Message$Type[] values() -> values
    org.jivesoftware.smack.packet.Message$Type valueOf(java.lang.String) -> valueOf
    org.jivesoftware.smack.packet.Message$Type fromString(java.lang.String) -> a
org.jivesoftware.smack.packet.Packet -> org.jivesoftware.smack.packet.Packet:
    java.lang.String DEFAULT_LANGUAGE -> a
    java.lang.String DEFAULT_XML_NS -> c
    java.text.DateFormat XEP_0082_UTC_FORMAT -> b
    java.lang.String prefix -> d
    long id -> e
    java.lang.String xmlns -> f
    java.lang.String packetID -> g
    java.lang.String to -> h
    java.lang.String from -> i
    java.util.List packetExtensions -> j
    java.util.Map properties -> k
    org.jivesoftware.smack.packet.XMPPError error -> l
    java.lang.String nextID() -> g
    java.lang.String getPacketID() -> h
    void setPacketID(java.lang.String) -> e
    java.lang.String getTo() -> i
    void setTo(java.lang.String) -> f
    java.lang.String getFrom() -> j
    void setFrom(java.lang.String) -> g
    org.jivesoftware.smack.packet.XMPPError getError() -> k
    void setError(org.jivesoftware.smack.packet.XMPPError) -> a
    java.util.Collection getExtensions() -> l
    void addExtension(org.jivesoftware.smack.packet.PacketExtension) -> a
    java.lang.Object getProperty(java.lang.String) -> h
    void setProperty(java.lang.String,java.lang.Object) -> a
    java.util.Collection getPropertyNames() -> m
    java.lang.String toXML() -> f
    java.lang.String getExtensionsXML() -> n
    java.lang.String getXmlns() -> o
    java.lang.String getDefaultLanguage() -> p
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
org.jivesoftware.smack.packet.PacketExtension -> org.jivesoftware.smack.packet.PacketExtension:
    java.lang.String toXML() -> a
org.jivesoftware.smack.packet.Presence -> org.jivesoftware.smack.packet.Presence:
    org.jivesoftware.smack.packet.Presence$Type type -> c
    java.lang.String status -> d
    int priority -> e
    org.jivesoftware.smack.packet.Presence$Mode mode -> f
    java.lang.String language -> g
    org.jivesoftware.smack.packet.Presence$Type getType() -> a
    void setType(org.jivesoftware.smack.packet.Presence$Type) -> a
    java.lang.String getStatus() -> b
    void setStatus(java.lang.String) -> a
    void setPriority(int) -> a
    void setMode(org.jivesoftware.smack.packet.Presence$Mode) -> a
    java.lang.String getLanguage() -> c
    void setLanguage(java.lang.String) -> b
    java.lang.String toXML() -> f
    java.lang.String toString() -> toString
org.jivesoftware.smack.packet.Presence$Mode -> org.jivesoftware.smack.packet.Presence$Mode:
    org.jivesoftware.smack.packet.Presence$Mode chat -> a
    org.jivesoftware.smack.packet.Presence$Mode available -> b
    org.jivesoftware.smack.packet.Presence$Mode away -> c
    org.jivesoftware.smack.packet.Presence$Mode xa -> d
    org.jivesoftware.smack.packet.Presence$Mode dnd -> e
    org.jivesoftware.smack.packet.Presence$Mode[] $VALUES -> f
    org.jivesoftware.smack.packet.Presence$Mode[] values() -> values
    org.jivesoftware.smack.packet.Presence$Mode valueOf(java.lang.String) -> valueOf
org.jivesoftware.smack.packet.Presence$Type -> org.jivesoftware.smack.packet.Presence$Type:
    org.jivesoftware.smack.packet.Presence$Type available -> a
    org.jivesoftware.smack.packet.Presence$Type unavailable -> b
    org.jivesoftware.smack.packet.Presence$Type subscribe -> c
    org.jivesoftware.smack.packet.Presence$Type subscribed -> d
    org.jivesoftware.smack.packet.Presence$Type unsubscribe -> e
    org.jivesoftware.smack.packet.Presence$Type unsubscribed -> f
    org.jivesoftware.smack.packet.Presence$Type error -> g
    org.jivesoftware.smack.packet.Presence$Type[] $VALUES -> h
    org.jivesoftware.smack.packet.Presence$Type[] values() -> values
    org.jivesoftware.smack.packet.Presence$Type valueOf(java.lang.String) -> valueOf
org.jivesoftware.smack.packet.Registration -> org.jivesoftware.smack.packet.Registration:
    java.lang.String instructions -> c
    java.util.Map attributes -> d
    java.util.List requiredFields -> e
    boolean registered -> f
    boolean remove -> g
    void setInstructions(java.lang.String) -> a
    void setAttributes(java.util.Map) -> a
    java.lang.String getChildElementXML() -> d
org.jivesoftware.smack.packet.RosterPacket -> org.jivesoftware.smack.packet.RosterPacket:
    java.util.List rosterItems -> c
    java.lang.String version -> d
    void addRosterItem(org.jivesoftware.smack.packet.RosterPacket$Item) -> a
    java.lang.String getVersion() -> a
    void setVersion(java.lang.String) -> a
    java.util.Collection getRosterItems() -> b
    java.lang.String getChildElementXML() -> d
org.jivesoftware.smack.packet.RosterPacket$Item -> org.jivesoftware.smack.packet.RosterPacket$Item:
    java.lang.String user -> a
    java.lang.String name -> b
    org.jivesoftware.smack.packet.RosterPacket$ItemType itemType -> c
    org.jivesoftware.smack.packet.RosterPacket$ItemStatus itemStatus -> d
    java.util.Set groupNames -> e
    java.lang.String getUser() -> a
    java.lang.String getName() -> b
    org.jivesoftware.smack.packet.RosterPacket$ItemType getItemType() -> c
    void setItemType(org.jivesoftware.smack.packet.RosterPacket$ItemType) -> a
    org.jivesoftware.smack.packet.RosterPacket$ItemStatus getItemStatus() -> d
    void setItemStatus(org.jivesoftware.smack.packet.RosterPacket$ItemStatus) -> a
    java.util.Set getGroupNames() -> e
    void addGroupName(java.lang.String) -> a
    java.lang.String toXML() -> f
org.jivesoftware.smack.packet.RosterPacket$ItemStatus -> org.jivesoftware.smack.packet.RosterPacket$ItemStatus:
    org.jivesoftware.smack.packet.RosterPacket$ItemStatus SUBSCRIPTION_PENDING -> a
    org.jivesoftware.smack.packet.RosterPacket$ItemStatus UNSUBSCRIPTION_PENDING -> b
    java.lang.String value -> c
    org.jivesoftware.smack.packet.RosterPacket$ItemStatus fromString(java.lang.String) -> a
    java.lang.String toString() -> toString
org.jivesoftware.smack.packet.RosterPacket$ItemType -> org.jivesoftware.smack.packet.RosterPacket$ItemType:
    org.jivesoftware.smack.packet.RosterPacket$ItemType none -> a
    org.jivesoftware.smack.packet.RosterPacket$ItemType to -> b
    org.jivesoftware.smack.packet.RosterPacket$ItemType from -> c
    org.jivesoftware.smack.packet.RosterPacket$ItemType both -> d
    org.jivesoftware.smack.packet.RosterPacket$ItemType remove -> e
    org.jivesoftware.smack.packet.RosterPacket$ItemType[] $VALUES -> f
    org.jivesoftware.smack.packet.RosterPacket$ItemType[] values() -> values
    org.jivesoftware.smack.packet.RosterPacket$ItemType valueOf(java.lang.String) -> valueOf
org.jivesoftware.smack.packet.Session -> org.jivesoftware.smack.packet.Session:
    java.lang.String getChildElementXML() -> d
org.jivesoftware.smack.packet.StreamError -> org.jivesoftware.smack.packet.StreamError:
    java.lang.String code -> a
    java.lang.String text -> b
    java.lang.String toString() -> toString
org.jivesoftware.smack.packet.XMPPError -> org.jivesoftware.smack.packet.XMPPError:
    int code -> a
    org.jivesoftware.smack.packet.XMPPError$Type type -> b
    java.lang.String condition -> c
    java.lang.String message -> d
    java.util.List applicationExtensions -> e
    void init(org.jivesoftware.smack.packet.XMPPError$Condition) -> a
    java.lang.String toXML() -> a
    java.lang.String toString() -> toString
    java.util.List getExtensions() -> b
org.jivesoftware.smack.packet.XMPPError$Condition -> org.jivesoftware.smack.packet.XMPPError$Condition:
    org.jivesoftware.smack.packet.XMPPError$Condition interna_server_error -> a
    org.jivesoftware.smack.packet.XMPPError$Condition forbidden -> b
    org.jivesoftware.smack.packet.XMPPError$Condition bad_request -> c
    org.jivesoftware.smack.packet.XMPPError$Condition conflict -> d
    org.jivesoftware.smack.packet.XMPPError$Condition feature_not_implemented -> e
    org.jivesoftware.smack.packet.XMPPError$Condition gone -> f
    org.jivesoftware.smack.packet.XMPPError$Condition item_not_found -> g
    org.jivesoftware.smack.packet.XMPPError$Condition jid_malformed -> h
    org.jivesoftware.smack.packet.XMPPError$Condition no_acceptable -> i
    org.jivesoftware.smack.packet.XMPPError$Condition not_allowed -> j
    org.jivesoftware.smack.packet.XMPPError$Condition not_authorized -> k
    org.jivesoftware.smack.packet.XMPPError$Condition payment_required -> l
    org.jivesoftware.smack.packet.XMPPError$Condition recipient_unavailable -> m
    org.jivesoftware.smack.packet.XMPPError$Condition redirect -> n
    org.jivesoftware.smack.packet.XMPPError$Condition registration_required -> o
    org.jivesoftware.smack.packet.XMPPError$Condition remote_server_error -> p
    org.jivesoftware.smack.packet.XMPPError$Condition remote_server_not_found -> q
    org.jivesoftware.smack.packet.XMPPError$Condition remote_server_timeout -> r
    org.jivesoftware.smack.packet.XMPPError$Condition resource_constraint -> s
    org.jivesoftware.smack.packet.XMPPError$Condition service_unavailable -> t
    org.jivesoftware.smack.packet.XMPPError$Condition subscription_required -> u
    org.jivesoftware.smack.packet.XMPPError$Condition undefined_condition -> v
    org.jivesoftware.smack.packet.XMPPError$Condition unexpected_request -> w
    org.jivesoftware.smack.packet.XMPPError$Condition request_timeout -> x
    java.lang.String value -> y
    java.lang.String toString() -> toString
    java.lang.String access$000(org.jivesoftware.smack.packet.XMPPError$Condition) -> a
org.jivesoftware.smack.packet.XMPPError$ErrorSpecification -> org.jivesoftware.smack.packet.XMPPError$ErrorSpecification:
    int code -> a
    org.jivesoftware.smack.packet.XMPPError$Type type -> b
    org.jivesoftware.smack.packet.XMPPError$Condition condition -> c
    java.util.Map instances -> d
    java.util.Map errorSpecifications() -> c
    org.jivesoftware.smack.packet.XMPPError$ErrorSpecification specFor(org.jivesoftware.smack.packet.XMPPError$Condition) -> a
    org.jivesoftware.smack.packet.XMPPError$Type getType() -> a
    int getCode() -> b
org.jivesoftware.smack.packet.XMPPError$Type -> org.jivesoftware.smack.packet.XMPPError$Type:
    org.jivesoftware.smack.packet.XMPPError$Type WAIT -> a
    org.jivesoftware.smack.packet.XMPPError$Type CANCEL -> b
    org.jivesoftware.smack.packet.XMPPError$Type MODIFY -> c
    org.jivesoftware.smack.packet.XMPPError$Type AUTH -> d
    org.jivesoftware.smack.packet.XMPPError$Type CONTINUE -> e
    org.jivesoftware.smack.packet.XMPPError$Type[] $VALUES -> f
    org.jivesoftware.smack.packet.XMPPError$Type[] values() -> values
    org.jivesoftware.smack.packet.XMPPError$Type valueOf(java.lang.String) -> valueOf
org.jivesoftware.smack.parsing.ExceptionThrowingCallback -> org.jivesoftware.smack.parsing.ExceptionThrowingCallback:
    void handleUnparsablePacket(org.jivesoftware.smack.parsing.UnparsablePacket) -> a
org.jivesoftware.smack.parsing.ParsingExceptionCallback -> org.jivesoftware.smack.parsing.ParsingExceptionCallback:
    void handleUnparsablePacket(org.jivesoftware.smack.parsing.UnparsablePacket) -> a
org.jivesoftware.smack.parsing.UnparsablePacket -> org.jivesoftware.smack.parsing.UnparsablePacket:
    java.lang.String content -> a
    java.lang.Exception e -> b
    java.lang.Exception getParsingException() -> a
org.jivesoftware.smack.provider.IQProvider -> org.jivesoftware.smack.provider.IQProvider:
    org.jivesoftware.smack.packet.IQ parseIQ(org.xmlpull.v1.XmlPullParser) -> a
org.jivesoftware.smack.provider.PacketExtensionProvider -> org.jivesoftware.smack.provider.PacketExtensionProvider:
    org.jivesoftware.smack.packet.PacketExtension parseExtension(org.xmlpull.v1.XmlPullParser) -> a
org.jivesoftware.smack.provider.ProviderManager -> org.jivesoftware.smack.provider.ProviderManager:
    org.jivesoftware.smack.provider.ProviderManager instance -> a
    java.util.Map extensionProviders -> b
    java.util.Map iqProviders -> c
    org.jivesoftware.smack.provider.ProviderManager getInstance() -> a
    void initialize() -> b
    java.lang.Object getIQProvider(java.lang.String,java.lang.String) -> a
    java.lang.Object getExtensionProvider(java.lang.String,java.lang.String) -> b
    java.lang.String getProviderKey(java.lang.String,java.lang.String) -> c
    java.lang.ClassLoader[] getClassLoaders() -> c
org.jivesoftware.smack.proxy.DirectSocketFactory -> org.jivesoftware.smack.proxy.DirectSocketFactory:
    int roundrobin -> a
    java.net.Socket createSocket(java.lang.String,int) -> createSocket
    java.net.Socket createSocket(java.lang.String,int,java.net.InetAddress,int) -> createSocket
    java.net.Socket createSocket(java.net.InetAddress,int) -> createSocket
    java.net.Socket createSocket(java.net.InetAddress,int,java.net.InetAddress,int) -> createSocket
org.jivesoftware.smack.proxy.HTTPProxySocketFactory -> org.jivesoftware.smack.proxy.HTTPProxySocketFactory:
    org.jivesoftware.smack.proxy.ProxyInfo proxy -> a
    java.util.regex.Pattern RESPONSE_PATTERN -> b
    java.net.Socket createSocket(java.lang.String,int) -> createSocket
    java.net.Socket createSocket(java.lang.String,int,java.net.InetAddress,int) -> createSocket
    java.net.Socket createSocket(java.net.InetAddress,int) -> createSocket
    java.net.Socket createSocket(java.net.InetAddress,int,java.net.InetAddress,int) -> createSocket
    java.net.Socket httpProxifiedSocket(java.lang.String,int) -> a
org.jivesoftware.smack.proxy.ProxyException -> org.jivesoftware.smack.proxy.ProxyException:
org.jivesoftware.smack.proxy.ProxyInfo -> org.jivesoftware.smack.proxy.ProxyInfo:
    java.lang.String proxyAddress -> a
    int proxyPort -> b
    java.lang.String proxyUsername -> c
    java.lang.String proxyPassword -> d
    org.jivesoftware.smack.proxy.ProxyInfo$ProxyType proxyType -> e
    org.jivesoftware.smack.proxy.ProxyInfo forDefaultProxy() -> a
    java.lang.String getProxyAddress() -> b
    int getProxyPort() -> c
    java.lang.String getProxyUsername() -> d
    java.lang.String getProxyPassword() -> e
    javax.net.SocketFactory getSocketFactory() -> f
org.jivesoftware.smack.proxy.ProxyInfo$ProxyType -> org.jivesoftware.smack.proxy.ProxyInfo$ProxyType:
    org.jivesoftware.smack.proxy.ProxyInfo$ProxyType NONE -> a
    org.jivesoftware.smack.proxy.ProxyInfo$ProxyType HTTP -> b
    org.jivesoftware.smack.proxy.ProxyInfo$ProxyType SOCKS4 -> c
    org.jivesoftware.smack.proxy.ProxyInfo$ProxyType SOCKS5 -> d
    org.jivesoftware.smack.proxy.ProxyInfo$ProxyType[] $VALUES -> e
    org.jivesoftware.smack.proxy.ProxyInfo$ProxyType[] values() -> values
    org.jivesoftware.smack.proxy.ProxyInfo$ProxyType valueOf(java.lang.String) -> valueOf
org.jivesoftware.smack.proxy.Socks4ProxySocketFactory -> org.jivesoftware.smack.proxy.Socks4ProxySocketFactory:
    org.jivesoftware.smack.proxy.ProxyInfo proxy -> a
    java.net.Socket createSocket(java.lang.String,int) -> createSocket
    java.net.Socket createSocket(java.lang.String,int,java.net.InetAddress,int) -> createSocket
    java.net.Socket createSocket(java.net.InetAddress,int) -> createSocket
    java.net.Socket createSocket(java.net.InetAddress,int,java.net.InetAddress,int) -> createSocket
    java.net.Socket socks4ProxifiedSocket(java.lang.String,int) -> a
org.jivesoftware.smack.proxy.Socks5ProxySocketFactory -> org.jivesoftware.smack.proxy.Socks5ProxySocketFactory:
    org.jivesoftware.smack.proxy.ProxyInfo proxy -> a
    java.net.Socket createSocket(java.lang.String,int) -> createSocket
    java.net.Socket createSocket(java.lang.String,int,java.net.InetAddress,int) -> createSocket
    java.net.Socket createSocket(java.net.InetAddress,int) -> createSocket
    java.net.Socket createSocket(java.net.InetAddress,int,java.net.InetAddress,int) -> createSocket
    java.net.Socket socks5ProxifiedSocket(java.lang.String,int) -> a
    void fill(java.io.InputStream,byte[],int) -> a
org.jivesoftware.smack.sasl.SASLAnonymous -> org.jivesoftware.smack.sasl.SASLAnonymous:
    java.lang.String getName() -> a
    void authenticate(java.lang.String,java.lang.String,org.apache.harmony.javax.security.auth.callback.CallbackHandler) -> a
    void authenticate(java.lang.String,java.lang.String,java.lang.String) -> a
    void authenticate() -> b
    void challengeReceived(java.lang.String) -> a
org.jivesoftware.smack.sasl.SASLCramMD5Mechanism -> org.jivesoftware.smack.sasl.SASLCramMD5Mechanism:
    java.lang.String getName() -> a
org.jivesoftware.smack.sasl.SASLDigestMD5Mechanism -> org.jivesoftware.smack.sasl.SASLDigestMD5Mechanism:
    java.lang.String getName() -> a
org.jivesoftware.smack.sasl.SASLExternalMechanism -> org.jivesoftware.smack.sasl.SASLExternalMechanism:
    java.lang.String getName() -> a
org.jivesoftware.smack.sasl.SASLGSSAPIMechanism -> org.jivesoftware.smack.sasl.SASLGSSAPIMechanism:
    java.lang.String getName() -> a
    void authenticate(java.lang.String,java.lang.String,org.apache.harmony.javax.security.auth.callback.CallbackHandler) -> a
    void authenticate(java.lang.String,java.lang.String,java.lang.String) -> a
org.jivesoftware.smack.sasl.SASLMechanism -> org.jivesoftware.smack.sasl.SASLMechanism:
    org.jivesoftware.smack.SASLAuthentication saslAuthentication -> e
    org.apache.harmony.javax.security.sasl.SaslClient sc -> a
    java.lang.String authenticationId -> b
    java.lang.String password -> c
    java.lang.String hostname -> d
    void authenticate(java.lang.String,java.lang.String,java.lang.String) -> a
    void authenticate(java.lang.String,java.lang.String,org.apache.harmony.javax.security.auth.callback.CallbackHandler) -> a
    void authenticate() -> b
    void challengeReceived(java.lang.String) -> a
    java.lang.String getName() -> a
    org.jivesoftware.smack.SASLAuthentication getSASLAuthentication() -> c
    void handle(org.apache.harmony.javax.security.auth.callback.Callback[]) -> a
org.jivesoftware.smack.sasl.SASLMechanism$AuthMechanism -> org.jivesoftware.smack.sasl.SASLMechanism$AuthMechanism:
    java.lang.String name -> d
    java.lang.String authenticationText -> e
    org.jivesoftware.smack.sasl.SASLMechanism this$0 -> c
    java.lang.String toXML() -> f
org.jivesoftware.smack.sasl.SASLMechanism$Challenge -> org.jivesoftware.smack.sasl.SASLMechanism$Challenge:
    java.lang.String data -> c
    java.lang.String toXML() -> f
org.jivesoftware.smack.sasl.SASLMechanism$Failure -> org.jivesoftware.smack.sasl.SASLMechanism$Failure:
    java.lang.String condition -> c
    java.lang.String toXML() -> f
org.jivesoftware.smack.sasl.SASLMechanism$Response -> org.jivesoftware.smack.sasl.SASLMechanism$Response:
    java.lang.String authenticationText -> d
    org.jivesoftware.smack.sasl.SASLMechanism this$0 -> c
    java.lang.String toXML() -> f
org.jivesoftware.smack.sasl.SASLMechanism$Success -> org.jivesoftware.smack.sasl.SASLMechanism$Success:
    java.lang.String data -> c
    java.lang.String toXML() -> f
org.jivesoftware.smack.sasl.SASLPlainMechanism -> org.jivesoftware.smack.sasl.SASLPlainMechanism:
    java.lang.String getName() -> a
org.jivesoftware.smack.util.Base64 -> org.jivesoftware.smack.util.Base64:
    byte[] _STANDARD_ALPHABET -> a
    byte[] _STANDARD_DECODABET -> b
    byte[] _URL_SAFE_ALPHABET -> c
    byte[] _URL_SAFE_DECODABET -> d
    byte[] _ORDERED_ALPHABET -> e
    byte[] _ORDERED_DECODABET -> f
    byte[] getAlphabet(int) -> c
    byte[] getDecodabet(int) -> d
    byte[] encode3to4(byte[],byte[],int,int) -> b
    byte[] encode3to4(byte[],int,int,byte[],int,int) -> a
    java.lang.String encodeBytes(byte[],int,int,int) -> a
    int decode4to3(byte[],int,byte[],int,int) -> b
    byte[] decode(byte[],int,int,int) -> b
    byte[] access$000(int) -> a
    byte[] access$100(int) -> b
    int access$300(byte[],int,byte[],int,int) -> a
    byte[] access$400(byte[],byte[],int,int) -> a
org.jivesoftware.smack.util.Base64$OutputStream -> org.jivesoftware.smack.util.Base64$OutputStream:
    boolean encode -> a
    int position -> b
    byte[] buffer -> c
    int bufferLength -> d
    int lineLength -> e
    boolean breakLines -> f
    byte[] b4 -> g
    boolean suspendEncoding -> h
    int options -> i
    byte[] alphabet -> j
    byte[] decodabet -> k
    void write(int) -> write
    void write(byte[],int,int) -> write
    void flushBase64() -> a
    void close() -> close
org.jivesoftware.smack.util.DateFormatType -> org.jivesoftware.smack.util.DateFormatType:
    org.jivesoftware.smack.util.DateFormatType XEP_0082_DATE_PROFILE -> a
    org.jivesoftware.smack.util.DateFormatType XEP_0082_DATETIME_PROFILE -> b
    org.jivesoftware.smack.util.DateFormatType XEP_0082_DATETIME_MILLIS_PROFILE -> c
    org.jivesoftware.smack.util.DateFormatType XEP_0082_TIME_PROFILE -> d
    org.jivesoftware.smack.util.DateFormatType XEP_0082_TIME_ZONE_PROFILE -> e
    org.jivesoftware.smack.util.DateFormatType XEP_0082_TIME_MILLIS_PROFILE -> f
    org.jivesoftware.smack.util.DateFormatType XEP_0082_TIME_MILLIS_ZONE_PROFILE -> g
    org.jivesoftware.smack.util.DateFormatType XEP_0091_DATETIME -> h
    java.lang.String formatString -> i
    org.jivesoftware.smack.util.DateFormatType[] $VALUES -> j
    org.jivesoftware.smack.util.DateFormatType[] values() -> values
    org.jivesoftware.smack.util.DateFormatType valueOf(java.lang.String) -> valueOf
    java.lang.String getFormatString() -> a
    java.text.SimpleDateFormat createFormatter() -> b
org.jivesoftware.smack.util.ObservableReader -> org.jivesoftware.smack.util.ObservableReader:
    java.io.Reader wrappedReader -> a
    java.util.List listeners -> b
    int read(char[],int,int) -> read
    void close() -> close
    int read() -> read
    int read(char[]) -> read
    long skip(long) -> skip
    boolean ready() -> ready
    boolean markSupported() -> markSupported
    void mark(int) -> mark
    void reset() -> reset
    void addReaderListener(org.jivesoftware.smack.util.ReaderListener) -> a
    void removeReaderListener(org.jivesoftware.smack.util.ReaderListener) -> b
org.jivesoftware.smack.util.ObservableWriter -> org.jivesoftware.smack.util.ObservableWriter:
    java.io.Writer wrappedWriter -> a
    java.util.List listeners -> b
    void write(char[],int,int) -> write
    void flush() -> flush
    void close() -> close
    void write(int) -> write
    void write(char[]) -> write
    void write(java.lang.String) -> write
    void write(java.lang.String,int,int) -> write
    void notifyListeners(java.lang.String) -> a
    void addWriterListener(org.jivesoftware.smack.util.WriterListener) -> a
    void removeWriterListener(org.jivesoftware.smack.util.WriterListener) -> b
org.jivesoftware.smack.util.PacketParserUtils -> org.jivesoftware.smack.util.PacketParserUtils:
    org.jivesoftware.smack.packet.Packet parseMessage(org.xmlpull.v1.XmlPullParser) -> a
    java.lang.String parseContent(org.xmlpull.v1.XmlPullParser) -> i
    java.lang.String parseContentDepth(org.xmlpull.v1.XmlPullParser,int) -> a
    org.jivesoftware.smack.packet.Presence parsePresence(org.xmlpull.v1.XmlPullParser) -> b
    org.jivesoftware.smack.packet.IQ parseIQ(org.xmlpull.v1.XmlPullParser,org.jivesoftware.smack.Connection) -> a
    org.jivesoftware.smack.packet.Authentication parseAuthentication(org.xmlpull.v1.XmlPullParser) -> j
    org.jivesoftware.smack.packet.RosterPacket parseRoster(org.xmlpull.v1.XmlPullParser) -> k
    org.jivesoftware.smack.packet.Registration parseRegistration(org.xmlpull.v1.XmlPullParser) -> l
    org.jivesoftware.smack.packet.Bind parseResourceBinding(org.xmlpull.v1.XmlPullParser) -> m
    java.util.Collection parseMechanisms(org.xmlpull.v1.XmlPullParser) -> c
    java.util.Collection parseCompressionMethods(org.xmlpull.v1.XmlPullParser) -> d
    java.util.Map parseProperties(org.xmlpull.v1.XmlPullParser) -> e
    org.jivesoftware.smack.sasl.SASLMechanism$Failure parseSASLFailure(org.xmlpull.v1.XmlPullParser) -> f
    org.jivesoftware.smack.packet.StreamError parseStreamError(org.xmlpull.v1.XmlPullParser) -> g
    org.jivesoftware.smack.packet.XMPPError parseError(org.xmlpull.v1.XmlPullParser) -> h
    org.jivesoftware.smack.packet.PacketExtension parsePacketExtension(java.lang.String,java.lang.String,org.xmlpull.v1.XmlPullParser) -> a
    java.lang.String getLanguageAttribute(org.xmlpull.v1.XmlPullParser) -> n
    java.lang.Object parseWithIntrospection(java.lang.String,java.lang.Class,org.xmlpull.v1.XmlPullParser) -> a
    java.lang.Object decode(java.lang.Class,java.lang.String) -> a
org.jivesoftware.smack.util.PacketParserUtils$1 -> org.jivesoftware.smack.util.PacketParserUtils$1:
    java.lang.String getChildElementXML() -> d
org.jivesoftware.smack.util.PacketParserUtils$2 -> org.jivesoftware.smack.util.PacketParserUtils$2:
    java.lang.String getChildElementXML() -> d
org.jivesoftware.smack.util.PacketParserUtils$UnparsedResultIQ -> org.jivesoftware.smack.util.PacketParserUtils$UnparsedResultIQ:
    java.lang.String str -> c
    java.lang.String getChildElementXML() -> d
org.jivesoftware.smack.util.ReaderListener -> org.jivesoftware.smack.util.ReaderListener:
    void read(java.lang.String) -> a
org.jivesoftware.smack.util.StringUtils -> org.jivesoftware.smack.util.StringUtils:
    java.text.DateFormat XEP_0082_UTC_FORMAT -> a
    java.text.DateFormat dateFormatter -> b
    java.util.regex.Pattern datePattern -> c
    java.text.DateFormat timeFormatter -> d
    java.util.regex.Pattern timePattern -> e
    java.text.DateFormat timeNoZoneFormatter -> f
    java.util.regex.Pattern timeNoZonePattern -> g
    java.text.DateFormat timeNoMillisFormatter -> h
    java.util.regex.Pattern timeNoMillisPattern -> i
    java.text.DateFormat timeNoMillisNoZoneFormatter -> j
    java.util.regex.Pattern timeNoMillisNoZonePattern -> k
    java.text.DateFormat dateTimeFormatter -> l
    java.util.regex.Pattern dateTimePattern -> m
    java.text.DateFormat dateTimeNoMillisFormatter -> n
    java.util.regex.Pattern dateTimeNoMillisPattern -> o
    java.text.DateFormat xep0091Formatter -> p
    java.text.DateFormat xep0091Date6DigitFormatter -> q
    java.text.DateFormat xep0091Date7Digit1MonthFormatter -> r
    java.text.DateFormat xep0091Date7Digit2MonthFormatter -> s
    java.util.regex.Pattern xep0091Pattern -> t
    java.util.List couplings -> u
    char[] QUOTE_ENCODE -> v
    char[] APOS_ENCODE -> w
    char[] AMP_ENCODE -> x
    char[] LT_ENCODE -> y
    char[] GT_ENCODE -> z
    java.security.MessageDigest digest -> A
    java.util.Random randGen -> B
    char[] numbersAndLetters -> C
    java.lang.String parseName(java.lang.String) -> a
    java.lang.String parseServer(java.lang.String) -> b
    java.lang.String parseResource(java.lang.String) -> c
    java.lang.String parseBareAddress(java.lang.String) -> d
    java.lang.String escapeForXML(java.lang.String) -> e
    java.lang.String hash(java.lang.String) -> f
    java.lang.String encodeHex(byte[]) -> a
    java.lang.String encodeBase64(java.lang.String) -> g
    java.lang.String encodeBase64(byte[]) -> b
    java.lang.String encodeBase64(byte[],boolean) -> a
    java.lang.String encodeBase64(byte[],int,int,boolean) -> a
    byte[] decodeBase64(java.lang.String) -> h
    java.lang.String randomString(int) -> a
org.jivesoftware.smack.util.StringUtils$PatternCouplings -> org.jivesoftware.smack.util.StringUtils$PatternCouplings:
    java.util.regex.Pattern pattern -> a
    java.text.DateFormat formatter -> b
    boolean needToConvertTimeZone -> c
org.jivesoftware.smack.util.WriterListener -> org.jivesoftware.smack.util.WriterListener:
    void write(java.lang.String) -> a
org.jivesoftware.smack.util.dns.HostAddress -> org.jivesoftware.smack.util.dns.HostAddress:
    java.lang.String fqdn -> a
    int port -> b
    java.lang.Exception exception -> c
    java.lang.String getFQDN() -> a
    int getPort() -> b
    void setException(java.lang.Exception) -> a
    java.lang.String toString() -> toString
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String getErrorMessage() -> c
